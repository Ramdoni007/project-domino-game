
! function() {
    "use strict";
    var e = function() {
        this.init()
    };
    e.prototype = {
        init: function() {
            var e = this || n;
            return e._counter = 1e3, e._codecs = {}, e._howls = [], e._muted = !1, e._volume = 1, e._canPlayEvent = "canplaythrough", e._navigator = "undefined" != typeof window && window.navigator ? window.navigator : null, e.masterGain = null, e.noAudio = !1, e.usingWebAudio = !0, e.autoSuspend = !0, e.ctx = null, e.mobileAutoEnable = !0, e._setup(), e
        },
        volume: function(e) {
            var t = this || n;
            if (e = parseFloat(e), t.ctx || _(), void 0 !== e && e >= 0 && e <= 1) {
                if (t._volume = e, t._muted) return t;
                t.usingWebAudio && t.masterGain.gain.setValueAtTime(e, n.ctx.currentTime);
                for (var o = 0; o < t._howls.length; o++)
                    if (!t._howls[o]._webAudio)
                        for (var r = t._howls[o]._getSoundIds(), a = 0; a < r.length; a++) {
                            var i = t._howls[o]._soundById(r[a]);
                            i && i._node && (i._node.volume = i._volume * e)
                        }
                return t
            }
            return t._volume
        },
        mute: function(e) {
            var t = this || n;
            t.ctx || _(), t._muted = e, t.usingWebAudio && t.masterGain.gain.setValueAtTime(e ? 0 : t._volume, n.ctx.currentTime);
            for (var o = 0; o < t._howls.length; o++)
                if (!t._howls[o]._webAudio)
                    for (var r = t._howls[o]._getSoundIds(), a = 0; a < r.length; a++) {
                        var i = t._howls[o]._soundById(r[a]);
                        i && i._node && (i._node.muted = !!e || i._muted)
                    }
            return t
        },
        unload: function() {
            for (var e = this || n, t = e._howls.length - 1; t >= 0; t--) e._howls[t].unload();
            return e.usingWebAudio && e.ctx && void 0 !== e.ctx.close && (e.ctx.close(), e.ctx = null, _()), e
        },
        codecs: function(e) {
            return (this || n)._codecs[e.replace(/^x-/, "")]
        },
        _setup: function() {
            var e = this || n;
            if (e.state = e.ctx && e.ctx.state || "running", e._autoSuspend(), !e.usingWebAudio)
                if ("undefined" != typeof Audio) try {
                    void 0 === (new Audio).oncanplaythrough && (e._canPlayEvent = "canplay")
                } catch (n) {
                    e.noAudio = !0
                } else e.noAudio = !0;
            try {
                (new Audio).muted && (e.noAudio = !0)
            } catch (e) {}
            return e.noAudio || e._setupCodecs(), e
        },
        _setupCodecs: function() {
            var e = this || n,
                t = null;
            try {
                t = "undefined" != typeof Audio ? new Audio : null
            } catch (n) {
                return e
            }
            if (!t || "function" != typeof t.canPlayType) return e;
            var o = t.canPlayType("audio/mpeg;").replace(/^no$/, ""),
                r = e._navigator && e._navigator.userAgent.match(/OPR\/([0-6].)/g),
                a = r && parseInt(r[0].split("/")[1], 10) < 33;
            return e._codecs = {
                mp3: !(a || !o && !t.canPlayType("audio/mp3;").replace(/^no$/, "")),
                mpeg: !!o,
                opus: !!t.canPlayType('audio/ogg; codecs="opus"').replace(/^no$/, ""),
                ogg: !!t.canPlayType('audio/ogg; codecs="vorbis"').replace(/^no$/, ""),
                oga: !!t.canPlayType('audio/ogg; codecs="vorbis"').replace(/^no$/, ""),
                wav: !!t.canPlayType('audio/wav; codecs="1"').replace(/^no$/, ""),
                aac: !!t.canPlayType("audio/aac;").replace(/^no$/, ""),
                caf: !!t.canPlayType("audio/x-caf;").replace(/^no$/, ""),
                m4a: !!(t.canPlayType("audio/x-m4a;") || t.canPlayType("audio/m4a;") || t.canPlayType("audio/aac;")).replace(/^no$/, ""),
                mp4: !!(t.canPlayType("audio/x-mp4;") || t.canPlayType("audio/mp4;") || t.canPlayType("audio/aac;")).replace(/^no$/, ""),
                weba: !!t.canPlayType('audio/webm; codecs="vorbis"').replace(/^no$/, ""),
                webm: !!t.canPlayType('audio/webm; codecs="vorbis"').replace(/^no$/, ""),
                dolby: !!t.canPlayType('audio/mp4; codecs="ec-3"').replace(/^no$/, ""),
                flac: !!(t.canPlayType("audio/x-flac;") || t.canPlayType("audio/flac;")).replace(/^no$/, "")
            }, e
        },
        _enableMobileAudio: function() {
            var e = this || n,
                t = /iPhone|iPad|iPod|Android|BlackBerry|BB10|Silk|Mobi/i.test(e._navigator && e._navigator.userAgent),
                o = !!("ontouchend" in window || e._navigator && e._navigator.maxTouchPoints > 0 || e._navigator && e._navigator.msMaxTouchPoints > 0);
            if (!e._mobileEnabled && e.ctx && (t || o)) {
                e._mobileEnabled = !1, e._mobileUnloaded || 44100 === e.ctx.sampleRate || (e._mobileUnloaded = !0, e.unload()), e._scratchBuffer = e.ctx.createBuffer(1, 1, 22050);
                var r = function() {
                    n._autoResume();
                    var t = e.ctx.createBufferSource();
                    t.buffer = e._scratchBuffer, t.connect(e.ctx.destination), void 0 === t.start ? t.noteOn(0) : t.start(0), "function" == typeof e.ctx.resume && e.ctx.resume(), t.onended = function() {
                        t.disconnect(0), e._mobileEnabled = !0, e.mobileAutoEnable = !1, document.removeEventListener("touchstart", r, !0), document.removeEventListener("touchend", r, !0)
                    }
                };
                return document.addEventListener("touchstart", r, !0), document.addEventListener("touchend", r, !0), e
            }
        },
        _autoSuspend: function() {
            var e = this;
            if (e.autoSuspend && e.ctx && void 0 !== e.ctx.suspend && n.usingWebAudio) {
                for (var t = 0; t < e._howls.length; t++)
                    if (e._howls[t]._webAudio)
                        for (var o = 0; o < e._howls[t]._sounds.length; o++)
                            if (!e._howls[t]._sounds[o]._paused) return e;
                return e._suspendTimer && clearTimeout(e._suspendTimer), e._suspendTimer = setTimeout(function() {
                    e.autoSuspend && (e._suspendTimer = null, e.state = "suspending", e.ctx.suspend().then(function() {
                        e.state = "suspended", e._resumeAfterSuspend && (delete e._resumeAfterSuspend, e._autoResume())
                    }))
                }, 3e4), e
            }
        },
        _autoResume: function() {
            var e = this;
            if (e.ctx && void 0 !== e.ctx.resume && n.usingWebAudio) return "running" === e.state && e._suspendTimer ? (clearTimeout(e._suspendTimer), e._suspendTimer = null) : "suspended" === e.state ? (e.ctx.resume().then(function() {
                e.state = "running";
                for (var n = 0; n < e._howls.length; n++) e._howls[n]._emit("resume")
            }), e._suspendTimer && (clearTimeout(e._suspendTimer), e._suspendTimer = null)) : "suspending" === e.state && (e._resumeAfterSuspend = !0), e
        }
    };
    var n = new e,
        t = function(e) {
            e.src && 0 !== e.src.length ? this.init(e) : console.error("An array of source files must be passed with any new Howl.")
        };
    t.prototype = {
        init: function(e) {
            var t = this;
            return n.ctx || _(), t._autoplay = e.autoplay || !1, t._format = "string" != typeof e.format ? e.format : [e.format], t._html5 = e.html5 || !1, t._muted = e.mute || !1, t._loop = e.loop || !1, t._pool = e.pool || 5, t._preload = "boolean" != typeof e.preload || e.preload, t._rate = e.rate || 1, t._sprite = e.sprite || {}, t._src = "string" != typeof e.src ? e.src : [e.src], t._volume = void 0 !== e.volume ? e.volume : 1, t._xhrWithCredentials = e.xhrWithCredentials || !1, t._duration = 0, t._state = "unloaded", t._sounds = [], t._endTimers = {}, t._queue = [], t._playLock = !1, t._onend = e.onend ? [{
                fn: e.onend
            }] : [], t._onfade = e.onfade ? [{
                fn: e.onfade
            }] : [], t._onload = e.onload ? [{
                fn: e.onload
            }] : [], t._onloaderror = e.onloaderror ? [{
                fn: e.onloaderror
            }] : [], t._onplayerror = e.onplayerror ? [{
                fn: e.onplayerror
            }] : [], t._onpause = e.onpause ? [{
                fn: e.onpause
            }] : [], t._onplay = e.onplay ? [{
                fn: e.onplay
            }] : [], t._onstop = e.onstop ? [{
                fn: e.onstop
            }] : [], t._onmute = e.onmute ? [{
                fn: e.onmute
            }] : [], t._onvolume = e.onvolume ? [{
                fn: e.onvolume
            }] : [], t._onrate = e.onrate ? [{
                fn: e.onrate
            }] : [], t._onseek = e.onseek ? [{
                fn: e.onseek
            }] : [], t._onresume = [], t._webAudio = n.usingWebAudio && !t._html5, void 0 !== n.ctx && n.ctx && n.mobileAutoEnable && n._enableMobileAudio(), n._howls.push(t), t._autoplay && t._queue.push({
                event: "play",
                action: function() {
                    t.play()
                }
            }), t._preload && t.load(), t
        },
        load: function() {
            var e = this,
                t = null;
            if (!n.noAudio) {
                "string" == typeof e._src && (e._src = [e._src]);
                for (var r = 0; r < e._src.length; r++) {
                    var i, u;
                    if (e._format && e._format[r]) i = e._format[r];
                    else {
                        if ("string" != typeof(u = e._src[r])) {
                            e._emit("loaderror", null, "Non-string found in selected audio sources - ignoring.");
                            continue
                        }(i = /^data:audio\/([^;,]+);/i.exec(u)) || (i = /\.([^.]+)$/.exec(u.split("?", 1)[0])), i && (i = i[1].toLowerCase())
                    }
                    if (i || console.warn('No file extension was found. Consider using the "format" property or specify an extension.'), i && n.codecs(i)) {
                        t = e._src[r];
                        break
                    }
                }
                return t ? (e._src = t, e._state = "loading", "https:" === window.location.protocol && "http:" === t.slice(0, 5) && (e._html5 = !0, e._webAudio = !1), new o(e), e._webAudio && a(e), e) : void e._emit("loaderror", null, "No codec support for selected audio sources.")
            }
            e._emit("loaderror", null, "No audio support.")
        },
        play: function(e, t) {
            var o = this,
                r = null;
            if ("number" == typeof e) r = e, e = null;
            else {
                if ("string" == typeof e && "loaded" === o._state && !o._sprite[e]) return null;
                if (void 0 === e) {
                    e = "__default";
                    for (var a = 0, i = 0; i < o._sounds.length; i++) o._sounds[i]._paused && !o._sounds[i]._ended && (a++, r = o._sounds[i]._id);
                    1 === a ? e = null : r = null
                }
            }
            var u = r ? o._soundById(r) : o._inactiveSound();
            if (!u) return null;
            if (r && !e && (e = u._sprite || "__default"), "loaded" !== o._state) {
                u._sprite = e, u._ended = !1;
                var d = u._id;
                return o._queue.push({
                    event: "play",
                    action: function() {
                        o.play(d)
                    }
                }), d
            }
            if (r && !u._paused) return t || setTimeout(function() {
                o._emit("play", u._id)
            }, 0), u._id;
            o._webAudio && n._autoResume();
            var _ = Math.max(0, u._seek > 0 ? u._seek : o._sprite[e][0] / 1e3),
                s = Math.max(0, (o._sprite[e][0] + o._sprite[e][1]) / 1e3 - _),
                l = 1e3 * s / Math.abs(u._rate);
            u._paused = !1, u._ended = !1, u._sprite = e, u._seek = _, u._start = o._sprite[e][0] / 1e3, u._stop = (o._sprite[e][0] + o._sprite[e][1]) / 1e3, u._loop = !(!u._loop && !o._sprite[e][2]);
            var c = u._node;
            if (o._webAudio) {
                var p = function() {
                    o._refreshBuffer(u);
                    var e = u._muted || o._muted ? 0 : u._volume;
                    c.gain.setValueAtTime(e, n.ctx.currentTime), u._playStart = n.ctx.currentTime, void 0 === c.bufferSource.start ? u._loop ? c.bufferSource.noteGrainOn(0, _, 86400) : c.bufferSource.noteGrainOn(0, _, s) : u._loop ? c.bufferSource.start(0, _, 86400) : c.bufferSource.start(0, _, s), l !== 1 / 0 && (o._endTimers[u._id] = setTimeout(o._ended.bind(o, u), l)), t || setTimeout(function() {
                        o._emit("play", u._id)
                    }, 0)
                };
                "running" === n.state ? p() : (o.once("resume", p), o._clearTimer(u._id))
            } else {
                var f = function() {
                        c.currentTime = _, c.muted = u._muted || o._muted || n._muted || c.muted, c.volume = u._volume * n.volume(), c.playbackRate = u._rate;
                        try {
                            var e = c.play();
                            if ("undefined" != typeof Promise && e instanceof Promise && (o._playLock = !0, e.then(function() {
                                    o._playLock = !1, o._loadQueue()
                                })), c.paused) return void o._emit("playerror", u._id, "Playback was unable to start. This is most commonly an issue on mobile devices where playback was not within a user interaction.");
                            l !== 1 / 0 && (o._endTimers[u._id] = setTimeout(o._ended.bind(o, u), l)), t || o._emit("play", u._id)
                        } catch (e) {
                            o._emit("playerror", u._id, e)
                        }
                    },
                    m = window && window.ejecta || !c.readyState && n._navigator.isCocoonJS;
                if (4 === c.readyState || m) f();
                else {
                    var v = function() {
                        f(), c.removeEventListener(n._canPlayEvent, v, !1)
                    };
                    c.addEventListener(n._canPlayEvent, v, !1), o._clearTimer(u._id)
                }
            }
            return u._id
        },
        pause: function(e) {
            var n = this;
            if ("loaded" !== n._state || n._playLock) return n._queue.push({
                event: "pause",
                action: function() {
                    n.pause(e)
                }
            }), n;
            for (var t = n._getSoundIds(e), o = 0; o < t.length; o++) {
                n._clearTimer(t[o]);
                var r = n._soundById(t[o]);
                if (r && !r._paused && (r._seek = n.seek(t[o]), r._rateSeek = 0, r._paused = !0, n._stopFade(t[o]), r._node))
                    if (n._webAudio) {
                        if (!r._node.bufferSource) continue;
                        void 0 === r._node.bufferSource.stop ? r._node.bufferSource.noteOff(0) : r._node.bufferSource.stop(0), n._cleanBuffer(r._node)
                    } else isNaN(r._node.duration) && r._node.duration !== 1 / 0 || r._node.pause();
                arguments[1] || n._emit("pause", r ? r._id : null)
            }
            return n
        },
        stop: function(e, n) {
            var t = this;
            if ("loaded" !== t._state) return t._queue.push({
                event: "stop",
                action: function() {
                    t.stop(e)
                }
            }), t;
            for (var o = t._getSoundIds(e), r = 0; r < o.length; r++) {
                t._clearTimer(o[r]);
                var a = t._soundById(o[r]);
                a && (a._seek = a._start || 0, a._rateSeek = 0, a._paused = !0, a._ended = !0, t._stopFade(o[r]), a._node && (t._webAudio ? a._node.bufferSource && (void 0 === a._node.bufferSource.stop ? a._node.bufferSource.noteOff(0) : a._node.bufferSource.stop(0), t._cleanBuffer(a._node)) : isNaN(a._node.duration) && a._node.duration !== 1 / 0 || (a._node.currentTime = a._start || 0, a._node.pause())), n || t._emit("stop", a._id))
            }
            return t
        },
        mute: function(e, t) {
            var o = this;
            if ("loaded" !== o._state) return o._queue.push({
                event: "mute",
                action: function() {
                    o.mute(e, t)
                }
            }), o;
            if (void 0 === t) {
                if ("boolean" != typeof e) return o._muted;
                o._muted = e
            }
            for (var r = o._getSoundIds(t), a = 0; a < r.length; a++) {
                var i = o._soundById(r[a]);
                i && (i._muted = e, i._interval && o._stopFade(i._id), o._webAudio && i._node ? i._node.gain.setValueAtTime(e ? 0 : i._volume, n.ctx.currentTime) : i._node && (i._node.muted = !!n._muted || e), o._emit("mute", i._id))
            }
            return o
        },
        volume: function() {
            var e, t, o, r = this,
                a = arguments;
            if (0 === a.length) return r._volume;
            if (1 === a.length || 2 === a.length && void 0 === a[1] ? r._getSoundIds().indexOf(a[0]) >= 0 ? t = parseInt(a[0], 10) : e = parseFloat(a[0]) : a.length >= 2 && (e = parseFloat(a[0]), t = parseInt(a[1], 10)), !(void 0 !== e && e >= 0 && e <= 1)) return (o = t ? r._soundById(t) : r._sounds[0]) ? o._volume : 0;
            if ("loaded" !== r._state) return r._queue.push({
                event: "volume",
                action: function() {
                    r.volume.apply(r, a)
                }
            }), r;
            void 0 === t && (r._volume = e), t = r._getSoundIds(t);
            for (var i = 0; i < t.length; i++)(o = r._soundById(t[i])) && (o._volume = e, a[2] || r._stopFade(t[i]), r._webAudio && o._node && !o._muted ? o._node.gain.setValueAtTime(e, n.ctx.currentTime) : o._node && !o._muted && (o._node.volume = e * n.volume()), r._emit("volume", o._id));
            return r
        },
        fade: function(e, t, o, r) {
            var a = this;
            if ("loaded" !== a._state) return a._queue.push({
                event: "fade",
                action: function() {
                    a.fade(e, t, o, r)
                }
            }), a;
            a.volume(e, r);
            for (var i = a._getSoundIds(r), u = 0; u < i.length; u++) {
                var d = a._soundById(i[u]);
                if (d) {
                    if (r || a._stopFade(i[u]), a._webAudio && !d._muted) {
                        var _ = n.ctx.currentTime,
                            s = _ + o / 1e3;
                        d._volume = e, d._node.gain.setValueAtTime(e, _), d._node.gain.linearRampToValueAtTime(t, s)
                    }
                    a._startFadeInterval(d, e, t, o, i[u], void 0 === r)
                }
            }
            return a
        },
        _startFadeInterval: function(e, n, t, o, r, a) {
            var i = this,
                u = n,
                d = n > t ? "out" : "in",
                _ = Math.abs(n - t) / .01,
                s = _ > 0 ? o / _ : o;
            s < 4 && (_ = Math.ceil(_ / (4 / s)), s = 4), e._fadeTo = t, e._interval = setInterval(function() {
                _ > 0 && (u += "in" === d ? .01 : -.01), u = Math.max(0, u), u = Math.min(1, u), u = Math.round(100 * u) / 100, i._webAudio ? e._volume = u : i.volume(u, e._id, !0), a && (i._volume = u), (t < n && u <= t || t > n && u >= t) && (clearInterval(e._interval), e._interval = null, e._fadeTo = null, i.volume(t, e._id), i._emit("fade", e._id))
            }, s)
        },
        _stopFade: function(e) {
            var t = this,
                o = t._soundById(e);
            return o && o._interval && (t._webAudio && o._node.gain.cancelScheduledValues(n.ctx.currentTime), clearInterval(o._interval), o._interval = null, t.volume(o._fadeTo, e), o._fadeTo = null, t._emit("fade", e)), t
        },
        loop: function() {
            var e, n, t, o = this,
                r = arguments;
            if (0 === r.length) return o._loop;
            if (1 === r.length) {
                if ("boolean" != typeof r[0]) return !!(t = o._soundById(parseInt(r[0], 10))) && t._loop;
                e = r[0], o._loop = e
            } else 2 === r.length && (e = r[0], n = parseInt(r[1], 10));
            for (var a = o._getSoundIds(n), i = 0; i < a.length; i++)(t = o._soundById(a[i])) && (t._loop = e, o._webAudio && t._node && t._node.bufferSource && (t._node.bufferSource.loop = e, e && (t._node.bufferSource.loopStart = t._start || 0, t._node.bufferSource.loopEnd = t._stop)));
            return o
        },
        rate: function() {
            var e, t, o, r = this,
                a = arguments;
            if (0 === a.length) t = r._sounds[0]._id;
            else if (1 === a.length) {
                r._getSoundIds().indexOf(a[0]) >= 0 ? t = parseInt(a[0], 10) : e = parseFloat(a[0])
            } else 2 === a.length && (e = parseFloat(a[0]), t = parseInt(a[1], 10));
            if ("number" != typeof e) return (o = r._soundById(t)) ? o._rate : r._rate;
            if ("loaded" !== r._state) return r._queue.push({
                event: "rate",
                action: function() {
                    r.rate.apply(r, a)
                }
            }), r;
            void 0 === t && (r._rate = e), t = r._getSoundIds(t);
            for (var i = 0; i < t.length; i++)
                if (o = r._soundById(t[i])) {
                    o._rateSeek = r.seek(t[i]), o._playStart = r._webAudio ? n.ctx.currentTime : o._playStart, o._rate = e, r._webAudio && o._node && o._node.bufferSource ? o._node.bufferSource.playbackRate.value = e : o._node && (o._node.playbackRate = e);
                    var u = r.seek(t[i]),
                        d = 1e3 * ((r._sprite[o._sprite][0] + r._sprite[o._sprite][1]) / 1e3 - u) / Math.abs(o._rate);
                    !r._endTimers[t[i]] && o._paused || (r._clearTimer(t[i]), r._endTimers[t[i]] = setTimeout(r._ended.bind(r, o), d)), r._emit("rate", o._id)
                }
            return r
        },
        seek: function() {
            var e, t, o = this,
                r = arguments;
            if (0 === r.length) t = o._sounds[0]._id;
            else if (1 === r.length) {
                o._getSoundIds().indexOf(r[0]) >= 0 ? t = parseInt(r[0], 10) : o._sounds.length && (t = o._sounds[0]._id, e = parseFloat(r[0]))
            } else 2 === r.length && (e = parseFloat(r[0]), t = parseInt(r[1], 10));
            if (void 0 === t) return o;
            if ("loaded" !== o._state) return o._queue.push({
                event: "seek",
                action: function() {
                    o.seek.apply(o, r)
                }
            }), o;
            var a = o._soundById(t);
            if (a) {
                if (!("number" == typeof e && e >= 0)) {
                    if (o._webAudio) {
                        var i = o.playing(t) ? n.ctx.currentTime - a._playStart : 0,
                            u = a._rateSeek ? a._rateSeek - a._seek : 0;
                        return a._seek + (u + i * Math.abs(a._rate))
                    }
                    return a._node.currentTime
                }
                var d = o.playing(t);
                d && o.pause(t, !0), a._seek = e, a._ended = !1, o._clearTimer(t), d && o.play(t, !0), !o._webAudio && a._node && (a._node.currentTime = e), o._emit("seek", t)
            }
            return o
        },
        playing: function(e) {
            var n = this;
            if ("number" == typeof e) {
                var t = n._soundById(e);
                return !!t && !t._paused
            }
            for (var o = 0; o < n._sounds.length; o++)
                if (!n._sounds[o]._paused) return !0;
            return !1
        },
        duration: function(e) {
            var n = this,
                t = n._duration,
                o = n._soundById(e);
            return o && (t = n._sprite[o._sprite][1] / 1e3), t
        },
        state: function() {
            return this._state
        },
        unload: function() {
            for (var e = this, t = e._sounds, o = 0; o < t.length; o++) {
                t[o]._paused || e.stop(t[o]._id), e._webAudio || (/MSIE |Trident\//.test(n._navigator && n._navigator.userAgent) || (t[o]._node.src = "data:audio/wav;base64,UklGRigAAABXQVZFZm10IBIAAAABAAEARKwAAIhYAQACABAAAABkYXRhAgAAAAEA"), t[o]._node.removeEventListener("error", t[o]._errorFn, !1), t[o]._node.removeEventListener(n._canPlayEvent, t[o]._loadFn, !1)), delete t[o]._node, e._clearTimer(t[o]._id);
                var a = n._howls.indexOf(e);
                a >= 0 && n._howls.splice(a, 1)
            }
            var i = !0;
            for (o = 0; o < n._howls.length; o++)
                if (n._howls[o]._src === e._src) {
                    i = !1;
                    break
                }
            return r && i && delete r[e._src], n.noAudio = !1, e._state = "unloaded", e._sounds = [], e = null, null
        },
        on: function(e, n, t, o) {
            var r = this["_on" + e];
            return "function" == typeof n && r.push(o ? {
                id: t,
                fn: n,
                once: o
            } : {
                id: t,
                fn: n
            }), this
        },
        off: function(e, n, t) {
            var o = this,
                r = o["_on" + e],
                a = 0;
            if ("number" == typeof n && (t = n, n = null), n || t)
                for (a = 0; a < r.length; a++) {
                    var i = t === r[a].id;
                    if (n === r[a].fn && i || !n && i) {
                        r.splice(a, 1);
                        break
                    }
                } else if (e) o["_on" + e] = [];
                else {
                    var u = Object.keys(o);
                    for (a = 0; a < u.length; a++) 0 === u[a].indexOf("_on") && Array.isArray(o[u[a]]) && (o[u[a]] = [])
                }
            return o
        },
        once: function(e, n, t) {
            return this.on(e, n, t, 1), this
        },
        _emit: function(e, n, t) {
            for (var o = this, r = o["_on" + e], a = r.length - 1; a >= 0; a--) r[a].id && r[a].id !== n && "load" !== e || (setTimeout(function(e) {
                e.call(this, n, t)
            }.bind(o, r[a].fn), 0), r[a].once && o.off(e, r[a].fn, r[a].id));
            return o
        },
        _loadQueue: function() {
            var e = this;
            if (e._queue.length > 0) {
                var n = e._queue[0];
                e.once(n.event, function() {
                    e._queue.shift(), e._loadQueue()
                }), n.action()
            }
            return e
        },
        _ended: function(e) {
            var t = this,
                o = e._sprite;
            if (!t._webAudio && e._node && !e._node.paused && !e._node.ended && e._node.currentTime < e._stop) return setTimeout(t._ended.bind(t, e), 100), t;
            var r = !(!e._loop && !t._sprite[o][2]);
            if (t._emit("end", e._id), !t._webAudio && r && t.stop(e._id, !0).play(e._id), t._webAudio && r) {
                t._emit("play", e._id), e._seek = e._start || 0, e._rateSeek = 0, e._playStart = n.ctx.currentTime;
                var a = 1e3 * (e._stop - e._start) / Math.abs(e._rate);
                t._endTimers[e._id] = setTimeout(t._ended.bind(t, e), a)
            }
            return t._webAudio && !r && (e._paused = !0, e._ended = !0, e._seek = e._start || 0, e._rateSeek = 0, t._clearTimer(e._id), t._cleanBuffer(e._node), n._autoSuspend()), t._webAudio || r || t.stop(e._id), t
        },
        _clearTimer: function(e) {
            var n = this;
            return n._endTimers[e] && (clearTimeout(n._endTimers[e]), delete n._endTimers[e]), n
        },
        _soundById: function(e) {
            for (var n = this, t = 0; t < n._sounds.length; t++)
                if (e === n._sounds[t]._id) return n._sounds[t];
            return null
        },
        _inactiveSound: function() {
            var e = this;
            e._drain();
            for (var n = 0; n < e._sounds.length; n++)
                if (e._sounds[n]._ended) return e._sounds[n].reset();
            return new o(e)
        },
        _drain: function() {
            var e = this,
                n = e._pool,
                t = 0,
                o = 0;
            if (!(e._sounds.length < n)) {
                for (o = 0; o < e._sounds.length; o++) e._sounds[o]._ended && t++;
                for (o = e._sounds.length - 1; o >= 0; o--) {
                    if (t <= n) return;
                    e._sounds[o]._ended && (e._webAudio && e._sounds[o]._node && e._sounds[o]._node.disconnect(0), e._sounds.splice(o, 1), t--)
                }
            }
        },
        _getSoundIds: function(e) {
            if (void 0 === e) {
                for (var n = [], t = 0; t < this._sounds.length; t++) n.push(this._sounds[t]._id);
                return n
            }
            return [e]
        },
        _refreshBuffer: function(e) {
            return e._node.bufferSource = n.ctx.createBufferSource(), e._node.bufferSource.buffer = r[this._src], e._panner ? e._node.bufferSource.connect(e._panner) : e._node.bufferSource.connect(e._node), e._node.bufferSource.loop = e._loop, e._loop && (e._node.bufferSource.loopStart = e._start || 0, e._node.bufferSource.loopEnd = e._stop), e._node.bufferSource.playbackRate.value = e._rate, this
        },
        _cleanBuffer: function(e) {
            if (n._scratchBuffer) {
                e.bufferSource.onended = null, e.bufferSource.disconnect(0);
                try {
                    e.bufferSource.buffer = n._scratchBuffer
                } catch (e) {}
            }
            return e.bufferSource = null, this
        }
    };
    var o = function(e) {
        this._parent = e, this.init()
    };
    o.prototype = {
        init: function() {
            var e = this,
                t = e._parent;
            return e._muted = t._muted, e._loop = t._loop, e._volume = t._volume, e._rate = t._rate, e._seek = 0, e._paused = !0, e._ended = !0, e._sprite = "__default", e._id = ++n._counter, t._sounds.push(e), e.create(), e
        },
        create: function() {
            var e = this,
                t = e._parent,
                o = n._muted || e._muted || e._parent._muted ? 0 : e._volume;
            return t._webAudio ? (e._node = void 0 === n.ctx.createGain ? n.ctx.createGainNode() : n.ctx.createGain(), e._node.gain.setValueAtTime(o, n.ctx.currentTime), e._node.paused = !0, e._node.connect(n.masterGain)) : (e._node = new Audio, e._errorFn = e._errorListener.bind(e), e._node.addEventListener("error", e._errorFn, !1), e._loadFn = e._loadListener.bind(e), e._node.addEventListener(n._canPlayEvent, e._loadFn, !1), e._node.src = t._src, e._node.preload = "auto", e._node.volume = o * n.volume(), e._node.load()), e
        },
        reset: function() {
            var e = this,
                t = e._parent;
            return e._muted = t._muted, e._loop = t._loop, e._volume = t._volume, e._rate = t._rate, e._seek = 0, e._rateSeek = 0, e._paused = !0, e._ended = !0, e._sprite = "__default", e._id = ++n._counter, e
        },
        _errorListener: function() {
            var e = this;
            e._parent._emit("loaderror", e._id, e._node.error ? e._node.error.code : 0), e._node.removeEventListener("error", e._errorFn, !1)
        },
        _loadListener: function() {
            var e = this,
                t = e._parent;
            t._duration = Math.ceil(10 * e._node.duration) / 10, 0 === Object.keys(t._sprite).length && (t._sprite = {
                __default: [0, 1e3 * t._duration]
            }), "loaded" !== t._state && (t._state = "loaded", t._emit("load"), t._loadQueue()), e._node.removeEventListener(n._canPlayEvent, e._loadFn, !1)
        }
    };
    var r = {},
        a = function(e) {
            var n = e._src;
            if (r[n]) return e._duration = r[n].duration, void d(e);
            if (/^data:[^;]+;base64,/.test(n)) {
                for (var t = atob(n.split(",")[1]), o = new Uint8Array(t.length), a = 0; a < t.length; ++a) o[a] = t.charCodeAt(a);
                u(o.buffer, e)
            } else {
                var _ = new XMLHttpRequest;
                _.open("GET", n, !0), _.withCredentials = e._xhrWithCredentials, _.responseType = "arraybuffer", _.onload = function() {
                    var n = (_.status + "")[0];
                    "0" === n || "2" === n || "3" === n ? u(_.response, e) : e._emit("loaderror", null, "Failed loading audio file with status: " + _.status + ".")
                }, _.onerror = function() {
                    e._webAudio && (e._html5 = !0, e._webAudio = !1, e._sounds = [], delete r[n], e.load())
                }, i(_)
            }
        },
        i = function(e) {
            try {
                e.send()
            } catch (n) {
                e.onerror()
            }
        },
        u = function(e, t) {
            n.ctx.decodeAudioData(e, function(e) {
                e && t._sounds.length > 0 && (r[t._src] = e, d(t, e))
            }, function() {
                t._emit("loaderror", null, "Decoding audio data failed.")
            })
        },
        d = function(e, n) {
            n && !e._duration && (e._duration = n.duration), 0 === Object.keys(e._sprite).length && (e._sprite = {
                __default: [0, 1e3 * e._duration]
            }), "loaded" !== e._state && (e._state = "loaded", e._emit("load"), e._loadQueue())
        },
        _ = function() {
            try {
                "undefined" != typeof AudioContext ? n.ctx = new AudioContext : "undefined" != typeof webkitAudioContext ? n.ctx = new webkitAudioContext : n.usingWebAudio = !1
            } catch (e) {
                n.usingWebAudio = !1
            }
            var e = /iP(hone|od|ad)/.test(n._navigator && n._navigator.platform),
                t = n._navigator && n._navigator.appVersion.match(/OS (\d+)_(\d+)_?(\d+)?/),
                o = t ? parseInt(t[1], 10) : null;
            if (e && o && o < 9) {
                var r = /safari/.test(n._navigator && n._navigator.userAgent.toLowerCase());
                (n._navigator && n._navigator.standalone && !r || n._navigator && !n._navigator.standalone && !r) && (n.usingWebAudio = !1)
            }
            n.usingWebAudio && (n.masterGain = void 0 === n.ctx.createGain ? n.ctx.createGainNode() : n.ctx.createGain(), n.masterGain.gain.setValueAtTime(n._muted ? 0 : 1, n.ctx.currentTime), n.masterGain.connect(n.ctx.destination)), n._setup()
        };
    "function" == typeof define && define.amd && define([], function() {
        return {
            Howler: n,
            Howl: t
        }
    }), "undefined" != typeof exports && (exports.Howler = n, exports.Howl = t), "undefined" != typeof window ? (window.HowlerGlobal = e, window.Howler = n, window.Howl = t, window.Sound = o) : "undefined" != typeof global && (global.HowlerGlobal = e, global.Howler = n, global.Howl = t, global.Sound = o)
}(),
function() {
    "use strict";
    HowlerGlobal.prototype._pos = [0, 0, 0], HowlerGlobal.prototype._orientation = [0, 0, -1, 0, 1, 0], HowlerGlobal.prototype.stereo = function(e) {
        var n = this;
        if (!n.ctx || !n.ctx.listener) return n;
        for (var t = n._howls.length - 1; t >= 0; t--) n._howls[t].stereo(e);
        return n
    }, HowlerGlobal.prototype.pos = function(e, n, t) {
        var o = this;
        return o.ctx && o.ctx.listener ? (n = "number" != typeof n ? o._pos[1] : n, t = "number" != typeof t ? o._pos[2] : t, "number" != typeof e ? o._pos : (o._pos = [e, n, t], o.ctx.listener.setPosition(o._pos[0], o._pos[1], o._pos[2]), o)) : o
    }, HowlerGlobal.prototype.orientation = function(e, n, t, o, r, a) {
        var i = this;
        if (!i.ctx || !i.ctx.listener) return i;
        var u = i._orientation;
        return n = "number" != typeof n ? u[1] : n, t = "number" != typeof t ? u[2] : t, o = "number" != typeof o ? u[3] : o, r = "number" != typeof r ? u[4] : r, a = "number" != typeof a ? u[5] : a, "number" != typeof e ? u : (i._orientation = [e, n, t, o, r, a], i.ctx.listener.setOrientation(e, n, t, o, r, a), i)
    }, Howl.prototype.init = function(e) {
        return function(n) {
            var t = this;
            return t._orientation = n.orientation || [1, 0, 0], t._stereo = n.stereo || null, t._pos = n.pos || null, t._pannerAttr = {
                coneInnerAngle: void 0 !== n.coneInnerAngle ? n.coneInnerAngle : 360,
                coneOuterAngle: void 0 !== n.coneOuterAngle ? n.coneOuterAngle : 360,
                coneOuterGain: void 0 !== n.coneOuterGain ? n.coneOuterGain : 0,
                distanceModel: void 0 !== n.distanceModel ? n.distanceModel : "inverse",
                maxDistance: void 0 !== n.maxDistance ? n.maxDistance : 1e4,
                panningModel: void 0 !== n.panningModel ? n.panningModel : "HRTF",
                refDistance: void 0 !== n.refDistance ? n.refDistance : 1,
                rolloffFactor: void 0 !== n.rolloffFactor ? n.rolloffFactor : 1
            }, t._onstereo = n.onstereo ? [{
                fn: n.onstereo
            }] : [], t._onpos = n.onpos ? [{
                fn: n.onpos
            }] : [], t._onorientation = n.onorientation ? [{
                fn: n.onorientation
            }] : [], e.call(this, n)
        }
    }(Howl.prototype.init), Howl.prototype.stereo = function(n, t) {
        var o = this;
        if (!o._webAudio) return o;
        if ("loaded" !== o._state) return o._queue.push({
            event: "stereo",
            action: function() {
                o.stereo(n, t)
            }
        }), o;
        var r = void 0 === Howler.ctx.createStereoPanner ? "spatial" : "stereo";
        if (void 0 === t) {
            if ("number" != typeof n) return o._stereo;
            o._stereo = n, o._pos = [n, 0, 0]
        }
        for (var a = o._getSoundIds(t), i = 0; i < a.length; i++) {
            var u = o._soundById(a[i]);
            if (u) {
                if ("number" != typeof n) return u._stereo;
                u._stereo = n, u._pos = [n, 0, 0], u._node && (u._pannerAttr.panningModel = "equalpower", u._panner && u._panner.pan || e(u, r), "spatial" === r ? u._panner.setPosition(n, 0, 0) : u._panner.pan.setValueAtTime(n, Howler.ctx.currentTime)), o._emit("stereo", u._id)
            }
        }
        return o
    }, Howl.prototype.pos = function(n, t, o, r) {
        var a = this;
        if (!a._webAudio) return a;
        if ("loaded" !== a._state) return a._queue.push({
            event: "pos",
            action: function() {
                a.pos(n, t, o, r)
            }
        }), a;
        if (t = "number" != typeof t ? 0 : t, o = "number" != typeof o ? -.5 : o, void 0 === r) {
            if ("number" != typeof n) return a._pos;
            a._pos = [n, t, o]
        }
        for (var i = a._getSoundIds(r), u = 0; u < i.length; u++) {
            var d = a._soundById(i[u]);
            if (d) {
                if ("number" != typeof n) return d._pos;
                d._pos = [n, t, o], d._node && (d._panner && !d._panner.pan || e(d, "spatial"), d._panner.setPosition(n, t, o)), a._emit("pos", d._id)
            }
        }
        return a
    }, Howl.prototype.orientation = function(n, t, o, r) {
        var a = this;
        if (!a._webAudio) return a;
        if ("loaded" !== a._state) return a._queue.push({
            event: "orientation",
            action: function() {
                a.orientation(n, t, o, r)
            }
        }), a;
        if (t = "number" != typeof t ? a._orientation[1] : t, o = "number" != typeof o ? a._orientation[2] : o, void 0 === r) {
            if ("number" != typeof n) return a._orientation;
            a._orientation = [n, t, o]
        }
        for (var i = a._getSoundIds(r), u = 0; u < i.length; u++) {
            var d = a._soundById(i[u]);
            if (d) {
                if ("number" != typeof n) return d._orientation;
                d._orientation = [n, t, o], d._node && (d._panner || (d._pos || (d._pos = a._pos || [0, 0, -.5]), e(d, "spatial")), d._panner.setOrientation(n, t, o)), a._emit("orientation", d._id)
            }
        }
        return a
    }, Howl.prototype.pannerAttr = function() {
        var n, t, o, r = this,
            a = arguments;
        if (!r._webAudio) return r;
        if (0 === a.length) return r._pannerAttr;
        if (1 === a.length) {
            if ("object" != typeof a[0]) return (o = r._soundById(parseInt(a[0], 10))) ? o._pannerAttr : r._pannerAttr;
            n = a[0], void 0 === t && (n.pannerAttr || (n.pannerAttr = {
                coneInnerAngle: n.coneInnerAngle,
                coneOuterAngle: n.coneOuterAngle,
                coneOuterGain: n.coneOuterGain,
                distanceModel: n.distanceModel,
                maxDistance: n.maxDistance,
                refDistance: n.refDistance,
                rolloffFactor: n.rolloffFactor,
                panningModel: n.panningModel
            }), r._pannerAttr = {
                coneInnerAngle: void 0 !== n.pannerAttr.coneInnerAngle ? n.pannerAttr.coneInnerAngle : r._coneInnerAngle,
                coneOuterAngle: void 0 !== n.pannerAttr.coneOuterAngle ? n.pannerAttr.coneOuterAngle : r._coneOuterAngle,
                coneOuterGain: void 0 !== n.pannerAttr.coneOuterGain ? n.pannerAttr.coneOuterGain : r._coneOuterGain,
                distanceModel: void 0 !== n.pannerAttr.distanceModel ? n.pannerAttr.distanceModel : r._distanceModel,
                maxDistance: void 0 !== n.pannerAttr.maxDistance ? n.pannerAttr.maxDistance : r._maxDistance,
                refDistance: void 0 !== n.pannerAttr.refDistance ? n.pannerAttr.refDistance : r._refDistance,
                rolloffFactor: void 0 !== n.pannerAttr.rolloffFactor ? n.pannerAttr.rolloffFactor : r._rolloffFactor,
                panningModel: void 0 !== n.pannerAttr.panningModel ? n.pannerAttr.panningModel : r._panningModel
            })
        } else 2 === a.length && (n = a[0], t = parseInt(a[1], 10));
        for (var i = r._getSoundIds(t), u = 0; u < i.length; u++)
            if (o = r._soundById(i[u])) {
                var d = o._pannerAttr;
                d = {
                    coneInnerAngle: void 0 !== n.coneInnerAngle ? n.coneInnerAngle : d.coneInnerAngle,
                    coneOuterAngle: void 0 !== n.coneOuterAngle ? n.coneOuterAngle : d.coneOuterAngle,
                    coneOuterGain: void 0 !== n.coneOuterGain ? n.coneOuterGain : d.coneOuterGain,
                    distanceModel: void 0 !== n.distanceModel ? n.distanceModel : d.distanceModel,
                    maxDistance: void 0 !== n.maxDistance ? n.maxDistance : d.maxDistance,
                    refDistance: void 0 !== n.refDistance ? n.refDistance : d.refDistance,
                    rolloffFactor: void 0 !== n.rolloffFactor ? n.rolloffFactor : d.rolloffFactor,
                    panningModel: void 0 !== n.panningModel ? n.panningModel : d.panningModel
                };
                var _ = o._panner;
                _ ? (_.coneInnerAngle = d.coneInnerAngle, _.coneOuterAngle = d.coneOuterAngle, _.coneOuterGain = d.coneOuterGain, _.distanceModel = d.distanceModel, _.maxDistance = d.maxDistance, _.refDistance = d.refDistance, _.rolloffFactor = d.rolloffFactor, _.panningModel = d.panningModel) : (o._pos || (o._pos = r._pos || [0, 0, -.5]), e(o, "spatial"))
            }
        return r
    }, Sound.prototype.init = function(e) {
        return function() {
            var n = this,
                t = n._parent;
            n._orientation = t._orientation, n._stereo = t._stereo, n._pos = t._pos, n._pannerAttr = t._pannerAttr, e.call(this), n._stereo ? t.stereo(n._stereo) : n._pos && t.pos(n._pos[0], n._pos[1], n._pos[2], n._id)
        }
    }(Sound.prototype.init), Sound.prototype.reset = function(e) {
        return function() {
            var n = this,
                t = n._parent;
            return n._orientation = t._orientation, n._pos = t._pos, n._pannerAttr = t._pannerAttr, e.call(this)
        }
    }(Sound.prototype.reset);
    var e = function(e, n) {
        "spatial" === (n = n || "spatial") ? (e._panner = Howler.ctx.createPanner(), e._panner.coneInnerAngle = e._pannerAttr.coneInnerAngle, e._panner.coneOuterAngle = e._pannerAttr.coneOuterAngle, e._panner.coneOuterGain = e._pannerAttr.coneOuterGain, e._panner.distanceModel = e._pannerAttr.distanceModel, e._panner.maxDistance = e._pannerAttr.maxDistance, e._panner.refDistance = e._pannerAttr.refDistance, e._panner.rolloffFactor = e._pannerAttr.rolloffFactor, e._panner.panningModel = e._pannerAttr.panningModel, e._panner.setPosition(e._pos[0], e._pos[1], e._pos[2]), e._panner.setOrientation(e._orientation[0], e._orientation[1], e._orientation[2])) : (e._panner = Howler.ctx.createStereoPanner(), e._panner.pan.setValueAtTime(e._stereo, Howler.ctx.currentTime)), e._panner.connect(e._node), e._paused || e._parent.pause(e._id, !0).play(e._id)
    }
}();
! function(t) {
    if ("object" == typeof exports && "undefined" != typeof module) module.exports = t();
    else if ("function" == typeof define && define.amd) define([], t);
    else {
        ("undefined" != typeof window ? window : "undefined" != typeof global ? global : "undefined" != typeof self ? self : this).pako = t()
    }
}(function() {
    return function t(e, a, i) {
        function n(s, o) {
            if (!a[s]) {
                if (!e[s]) {
                    var l = "function" == typeof require && require;
                    if (!o && l) return l(s, !0);
                    if (r) return r(s, !0);
                    var h = new Error("Cannot find module '" + s + "'");
                    throw h.code = "MODULE_NOT_FOUND", h
                }
                var d = a[s] = {
                    exports: {}
                };
                e[s][0].call(d.exports, function(t) {
                    var a = e[s][1][t];
                    return n(a || t)
                }, d, d.exports, t, e, a, i)
            }
            return a[s].exports
        }
        for (var r = "function" == typeof require && require, s = 0; s < i.length; s++) n(i[s]);
        return n
    }({
        1: [function(t, e, a) {
            "use strict";

            function i(t) {
                if (!(this instanceof i)) return new i(t);
                this.options = s.assign({
                    level: _,
                    method: c,
                    chunkSize: 16384,
                    windowBits: 15,
                    memLevel: 8,
                    strategy: u,
                    to: ""
                }, t || {});
                var e = this.options;
                e.raw && e.windowBits > 0 ? e.windowBits = -e.windowBits : e.gzip && e.windowBits > 0 && e.windowBits < 16 && (e.windowBits += 16), this.err = 0, this.msg = "", this.ended = !1, this.chunks = [], this.strm = new h, this.strm.avail_out = 0;
                var a = r.deflateInit2(this.strm, e.level, e.method, e.windowBits, e.memLevel, e.strategy);
                if (a !== f) throw new Error(l[a]);
                if (e.header && r.deflateSetHeader(this.strm, e.header), e.dictionary) {
                    var n;
                    if (n = "string" == typeof e.dictionary ? o.string2buf(e.dictionary) : "[object ArrayBuffer]" === d.call(e.dictionary) ? new Uint8Array(e.dictionary) : e.dictionary, (a = r.deflateSetDictionary(this.strm, n)) !== f) throw new Error(l[a]);
                    this._dict_set = !0
                }
            }

            function n(t, e) {
                var a = new i(e);
                if (a.push(t, !0), a.err) throw a.msg;
                return a.result
            }
            var r = t("./zlib/deflate"),
                s = t("./utils/common"),
                o = t("./utils/strings"),
                l = t("./zlib/messages"),
                h = t("./zlib/zstream"),
                d = Object.prototype.toString,
                f = 0,
                _ = -1,
                u = 0,
                c = 8;
            i.prototype.push = function(t, e) {
                var a, i, n = this.strm,
                    l = this.options.chunkSize;
                if (this.ended) return !1;
                i = e === ~~e ? e : !0 === e ? 4 : 0, "string" == typeof t ? n.input = o.string2buf(t) : "[object ArrayBuffer]" === d.call(t) ? n.input = new Uint8Array(t) : n.input = t, n.next_in = 0, n.avail_in = n.input.length;
                do {
                    if (0 === n.avail_out && (n.output = new s.Buf8(l), n.next_out = 0, n.avail_out = l), 1 !== (a = r.deflate(n, i)) && a !== f) return this.onEnd(a), this.ended = !0, !1;
                    0 !== n.avail_out && (0 !== n.avail_in || 4 !== i && 2 !== i) || ("string" === this.options.to ? this.onData(o.buf2binstring(s.shrinkBuf(n.output, n.next_out))) : this.onData(s.shrinkBuf(n.output, n.next_out)))
                } while ((n.avail_in > 0 || 0 === n.avail_out) && 1 !== a);
                return 4 === i ? (a = r.deflateEnd(this.strm), this.onEnd(a), this.ended = !0, a === f) : 2 !== i || (this.onEnd(f), n.avail_out = 0, !0)
            }, i.prototype.onData = function(t) {
                this.chunks.push(t)
            }, i.prototype.onEnd = function(t) {
                t === f && ("string" === this.options.to ? this.result = this.chunks.join("") : this.result = s.flattenChunks(this.chunks)), this.chunks = [], this.err = t, this.msg = this.strm.msg
            }, a.Deflate = i, a.deflate = n, a.deflateRaw = function(t, e) {
                return (e = e || {}).raw = !0, n(t, e)
            }, a.gzip = function(t, e) {
                return (e = e || {}).gzip = !0, n(t, e)
            }
        }, {
            "./utils/common": 3,
            "./utils/strings": 4,
            "./zlib/deflate": 8,
            "./zlib/messages": 13,
            "./zlib/zstream": 15
        }],
        2: [function(t, e, a) {
            "use strict";

            function i(t) {
                if (!(this instanceof i)) return new i(t);
                this.options = s.assign({
                    chunkSize: 16384,
                    windowBits: 0,
                    to: ""
                }, t || {});
                var e = this.options;
                e.raw && e.windowBits >= 0 && e.windowBits < 16 && (e.windowBits = -e.windowBits, 0 === e.windowBits && (e.windowBits = -15)), !(e.windowBits >= 0 && e.windowBits < 16) || t && t.windowBits || (e.windowBits += 32), e.windowBits > 15 && e.windowBits < 48 && 0 == (15 & e.windowBits) && (e.windowBits |= 15), this.err = 0, this.msg = "", this.ended = !1, this.chunks = [], this.strm = new d, this.strm.avail_out = 0;
                var a = r.inflateInit2(this.strm, e.windowBits);
                if (a !== l.Z_OK) throw new Error(h[a]);
                this.header = new f, r.inflateGetHeader(this.strm, this.header)
            }

            function n(t, e) {
                var a = new i(e);
                if (a.push(t, !0), a.err) throw a.msg;
                return a.result
            }
            var r = t("./zlib/inflate"),
                s = t("./utils/common"),
                o = t("./utils/strings"),
                l = t("./zlib/constants"),
                h = t("./zlib/messages"),
                d = t("./zlib/zstream"),
                f = t("./zlib/gzheader"),
                _ = Object.prototype.toString;
            i.prototype.push = function(t, e) {
                var a, i, n, h, d, f, u = this.strm,
                    c = this.options.chunkSize,
                    b = this.options.dictionary,
                    g = !1;
                if (this.ended) return !1;
                i = e === ~~e ? e : !0 === e ? l.Z_FINISH : l.Z_NO_FLUSH, "string" == typeof t ? u.input = o.binstring2buf(t) : "[object ArrayBuffer]" === _.call(t) ? u.input = new Uint8Array(t) : u.input = t, u.next_in = 0, u.avail_in = u.input.length;
                do {
                    if (0 === u.avail_out && (u.output = new s.Buf8(c), u.next_out = 0, u.avail_out = c), (a = r.inflate(u, l.Z_NO_FLUSH)) === l.Z_NEED_DICT && b && (f = "string" == typeof b ? o.string2buf(b) : "[object ArrayBuffer]" === _.call(b) ? new Uint8Array(b) : b, a = r.inflateSetDictionary(this.strm, f)), a === l.Z_BUF_ERROR && !0 === g && (a = l.Z_OK, g = !1), a !== l.Z_STREAM_END && a !== l.Z_OK) return this.onEnd(a), this.ended = !0, !1;
                    u.next_out && (0 !== u.avail_out && a !== l.Z_STREAM_END && (0 !== u.avail_in || i !== l.Z_FINISH && i !== l.Z_SYNC_FLUSH) || ("string" === this.options.to ? (n = o.utf8border(u.output, u.next_out), h = u.next_out - n, d = o.buf2string(u.output, n), u.next_out = h, u.avail_out = c - h, h && s.arraySet(u.output, u.output, n, h, 0), this.onData(d)) : this.onData(s.shrinkBuf(u.output, u.next_out)))), 0 === u.avail_in && 0 === u.avail_out && (g = !0)
                } while ((u.avail_in > 0 || 0 === u.avail_out) && a !== l.Z_STREAM_END);
                return a === l.Z_STREAM_END && (i = l.Z_FINISH), i === l.Z_FINISH ? (a = r.inflateEnd(this.strm), this.onEnd(a), this.ended = !0, a === l.Z_OK) : i !== l.Z_SYNC_FLUSH || (this.onEnd(l.Z_OK), u.avail_out = 0, !0)
            }, i.prototype.onData = function(t) {
                this.chunks.push(t)
            }, i.prototype.onEnd = function(t) {
                t === l.Z_OK && ("string" === this.options.to ? this.result = this.chunks.join("") : this.result = s.flattenChunks(this.chunks)), this.chunks = [], this.err = t, this.msg = this.strm.msg
            }, a.Inflate = i, a.inflate = n, a.inflateRaw = function(t, e) {
                return (e = e || {}).raw = !0, n(t, e)
            }, a.ungzip = n
        }, {
            "./utils/common": 3,
            "./utils/strings": 4,
            "./zlib/constants": 6,
            "./zlib/gzheader": 9,
            "./zlib/inflate": 11,
            "./zlib/messages": 13,
            "./zlib/zstream": 15
        }],
        3: [function(t, e, a) {
            "use strict";
            var i = "undefined" != typeof Uint8Array && "undefined" != typeof Uint16Array && "undefined" != typeof Int32Array;
            a.assign = function(t) {
                for (var e = Array.prototype.slice.call(arguments, 1); e.length;) {
                    var a = e.shift();
                    if (a) {
                        if ("object" != typeof a) throw new TypeError(a + "must be non-object");
                        for (var i in a) a.hasOwnProperty(i) && (t[i] = a[i])
                    }
                }
                return t
            }, a.shrinkBuf = function(t, e) {
                return t.length === e ? t : t.subarray ? t.subarray(0, e) : (t.length = e, t)
            };
            var n = {
                    arraySet: function(t, e, a, i, n) {
                        if (e.subarray && t.subarray) t.set(e.subarray(a, a + i), n);
                        else
                            for (var r = 0; r < i; r++) t[n + r] = e[a + r]
                    },
                    flattenChunks: function(t) {
                        var e, a, i, n, r, s;
                        for (i = 0, e = 0, a = t.length; e < a; e++) i += t[e].length;
                        for (s = new Uint8Array(i), n = 0, e = 0, a = t.length; e < a; e++) r = t[e], s.set(r, n), n += r.length;
                        return s
                    }
                },
                r = {
                    arraySet: function(t, e, a, i, n) {
                        for (var r = 0; r < i; r++) t[n + r] = e[a + r]
                    },
                    flattenChunks: function(t) {
                        return [].concat.apply([], t)
                    }
                };
            a.setTyped = function(t) {
                t ? (a.Buf8 = Uint8Array, a.Buf16 = Uint16Array, a.Buf32 = Int32Array, a.assign(a, n)) : (a.Buf8 = Array, a.Buf16 = Array, a.Buf32 = Array, a.assign(a, r))
            }, a.setTyped(i)
        }, {}],
        4: [function(t, e, a) {
            "use strict";

            function i(t, e) {
                if (e < 65537 && (t.subarray && s || !t.subarray && r)) return String.fromCharCode.apply(null, n.shrinkBuf(t, e));
                for (var a = "", i = 0; i < e; i++) a += String.fromCharCode(t[i]);
                return a
            }
            var n = t("./common"),
                r = !0,
                s = !0;
            try {
                String.fromCharCode.apply(null, [0])
            } catch (t) {
                r = !1
            }
            try {
                String.fromCharCode.apply(null, new Uint8Array(1))
            } catch (t) {
                s = !1
            }
            for (var o = new n.Buf8(256), l = 0; l < 256; l++) o[l] = l >= 252 ? 6 : l >= 248 ? 5 : l >= 240 ? 4 : l >= 224 ? 3 : l >= 192 ? 2 : 1;
            o[254] = o[254] = 1, a.string2buf = function(t) {
                var e, a, i, r, s, o = t.length,
                    l = 0;
                for (r = 0; r < o; r++) 55296 == (64512 & (a = t.charCodeAt(r))) && r + 1 < o && (56320 == (64512 & (i = t.charCodeAt(r + 1))) && (a = 65536 + (a - 55296 << 10) + (i - 56320), r++)), l += a < 128 ? 1 : a < 2048 ? 2 : a < 65536 ? 3 : 4;
                for (e = new n.Buf8(l), s = 0, r = 0; s < l; r++) 55296 == (64512 & (a = t.charCodeAt(r))) && r + 1 < o && (56320 == (64512 & (i = t.charCodeAt(r + 1))) && (a = 65536 + (a - 55296 << 10) + (i - 56320), r++)), a < 128 ? e[s++] = a : a < 2048 ? (e[s++] = 192 | a >>> 6, e[s++] = 128 | 63 & a) : a < 65536 ? (e[s++] = 224 | a >>> 12, e[s++] = 128 | a >>> 6 & 63, e[s++] = 128 | 63 & a) : (e[s++] = 240 | a >>> 18, e[s++] = 128 | a >>> 12 & 63, e[s++] = 128 | a >>> 6 & 63, e[s++] = 128 | 63 & a);
                return e
            }, a.buf2binstring = function(t) {
                return i(t, t.length)
            }, a.binstring2buf = function(t) {
                for (var e = new n.Buf8(t.length), a = 0, i = e.length; a < i; a++) e[a] = t.charCodeAt(a);
                return e
            }, a.buf2string = function(t, e) {
                var a, n, r, s, l = e || t.length,
                    h = new Array(2 * l);
                for (n = 0, a = 0; a < l;)
                    if ((r = t[a++]) < 128) h[n++] = r;
                    else if ((s = o[r]) > 4) h[n++] = 65533, a += s - 1;
                else {
                    for (r &= 2 === s ? 31 : 3 === s ? 15 : 7; s > 1 && a < l;) r = r << 6 | 63 & t[a++], s--;
                    s > 1 ? h[n++] = 65533 : r < 65536 ? h[n++] = r : (r -= 65536, h[n++] = 55296 | r >> 10 & 1023, h[n++] = 56320 | 1023 & r)
                }
                return i(h, n)
            }, a.utf8border = function(t, e) {
                var a;
                for ((e = e || t.length) > t.length && (e = t.length), a = e - 1; a >= 0 && 128 == (192 & t[a]);) a--;
                return a < 0 ? e : 0 === a ? e : a + o[t[a]] > e ? a : e
            }
        }, {
            "./common": 3
        }],
        5: [function(t, e, a) {
            "use strict";
            e.exports = function(t, e, a, i) {
                for (var n = 65535 & t | 0, r = t >>> 16 & 65535 | 0, s = 0; 0 !== a;) {
                    a -= s = a > 2e3 ? 2e3 : a;
                    do {
                        r = r + (n = n + e[i++] | 0) | 0
                    } while (--s);
                    n %= 65521, r %= 65521
                }
                return n | r << 16 | 0
            }
        }, {}],
        6: [function(t, e, a) {
            "use strict";
            e.exports = {
                Z_NO_FLUSH: 0,
                Z_PARTIAL_FLUSH: 1,
                Z_SYNC_FLUSH: 2,
                Z_FULL_FLUSH: 3,
                Z_FINISH: 4,
                Z_BLOCK: 5,
                Z_TREES: 6,
                Z_OK: 0,
                Z_STREAM_END: 1,
                Z_NEED_DICT: 2,
                Z_ERRNO: -1,
                Z_STREAM_ERROR: -2,
                Z_DATA_ERROR: -3,
                Z_BUF_ERROR: -5,
                Z_NO_COMPRESSION: 0,
                Z_BEST_SPEED: 1,
                Z_BEST_COMPRESSION: 9,
                Z_DEFAULT_COMPRESSION: -1,
                Z_FILTERED: 1,
                Z_HUFFMAN_ONLY: 2,
                Z_RLE: 3,
                Z_FIXED: 4,
                Z_DEFAULT_STRATEGY: 0,
                Z_BINARY: 0,
                Z_TEXT: 1,
                Z_UNKNOWN: 2,
                Z_DEFLATED: 8
            }
        }, {}],
        7: [function(t, e, a) {
            "use strict";
            var i = function() {
                for (var t, e = [], a = 0; a < 256; a++) {
                    t = a;
                    for (var i = 0; i < 8; i++) t = 1 & t ? 3988292384 ^ t >>> 1 : t >>> 1;
                    e[a] = t
                }
                return e
            }();
            e.exports = function(t, e, a, n) {
                var r = i,
                    s = n + a;
                t ^= -1;
                for (var o = n; o < s; o++) t = t >>> 8 ^ r[255 & (t ^ e[o])];
                return -1 ^ t
            }
        }, {}],
        8: [function(t, e, a) {
            "use strict";

            function i(t, e) {
                return t.msg = E[e], e
            }

            function n(t) {
                return (t << 1) - (t > 4 ? 9 : 0)
            }

            function r(t) {
                for (var e = t.length; --e >= 0;) t[e] = 0
            }

            function s(t) {
                var e = t.state,
                    a = e.pending;
                a > t.avail_out && (a = t.avail_out), 0 !== a && (x.arraySet(t.output, e.pending_buf, e.pending_out, a, t.next_out), t.next_out += a, e.pending_out += a, t.total_out += a, t.avail_out -= a, e.pending -= a, 0 === e.pending && (e.pending_out = 0))
            }

            function o(t, e) {
                z._tr_flush_block(t, t.block_start >= 0 ? t.block_start : -1, t.strstart - t.block_start, e), t.block_start = t.strstart, s(t.strm)
            }

            function l(t, e) {
                t.pending_buf[t.pending++] = e
            }

            function h(t, e) {
                t.pending_buf[t.pending++] = e >>> 8 & 255, t.pending_buf[t.pending++] = 255 & e
            }

            function d(t, e, a, i) {
                var n = t.avail_in;
                return n > i && (n = i), 0 === n ? 0 : (t.avail_in -= n, x.arraySet(e, t.input, t.next_in, n, a), 1 === t.state.wrap ? t.adler = B(t.adler, e, n, a) : 2 === t.state.wrap && (t.adler = S(t.adler, e, n, a)), t.next_in += n, t.total_in += n, n)
            }

            function f(t, e) {
                var a, i, n = t.max_chain_length,
                    r = t.strstart,
                    s = t.prev_length,
                    o = t.nice_match,
                    l = t.strstart > t.w_size - at ? t.strstart - (t.w_size - at) : 0,
                    h = t.window,
                    d = t.w_mask,
                    f = t.prev,
                    _ = t.strstart + et,
                    u = h[r + s - 1],
                    c = h[r + s];
                t.prev_length >= t.good_match && (n >>= 2), o > t.lookahead && (o = t.lookahead);
                do {
                    if (h[(a = e) + s] === c && h[a + s - 1] === u && h[a] === h[r] && h[++a] === h[r + 1]) {
                        r += 2, a++;
                        do {} while (h[++r] === h[++a] && h[++r] === h[++a] && h[++r] === h[++a] && h[++r] === h[++a] && h[++r] === h[++a] && h[++r] === h[++a] && h[++r] === h[++a] && h[++r] === h[++a] && r < _);
                        if (i = et - (_ - r), r = _ - et, i > s) {
                            if (t.match_start = e, s = i, i >= o) break;
                            u = h[r + s - 1], c = h[r + s]
                        }
                    }
                } while ((e = f[e & d]) > l && 0 != --n);
                return s <= t.lookahead ? s : t.lookahead
            }

            function _(t) {
                var e, a, i, n, r, s = t.w_size;
                do {
                    if (n = t.window_size - t.lookahead - t.strstart, t.strstart >= s + (s - at)) {
                        x.arraySet(t.window, t.window, s, s, 0), t.match_start -= s, t.strstart -= s, t.block_start -= s, e = a = t.hash_size;
                        do {
                            i = t.head[--e], t.head[e] = i >= s ? i - s : 0
                        } while (--a);
                        e = a = s;
                        do {
                            i = t.prev[--e], t.prev[e] = i >= s ? i - s : 0
                        } while (--a);
                        n += s
                    }
                    if (0 === t.strm.avail_in) break;
                    if (a = d(t.strm, t.window, t.strstart + t.lookahead, n), t.lookahead += a, t.lookahead + t.insert >= tt)
                        for (r = t.strstart - t.insert, t.ins_h = t.window[r], t.ins_h = (t.ins_h << t.hash_shift ^ t.window[r + 1]) & t.hash_mask; t.insert && (t.ins_h = (t.ins_h << t.hash_shift ^ t.window[r + tt - 1]) & t.hash_mask, t.prev[r & t.w_mask] = t.head[t.ins_h], t.head[t.ins_h] = r, r++, t.insert--, !(t.lookahead + t.insert < tt)););
                } while (t.lookahead < at && 0 !== t.strm.avail_in)
            }

            function u(t, e) {
                for (var a, i;;) {
                    if (t.lookahead < at) {
                        if (_(t), t.lookahead < at && e === A) return ft;
                        if (0 === t.lookahead) break
                    }
                    if (a = 0, t.lookahead >= tt && (t.ins_h = (t.ins_h << t.hash_shift ^ t.window[t.strstart + tt - 1]) & t.hash_mask, a = t.prev[t.strstart & t.w_mask] = t.head[t.ins_h], t.head[t.ins_h] = t.strstart), 0 !== a && t.strstart - a <= t.w_size - at && (t.match_length = f(t, a)), t.match_length >= tt)
                        if (i = z._tr_tally(t, t.strstart - t.match_start, t.match_length - tt), t.lookahead -= t.match_length, t.match_length <= t.max_lazy_match && t.lookahead >= tt) {
                            t.match_length--;
                            do {
                                t.strstart++, t.ins_h = (t.ins_h << t.hash_shift ^ t.window[t.strstart + tt - 1]) & t.hash_mask, a = t.prev[t.strstart & t.w_mask] = t.head[t.ins_h], t.head[t.ins_h] = t.strstart
                            } while (0 != --t.match_length);
                            t.strstart++
                        } else t.strstart += t.match_length, t.match_length = 0, t.ins_h = t.window[t.strstart], t.ins_h = (t.ins_h << t.hash_shift ^ t.window[t.strstart + 1]) & t.hash_mask;
                    else i = z._tr_tally(t, 0, t.window[t.strstart]), t.lookahead--, t.strstart++;
                    if (i && (o(t, !1), 0 === t.strm.avail_out)) return ft
                }
                return t.insert = t.strstart < tt - 1 ? t.strstart : tt - 1, e === C ? (o(t, !0), 0 === t.strm.avail_out ? ut : ct) : t.last_lit && (o(t, !1), 0 === t.strm.avail_out) ? ft : _t
            }

            function c(t, e) {
                for (var a, i, n;;) {
                    if (t.lookahead < at) {
                        if (_(t), t.lookahead < at && e === A) return ft;
                        if (0 === t.lookahead) break
                    }
                    if (a = 0, t.lookahead >= tt && (t.ins_h = (t.ins_h << t.hash_shift ^ t.window[t.strstart + tt - 1]) & t.hash_mask, a = t.prev[t.strstart & t.w_mask] = t.head[t.ins_h], t.head[t.ins_h] = t.strstart), t.prev_length = t.match_length, t.prev_match = t.match_start, t.match_length = tt - 1, 0 !== a && t.prev_length < t.max_lazy_match && t.strstart - a <= t.w_size - at && (t.match_length = f(t, a), t.match_length <= 5 && (t.strategy === L || t.match_length === tt && t.strstart - t.match_start > 4096) && (t.match_length = tt - 1)), t.prev_length >= tt && t.match_length <= t.prev_length) {
                        n = t.strstart + t.lookahead - tt, i = z._tr_tally(t, t.strstart - 1 - t.prev_match, t.prev_length - tt), t.lookahead -= t.prev_length - 1, t.prev_length -= 2;
                        do {
                            ++t.strstart <= n && (t.ins_h = (t.ins_h << t.hash_shift ^ t.window[t.strstart + tt - 1]) & t.hash_mask, a = t.prev[t.strstart & t.w_mask] = t.head[t.ins_h], t.head[t.ins_h] = t.strstart)
                        } while (0 != --t.prev_length);
                        if (t.match_available = 0, t.match_length = tt - 1, t.strstart++, i && (o(t, !1), 0 === t.strm.avail_out)) return ft
                    } else if (t.match_available) {
                        if ((i = z._tr_tally(t, 0, t.window[t.strstart - 1])) && o(t, !1), t.strstart++, t.lookahead--, 0 === t.strm.avail_out) return ft
                    } else t.match_available = 1, t.strstart++, t.lookahead--
                }
                return t.match_available && (i = z._tr_tally(t, 0, t.window[t.strstart - 1]), t.match_available = 0), t.insert = t.strstart < tt - 1 ? t.strstart : tt - 1, e === C ? (o(t, !0), 0 === t.strm.avail_out ? ut : ct) : t.last_lit && (o(t, !1), 0 === t.strm.avail_out) ? ft : _t
            }

            function b(t, e) {
                for (var a, i, n, r, s = t.window;;) {
                    if (t.lookahead <= et) {
                        if (_(t), t.lookahead <= et && e === A) return ft;
                        if (0 === t.lookahead) break
                    }
                    if (t.match_length = 0, t.lookahead >= tt && t.strstart > 0 && ((i = s[n = t.strstart - 1]) === s[++n] && i === s[++n] && i === s[++n])) {
                        r = t.strstart + et;
                        do {} while (i === s[++n] && i === s[++n] && i === s[++n] && i === s[++n] && i === s[++n] && i === s[++n] && i === s[++n] && i === s[++n] && n < r);
                        t.match_length = et - (r - n), t.match_length > t.lookahead && (t.match_length = t.lookahead)
                    }
                    if (t.match_length >= tt ? (a = z._tr_tally(t, 1, t.match_length - tt), t.lookahead -= t.match_length, t.strstart += t.match_length, t.match_length = 0) : (a = z._tr_tally(t, 0, t.window[t.strstart]), t.lookahead--, t.strstart++), a && (o(t, !1), 0 === t.strm.avail_out)) return ft
                }
                return t.insert = 0, e === C ? (o(t, !0), 0 === t.strm.avail_out ? ut : ct) : t.last_lit && (o(t, !1), 0 === t.strm.avail_out) ? ft : _t
            }

            function g(t, e) {
                for (var a;;) {
                    if (0 === t.lookahead && (_(t), 0 === t.lookahead)) {
                        if (e === A) return ft;
                        break
                    }
                    if (t.match_length = 0, a = z._tr_tally(t, 0, t.window[t.strstart]), t.lookahead--, t.strstart++, a && (o(t, !1), 0 === t.strm.avail_out)) return ft
                }
                return t.insert = 0, e === C ? (o(t, !0), 0 === t.strm.avail_out ? ut : ct) : t.last_lit && (o(t, !1), 0 === t.strm.avail_out) ? ft : _t
            }

            function m(t, e, a, i, n) {
                this.good_length = t, this.max_lazy = e, this.nice_length = a, this.max_chain = i, this.func = n
            }

            function w() {
                this.strm = null, this.status = 0, this.pending_buf = null, this.pending_buf_size = 0, this.pending_out = 0, this.pending = 0, this.wrap = 0, this.gzhead = null, this.gzindex = 0, this.method = Y, this.last_flush = -1, this.w_size = 0, this.w_bits = 0, this.w_mask = 0, this.window = null, this.window_size = 0, this.prev = null, this.head = null, this.ins_h = 0, this.hash_size = 0, this.hash_bits = 0, this.hash_mask = 0, this.hash_shift = 0, this.block_start = 0, this.match_length = 0, this.prev_match = 0, this.match_available = 0, this.strstart = 0, this.match_start = 0, this.lookahead = 0, this.prev_length = 0, this.max_chain_length = 0, this.max_lazy_match = 0, this.level = 0, this.strategy = 0, this.good_match = 0, this.nice_match = 0, this.dyn_ltree = new x.Buf16(2 * V), this.dyn_dtree = new x.Buf16(2 * (2 * J + 1)), this.bl_tree = new x.Buf16(2 * (2 * Q + 1)), r(this.dyn_ltree), r(this.dyn_dtree), r(this.bl_tree), this.l_desc = null, this.d_desc = null, this.bl_desc = null, this.bl_count = new x.Buf16($ + 1), this.heap = new x.Buf16(2 * W + 1), r(this.heap), this.heap_len = 0, this.heap_max = 0, this.depth = new x.Buf16(2 * W + 1), r(this.depth), this.l_buf = 0, this.lit_bufsize = 0, this.last_lit = 0, this.d_buf = 0, this.opt_len = 0, this.static_len = 0, this.matches = 0, this.insert = 0, this.bi_buf = 0, this.bi_valid = 0
            }

            function p(t) {
                var e;
                return t && t.state ? (t.total_in = t.total_out = 0, t.data_type = P, (e = t.state).pending = 0, e.pending_out = 0, e.wrap < 0 && (e.wrap = -e.wrap), e.status = e.wrap ? nt : ht, t.adler = 2 === e.wrap ? 0 : 1, e.last_flush = A, z._tr_init(e), O) : i(t, I)
            }

            function v(t) {
                var e = p(t);
                return e === O && function(t) {
                    t.window_size = 2 * t.w_size, r(t.head), t.max_lazy_match = y[t.level].max_lazy, t.good_match = y[t.level].good_length, t.nice_match = y[t.level].nice_length, t.max_chain_length = y[t.level].max_chain, t.strstart = 0, t.block_start = 0, t.lookahead = 0, t.insert = 0, t.match_length = t.prev_length = tt - 1, t.match_available = 0, t.ins_h = 0
                }(t.state), e
            }

            function k(t, e, a, n, r, s) {
                if (!t) return I;
                var o = 1;
                if (e === F && (e = 6), n < 0 ? (o = 0, n = -n) : n > 15 && (o = 2, n -= 16), r < 1 || r > q || a !== Y || n < 8 || n > 15 || e < 0 || e > 9 || s < 0 || s > K) return i(t, I);
                8 === n && (n = 9);
                var l = new w;
                return t.state = l, l.strm = t, l.wrap = o, l.gzhead = null, l.w_bits = n, l.w_size = 1 << l.w_bits, l.w_mask = l.w_size - 1, l.hash_bits = r + 7, l.hash_size = 1 << l.hash_bits, l.hash_mask = l.hash_size - 1, l.hash_shift = ~~((l.hash_bits + tt - 1) / tt), l.window = new x.Buf8(2 * l.w_size), l.head = new x.Buf16(l.hash_size), l.prev = new x.Buf16(l.w_size), l.lit_bufsize = 1 << r + 6, l.pending_buf_size = 4 * l.lit_bufsize, l.pending_buf = new x.Buf8(l.pending_buf_size), l.d_buf = 1 * l.lit_bufsize, l.l_buf = 3 * l.lit_bufsize, l.level = e, l.strategy = s, l.method = a, v(t)
            }
            var y, x = t("../utils/common"),
                z = t("./trees"),
                B = t("./adler32"),
                S = t("./crc32"),
                E = t("./messages"),
                A = 0,
                Z = 1,
                R = 3,
                C = 4,
                N = 5,
                O = 0,
                D = 1,
                I = -2,
                U = -3,
                T = -5,
                F = -1,
                L = 1,
                H = 2,
                j = 3,
                K = 4,
                M = 0,
                P = 2,
                Y = 8,
                q = 9,
                G = 15,
                X = 8,
                W = 286,
                J = 30,
                Q = 19,
                V = 2 * W + 1,
                $ = 15,
                tt = 3,
                et = 258,
                at = et + tt + 1,
                it = 32,
                nt = 42,
                rt = 69,
                st = 73,
                ot = 91,
                lt = 103,
                ht = 113,
                dt = 666,
                ft = 1,
                _t = 2,
                ut = 3,
                ct = 4,
                bt = 3;
            y = [new m(0, 0, 0, 0, function(t, e) {
                var a = 65535;
                for (a > t.pending_buf_size - 5 && (a = t.pending_buf_size - 5);;) {
                    if (t.lookahead <= 1) {
                        if (_(t), 0 === t.lookahead && e === A) return ft;
                        if (0 === t.lookahead) break
                    }
                    t.strstart += t.lookahead, t.lookahead = 0;
                    var i = t.block_start + a;
                    if ((0 === t.strstart || t.strstart >= i) && (t.lookahead = t.strstart - i, t.strstart = i, o(t, !1), 0 === t.strm.avail_out)) return ft;
                    if (t.strstart - t.block_start >= t.w_size - at && (o(t, !1), 0 === t.strm.avail_out)) return ft
                }
                return t.insert = 0, e === C ? (o(t, !0), 0 === t.strm.avail_out ? ut : ct) : (t.strstart > t.block_start && (o(t, !1), t.strm.avail_out), ft)
            }), new m(4, 4, 8, 4, u), new m(4, 5, 16, 8, u), new m(4, 6, 32, 32, u), new m(4, 4, 16, 16, c), new m(8, 16, 32, 32, c), new m(8, 16, 128, 128, c), new m(8, 32, 128, 256, c), new m(32, 128, 258, 1024, c), new m(32, 258, 258, 4096, c)], a.deflateInit = function(t, e) {
                return k(t, e, Y, G, X, M)
            }, a.deflateInit2 = k, a.deflateReset = v, a.deflateResetKeep = p, a.deflateSetHeader = function(t, e) {
                return t && t.state ? 2 !== t.state.wrap ? I : (t.state.gzhead = e, O) : I
            }, a.deflate = function(t, e) {
                var a, o, d, f;
                if (!t || !t.state || e > N || e < 0) return t ? i(t, I) : I;
                if (o = t.state, !t.output || !t.input && 0 !== t.avail_in || o.status === dt && e !== C) return i(t, 0 === t.avail_out ? T : I);
                if (o.strm = t, a = o.last_flush, o.last_flush = e, o.status === nt)
                    if (2 === o.wrap) t.adler = 0, l(o, 31), l(o, 139), l(o, 8), o.gzhead ? (l(o, (o.gzhead.text ? 1 : 0) + (o.gzhead.hcrc ? 2 : 0) + (o.gzhead.extra ? 4 : 0) + (o.gzhead.name ? 8 : 0) + (o.gzhead.comment ? 16 : 0)), l(o, 255 & o.gzhead.time), l(o, o.gzhead.time >> 8 & 255), l(o, o.gzhead.time >> 16 & 255), l(o, o.gzhead.time >> 24 & 255), l(o, 9 === o.level ? 2 : o.strategy >= H || o.level < 2 ? 4 : 0), l(o, 255 & o.gzhead.os), o.gzhead.extra && o.gzhead.extra.length && (l(o, 255 & o.gzhead.extra.length), l(o, o.gzhead.extra.length >> 8 & 255)), o.gzhead.hcrc && (t.adler = S(t.adler, o.pending_buf, o.pending, 0)), o.gzindex = 0, o.status = rt) : (l(o, 0), l(o, 0), l(o, 0), l(o, 0), l(o, 0), l(o, 9 === o.level ? 2 : o.strategy >= H || o.level < 2 ? 4 : 0), l(o, bt), o.status = ht);
                    else {
                        var _ = Y + (o.w_bits - 8 << 4) << 8;
                        _ |= (o.strategy >= H || o.level < 2 ? 0 : o.level < 6 ? 1 : 6 === o.level ? 2 : 3) << 6, 0 !== o.strstart && (_ |= it), _ += 31 - _ % 31, o.status = ht, h(o, _), 0 !== o.strstart && (h(o, t.adler >>> 16), h(o, 65535 & t.adler)), t.adler = 1
                    }
                if (o.status === rt)
                    if (o.gzhead.extra) {
                        for (d = o.pending; o.gzindex < (65535 & o.gzhead.extra.length) && (o.pending !== o.pending_buf_size || (o.gzhead.hcrc && o.pending > d && (t.adler = S(t.adler, o.pending_buf, o.pending - d, d)), s(t), d = o.pending, o.pending !== o.pending_buf_size));) l(o, 255 & o.gzhead.extra[o.gzindex]), o.gzindex++;
                        o.gzhead.hcrc && o.pending > d && (t.adler = S(t.adler, o.pending_buf, o.pending - d, d)), o.gzindex === o.gzhead.extra.length && (o.gzindex = 0, o.status = st)
                    } else o.status = st;
                if (o.status === st)
                    if (o.gzhead.name) {
                        d = o.pending;
                        do {
                            if (o.pending === o.pending_buf_size && (o.gzhead.hcrc && o.pending > d && (t.adler = S(t.adler, o.pending_buf, o.pending - d, d)), s(t), d = o.pending, o.pending === o.pending_buf_size)) {
                                f = 1;
                                break
                            }
                            f = o.gzindex < o.gzhead.name.length ? 255 & o.gzhead.name.charCodeAt(o.gzindex++) : 0, l(o, f)
                        } while (0 !== f);
                        o.gzhead.hcrc && o.pending > d && (t.adler = S(t.adler, o.pending_buf, o.pending - d, d)), 0 === f && (o.gzindex = 0, o.status = ot)
                    } else o.status = ot;
                if (o.status === ot)
                    if (o.gzhead.comment) {
                        d = o.pending;
                        do {
                            if (o.pending === o.pending_buf_size && (o.gzhead.hcrc && o.pending > d && (t.adler = S(t.adler, o.pending_buf, o.pending - d, d)), s(t), d = o.pending, o.pending === o.pending_buf_size)) {
                                f = 1;
                                break
                            }
                            f = o.gzindex < o.gzhead.comment.length ? 255 & o.gzhead.comment.charCodeAt(o.gzindex++) : 0, l(o, f)
                        } while (0 !== f);
                        o.gzhead.hcrc && o.pending > d && (t.adler = S(t.adler, o.pending_buf, o.pending - d, d)), 0 === f && (o.status = lt)
                    } else o.status = lt;
                if (o.status === lt && (o.gzhead.hcrc ? (o.pending + 2 > o.pending_buf_size && s(t), o.pending + 2 <= o.pending_buf_size && (l(o, 255 & t.adler), l(o, t.adler >> 8 & 255), t.adler = 0, o.status = ht)) : o.status = ht), 0 !== o.pending) {
                    if (s(t), 0 === t.avail_out) return o.last_flush = -1, O
                } else if (0 === t.avail_in && n(e) <= n(a) && e !== C) return i(t, T);
                if (o.status === dt && 0 !== t.avail_in) return i(t, T);
                if (0 !== t.avail_in || 0 !== o.lookahead || e !== A && o.status !== dt) {
                    var u = o.strategy === H ? g(o, e) : o.strategy === j ? b(o, e) : y[o.level].func(o, e);
                    if (u !== ut && u !== ct || (o.status = dt), u === ft || u === ut) return 0 === t.avail_out && (o.last_flush = -1), O;
                    if (u === _t && (e === Z ? z._tr_align(o) : e !== N && (z._tr_stored_block(o, 0, 0, !1), e === R && (r(o.head), 0 === o.lookahead && (o.strstart = 0, o.block_start = 0, o.insert = 0))), s(t), 0 === t.avail_out)) return o.last_flush = -1, O
                }
                return e !== C ? O : o.wrap <= 0 ? D : (2 === o.wrap ? (l(o, 255 & t.adler), l(o, t.adler >> 8 & 255), l(o, t.adler >> 16 & 255), l(o, t.adler >> 24 & 255), l(o, 255 & t.total_in), l(o, t.total_in >> 8 & 255), l(o, t.total_in >> 16 & 255), l(o, t.total_in >> 24 & 255)) : (h(o, t.adler >>> 16), h(o, 65535 & t.adler)), s(t), o.wrap > 0 && (o.wrap = -o.wrap), 0 !== o.pending ? O : D)
            }, a.deflateEnd = function(t) {
                var e;
                return t && t.state ? (e = t.state.status) !== nt && e !== rt && e !== st && e !== ot && e !== lt && e !== ht && e !== dt ? i(t, I) : (t.state = null, e === ht ? i(t, U) : O) : I
            }, a.deflateSetDictionary = function(t, e) {
                var a, i, n, s, o, l, h, d, f = e.length;
                if (!t || !t.state) return I;
                if (2 === (s = (a = t.state).wrap) || 1 === s && a.status !== nt || a.lookahead) return I;
                for (1 === s && (t.adler = B(t.adler, e, f, 0)), a.wrap = 0, f >= a.w_size && (0 === s && (r(a.head), a.strstart = 0, a.block_start = 0, a.insert = 0), d = new x.Buf8(a.w_size), x.arraySet(d, e, f - a.w_size, a.w_size, 0), e = d, f = a.w_size), o = t.avail_in, l = t.next_in, h = t.input, t.avail_in = f, t.next_in = 0, t.input = e, _(a); a.lookahead >= tt;) {
                    i = a.strstart, n = a.lookahead - (tt - 1);
                    do {
                        a.ins_h = (a.ins_h << a.hash_shift ^ a.window[i + tt - 1]) & a.hash_mask, a.prev[i & a.w_mask] = a.head[a.ins_h], a.head[a.ins_h] = i, i++
                    } while (--n);
                    a.strstart = i, a.lookahead = tt - 1, _(a)
                }
                return a.strstart += a.lookahead, a.block_start = a.strstart, a.insert = a.lookahead, a.lookahead = 0, a.match_length = a.prev_length = tt - 1, a.match_available = 0, t.next_in = l, t.input = h, t.avail_in = o, a.wrap = s, O
            }, a.deflateInfo = "pako deflate (from Nodeca project)"
        }, {
            "../utils/common": 3,
            "./adler32": 5,
            "./crc32": 7,
            "./messages": 13,
            "./trees": 14
        }],
        9: [function(t, e, a) {
            "use strict";
            e.exports = function() {
                this.text = 0, this.time = 0, this.xflags = 0, this.os = 0, this.extra = null, this.extra_len = 0, this.name = "", this.comment = "", this.hcrc = 0, this.done = !1
            }
        }, {}],
        10: [function(t, e, a) {
            "use strict";
            e.exports = function(t, e) {
                var a, i, n, r, s, o, l, h, d, f, _, u, c, b, g, m, w, p, v, k, y, x, z, B, S;
                a = t.state, i = t.next_in, B = t.input, n = i + (t.avail_in - 5), r = t.next_out, S = t.output, s = r - (e - t.avail_out), o = r + (t.avail_out - 257), l = a.dmax, h = a.wsize, d = a.whave, f = a.wnext, _ = a.window, u = a.hold, c = a.bits, b = a.lencode, g = a.distcode, m = (1 << a.lenbits) - 1, w = (1 << a.distbits) - 1;
                t: do {
                    c < 15 && (u += B[i++] << c, c += 8, u += B[i++] << c, c += 8), p = b[u & m];
                    e: for (;;) {
                        if (u >>>= v = p >>> 24, c -= v, 0 === (v = p >>> 16 & 255)) S[r++] = 65535 & p;
                        else {
                            if (!(16 & v)) {
                                if (0 == (64 & v)) {
                                    p = b[(65535 & p) + (u & (1 << v) - 1)];
                                    continue e
                                }
                                if (32 & v) {
                                    a.mode = 12;
                                    break t
                                }
                                t.msg = "invalid literal/length code", a.mode = 30;
                                break t
                            }
                            k = 65535 & p, (v &= 15) && (c < v && (u += B[i++] << c, c += 8), k += u & (1 << v) - 1, u >>>= v, c -= v), c < 15 && (u += B[i++] << c, c += 8, u += B[i++] << c, c += 8), p = g[u & w];
                            a: for (;;) {
                                if (u >>>= v = p >>> 24, c -= v, !(16 & (v = p >>> 16 & 255))) {
                                    if (0 == (64 & v)) {
                                        p = g[(65535 & p) + (u & (1 << v) - 1)];
                                        continue a
                                    }
                                    t.msg = "invalid distance code", a.mode = 30;
                                    break t
                                }
                                if (y = 65535 & p, c < (v &= 15) && (u += B[i++] << c, (c += 8) < v && (u += B[i++] << c, c += 8)), (y += u & (1 << v) - 1) > l) {
                                    t.msg = "invalid distance too far back", a.mode = 30;
                                    break t
                                }
                                if (u >>>= v, c -= v, y > (v = r - s)) {
                                    if ((v = y - v) > d && a.sane) {
                                        t.msg = "invalid distance too far back", a.mode = 30;
                                        break t
                                    }
                                    if (x = 0, z = _, 0 === f) {
                                        if (x += h - v, v < k) {
                                            k -= v;
                                            do {
                                                S[r++] = _[x++]
                                            } while (--v);
                                            x = r - y, z = S
                                        }
                                    } else if (f < v) {
                                        if (x += h + f - v, (v -= f) < k) {
                                            k -= v;
                                            do {
                                                S[r++] = _[x++]
                                            } while (--v);
                                            if (x = 0, f < k) {
                                                k -= v = f;
                                                do {
                                                    S[r++] = _[x++]
                                                } while (--v);
                                                x = r - y, z = S
                                            }
                                        }
                                    } else if (x += f - v, v < k) {
                                        k -= v;
                                        do {
                                            S[r++] = _[x++]
                                        } while (--v);
                                        x = r - y, z = S
                                    }
                                    for (; k > 2;) S[r++] = z[x++], S[r++] = z[x++], S[r++] = z[x++], k -= 3;
                                    k && (S[r++] = z[x++], k > 1 && (S[r++] = z[x++]))
                                } else {
                                    x = r - y;
                                    do {
                                        S[r++] = S[x++], S[r++] = S[x++], S[r++] = S[x++], k -= 3
                                    } while (k > 2);
                                    k && (S[r++] = S[x++], k > 1 && (S[r++] = S[x++]))
                                }
                                break
                            }
                        }
                        break
                    }
                } while (i < n && r < o);
                i -= k = c >> 3, u &= (1 << (c -= k << 3)) - 1, t.next_in = i, t.next_out = r, t.avail_in = i < n ? n - i + 5 : 5 - (i - n), t.avail_out = r < o ? o - r + 257 : 257 - (r - o), a.hold = u, a.bits = c
            }
        }, {}],
        11: [function(t, e, a) {
            "use strict";

            function i(t) {
                return (t >>> 24 & 255) + (t >>> 8 & 65280) + ((65280 & t) << 8) + ((255 & t) << 24)
            }

            function n(t) {
                var e;
                return t && t.state ? (e = t.state, t.total_in = t.total_out = e.total = 0, t.msg = "", e.wrap && (t.adler = 1 & e.wrap), e.mode = C, e.last = 0, e.havedict = 0, e.dmax = 32768, e.head = null, e.hold = 0, e.bits = 0, e.lencode = e.lendyn = new _.Buf32(ht), e.distcode = e.distdyn = new _.Buf32(dt), e.sane = 1, e.back = -1, x) : S
            }

            function r(t) {
                var e;
                return t && t.state ? ((e = t.state).wsize = 0, e.whave = 0, e.wnext = 0, n(t)) : S
            }

            function s(t, e) {
                var a, i;
                return t && t.state ? (i = t.state, e < 0 ? (a = 0, e = -e) : (a = 1 + (e >> 4), e < 48 && (e &= 15)), e && (e < 8 || e > 15) ? S : (null !== i.window && i.wbits !== e && (i.window = null), i.wrap = a, i.wbits = e, r(t))) : S
            }

            function o(t, e) {
                var a, i;
                return t ? (i = new function() {
                    this.mode = 0, this.last = !1, this.wrap = 0, this.havedict = !1, this.flags = 0, this.dmax = 0, this.check = 0, this.total = 0, this.head = null, this.wbits = 0, this.wsize = 0, this.whave = 0, this.wnext = 0, this.window = null, this.hold = 0, this.bits = 0, this.length = 0, this.offset = 0, this.extra = 0, this.lencode = null, this.distcode = null, this.lenbits = 0, this.distbits = 0, this.ncode = 0, this.nlen = 0, this.ndist = 0, this.have = 0, this.next = null, this.lens = new _.Buf16(320), this.work = new _.Buf16(288), this.lendyn = null, this.distdyn = null, this.sane = 0, this.back = 0, this.was = 0
                }, t.state = i, i.window = null, (a = s(t, e)) !== x && (t.state = null), a) : S
            }

            function l(t) {
                if (_t) {
                    var e;
                    for (d = new _.Buf32(512), f = new _.Buf32(32), e = 0; e < 144;) t.lens[e++] = 8;
                    for (; e < 256;) t.lens[e++] = 9;
                    for (; e < 280;) t.lens[e++] = 7;
                    for (; e < 288;) t.lens[e++] = 8;
                    for (g(w, t.lens, 0, 288, d, 0, t.work, {
                            bits: 9
                        }), e = 0; e < 32;) t.lens[e++] = 5;
                    g(p, t.lens, 0, 32, f, 0, t.work, {
                        bits: 5
                    }), _t = !1
                }
                t.lencode = d, t.lenbits = 9, t.distcode = f, t.distbits = 5
            }

            function h(t, e, a, i) {
                var n, r = t.state;
                return null === r.window && (r.wsize = 1 << r.wbits, r.wnext = 0, r.whave = 0, r.window = new _.Buf8(r.wsize)), i >= r.wsize ? (_.arraySet(r.window, e, a - r.wsize, r.wsize, 0), r.wnext = 0, r.whave = r.wsize) : ((n = r.wsize - r.wnext) > i && (n = i), _.arraySet(r.window, e, a - i, n, r.wnext), (i -= n) ? (_.arraySet(r.window, e, a - i, i, 0), r.wnext = i, r.whave = r.wsize) : (r.wnext += n, r.wnext === r.wsize && (r.wnext = 0), r.whave < r.wsize && (r.whave += n))), 0
            }
            var d, f, _ = t("../utils/common"),
                u = t("./adler32"),
                c = t("./crc32"),
                b = t("./inffast"),
                g = t("./inftrees"),
                m = 0,
                w = 1,
                p = 2,
                v = 4,
                k = 5,
                y = 6,
                x = 0,
                z = 1,
                B = 2,
                S = -2,
                E = -3,
                A = -4,
                Z = -5,
                R = 8,
                C = 1,
                N = 2,
                O = 3,
                D = 4,
                I = 5,
                U = 6,
                T = 7,
                F = 8,
                L = 9,
                H = 10,
                j = 11,
                K = 12,
                M = 13,
                P = 14,
                Y = 15,
                q = 16,
                G = 17,
                X = 18,
                W = 19,
                J = 20,
                Q = 21,
                V = 22,
                $ = 23,
                tt = 24,
                et = 25,
                at = 26,
                it = 27,
                nt = 28,
                rt = 29,
                st = 30,
                ot = 31,
                lt = 32,
                ht = 852,
                dt = 592,
                ft = 15,
                _t = !0;
            a.inflateReset = r, a.inflateReset2 = s, a.inflateResetKeep = n, a.inflateInit = function(t) {
                return o(t, ft)
            }, a.inflateInit2 = o, a.inflate = function(t, e) {
                var a, n, r, s, o, d, f, ht, dt, ft, _t, ut, ct, bt, gt, mt, wt, pt, vt, kt, yt, xt, zt, Bt, St = 0,
                    Et = new _.Buf8(4),
                    At = [16, 17, 18, 0, 8, 7, 9, 6, 10, 5, 11, 4, 12, 3, 13, 2, 14, 1, 15];
                if (!t || !t.state || !t.output || !t.input && 0 !== t.avail_in) return S;
                (a = t.state).mode === K && (a.mode = M), o = t.next_out, r = t.output, f = t.avail_out, s = t.next_in, n = t.input, d = t.avail_in, ht = a.hold, dt = a.bits, ft = d, _t = f, xt = x;
                t: for (;;) switch (a.mode) {
                    case C:
                        if (0 === a.wrap) {
                            a.mode = M;
                            break
                        }
                        for (; dt < 16;) {
                            if (0 === d) break t;
                            d--, ht += n[s++] << dt, dt += 8
                        }
                        if (2 & a.wrap && 35615 === ht) {
                            a.check = 0, Et[0] = 255 & ht, Et[1] = ht >>> 8 & 255, a.check = c(a.check, Et, 2, 0), ht = 0, dt = 0, a.mode = N;
                            break
                        }
                        if (a.flags = 0, a.head && (a.head.done = !1), !(1 & a.wrap) || (((255 & ht) << 8) + (ht >> 8)) % 31) {
                            t.msg = "incorrect header check", a.mode = st;
                            break
                        }
                        if ((15 & ht) !== R) {
                            t.msg = "unknown compression method", a.mode = st;
                            break
                        }
                        if (dt -= 4, yt = 8 + (15 & (ht >>>= 4)), 0 === a.wbits) a.wbits = yt;
                        else if (yt > a.wbits) {
                            t.msg = "invalid window size", a.mode = st;
                            break
                        }
                        a.dmax = 1 << yt, t.adler = a.check = 1, a.mode = 512 & ht ? H : K, ht = 0, dt = 0;
                        break;
                    case N:
                        for (; dt < 16;) {
                            if (0 === d) break t;
                            d--, ht += n[s++] << dt, dt += 8
                        }
                        if (a.flags = ht, (255 & a.flags) !== R) {
                            t.msg = "unknown compression method", a.mode = st;
                            break
                        }
                        if (57344 & a.flags) {
                            t.msg = "unknown header flags set", a.mode = st;
                            break
                        }
                        a.head && (a.head.text = ht >> 8 & 1), 512 & a.flags && (Et[0] = 255 & ht, Et[1] = ht >>> 8 & 255, a.check = c(a.check, Et, 2, 0)), ht = 0, dt = 0, a.mode = O;
                    case O:
                        for (; dt < 32;) {
                            if (0 === d) break t;
                            d--, ht += n[s++] << dt, dt += 8
                        }
                        a.head && (a.head.time = ht), 512 & a.flags && (Et[0] = 255 & ht, Et[1] = ht >>> 8 & 255, Et[2] = ht >>> 16 & 255, Et[3] = ht >>> 24 & 255, a.check = c(a.check, Et, 4, 0)), ht = 0, dt = 0, a.mode = D;
                    case D:
                        for (; dt < 16;) {
                            if (0 === d) break t;
                            d--, ht += n[s++] << dt, dt += 8
                        }
                        a.head && (a.head.xflags = 255 & ht, a.head.os = ht >> 8), 512 & a.flags && (Et[0] = 255 & ht, Et[1] = ht >>> 8 & 255, a.check = c(a.check, Et, 2, 0)), ht = 0, dt = 0, a.mode = I;
                    case I:
                        if (1024 & a.flags) {
                            for (; dt < 16;) {
                                if (0 === d) break t;
                                d--, ht += n[s++] << dt, dt += 8
                            }
                            a.length = ht, a.head && (a.head.extra_len = ht), 512 & a.flags && (Et[0] = 255 & ht, Et[1] = ht >>> 8 & 255, a.check = c(a.check, Et, 2, 0)), ht = 0, dt = 0
                        } else a.head && (a.head.extra = null);
                        a.mode = U;
                    case U:
                        if (1024 & a.flags && ((ut = a.length) > d && (ut = d), ut && (a.head && (yt = a.head.extra_len - a.length, a.head.extra || (a.head.extra = new Array(a.head.extra_len)), _.arraySet(a.head.extra, n, s, ut, yt)), 512 & a.flags && (a.check = c(a.check, n, ut, s)), d -= ut, s += ut, a.length -= ut), a.length)) break t;
                        a.length = 0, a.mode = T;
                    case T:
                        if (2048 & a.flags) {
                            if (0 === d) break t;
                            ut = 0;
                            do {
                                yt = n[s + ut++], a.head && yt && a.length < 65536 && (a.head.name += String.fromCharCode(yt))
                            } while (yt && ut < d);
                            if (512 & a.flags && (a.check = c(a.check, n, ut, s)), d -= ut, s += ut, yt) break t
                        } else a.head && (a.head.name = null);
                        a.length = 0, a.mode = F;
                    case F:
                        if (4096 & a.flags) {
                            if (0 === d) break t;
                            ut = 0;
                            do {
                                yt = n[s + ut++], a.head && yt && a.length < 65536 && (a.head.comment += String.fromCharCode(yt))
                            } while (yt && ut < d);
                            if (512 & a.flags && (a.check = c(a.check, n, ut, s)), d -= ut, s += ut, yt) break t
                        } else a.head && (a.head.comment = null);
                        a.mode = L;
                    case L:
                        if (512 & a.flags) {
                            for (; dt < 16;) {
                                if (0 === d) break t;
                                d--, ht += n[s++] << dt, dt += 8
                            }
                            if (ht !== (65535 & a.check)) {
                                t.msg = "header crc mismatch", a.mode = st;
                                break
                            }
                            ht = 0, dt = 0
                        }
                        a.head && (a.head.hcrc = a.flags >> 9 & 1, a.head.done = !0), t.adler = a.check = 0, a.mode = K;
                        break;
                    case H:
                        for (; dt < 32;) {
                            if (0 === d) break t;
                            d--, ht += n[s++] << dt, dt += 8
                        }
                        t.adler = a.check = i(ht), ht = 0, dt = 0, a.mode = j;
                    case j:
                        if (0 === a.havedict) return t.next_out = o, t.avail_out = f, t.next_in = s, t.avail_in = d, a.hold = ht, a.bits = dt, B;
                        t.adler = a.check = 1, a.mode = K;
                    case K:
                        if (e === k || e === y) break t;
                    case M:
                        if (a.last) {
                            ht >>>= 7 & dt, dt -= 7 & dt, a.mode = it;
                            break
                        }
                        for (; dt < 3;) {
                            if (0 === d) break t;
                            d--, ht += n[s++] << dt, dt += 8
                        }
                        switch (a.last = 1 & ht, dt -= 1, 3 & (ht >>>= 1)) {
                            case 0:
                                a.mode = P;
                                break;
                            case 1:
                                if (l(a), a.mode = J, e === y) {
                                    ht >>>= 2, dt -= 2;
                                    break t
                                }
                                break;
                            case 2:
                                a.mode = G;
                                break;
                            case 3:
                                t.msg = "invalid block type", a.mode = st
                        }
                        ht >>>= 2, dt -= 2;
                        break;
                    case P:
                        for (ht >>>= 7 & dt, dt -= 7 & dt; dt < 32;) {
                            if (0 === d) break t;
                            d--, ht += n[s++] << dt, dt += 8
                        }
                        if ((65535 & ht) != (ht >>> 16 ^ 65535)) {
                            t.msg = "invalid stored block lengths", a.mode = st;
                            break
                        }
                        if (a.length = 65535 & ht, ht = 0, dt = 0, a.mode = Y, e === y) break t;
                    case Y:
                        a.mode = q;
                    case q:
                        if (ut = a.length) {
                            if (ut > d && (ut = d), ut > f && (ut = f), 0 === ut) break t;
                            _.arraySet(r, n, s, ut, o), d -= ut, s += ut, f -= ut, o += ut, a.length -= ut;
                            break
                        }
                        a.mode = K;
                        break;
                    case G:
                        for (; dt < 14;) {
                            if (0 === d) break t;
                            d--, ht += n[s++] << dt, dt += 8
                        }
                        if (a.nlen = 257 + (31 & ht), ht >>>= 5, dt -= 5, a.ndist = 1 + (31 & ht), ht >>>= 5, dt -= 5, a.ncode = 4 + (15 & ht), ht >>>= 4, dt -= 4, a.nlen > 286 || a.ndist > 30) {
                            t.msg = "too many length or distance symbols", a.mode = st;
                            break
                        }
                        a.have = 0, a.mode = X;
                    case X:
                        for (; a.have < a.ncode;) {
                            for (; dt < 3;) {
                                if (0 === d) break t;
                                d--, ht += n[s++] << dt, dt += 8
                            }
                            a.lens[At[a.have++]] = 7 & ht, ht >>>= 3, dt -= 3
                        }
                        for (; a.have < 19;) a.lens[At[a.have++]] = 0;
                        if (a.lencode = a.lendyn, a.lenbits = 7, zt = {
                                bits: a.lenbits
                            }, xt = g(m, a.lens, 0, 19, a.lencode, 0, a.work, zt), a.lenbits = zt.bits, xt) {
                            t.msg = "invalid code lengths set", a.mode = st;
                            break
                        }
                        a.have = 0, a.mode = W;
                    case W:
                        for (; a.have < a.nlen + a.ndist;) {
                            for (; mt = (St = a.lencode[ht & (1 << a.lenbits) - 1]) >>> 16 & 255, wt = 65535 & St, !((gt = St >>> 24) <= dt);) {
                                if (0 === d) break t;
                                d--, ht += n[s++] << dt, dt += 8
                            }
                            if (wt < 16) ht >>>= gt, dt -= gt, a.lens[a.have++] = wt;
                            else {
                                if (16 === wt) {
                                    for (Bt = gt + 2; dt < Bt;) {
                                        if (0 === d) break t;
                                        d--, ht += n[s++] << dt, dt += 8
                                    }
                                    if (ht >>>= gt, dt -= gt, 0 === a.have) {
                                        t.msg = "invalid bit length repeat", a.mode = st;
                                        break
                                    }
                                    yt = a.lens[a.have - 1], ut = 3 + (3 & ht), ht >>>= 2, dt -= 2
                                } else if (17 === wt) {
                                    for (Bt = gt + 3; dt < Bt;) {
                                        if (0 === d) break t;
                                        d--, ht += n[s++] << dt, dt += 8
                                    }
                                    dt -= gt, yt = 0, ut = 3 + (7 & (ht >>>= gt)), ht >>>= 3, dt -= 3
                                } else {
                                    for (Bt = gt + 7; dt < Bt;) {
                                        if (0 === d) break t;
                                        d--, ht += n[s++] << dt, dt += 8
                                    }
                                    dt -= gt, yt = 0, ut = 11 + (127 & (ht >>>= gt)), ht >>>= 7, dt -= 7
                                }
                                if (a.have + ut > a.nlen + a.ndist) {
                                    t.msg = "invalid bit length repeat", a.mode = st;
                                    break
                                }
                                for (; ut--;) a.lens[a.have++] = yt
                            }
                        }
                        if (a.mode === st) break;
                        if (0 === a.lens[256]) {
                            t.msg = "invalid code -- missing end-of-block", a.mode = st;
                            break
                        }
                        if (a.lenbits = 9, zt = {
                                bits: a.lenbits
                            }, xt = g(w, a.lens, 0, a.nlen, a.lencode, 0, a.work, zt), a.lenbits = zt.bits, xt) {
                            t.msg = "invalid literal/lengths set", a.mode = st;
                            break
                        }
                        if (a.distbits = 6, a.distcode = a.distdyn, zt = {
                                bits: a.distbits
                            }, xt = g(p, a.lens, a.nlen, a.ndist, a.distcode, 0, a.work, zt), a.distbits = zt.bits, xt) {
                            t.msg = "invalid distances set", a.mode = st;
                            break
                        }
                        if (a.mode = J, e === y) break t;
                    case J:
                        a.mode = Q;
                    case Q:
                        if (d >= 6 && f >= 258) {
                            t.next_out = o, t.avail_out = f, t.next_in = s, t.avail_in = d, a.hold = ht, a.bits = dt, b(t, _t), o = t.next_out, r = t.output, f = t.avail_out, s = t.next_in, n = t.input, d = t.avail_in, ht = a.hold, dt = a.bits, a.mode === K && (a.back = -1);
                            break
                        }
                        for (a.back = 0; mt = (St = a.lencode[ht & (1 << a.lenbits) - 1]) >>> 16 & 255, wt = 65535 & St, !((gt = St >>> 24) <= dt);) {
                            if (0 === d) break t;
                            d--, ht += n[s++] << dt, dt += 8
                        }
                        if (mt && 0 == (240 & mt)) {
                            for (pt = gt, vt = mt, kt = wt; mt = (St = a.lencode[kt + ((ht & (1 << pt + vt) - 1) >> pt)]) >>> 16 & 255, wt = 65535 & St, !(pt + (gt = St >>> 24) <= dt);) {
                                if (0 === d) break t;
                                d--, ht += n[s++] << dt, dt += 8
                            }
                            ht >>>= pt, dt -= pt, a.back += pt
                        }
                        if (ht >>>= gt, dt -= gt, a.back += gt, a.length = wt, 0 === mt) {
                            a.mode = at;
                            break
                        }
                        if (32 & mt) {
                            a.back = -1, a.mode = K;
                            break
                        }
                        if (64 & mt) {
                            t.msg = "invalid literal/length code", a.mode = st;
                            break
                        }
                        a.extra = 15 & mt, a.mode = V;
                    case V:
                        if (a.extra) {
                            for (Bt = a.extra; dt < Bt;) {
                                if (0 === d) break t;
                                d--, ht += n[s++] << dt, dt += 8
                            }
                            a.length += ht & (1 << a.extra) - 1, ht >>>= a.extra, dt -= a.extra, a.back += a.extra
                        }
                        a.was = a.length, a.mode = $;
                    case $:
                        for (; mt = (St = a.distcode[ht & (1 << a.distbits) - 1]) >>> 16 & 255, wt = 65535 & St, !((gt = St >>> 24) <= dt);) {
                            if (0 === d) break t;
                            d--, ht += n[s++] << dt, dt += 8
                        }
                        if (0 == (240 & mt)) {
                            for (pt = gt, vt = mt, kt = wt; mt = (St = a.distcode[kt + ((ht & (1 << pt + vt) - 1) >> pt)]) >>> 16 & 255, wt = 65535 & St, !(pt + (gt = St >>> 24) <= dt);) {
                                if (0 === d) break t;
                                d--, ht += n[s++] << dt, dt += 8
                            }
                            ht >>>= pt, dt -= pt, a.back += pt
                        }
                        if (ht >>>= gt, dt -= gt, a.back += gt, 64 & mt) {
                            t.msg = "invalid distance code", a.mode = st;
                            break
                        }
                        a.offset = wt, a.extra = 15 & mt, a.mode = tt;
                    case tt:
                        if (a.extra) {
                            for (Bt = a.extra; dt < Bt;) {
                                if (0 === d) break t;
                                d--, ht += n[s++] << dt, dt += 8
                            }
                            a.offset += ht & (1 << a.extra) - 1, ht >>>= a.extra, dt -= a.extra, a.back += a.extra
                        }
                        if (a.offset > a.dmax) {
                            t.msg = "invalid distance too far back", a.mode = st;
                            break
                        }
                        a.mode = et;
                    case et:
                        if (0 === f) break t;
                        if (ut = _t - f, a.offset > ut) {
                            if ((ut = a.offset - ut) > a.whave && a.sane) {
                                t.msg = "invalid distance too far back", a.mode = st;
                                break
                            }
                            ut > a.wnext ? (ut -= a.wnext, ct = a.wsize - ut) : ct = a.wnext - ut, ut > a.length && (ut = a.length), bt = a.window
                        } else bt = r, ct = o - a.offset, ut = a.length;
                        ut > f && (ut = f), f -= ut, a.length -= ut;
                        do {
                            r[o++] = bt[ct++]
                        } while (--ut);
                        0 === a.length && (a.mode = Q);
                        break;
                    case at:
                        if (0 === f) break t;
                        r[o++] = a.length, f--, a.mode = Q;
                        break;
                    case it:
                        if (a.wrap) {
                            for (; dt < 32;) {
                                if (0 === d) break t;
                                d--, ht |= n[s++] << dt, dt += 8
                            }
                            if (_t -= f, t.total_out += _t, a.total += _t, _t && (t.adler = a.check = a.flags ? c(a.check, r, _t, o - _t) : u(a.check, r, _t, o - _t)), _t = f, (a.flags ? ht : i(ht)) !== a.check) {
                                t.msg = "incorrect data check", a.mode = st;
                                break
                            }
                            ht = 0, dt = 0
                        }
                        a.mode = nt;
                    case nt:
                        if (a.wrap && a.flags) {
                            for (; dt < 32;) {
                                if (0 === d) break t;
                                d--, ht += n[s++] << dt, dt += 8
                            }
                            if (ht !== (4294967295 & a.total)) {
                                t.msg = "incorrect length check", a.mode = st;
                                break
                            }
                            ht = 0, dt = 0
                        }
                        a.mode = rt;
                    case rt:
                        xt = z;
                        break t;
                    case st:
                        xt = E;
                        break t;
                    case ot:
                        return A;
                    case lt:
                    default:
                        return S
                }
                return t.next_out = o, t.avail_out = f, t.next_in = s, t.avail_in = d, a.hold = ht, a.bits = dt, (a.wsize || _t !== t.avail_out && a.mode < st && (a.mode < it || e !== v)) && h(t, t.output, t.next_out, _t - t.avail_out) ? (a.mode = ot, A) : (ft -= t.avail_in, _t -= t.avail_out, t.total_in += ft, t.total_out += _t, a.total += _t, a.wrap && _t && (t.adler = a.check = a.flags ? c(a.check, r, _t, t.next_out - _t) : u(a.check, r, _t, t.next_out - _t)), t.data_type = a.bits + (a.last ? 64 : 0) + (a.mode === K ? 128 : 0) + (a.mode === J || a.mode === Y ? 256 : 0), (0 === ft && 0 === _t || e === v) && xt === x && (xt = Z), xt)
            }, a.inflateEnd = function(t) {
                if (!t || !t.state) return S;
                var e = t.state;
                return e.window && (e.window = null), t.state = null, x
            }, a.inflateGetHeader = function(t, e) {
                var a;
                return t && t.state ? 0 == (2 & (a = t.state).wrap) ? S : (a.head = e, e.done = !1, x) : S
            }, a.inflateSetDictionary = function(t, e) {
                var a, i = e.length;
                return t && t.state ? 0 !== (a = t.state).wrap && a.mode !== j ? S : a.mode === j && u(1, e, i, 0) !== a.check ? E : h(t, e, i, i) ? (a.mode = ot, A) : (a.havedict = 1, x) : S
            }, a.inflateInfo = "pako inflate (from Nodeca project)"
        }, {
            "../utils/common": 3,
            "./adler32": 5,
            "./crc32": 7,
            "./inffast": 10,
            "./inftrees": 12
        }],
        12: [function(t, e, a) {
            "use strict";
            var i = t("../utils/common"),
                n = 15,
                r = [3, 4, 5, 6, 7, 8, 9, 10, 11, 13, 15, 17, 19, 23, 27, 31, 35, 43, 51, 59, 67, 83, 99, 115, 131, 163, 195, 227, 258, 0, 0],
                s = [16, 16, 16, 16, 16, 16, 16, 16, 17, 17, 17, 17, 18, 18, 18, 18, 19, 19, 19, 19, 20, 20, 20, 20, 21, 21, 21, 21, 16, 72, 78],
                o = [1, 2, 3, 4, 5, 7, 9, 13, 17, 25, 33, 49, 65, 97, 129, 193, 257, 385, 513, 769, 1025, 1537, 2049, 3073, 4097, 6145, 8193, 12289, 16385, 24577, 0, 0],
                l = [16, 16, 16, 16, 17, 17, 18, 18, 19, 19, 20, 20, 21, 21, 22, 22, 23, 23, 24, 24, 25, 25, 26, 26, 27, 27, 28, 28, 29, 29, 64, 64];
            e.exports = function(t, e, a, h, d, f, _, u) {
                var c, b, g, m, w, p, v, k, y, x = u.bits,
                    z = 0,
                    B = 0,
                    S = 0,
                    E = 0,
                    A = 0,
                    Z = 0,
                    R = 0,
                    C = 0,
                    N = 0,
                    O = 0,
                    D = null,
                    I = 0,
                    U = new i.Buf16(16),
                    T = new i.Buf16(16),
                    F = null,
                    L = 0;
                for (z = 0; z <= n; z++) U[z] = 0;
                for (B = 0; B < h; B++) U[e[a + B]]++;
                for (A = x, E = n; E >= 1 && 0 === U[E]; E--);
                if (A > E && (A = E), 0 === E) return d[f++] = 20971520, d[f++] = 20971520, u.bits = 1, 0;
                for (S = 1; S < E && 0 === U[S]; S++);
                for (A < S && (A = S), C = 1, z = 1; z <= n; z++)
                    if (C <<= 1, (C -= U[z]) < 0) return -1;
                if (C > 0 && (0 === t || 1 !== E)) return -1;
                for (T[1] = 0, z = 1; z < n; z++) T[z + 1] = T[z] + U[z];
                for (B = 0; B < h; B++) 0 !== e[a + B] && (_[T[e[a + B]]++] = B);
                if (0 === t ? (D = F = _, p = 19) : 1 === t ? (D = r, I -= 257, F = s, L -= 257, p = 256) : (D = o, F = l, p = -1), O = 0, B = 0, z = S, w = f, Z = A, R = 0, g = -1, m = (N = 1 << A) - 1, 1 === t && N > 852 || 2 === t && N > 592) return 1;
                for (;;) {
                    0,
                    v = z - R,
                    _[B] < p ? (k = 0, y = _[B]) : _[B] > p ? (k = F[L + _[B]], y = D[I + _[B]]) : (k = 96, y = 0),
                    c = 1 << z - R,
                    S = b = 1 << Z;do {
                        d[w + (O >> R) + (b -= c)] = v << 24 | k << 16 | y | 0
                    } while (0 !== b);
                    for (c = 1 << z - 1; O & c;) c >>= 1;
                    if (0 !== c ? (O &= c - 1, O += c) : O = 0, B++, 0 == --U[z]) {
                        if (z === E) break;
                        z = e[a + _[B]]
                    }
                    if (z > A && (O & m) !== g) {
                        for (0 === R && (R = A), w += S, C = 1 << (Z = z - R); Z + R < E && !((C -= U[Z + R]) <= 0);) Z++, C <<= 1;
                        if (N += 1 << Z, 1 === t && N > 852 || 2 === t && N > 592) return 1;
                        d[g = O & m] = A << 24 | Z << 16 | w - f | 0
                    }
                }
                return 0 !== O && (d[w + O] = z - R << 24 | 64 << 16 | 0), u.bits = A, 0
            }
        }, {
            "../utils/common": 3
        }],
        13: [function(t, e, a) {
            "use strict";
            e.exports = {
                2: "need dictionary",
                1: "stream end",
                0: "",
                "-1": "file error",
                "-2": "stream error",
                "-3": "data error",
                "-4": "insufficient memory",
                "-5": "buffer error",
                "-6": "incompatible version"
            }
        }, {}],
        14: [function(t, e, a) {
            "use strict";

            function i(t) {
                for (var e = t.length; --e >= 0;) t[e] = 0
            }

            function n(t, e, a, i, n) {
                this.static_tree = t, this.extra_bits = e, this.extra_base = a, this.elems = i, this.max_length = n, this.has_stree = t && t.length
            }

            function r(t, e) {
                this.dyn_tree = t, this.max_code = 0, this.stat_desc = e
            }

            function s(t) {
                return t < 256 ? X[t] : X[256 + (t >>> 7)]
            }

            function o(t, e) {
                t.pending_buf[t.pending++] = 255 & e, t.pending_buf[t.pending++] = e >>> 8 & 255
            }

            function l(t, e, a) {
                t.bi_valid > U - a ? (t.bi_buf |= e << t.bi_valid & 65535, o(t, t.bi_buf), t.bi_buf = e >> U - t.bi_valid, t.bi_valid += a - U) : (t.bi_buf |= e << t.bi_valid & 65535, t.bi_valid += a)
            }

            function h(t, e, a) {
                l(t, a[2 * e], a[2 * e + 1])
            }

            function d(t, e) {
                var a = 0;
                do {
                    a |= 1 & t, t >>>= 1, a <<= 1
                } while (--e > 0);
                return a >>> 1
            }

            function f(t, e, a) {
                var i, n, r = new Array(I + 1),
                    s = 0;
                for (i = 1; i <= I; i++) r[i] = s = s + a[i - 1] << 1;
                for (n = 0; n <= e; n++) {
                    var o = t[2 * n + 1];
                    0 !== o && (t[2 * n] = d(r[o]++, o))
                }
            }

            function _(t) {
                var e;
                for (e = 0; e < C; e++) t.dyn_ltree[2 * e] = 0;
                for (e = 0; e < N; e++) t.dyn_dtree[2 * e] = 0;
                for (e = 0; e < O; e++) t.bl_tree[2 * e] = 0;
                t.dyn_ltree[2 * F] = 1, t.opt_len = t.static_len = 0, t.last_lit = t.matches = 0
            }

            function u(t) {
                t.bi_valid > 8 ? o(t, t.bi_buf) : t.bi_valid > 0 && (t.pending_buf[t.pending++] = t.bi_buf), t.bi_buf = 0, t.bi_valid = 0
            }

            function c(t, e, a, i) {
                var n = 2 * e,
                    r = 2 * a;
                return t[n] < t[r] || t[n] === t[r] && i[e] <= i[a]
            }

            function b(t, e, a) {
                for (var i = t.heap[a], n = a << 1; n <= t.heap_len && (n < t.heap_len && c(e, t.heap[n + 1], t.heap[n], t.depth) && n++, !c(e, i, t.heap[n], t.depth));) t.heap[a] = t.heap[n], a = n, n <<= 1;
                t.heap[a] = i
            }

            function g(t, e, a) {
                var i, n, r, o, d = 0;
                if (0 !== t.last_lit)
                    do {
                        i = t.pending_buf[t.d_buf + 2 * d] << 8 | t.pending_buf[t.d_buf + 2 * d + 1], n = t.pending_buf[t.l_buf + d], d++, 0 === i ? h(t, n, e) : (h(t, (r = W[n]) + R + 1, e), 0 !== (o = K[r]) && l(t, n -= J[r], o), h(t, r = s(--i), a), 0 !== (o = M[r]) && l(t, i -= Q[r], o))
                    } while (d < t.last_lit);
                h(t, F, e)
            }

            function m(t, e) {
                var a, i, n, r = e.dyn_tree,
                    s = e.stat_desc.static_tree,
                    o = e.stat_desc.has_stree,
                    l = e.stat_desc.elems,
                    h = -1;
                for (t.heap_len = 0, t.heap_max = D, a = 0; a < l; a++) 0 !== r[2 * a] ? (t.heap[++t.heap_len] = h = a, t.depth[a] = 0) : r[2 * a + 1] = 0;
                for (; t.heap_len < 2;) r[2 * (n = t.heap[++t.heap_len] = h < 2 ? ++h : 0)] = 1, t.depth[n] = 0, t.opt_len--, o && (t.static_len -= s[2 * n + 1]);
                for (e.max_code = h, a = t.heap_len >> 1; a >= 1; a--) b(t, r, a);
                n = l;
                do {
                    a = t.heap[1], t.heap[1] = t.heap[t.heap_len--], b(t, r, 1), i = t.heap[1], t.heap[--t.heap_max] = a, t.heap[--t.heap_max] = i, r[2 * n] = r[2 * a] + r[2 * i], t.depth[n] = (t.depth[a] >= t.depth[i] ? t.depth[a] : t.depth[i]) + 1, r[2 * a + 1] = r[2 * i + 1] = n, t.heap[1] = n++, b(t, r, 1)
                } while (t.heap_len >= 2);
                t.heap[--t.heap_max] = t.heap[1],
                    function(t, e) {
                        var a, i, n, r, s, o, l = e.dyn_tree,
                            h = e.max_code,
                            d = e.stat_desc.static_tree,
                            f = e.stat_desc.has_stree,
                            _ = e.stat_desc.extra_bits,
                            u = e.stat_desc.extra_base,
                            c = e.stat_desc.max_length,
                            b = 0;
                        for (r = 0; r <= I; r++) t.bl_count[r] = 0;
                        for (l[2 * t.heap[t.heap_max] + 1] = 0, a = t.heap_max + 1; a < D; a++)(r = l[2 * l[2 * (i = t.heap[a]) + 1] + 1] + 1) > c && (r = c, b++), l[2 * i + 1] = r, i > h || (t.bl_count[r]++, s = 0, i >= u && (s = _[i - u]), o = l[2 * i], t.opt_len += o * (r + s), f && (t.static_len += o * (d[2 * i + 1] + s)));
                        if (0 !== b) {
                            do {
                                for (r = c - 1; 0 === t.bl_count[r];) r--;
                                t.bl_count[r]--, t.bl_count[r + 1] += 2, t.bl_count[c]--, b -= 2
                            } while (b > 0);
                            for (r = c; 0 !== r; r--)
                                for (i = t.bl_count[r]; 0 !== i;)(n = t.heap[--a]) > h || (l[2 * n + 1] !== r && (t.opt_len += (r - l[2 * n + 1]) * l[2 * n], l[2 * n + 1] = r), i--)
                        }
                    }(t, e), f(r, h, t.bl_count)
            }

            function w(t, e, a) {
                var i, n, r = -1,
                    s = e[1],
                    o = 0,
                    l = 7,
                    h = 4;
                for (0 === s && (l = 138, h = 3), e[2 * (a + 1) + 1] = 65535, i = 0; i <= a; i++) n = s, s = e[2 * (i + 1) + 1], ++o < l && n === s || (o < h ? t.bl_tree[2 * n] += o : 0 !== n ? (n !== r && t.bl_tree[2 * n]++, t.bl_tree[2 * L]++) : o <= 10 ? t.bl_tree[2 * H]++ : t.bl_tree[2 * j]++, o = 0, r = n, 0 === s ? (l = 138, h = 3) : n === s ? (l = 6, h = 3) : (l = 7, h = 4))
            }

            function p(t, e, a) {
                var i, n, r = -1,
                    s = e[1],
                    o = 0,
                    d = 7,
                    f = 4;
                for (0 === s && (d = 138, f = 3), i = 0; i <= a; i++)
                    if (n = s, s = e[2 * (i + 1) + 1], !(++o < d && n === s)) {
                        if (o < f)
                            do {
                                h(t, n, t.bl_tree)
                            } while (0 != --o);
                        else 0 !== n ? (n !== r && (h(t, n, t.bl_tree), o--), h(t, L, t.bl_tree), l(t, o - 3, 2)) : o <= 10 ? (h(t, H, t.bl_tree), l(t, o - 3, 3)) : (h(t, j, t.bl_tree), l(t, o - 11, 7));
                        o = 0, r = n, 0 === s ? (d = 138, f = 3) : n === s ? (d = 6, f = 3) : (d = 7, f = 4)
                    }
            }

            function v(t, e, a, i) {
                l(t, (S << 1) + (i ? 1 : 0), 3),
                    function(t, e, a, i) {
                        u(t), i && (o(t, a), o(t, ~a)), k.arraySet(t.pending_buf, t.window, e, a, t.pending), t.pending += a
                    }(t, e, a, !0)
            }
            var k = t("../utils/common"),
                y = 4,
                x = 0,
                z = 1,
                B = 2,
                S = 0,
                E = 1,
                A = 2,
                Z = 29,
                R = 256,
                C = R + 1 + Z,
                N = 30,
                O = 19,
                D = 2 * C + 1,
                I = 15,
                U = 16,
                T = 7,
                F = 256,
                L = 16,
                H = 17,
                j = 18,
                K = [0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 2, 2, 2, 2, 3, 3, 3, 3, 4, 4, 4, 4, 5, 5, 5, 5, 0],
                M = [0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 4, 4, 5, 5, 6, 6, 7, 7, 8, 8, 9, 9, 10, 10, 11, 11, 12, 12, 13, 13],
                P = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 3, 7],
                Y = [16, 17, 18, 0, 8, 7, 9, 6, 10, 5, 11, 4, 12, 3, 13, 2, 14, 1, 15],
                q = new Array(2 * (C + 2));
            i(q);
            var G = new Array(2 * N);
            i(G);
            var X = new Array(512);
            i(X);
            var W = new Array(256);
            i(W);
            var J = new Array(Z);
            i(J);
            var Q = new Array(N);
            i(Q);
            var V, $, tt, et = !1;
            a._tr_init = function(t) {
                et || (function() {
                    var t, e, a, i, r, s = new Array(I + 1);
                    for (a = 0, i = 0; i < Z - 1; i++)
                        for (J[i] = a, t = 0; t < 1 << K[i]; t++) W[a++] = i;
                    for (W[a - 1] = i, r = 0, i = 0; i < 16; i++)
                        for (Q[i] = r, t = 0; t < 1 << M[i]; t++) X[r++] = i;
                    for (r >>= 7; i < N; i++)
                        for (Q[i] = r << 7, t = 0; t < 1 << M[i] - 7; t++) X[256 + r++] = i;
                    for (e = 0; e <= I; e++) s[e] = 0;
                    for (t = 0; t <= 143;) q[2 * t + 1] = 8, t++, s[8]++;
                    for (; t <= 255;) q[2 * t + 1] = 9, t++, s[9]++;
                    for (; t <= 279;) q[2 * t + 1] = 7, t++, s[7]++;
                    for (; t <= 287;) q[2 * t + 1] = 8, t++, s[8]++;
                    for (f(q, C + 1, s), t = 0; t < N; t++) G[2 * t + 1] = 5, G[2 * t] = d(t, 5);
                    V = new n(q, K, R + 1, C, I), $ = new n(G, M, 0, N, I), tt = new n(new Array(0), P, 0, O, T)
                }(), et = !0), t.l_desc = new r(t.dyn_ltree, V), t.d_desc = new r(t.dyn_dtree, $), t.bl_desc = new r(t.bl_tree, tt), t.bi_buf = 0, t.bi_valid = 0, _(t)
            }, a._tr_stored_block = v, a._tr_flush_block = function(t, e, a, i) {
                var n, r, s = 0;
                t.level > 0 ? (t.strm.data_type === B && (t.strm.data_type = function(t) {
                    var e, a = 4093624447;
                    for (e = 0; e <= 31; e++, a >>>= 1)
                        if (1 & a && 0 !== t.dyn_ltree[2 * e]) return x;
                    if (0 !== t.dyn_ltree[18] || 0 !== t.dyn_ltree[20] || 0 !== t.dyn_ltree[26]) return z;
                    for (e = 32; e < R; e++)
                        if (0 !== t.dyn_ltree[2 * e]) return z;
                    return x
                }(t)), m(t, t.l_desc), m(t, t.d_desc), s = function(t) {
                    var e;
                    for (w(t, t.dyn_ltree, t.l_desc.max_code), w(t, t.dyn_dtree, t.d_desc.max_code), m(t, t.bl_desc), e = O - 1; e >= 3 && 0 === t.bl_tree[2 * Y[e] + 1]; e--);
                    return t.opt_len += 3 * (e + 1) + 5 + 5 + 4, e
                }(t), n = t.opt_len + 3 + 7 >>> 3, (r = t.static_len + 3 + 7 >>> 3) <= n && (n = r)) : n = r = a + 5, a + 4 <= n && -1 !== e ? v(t, e, a, i) : t.strategy === y || r === n ? (l(t, (E << 1) + (i ? 1 : 0), 3), g(t, q, G)) : (l(t, (A << 1) + (i ? 1 : 0), 3), function(t, e, a, i) {
                    var n;
                    for (l(t, e - 257, 5), l(t, a - 1, 5), l(t, i - 4, 4), n = 0; n < i; n++) l(t, t.bl_tree[2 * Y[n] + 1], 3);
                    p(t, t.dyn_ltree, e - 1), p(t, t.dyn_dtree, a - 1)
                }(t, t.l_desc.max_code + 1, t.d_desc.max_code + 1, s + 1), g(t, t.dyn_ltree, t.dyn_dtree)), _(t), i && u(t)
            }, a._tr_tally = function(t, e, a) {
                return t.pending_buf[t.d_buf + 2 * t.last_lit] = e >>> 8 & 255, t.pending_buf[t.d_buf + 2 * t.last_lit + 1] = 255 & e, t.pending_buf[t.l_buf + t.last_lit] = 255 & a, t.last_lit++, 0 === e ? t.dyn_ltree[2 * a]++ : (t.matches++, e--, t.dyn_ltree[2 * (W[a] + R + 1)]++, t.dyn_dtree[2 * s(e)]++), t.last_lit === t.lit_bufsize - 1
            }, a._tr_align = function(t) {
                l(t, E << 1, 3), h(t, F, q),
                    function(t) {
                        16 === t.bi_valid ? (o(t, t.bi_buf), t.bi_buf = 0, t.bi_valid = 0) : t.bi_valid >= 8 && (t.pending_buf[t.pending++] = 255 & t.bi_buf, t.bi_buf >>= 8, t.bi_valid -= 8)
                    }(t)
            }
        }, {
            "../utils/common": 3
        }],
        15: [function(t, e, a) {
            "use strict";
            e.exports = function() {
                this.input = null, this.next_in = 0, this.avail_in = 0, this.total_in = 0, this.output = null, this.next_out = 0, this.avail_out = 0, this.total_out = 0, this.msg = "", this.state = null, this.data_type = 2, this.adler = 0
            }
        }, {}],
        "/": [function(t, e, a) {
            "use strict";
            var i = {};
            (0, t("./lib/utils/common").assign)(i, t("./lib/deflate"), t("./lib/inflate"), t("./lib/zlib/constants")), e.exports = i
        }, {
            "./lib/deflate": 1,
            "./lib/inflate": 2,
            "./lib/utils/common": 3,
            "./lib/zlib/constants": 6
        }]
    }, {}, [])("/")
});


! function(console, $hx_exports, $global) {
    "use strict";
    $hx_exports.openfl = $hx_exports.openfl || {}, $hx_exports.lime = $hx_exports.lime || {}, $hx_exports.game = $hx_exports.game || {};
    var $hxClasses = {},
        $estr = function() {
            return js_Boot.__string_rec(this, "")
        };

    function $extend(e, t) {
        function n() {}
        n.prototype = e;
        var l = new n;
        for (var i in t) l[i] = t[i];
        return t.toString !== Object.prototype.toString && (l.toString = t.toString), l
    }
    var AIHelper = function() {};
    $hxClasses.AIHelper = AIHelper, AIHelper.__name__ = ["AIHelper"], AIHelper.getBestMove = function(e) {
        var t = e.dominoMode,
            n = (e.hand, t.getAllPlays(e.hand));
        if (0 == n.length) return n[0];
        for (var l = 0; l < n.length;) {
            for (var i = n[l], s = !1, a = l + 1, r = n.length; a < r;) {
                var o = a++;
                if (n[o].domino == i.domino && n[o].val == i.val) {
                    HxOverrides.remove(n, n[o]), s = !0;
                    break
                }
            }
            s || l++
        }
        AIHelper.calculateStat(e);
        for (var d = [], _ = 0; _ < n.length;) {
            var h = n[_];
            ++_, d.push({
                play: h,
                score: AIHelper.getPlayScore(e, h)
            })
        }
        if (d.sort(AIHelper.rankedPlaysSortFun), 0 == DominoModeBase.get_aiLevel()) return Math.random() > .7 ? d[d.length - 1].play : d[Std.random(d.length)].play;
        if (1 == DominoModeBase.get_aiLevel()) {
            Math.random();
            var p = Math.random(),
                c = Math.round(d.length / 1.5 * p);
            return c >= d.length && (c = d.length - 1), d[c].play
        }
        return d[0].play
    }, AIHelper.rankedPlaysSortFun = function(e, t) {
        return e.score == t.score ? Math.random() > .5 ? 1 : -1 : e.score - t.score < 0 ? 1 : -1
    }, AIHelper.calculateStat = function(e) {
        for (var t = e.dominoMode, n = e.hand, l = 0; l < 7;) {
            for (var i = l++, s = 7, a = 0; a < n.length;) {
                var r = n[a];
                ++a, r.get_val1() != i && r.get_val2() != i || s--
            }
            for (var o = 0, d = t.allPiles; o < d.length;) {
                var _ = d[o];
                if (++o, null != _)
                    for (var h = 0, p = _.get_length(); h < p;) {
                        var c = h++,
                            Q = _.dominoAt(c);
                        Q.get_val1() != i && Q.get_val2() != i || s--
                    }
            }
            AIHelper.curValuesLeft[i] = s
        }
        for (var U = 0, m = 0, u = 0, F = 0, N = t.boneyard.length; F < N;) {
            var S = F++;
            U += t.boneyard[S].get_score(), m++
        }
        AIHelper.opponentHandLength = 0;
        for (var W = 0, B = t.players.length; W < B;) {
            var Z = W++;
            if (t.players[Z] == e)
                for (var D = 0, V = t.players[Z].hand; D < V.length;) {
                    var f = V[D];
                    ++D, u += f.get_score()
                } else {
                    AIHelper.opponentHandLength += t.players[Z].hand.length;
                    for (var R = 0, T = t.players[Z].hand; R < T.length;) {
                        var J = T[R];
                        ++R, U += J.get_score(), m++
                    }
                }
        }
        for (var g = U / m, b = 0, E = t.players.length; b < E;) {
            var v = b++;
            t.players[v] == e ? AIHelper.curPlayersScore[v] = u : AIHelper.curPlayersScore[v] = t.players[v].hand.length * g
        }
    }, AIHelper.getPlayScore = function(e, t) {
        var n;
        n = t.domino.get_score() * AIHelper.scoreFor1DomSumVals + (t.domino.get_isDouble() ? AIHelper.scoreForDouble : 0);
        var l, i, s, a = e.dominoMode,
            r = e.hand,
            o = t.domino.anotherSideVal(t.val),
            d = 0,
            _ = 0,
            h = 0,
            p = 0,
            c = 0 == a.boneyard.length,
            Q = r.length > AIHelper.opponentHandLength; - 1 != (i = a.isAllFivesMode ? a.calculateAllFivesEndsScores(t) : -1) && 0 != i && (i = i % 5 == 0 ? i : -1);
        for (var U = i, m = [], u = 0, F = a.allPiles; u < F.length;) {
            var N = F[u];
            ++u, null != N && (N == t.stack ? m.push(o) : m.push(N.get_curVal()))
        }
        for (var S = AIHelper.curValuesLeft.slice(), W = 0, B = a.dontHaveValues.length; W < B;) {
            var Z = W++;
            if (Z != HxOverrides.indexOf(a.players, e, 0))
                for (var D = 0, V = a.dontHaveValues[Z]; D < V.length;) {
                    var f = V[D];
                    ++D, S[f] = 0
                }
        }
        for (var R = 0; R < m.length;) {
            var T = m[R];
            ++R, d += S[T];
            for (var J = !1, g = 0; g < r.length;) {
                var b = r[g];
                ++g, b == t.domino || b.get_val1() != T && b.get_val2() != T || (_++, J = !0)
            }
            J && h++
        }
        for (var E = 0, v = a.deck; E < v.length;) {
            var k = v[E];
            ++E, -1 == HxOverrides.indexOf(a.pileList, k, 0) && k != t.domino && (k.get_val1() != t.domino.get_val1() && k.get_val1() != t.domino.get_val2() && k.get_val2() != t.domino.get_val1() && k.get_val2() != t.domino.get_val2() || p++)
        }
        for (var M = 0; M < m.length;) {
            var y = m[M];
            ++M, y != t.domino.get_val1() && y != t.domino.get_val2() || p++
        }
        if (l = 1 == p, d + _ == 0) {
            for (var x = 0, w = 0, G = 0, H = a.players.length; G < H;) {
                var C = G++;
                a.players[C] == e ? w = AIHelper.curPlayersScore[C] : AIHelper.curPlayersScore[C] > x && (x = AIHelper.curPlayersScore[C])
            }
            w -= t.domino.get_score(), Math.abs(x - w) < 5 ? Math.random() > .5 ? n += -AIHelper.blockScore : n += AIHelper.blockScore : n += x > w ? -AIHelper.blockScore : AIHelper.blockScore
        }
        if (Q) {
            var Y, O = _ * AIHelper.scoreForWillHaveMove;
            Y = null == AIHelper.scoreForWillHaveOpponentMove[d] ? 0 : AIHelper.scoreForWillHaveOpponentMove[d], Y *= 1.4, c && AIHelper.opponentHandLength < e.hand.length && 0 == d && (Y *= 2), AIHelper.opponentHandLength < 3 && r.length, 1 == AIHelper.opponentHandLength && r.length, n += 3 * h, n += -1 * p, l ? AIHelper.opponentHandLength > e.hand.length ? n += 30 : n += 10 : n += 0, n += O, n += Y
        } else {
            var X, z = _ * AIHelper.scoreForWillHaveMove;
            X = null == AIHelper.scoreForWillHaveOpponentMove[d] ? 0 : AIHelper.scoreForWillHaveOpponentMove[d], X *= .9, n += 5 * h, n += -2 * p, n += l ? 50 : 0, n += z, n += X
        }(0 == d && (n += 8), -1 != U) && (s = U * (U <= 10 ? 3 : 4), 1 == AIHelper.opponentHandLength && r.length > 2 ? s = 0 : 2 * AIHelper.opponentHandLength < r.length && (s /= 3), n += s);
        return n
    };
    var Actuate = function() {};
    $hxClasses.Actuate = Actuate, Actuate.__name__ = ["Actuate"], Actuate.checkInstances = function() {
        for (var e = Actuate.instances.keys(); e.hasNext();)
            for (var t = e.next(), n = Actuate.instances.get(t), l = 0; l < n.length;) Actuate.isActiveActuate(n[l]) ? l++ : HxOverrides.remove(n, n[l])
    }, Actuate.isActiveActuate = function(e) {
        for (var t = motion_Actuate.targetLibraries.iterator(); t.hasNext();) {
            var n = t.next();
            if (-1 != HxOverrides.indexOf(n, e, 0)) return !0
        }
        return !1
    }, Actuate.bindActuator = function(e, t) {
        Actuate.instances.exists(t) || Actuate.instances.set(t, []), Actuate.instances.get(t).push(e), Actuate.checkInstances()
    }, Actuate.tween = function(e, t, n, l, i) {
        null == i && (i = ""), null == l && (l = !0);
        var s = motion_Actuate.tween(e, t, n, l);
        return Actuate.bindActuator(s, i), s
    }, Actuate.reset = function() {
        motion_Actuate.reset()
    }, Actuate.stop = function(e, t, n, l) {
        null == l && (l = !0), null == n && (n = !1), motion_Actuate.stop(e, t, n, l)
    }, Actuate.timer = function(e, t) {
        null == t && (t = "");
        var n = motion_Actuate.timer(e);
        return Actuate.bindActuator(n, t), n
    }, Actuate.update = function(e, t, n, l, i, s) {
        null == s && (s = ""), null == i && (i = !0);
        var a = motion_Actuate.update(e, t, n, l, i);
        return Actuate.bindActuator(a, s), a
    }, Actuate.stopByID = function(e, t, n, l) {
        null == l && (l = !0), null == n && (n = !1);
        var i = Actuate.instances.get(e);
        if (null != i && 0 != i.length)
            for (; i.length > 0;) motion_Actuate.stop(i.pop(), t, n, l)
    };
    var DominoModeBase = function(e) {
        null == e && (e = !1), this.dontHaveValues = [], this.isAllFivesMode = !1, this.allFivesScoresHints = [], this.allFivesScoreInformMC = null, this.winner = null, this.changeTurnNextFrame = !0, this.boneyardIsActive = !1, this.passMC = null, this.gameFinished = !1, this.boneyardHidePosY = 0, this.boneyardShowPosY = 0, this.boneyardAnimTopCont = new openfl_display_Sprite, this.boneyardDominoCont = new openfl_display_Sprite, this.boneyardCont = new openfl_display_Sprite, this.topPileDominoesCont = new openfl_display_Sprite, this.prevTrans = [], this.p2HRect = new openfl_geom_Rectangle, this.p1HRect = new openfl_geom_Rectangle, this.p2HandRect = new openfl_geom_Rectangle, this.p1HandRect = new openfl_geom_Rectangle, this.boardZone = new openfl_geom_Rectangle, this.allPiles = null, this.bottomStack = null, this.topStack = null, this.rightStack = null, this.leftStack = null, this.curTurn = -1, this.numPlayers = 0, this.modeIDX = 0, this.modeName = "", this.allowBoneyard = !0, this.wasDrawOrPassThisMove = !1, DominoModeBase.current = this, this.desk = Desk.current, this.main = Main.current, this.game = Game.current, this.uiManager = new UIManager(this), this.deck = this.game.deck, this.pileList = [], this.boneyard = [], this.players = [], this.dominoCont = this.game.dominoCont, this.pileDominoesCont = this.game.pileDominoesCont, this.boneyardEls = this.desk.getElementsByFolderName("Boneyard"), this.boneyardFill = this.desk.getElementByName("boneyardFill"), this.boneyardArea = this.desk.getElementByName("boneyardArea"), this.boneyardArea.set_visible(!1), this.desk.levels.addChildAt(this.topPileDominoesCont, this.desk.levels.getChildIndex(this.dominoCont) + 1), this.desk.levels.addChildAt(this.boneyardFill, this.desk.levels.getChildIndex(this.dominoCont) + 1), this.desk.levels.addChildAt(this.boneyardCont, this.desk.levels.getChildIndex(this.boneyardFill) + 1), this.desk.levels.addChildAt(this.boneyardAnimTopCont, this.desk.levels.getChildIndex(this.boneyardCont) + 1), this.passMC = this.desk.getElementByName("passMC"), this.passMC.set_visible(!1), this.boneyardFill.set_visible(!1), this.allFivesScoreInformMC = this.desk.getElementByName("allFivesInform"), this.allFivesScoreInformMC.set_visible(!1);
        for (var t = this.desk.getElementsByLayerName("AllFivesScoreHint"), n = 0; n < t.length;) {
            var l = t[n];
            ++n;
            var i = new LevelsTextField([l], new openfl_geom_Point(l.get_x(), l.get_y()));
            this.allFivesScoresHints.push(i), i.set_visible(!1)
        }
        for (var s = 0, a = this.boneyardEls.length; s < a;) {
            var r = s++;
            this.boneyardFill != this.boneyardEls[r] && this.boneyardCont.addChild(this.boneyardEls[r])
        }
        this.boneyardCont.addChild(this.boneyardDominoCont)
    };
    $hxClasses.DominoModeBase = DominoModeBase, DominoModeBase.__name__ = ["DominoModeBase"], DominoModeBase.__properties__ = {
        set_aiLevel: "set_aiLevel",
        get_aiLevel: "get_aiLevel"
    }, DominoModeBase.get_aiLevel = function() {
        return null == DominoModeBase._aiLevel && (null != LocalSaves.getVar("dom_aiLevel") ? DominoModeBase._aiLevel = LocalSaves.getVar("dom_aiLevel") : (DominoModeBase._aiLevel = 1, LocalSaves.setVar("dom_aiLevel", DominoModeBase._aiLevel))), DominoModeBase._aiLevel
    }, DominoModeBase.set_aiLevel = function(e) {
        return e == DominoModeBase._aiLevel ? e : (DominoModeBase._aiLevel = e, LocalSaves.setVar("dom_aiLevel", DominoModeBase._aiLevel), DominoModeBase._aiLevel)
    }, DominoModeBase.hasSaveForMode = function(e) {
        return null != DominoModeBase.getSaveForMode(e)
    }, DominoModeBase.getSaveForMode = function(e) {
        return LocalSaves.getVar("DominoesSave" + e)
    }, DominoModeBase.setSaveForMode = function(e, t) {
        LocalSaves.setVar("DominoesSave" + e, t)
    }, DominoModeBase.prototype = {
        wasDrawOrPassThisMove: null,
        desk: null,
        main: null,
        game: null,
        deck: null,
        boneyard: null,
        allowBoneyard: null,
        pileList: null,
        modeName: null,
        modeIDX: null,
        dominoCont: null,
        pileDominoesCont: null,
        get_currentPlayer: function() {
            return this.players[this.curTurn]
        },
        players: null,
        numPlayers: null,
        curTurn: null,
        leftStack: null,
        rightStack: null,
        topStack: null,
        bottomStack: null,
        allPiles: null,
        boardZone: null,
        p1HandRect: null,
        p2HandRect: null,
        p1HRect: null,
        p2HRect: null,
        prevTrans: null,
        topPileDominoesCont: null,
        boneyardCont: null,
        boneyardDominoCont: null,
        boneyardAnimTopCont: null,
        boneyardEls: null,
        boneyardFill: null,
        boneyardArea: null,
        boneyardShowPosY: null,
        boneyardHidePosY: null,
        gameFinished: null,
        passMC: null,
        boneyardIsActive: null,
        changeTurnNextFrame: null,
        winner: null,
        uiManager: null,
        allFivesScoreInformMC: null,
        allFivesScoresHints: null,
        isAllFivesMode: null,
        dontHaveValues: null,
        updateDontHaveDominoes: function(e, t) {
            if (null == t && (t = -1), null != this.players && 0 != this.players.length) {
                if (0 == this.dontHaveValues.length || this.dontHaveValues.length != this.players.length)
                    for (; this.dontHaveValues.length < this.players.length;) this.dontHaveValues.push([]);
                if (e) {
                    this.wasDrawOrPassThisMove = !0;
                    for (var n = 0, l = this.allPiles; n < l.length;) {
                        var i = l[n];
                        ++n, null != i && i.get_length() > 0 && -1 == (s = this, void 0, a = i.get_curVal(), HxOverrides.indexOf(s.dontHaveValues[s.curTurn], a, 0)) && this.dontHaveValues[this.curTurn].push(i.get_curVal())
                    }
                }
                var s, a;
                if (-1 != t)
                    for (var r = 0, o = this.dontHaveValues[this.curTurn].length; r < o;) {
                        var d = r++;
                        if (this.dontHaveValues[this.curTurn][d] == t) {
                            HxOverrides.remove(this.dontHaveValues[this.curTurn], this.dontHaveValues[this.curTurn][d]);
                            break
                        }
                    }
            }
        },
        showBoneyard: function() {
            this.updateDontHaveDominoes(!0), this.boneyardIsActive = !0, this.boneyardCont.set_visible(!0), this.boneyardFill.set_visible(!0), this.boneyardFill.set_alpha(1e-4), Actuate.tween(this.boneyardCont, GameConfig.boneyardShowTime * GameConfig.gameSpeedCoef, {
                y: this.boneyardShowPosY
            }, !0, GameConfig.actuateWithCompID).ease(GameConfig.dominoMoveEase), Actuate.tween(this.boneyardFill, GameConfig.boneyardShowTime * GameConfig.gameSpeedCoef, {
                alpha: 1
            }, !0, GameConfig.actuateWithCompID).ease(GameConfig.dominoMoveEase)
        },
        hideBoneyard: function(e) {
            var t = this,
                n = this.boneyardCont.get_y();
            this.updateBoneyardPos();
            this.boneyardCont.get_y();
            this.boneyardCont.set_y(n), this.boneyardIsActive = !1, Actuate.tween(this.boneyardFill, GameConfig.boneyardShowTime * GameConfig.gameSpeedCoef, {
                alpha: .001
            }, !0, GameConfig.actuateWithCompID).ease(GameConfig.dominoMoveEase), Actuate.tween(this.boneyardCont, GameConfig.boneyardShowTime * GameConfig.gameSpeedCoef, {
                y: this.boneyardHidePosY
            }, !0, GameConfig.actuateWithCompID).ease(GameConfig.dominoMoveEase).onComplete(function() {
                t.boneyardCont.set_visible(!1), t.boneyardFill.set_visible(!1), null != e && e()
            })
        },
        showPass: function(e) {
            var t = this;
            this.updateDontHaveDominoes(!0), this.passMC.set_visible(!0);
            var n;
            this.passMC.gotoAndStop(this.get_isPortraitMode() ? 0 == this.curTurn ? 0 : 2 : 0 == this.curTurn ? 1 : 3), n = 0 == this.curTurn ? this.p1HRect : this.p2HRect, this.passMC.set_x(this.get_isPortraitMode() ? n.x + n.width / 2 : 0 == this.curTurn ? n.get_right() + 8 : n.x - 8), this.passMC.set_y(this.get_isPortraitMode() ? 0 == this.curTurn ? n.y - 8 : n.get_bottom() + 8 : n.y + n.height / 2), this.passMC.set_scaleX(this.passMC.set_scaleY(.001)), Actuate.tween(this.passMC, GameConfig.passMCAnimTime * GameConfig.gameSpeedCoef, {
                scaleX: 1,
                scaleY: 1
            }, !1, GameConfig.actuateNoCompID).ease(motion_easing_Back.get_easeOut()), Actuate.tween(this.passMC, GameConfig.passMCAnimTime * GameConfig.gameSpeedCoef, {
                scaleX: .001,
                scaleY: .001
            }, !1, GameConfig.actuateWithCompID).ease(motion_easing_Back.get_easeIn()).delay(GameConfig.passMCAnimTime * GameConfig.gameSpeedCoef + GameConfig.passMCWaitTime * GameConfig.gameSpeedCoef).onComplete(function() {
                t.passMC.set_visible(!1), t.changeTurnNextFrame = !0, null != e && e()
            })
        },
        updateBoneyardDominoes: function(e) {
            null == e && (e = !0);
            for (var t = (this.boneyardArea.get_width() - 7 * Domino.dominoSizeX) / 6, n = this.boneyardArea.get_height() - 2 * Domino.dominoSizeY, l = 0, i = 0, s = 0, a = 0, r = this.boneyard.length; a < r;) {
                var o = a++,
                    d = this.boneyard[o];
                d.parent != this.boneyardDominoCont && this.boneyardDominoCont.addChild(d);
                var _ = l + d.get_width() / 2,
                    h = i + d.get_height() / 2;
                e ? Actuate.tween(d, GameConfig.boneyardAnimTime * GameConfig.gameSpeedCoef, {
                    x: _,
                    y: h
                }, !0, GameConfig.actuateWithCompID).ease(GameConfig.dominoMoveEase) : (d.set_x(_), d.set_y(h)), ++s % 7 == 0 ? (l = 0, i += Domino.dominoSizeY + n) : l += Domino.dominoSizeX + t
            }
        },
        updateBoneyardPos: function() {
            var e = this.boneyardCont.getBounds(this.boneyardCont.parent);
            this.boneyardDominoCont.set_x(this.boneyardArea.get_x()), this.boneyardDominoCont.set_y(this.boneyardArea.get_y()), this.boneyardHidePosY = -Desk.get_topLevels() - e.height - (e.y - this.boneyardCont.get_y()) - 30, this.boneyardIsActive ? this.boneyardCont.set_y(0) : this.boneyardCont.set_y(this.boneyardHidePosY), this.boneyardFill.set_x(-Desk.get_leftLevels()), this.boneyardFill.set_y(-Desk.get_topLevels()), this.boneyardFill.set_width(Desk.get_sWidthLevels()), this.boneyardFill.set_height(Desk.get_sHeightLevels())
        },
        checkWinner: function() {
            for (var e = 0, t = this.players.length; e < t;) {
                var n = e++;
                if (null != DominoModeBase.playersScores && DominoModeBase.playersScores[n] >= DominoModeBase.playToScore) return this.winner = n, DominoModeBase.lastWinner = this.winner, this.gameFinished = !0, GameConfig.timer(GameConfig.fsShowDelay * GameConfig.gameSpeedCoef, $bind($_ = this.uiManager, $_.showFinalFS), [this.winner, DominoModeBase.roundScores[0]]), null
            }
            if (0 == this.pileList.length) return null;
            for (var l = !1, i = 0, s = this.players.length; i < s;) {
                var a = i++;
                if (0 == this.players[a].hand.length) return this.winner = a, DominoModeBase.lastWinner = this.winner, this.winner;
                if (!l) l = this.getAllPlays(this.players[a].hand).length > 0
            }
            return l || 0 != this.boneyard.length && this.allowBoneyard ? null : (this.winner = -1, DominoModeBase.lastWinner = this.winner, this.winner)
        },
        onRoundFinished: function() {
            this.gameFinished = !0;
            for (var e = [], t = 0, n = this.players.length; t < n;) {
                var l = t++;
                e[l] = this.players[l].scoreHand()
            }
            var i = e.slice();
            i.sort(Reflect.compare);
            for (var s = i[0], a = 0, r = 0; r < e.length;) {
                var o = e[r];
                ++r, a += o
            }
            for (var d = [], _ = 0, h = e.length; _ < h;) {
                var p = _++;
                e[p] == s && d.push(p)
            }
            null == DominoModeBase.roundScores && (DominoModeBase.roundScores = []);
            for (var c = 0, Q = this.players.length; c < Q;) {
                var U = c++;
                DominoModeBase.roundScores[U] = 0
            }
            for (var m = 0, u = d.length; m < u;) {
                var F = m++;
                DominoModeBase.roundScores[d[F]] += a - 2 * e[d[F]]
            }
            for (var N = 0, S = this.players.length; N < S;) {
                var W = N++;
                DominoModeBase.playersScores[W] += DominoModeBase.roundScores[W]
            }
            for (var B = !1, Z = -1, D = 0, V = this.players.length; D < V;) {
                var f = D++;
                if (DominoModeBase.playersScores[f] >= DominoModeBase.playToScore) {
                    B = !0, Z = f;
                    break
                }
            }
            this.uiManager.updatePlayersScoresIngame();
            for (var R = 0, T = this.players; R < T.length;) {
                var J = T[R];
                ++R, js_Boot.__instanceof(J, HumanPlayer) && js_Boot.__cast(J, HumanPlayer).clearHighlers();
                for (var g = 0, b = J.hand; g < b.length;) {
                    var E = b[g];
                    ++g, E.opened || E.open(!0)
                }
            }
            this.updatePoses(!0);
            for (var v = 0, k = this.pileList; v < k.length;) {
                var M = k[v];
                ++v, Actuate.tween(M.getChildAt(0), .7 * GameConfig.gameSpeedCoef, {
                    alpha: .3
                }, !0, GameConfig.actuateWithCompID)
            }
            var y = -1;
            DominoModeBase.roundScores[0] > DominoModeBase.roundScores[1] && (y = 0), B ? GameConfig.timer(GameConfig.fsShowDelay * GameConfig.gameSpeedCoef, $bind($_ = this.uiManager, $_.showFinalFS), [Z, DominoModeBase.roundScores[0]]) : GameConfig.timer(GameConfig.fsShowDelay * GameConfig.gameSpeedCoef, $bind($_ = this.uiManager, $_.showIntermediateFS), [y, DominoModeBase.roundScores[0]])
        },
        changeTurn: function() {
            if (null == this.checkWinner()) {
                if (!this.gameFinished) {
                    var e = "computer" == DominoModeBase.playersTypes[this.curTurn]; - 1 == this.curTurn ? (this.curTurn = this.selectTurnPlayer(), this.onGameStart(), 0 == this.curTurn && (e = !0)) : (this.curTurn++, this.curTurn >= this.numPlayers && (this.curTurn = 0)), this.wasDrawOrPassThisMove = !1, this.uiManager.setPlayers(), this.uiManager.onTurnChange(), e && this.saveGame(), 0 == this.pileList.length && "computer" == DominoModeBase.playersTypes[this.curTurn] ? GameConfig.timer(GameConfig.gameSpeedCoef, $bind(this, this.playTurn), null) : this.playTurn()
                }
            } else this.onRoundFinished()
        },
        selectTurnPlayer: function() {
            return 0
        },
        playTurn: function() {
            this.players[this.curTurn].play();
            var e = this.boneyard.length > 0;
            if (!e)
                for (var t = 0, n = this.players; t < n.length;) {
                    var l = n[t];
                    ++t, l.isHandPlayable() && (e = !0)
                }
            e || this.updatePoses()
        },
        getAllPlayableVals: function() {
            for (var e = [], t = 0, n = this.allPiles; t < n.length;) {
                var l = n[t];
                ++t, e.push(l.get_curVal())
            }
            return e
        },
        onGameStart: function() {
            DominoModeBase.playersScores;
            for (var e = 0, t = this.players.length; e < t;) {
                var n = e++;
                null == DominoModeBase.playersScores && (DominoModeBase.playersScores = []), DominoModeBase.playersScores.length - 1 < n && (DominoModeBase.playersScores[n] = 0)
            }
            this.uiManager.init(), this.allPiles = [], null != this.topStack && this.allPiles.push(this.topStack), null != this.rightStack && this.allPiles.push(this.rightStack), null != this.bottomStack && this.allPiles.push(this.bottomStack), null != this.leftStack && this.allPiles.push(this.leftStack)
        },
        canDraw: function() {
            return this.boneyard.length > 0 && this.allowBoneyard
        },
        isHandPlayable: function(e) {
            if (-1 == this.leftStack.get_curVal() && -1 == this.rightStack.get_curVal()) return !0;
            for (var t = this.getAllPlayableVals(), n = 0; n < e.length;) {
                var l = e[n];
                ++n;
                for (var i = 0; i < t.length;) {
                    var s = t[i];
                    if (++i, l.get_val1() == s || l.get_val2() == s) return !0
                }
            }
            return !1
        },
        canPlay: function(e) {
            for (var t = this.getAllPlays(this.get_currentPlayer().hand), n = 0; n < t.length;) {
                var l = t[n];
                if (++n, l.domino == e) return !0
            }
            return !1
        },
        getAllPlays: function(e) {
            var t = [];
            if (0 == this.pileList.length) {
                if (0 == DominoModeBase.curRound || -1 == DominoModeBase.lastWinner) {
                    for (var n = -1, l = null, i = 0; i < e.length;) {
                        var s = e[i];
                        ++i, s.get_isDouble() && n < s.get_val1() && (n = s.get_val1(), l = s)
                    }
                    return null != l && t.push({
                        domino: l,
                        stack: this.leftStack,
                        val: l.get_val1()
                    }), t
                }
                for (var a = 0; a < e.length;) {
                    var r = e[a];
                    ++a, t.push({
                        domino: r,
                        stack: this.leftStack,
                        val: r.get_val1()
                    })
                }
            }
            var o = null != this.topStack && this.topStack.get_length() > 0;
            o && (this.leftStack.lastDomino() != this.topStack.dominoAt(0) && this.rightStack.lastDomino() != this.topStack.dominoAt(0) || (o = !1));
            for (var d = 0, _ = this.allPiles; d < _.length;) {
                var h = _[d];
                ++d;
                var p = h.get_curVal();
                if (h != this.topStack && h != this.bottomStack || o)
                    for (var c = 0; c < e.length;) {
                        var Q = e[c];
                        ++c, -1 != p || h != this.leftStack && h != this.rightStack || t.push({
                            domino: Q,
                            stack: h,
                            val: h == this.leftStack ? Q.get_val1() : Q.get_val2()
                        }), p == Q.get_val1() && t.push({
                            domino: Q,
                            stack: h,
                            val: p
                        }), p == Q.get_val2() && t.push({
                            domino: Q,
                            stack: h,
                            val: p
                        })
                    }
            }
            return t
        },
        playPlay: function(e, t) {
            if (-1 == HxOverrides.indexOf(e.hand, t.domino, 0)) return !1;
            t.stack != this.leftStack && t.stack != this.rightStack || -1 != this.leftStack.get_curVal() || -1 != this.rightStack.get_curVal() || (t.stack == this.leftStack ? this.rightStack : this.leftStack).add(t.domino, t.val == t.domino.get_val1() ? t.domino.get_val2() : t.domino.get_val1());
            t.stack != this.topStack && t.stack != this.bottomStack || -1 != this.topStack.get_curVal() || -1 != this.bottomStack.get_curVal() || (t.stack == this.topStack ? this.bottomStack : this.topStack).add(t.domino, t.val == t.domino.get_val1() ? t.domino.get_val2() : t.domino.get_val1());
            return null != this.topStack && null != this.bottomStack && 0 == this.topStack.get_length() && 0 == this.bottomStack.get_length() && t.domino.get_isDouble() && (this.topStack.add(t.domino, t.val), this.bottomStack.add(t.domino, t.val)), t.stack.add(t.domino, t.val), this.pileList.push(t.domino), HxOverrides.remove(e.hand, t.domino), t.domino.changeParent(this.pileDominoesCont), t.domino.sendOnTop(!1), this.updatePoses(), t.domino.changeParent(this.topPileDominoesCont), GameConfig.timerWithComp(GameConfig.afterPlayDelay * GameConfig.gameSpeedCoef, $bind(this, this.onPileDominoAnimEnd), [t.domino], null), this.updateDontHaveDominoes(!1, t.val), !0
        },
        onPileDominoAnimEnd: function(e) {
            var t = this.topPileDominoesCont.get_transform().get_matrix();
            t.copyFrom(this.pileDominoesCont.get_transform().get_matrix()), this.topPileDominoesCont.get_transform().set_matrix(t), e.changeParent(this.pileDominoesCont), this.isAllFivesMode ? this.checkAllFiveBonus() : this.changeTurnNextFrame = !0, this.main.playSpriteSound("Put_" + (Std.random(5) + 1))
        },
        checkAllFiveBonus: function() {
            var e = this,
                t = this.calculateAllFivesEndsScores();
            if (t % 5 == 0 && 0 != t) {
                this.allFivesScoreInformMC.set_scaleX(this.allFivesScoreInformMC.set_scaleY(.1)), this.allFivesScoreInformMC.set_alpha(.1), this.allFivesScoreInformMC.set_x(-Desk.get_leftLevels() + Desk.get_sWidthLevels() / 2), this.allFivesScoreInformMC.set_y(-Desk.get_topLevels() + Desk.get_sHeightLevels() / 2), this.allFivesScoreInformMC.gotoAndStop(Math.floor(t / 5) - 1);
                var n = .4 * GameConfig.gameSpeedCoef,
                    l = .5 * GameConfig.gameSpeedCoef,
                    i = .5 * GameConfig.gameSpeedCoef,
                    s = .5 * GameConfig.gameSpeedCoef;
                GameConfig.timerWithComp(n + l, function() {
                    var t = e.uiManager.getScoreTFPos(e.curTurn);
                    Actuate.tween(e.allFivesScoreInformMC, i, {
                        x: t.x,
                        y: t.y,
                        alpha: .1
                    }, !0, GameConfig.actuateWithCompID).ease(motion_easing_Quad.get_easeInOut())
                }, null, null), GameConfig.timerWithComp(n + l + i, function() {
                    e.allFivesScoreInformMC.set_visible(!1), DominoModeBase.playersScores[e.curTurn] += t, e.uiManager.updatePlayersScoresIngame();
                    var n = e.uiManager.getPlayerActiveScoreTF(e.curTurn);
                    Actuate.tween(n, s / 2, {
                        alpha: .3
                    }, !0, GameConfig.actuateWithCompID).repeat(1).reflect().ease(motion_easing_Quad.get_easeInOut())
                }, null, null), GameConfig.timerWithComp(n + l + i + s, function() {
                    e.changeTurnNextFrame = !0
                }, null, null), Actuate.tween(this.allFivesScoreInformMC, n, {
                    scaleX: 1,
                    scaleY: 1,
                    alpha: 1
                }, !0, GameConfig.actuateWithCompID).ease(motion_easing_Back.get_easeOut()), this.allFivesScoreInformMC.set_visible(!0)
            } else this.changeTurnNextFrame = !0
        },
        calculateAllFivesEndsScores: function(e) {
            if (1 == this.pileList.length && null == e) return this.pileList[0].get_score();
            for (var t = 0, n = [], l = null, i = 0, s = this.pileList.length; i < s;) {
                var a = i++;
                if (this.pileList[a].get_isDouble()) {
                    l = this.pileList[a];
                    break
                }
            }
            this.leftStack.lastDomino() != l && this.rightStack.lastDomino();
            for (var r = 0, o = this.allPiles; r < o.length;) {
                var d, _, h = o[r];
                if (++r, null != h)
                    if (h.get_length() + (null != e && e.stack == h ? 1 : 0), null != (d = null != e && e.stack == h ? e.domino : h.lastDomino())) _ = null != e && e.stack == h ? d.get_isDouble() ? d.get_score() : d.anotherSideVal(e.val) : d.get_isDouble() ? d.get_score() : h.get_curVal(), -1 == HxOverrides.indexOf(n, d, 0) && (h == this.leftStack || h == this.rightStack ? (t += _, n.push(d)) : d != l && (t += _, n.push(d)))
            }
            return t
        },
        setScoresAllfivesInform: function(e) {
            for (var t = !1, n = 0, l = this.allPiles; n < l.length;) {
                var i = l[n];
                if (++n, i.get_length() > 0) {
                    t = !0;
                    break
                }
            }
            if (t) {
                for (var s = 0, a = this.allFivesScoresHints; s < a.length;) {
                    var r = a[s];
                    ++s, r.set_visible(!1)
                }
                if (null != e) {
                    for (var o = [], d = 0, _ = null, h = 0, p = this.pileList.length; h < p;) {
                        var c = h++;
                        if (this.pileList[c].get_isDouble()) {
                            _ = this.pileList[c];
                            break
                        }
                    }
                    for (var Q = 0, U = e.length; Q < U;) {
                        var m = e[Q++];
                        if (0 != m.stack.get_length()) {
                            var u, F, N, S, W = m.stack.lastDomino(),
                                B = W.getValBounds(m.val);
                            u = B.x, N = B.y;
                            var Z, D = W.getValBounds(W.anotherSideVal(m.val));
                            if (F = D.x, S = D.y, Z = u != F ? u < F ? 3 : 1 : N < S ? 0 : 2, -1 == HxOverrides.indexOf(o, W, 0)) {
                                o.push(W);
                                var V = this.calculateAllFivesEndsScores(m),
                                    f = W.getBounds(this.allFivesScoresHints[0].parent),
                                    R = W.get_scaleX() * W.parent.get_scaleX(),
                                    T = this.allFivesScoresHints[d];
                                T.set_visible(!0), T.set_text(V + ""), T.set_scaleX(T.set_scaleY(R));
                                var J = T.getBounds(T),
                                    g = J.x * R + J.width * R / 2;
                                3 == Z || 1 == Z ? (T.set_x(f.x + f.width / 2 - g + f.width / 4 * (3 == Z ? -1 : 1)), T.set_y(f.y + f.height - T.get_height() / 2 + 20 * R)) : (T.set_x(f.x + f.width / 2 - g), T.set_y(0 == Z ? f.y - 20 * R - T.get_height() / 2 : f.y + f.height + 20 * R - T.get_height() / 2)), W.get_isDouble() && W != _ ? (Z = W.direction, T.set_x(0 == Z || 2 == Z ? f.x + f.width + 25 * R - g : f.x + f.width / 2 - g), T.set_y(0 == Z || 2 == Z ? f.y + f.height / 2 - T.get_height() / 2 : f.y + f.height + 20 * R - T.get_height() / 2)) : W == _ && (T.set_x(f.x + f.width / 2 - g), T.set_y(m.stack == this.topStack ? f.y - 20 * R - T.get_height() / 2 : f.y + f.height + 20 * R - T.get_height() / 2)), d++
                            }
                        }
                    }
                }
            }
        },
        simpleDeal: function() {
            var e, t = this.deck.slice();
            e = this.players.length > 2 ? 5 : 7, ArrayTools.randomSort(t);
            for (var n = !1; !n;) {
                for (var l = 0, i = e * this.players.length; l < i;) {
                    var s = l++;
                    if (t[t.length - s - 1].get_isDouble()) {
                        n = !0;
                        break
                    }
                }
                n || ArrayTools.randomSort(t)
            }
            for (var a = null, r = 0, o = this.players.length; r < o;)
                for (var d = r++, _ = 0; _ < e;) {
                    _++;
                    a = t.pop(), this.players[d].hand.push(a), "human" == DominoModeBase.playersTypes[d] && a.open()
                }
            for (; t.length > 0;) a = t.pop(), this.boneyard.push(a);
            this.updateBoneyardDominoes(!1)
        },
        get_isPortraitMode: function() {
            return this.main.sWidth < this.main.sHeight
        },
        get_isLanscapeMode: function() {
            return !this.get_isPortraitMode()
        },
        isVertDir: function(e) {
            return 0 == e || 2 == e
        },
        init: function(e) {
            null == e && (e = !1)
        },
        getModeName: function(e) {
            if ("" == this.modeName) throw new js__$Boot_HaxeError(new openfl_errors_Error("Game modeName isn' defined!!!"));
            return this.modeName + "_ai=" + (DominoModeBase.get_aiLevel() + 1) + (e ? "" : "_round=" + DominoModeBase.curRound)
        },
        drawDomino: function(e) {
            var t = this;
            return -1 != HxOverrides.indexOf(this.boneyard, e, 0) && (HxOverrides.remove(this.boneyard, e), e.changeParent(this.boneyardAnimTopCont), GameConfig.timerWithComp(GameConfig.afterPlayDelay * GameConfig.gameSpeedCoef, function() {
                e.changeParent(t.dominoCont)
            }, null, null), this.main.playSpriteSound("Take_" + (Std.random(2) + 1)), !0)
        },
        onResize: function() {
            this.updatePoses(!1), this.updateBoneyardPos(), this.boneyardAnimTopCont.set_x(this.dominoCont.get_x()), this.boneyardAnimTopCont.set_y(this.dominoCont.get_y()), this.boneyardAnimTopCont.set_scaleX(this.dominoCont.get_scaleX()), this.boneyardAnimTopCont.set_scaleY(this.dominoCont.get_scaleY());
            for (var e = 0, t = this.players; e < t.length;) {
                var n = t[e];
                ++e, n.onResize()
            }
            var l = this.topPileDominoesCont.get_transform().get_matrix();
            l.copyFrom(this.pileDominoesCont.get_transform().get_matrix()), this.topPileDominoesCont.get_transform().set_matrix(l), this.uiManager.onResize()
        },
        updatePoses: function(e) {
            null == e && (e = !0)
        },
        updateHandsPoses: function() {
            this.get_isPortraitMode() ? this.p1HandRect.width = Math.min(600, .9 * Desk.get_sWidthLevels()) : this.p1HandRect.width = Domino.dominoSizeY, this.get_isPortraitMode() ? this.p1HandRect.height = Domino.dominoSizeY : this.p1HandRect.height = Math.min(500, .8 * Desk.get_sHeightLevels()), this.get_isPortraitMode() ? this.p1HandRect.x = -Desk.get_leftLevels() + Desk.get_sWidthLevels() / 2 - this.p1HandRect.width / 2 : this.p1HandRect.x = -Desk.get_leftLevels(), this.get_isPortraitMode() ? this.p1HandRect.y = -Desk.get_topLevels() + Desk.get_sHeightLevels() - this.p1HandRect.height : this.p1HandRect.y = -Desk.get_topLevels() + Desk.get_sHeightLevels() / 2 - this.p1HandRect.height / 2, this.p2HandRect.setTo(this.get_isPortraitMode() ? this.p1HandRect.x : -Desk.get_leftLevels() + Desk.get_sWidthLevels() - this.p1HandRect.width, this.get_isPortraitMode() ? -Desk.get_topLevels() : this.p1HandRect.y, this.p1HandRect.width, this.p1HandRect.height), this.get_isPortraitMode() ? this.p2HandRect.y -= .3 * this.p2HandRect.height : this.p2HandRect.x += .3 * this.p2HandRect.width;
            var e = GameConfig.handDominoesGap;
            this.p1HRect.copyFrom(this.p1HandRect), this.p2HRect.copyFrom(this.p2HandRect);
            var t = [this.p1HRect, this.p2HRect],
                n = [0, 0, 0, 0],
                l = [0, 0, 0, 0];
            this.gameFinished && (this.get_isPortraitMode() ? (l[1] += .8 * Domino.dominoSizeY, l[0] -= .8 * Domino.dominoSizeY) : (n[1] -= .8 * Domino.dominoSizeY, n[0] += .8 * Domino.dominoSizeY));
            for (var i = 0, s = this.players.length; i < s;) {
                var a, r = i++,
                    o = this.players[r].hand,
                    d = o.length * Domino.dominoSizeX + e * (o.length - 1),
                    _ = 0;
                1 == (a = this.get_isPortraitMode() ? Math.min(1, t[r].width / d) : Math.min(1, t[r].height / d)) && (_ = ((this.get_isPortraitMode() ? t[r].width : t[r].height) - d) / 2), this.get_isPortraitMode() && (t[r].y += t[r].height - Domino.dominoSizeY * a);
                for (var h = t[r].x, p = t[r].y, c = 0, Q = o.length; c < Q;) {
                    var U = o[c++];
                    U.set_direction(this.get_isPortraitMode() ? 0 : 3), U.set_scaleX(U.set_scaleY(a)), U.set_x(h + U.get_width() / 2 + (this.get_isPortraitMode() ? _ : 0)), U.set_y(p + U.get_height() / 2 * a + (this.get_isPortraitMode() ? 0 : _)), this.get_isPortraitMode() ? h += Domino.dominoSizeX * a + e * a : h += 0, this.get_isPortraitMode() ? p += 0 : p += Domino.dominoSizeX * a + e * a;
                    var m = U;
                    m.set_x(m.get_x() + n[r]);
                    var u = U;
                    u.set_y(u.get_y() + l[r])
                }
            }
            this.uiManager.onResize()
        },
        rememberDominoTransforms: function() {
            for (; this.prevTrans.length > 0;) this.prevTrans.pop();
            for (var e = 0, t = this.deck; e < t.length;) {
                var n = t[e];
                ++e, this.prevTrans.push({
                    o: n,
                    x: n.get_x(),
                    y: n.get_y(),
                    sx: n.get_scaleX(),
                    sy: n.get_scaleY(),
                    r: n.get_rotation()
                })
            }
            this.prevTrans.push({
                o: this.pileDominoesCont,
                x: this.pileDominoesCont.get_x(),
                y: this.pileDominoesCont.get_y(),
                sx: this.pileDominoesCont.get_scaleX(),
                sy: this.pileDominoesCont.get_scaleY(),
                r: this.pileDominoesCont.get_rotation()
            })
        },
        playDominoRecordedAnim: function() {
            for (var e = 0, t = this.prevTrans; e < t.length;) {
                var n = t[e];
                ++e;
                var l = n.o;
                if (n.x != l.get_x() || n.y != l.get_y() || n.sx != l.get_scaleX() || n.sy != l.get_scaleY() || n.r != l.get_rotation()) {
                    var i = l,
                        s = l.get_x(),
                        a = l.get_y(),
                        r = l.get_scaleX(),
                        o = l.get_scaleY(),
                        d = l.get_rotation();
                    l.set_x(n.x), l.set_y(n.y), l.set_scaleX(n.sx), l.set_scaleY(n.sy), l.set_rotation(n.r), l.parent != this.pileDominoesCont && l.parent != this.topPileDominoesCont || (r = 1, o = 1), Actuate.tween(i, GameConfig.afterPlayDelay * GameConfig.gameSpeedCoef, {
                        x: s,
                        y: a,
                        scaleX: r,
                        scaleY: o,
                        rotation: d
                    }, !0, GameConfig.actuateWithCompID).smartRotation(!0).ease(GameConfig.dominoMoveEase)
                }
            }
        },
        update: function(e) {
            this.uiManager.update(e);
            var t = this.topPileDominoesCont.get_transform().get_matrix();
            if (t.copyFrom(this.pileDominoesCont.get_transform().get_matrix()), this.topPileDominoesCont.get_transform().set_matrix(t), !this.gameFinished) {
                this.changeTurnNextFrame && (this.changeTurnNextFrame = !1, this.changeTurn());
                for (var n = 0, l = this.players.length; n < l;) {
                    var i = n++;
                    this.players[i].update(e)
                }
            }
        },
        onMDown: function() {
            for (var e = 0, t = this.players.length; e < t;) {
                var n = e++;
                this.players[n].onMDown()
            }
            this.uiManager.onMDown()
        },
        onMUp: function() {
            for (var e = 0, t = this.players.length; e < t;) {
                var n = e++;
                this.players[n].onMUp()
            }
            this.uiManager.onMUp()
        },
        clearSave: function() {
            DominoModeBase.setSaveForMode(this.modeIDX, null)
        },
        saveGame: function() {
            DominoModeBase.setSaveForMode(this.modeIDX, SavesHelper.getModeSaveData(this))
        },
        loadSave: function() {
            SavesHelper.loadSave(this, DominoModeBase.getSaveForMode(this.modeIDX)), this.onGameStart(), this.onResize(), this.playTurn()
        },
        destroy: function() {
            this.desk = null, this.main = null, this.game = null, this.deck = null, this.pileList = null, this.dominoCont = null, this.pileDominoesCont = null, this.players = null, this.uiManager.destroy()
        },
        __class__: DominoModeBase,
        __properties__: {
            get_isLanscapeMode: "get_isLanscapeMode",
            get_isPortraitMode: "get_isPortraitMode",
            get_currentPlayer: "get_currentPlayer"
        }
    };
    var AllFivesDomino = function(e) {
        null == e && (e = !1), DominoModeBase.call(this), DominoModeBase.current = this, DominoModeBase.playToScore = 250, this.modeName = "AllFivesDominoes", this.modeIDX = 1, this.boardZone.width = Desk.get_sWidthLevels(), this.boardZone.height = Desk.get_sHeightLevels(), this.init(e)
    };
    $hxClasses.AllFivesDomino = AllFivesDomino, AllFivesDomino.__name__ = ["AllFivesDomino"], AllFivesDomino.__super__ = DominoModeBase, AllFivesDomino.prototype = $extend(DominoModeBase.prototype, {
        init: function(e) {
            if (null == e && (e = !1), DominoModeBase.prototype.init.call(this), this.isAllFivesMode = !0, this.leftStack = new DominoStack, this.rightStack = new DominoStack, this.topStack = new DominoStack, this.bottomStack = new DominoStack, e) this.loadSave();
            else {
                this.numPlayers = DominoModeBase.playersTypes.length;
                for (var t = 0, n = DominoModeBase.playersTypes.length; t < n;) {
                    var l = t++;
                    this.players.push("computer" == DominoModeBase.playersTypes[l] ? new DrawDominoAI(this) : new HumanPlayer(this))
                }
                this.deal(), this.changeTurnNextFrame = !0
            }
        },
        deal: function() {
            this.simpleDeal()
        },
        updatePoses: function(e) {
            null == e && (e = !0), e && this.rememberDominoTransforms(), this.updateHandsPoses();
            if (this.get_isPortraitMode() ? this.boardZone.width = Desk.get_sWidthLevels() : this.boardZone.width = this.p2HRect.x - this.p1HandRect.get_right(), this.get_isPortraitMode() ? this.boardZone.height = this.p1HandRect.y - this.p2HandRect.get_bottom() : this.boardZone.height = Desk.get_sHeightLevels(), this.get_isPortraitMode() ? this.boardZone.x = (Desk.get_sWidthLevels() - .9 * this.boardZone.width) / 2 : this.boardZone.x = this.p1HandRect.width + (this.boardZone.width - .9 * this.boardZone.width) / 2, this.get_isPortraitMode() ? this.boardZone.y = this.p2HandRect.get_bottom() - -Desk.get_topLevels() + (this.boardZone.height - .9 * this.boardZone.height) / 2 : this.boardZone.y = (this.boardZone.height - .9 * this.boardZone.height) / 2, this.boardZone.x -= Desk.get_leftLevels(), this.boardZone.y -= Desk.get_topLevels(), this.boardZone.width *= .9, this.boardZone.height *= .9, 0 != this.pileList.length) {
                this.pileDominoesCont.set_x(-Desk.get_leftLevels() + Desk.get_sWidthLevels() / 2);
                var t = this.pileList,
                    n = !1,
                    l = this.topStack.dominoAt(0),
                    i = new DominoStack,
                    s = new DominoStack;
                if (this.leftStack.hasDomino(l) && this.rightStack.hasDomino(l) || null == l) i = this.leftStack, s = this.rightStack;
                else if (this.leftStack.hasDomino(l)) {
                    n = !0;
                    for (var a = this.leftStack.indexOfDomino(l), r = 0; r < a;) {
                        var o = r++,
                            d = a - o,
                            _ = this.leftStack.dominoAt(d);
                        s.add(_, 0 == o ? _.get_val1() : s.get_curVal())
                    }
                    for (var h = a, p = this.leftStack.get_length(); h < p;) {
                        var c = h++;
                        i.add(this.leftStack.dominoAt(c), this.leftStack.valAt(c))
                    }
                    for (var Q = 0, U = this.rightStack.get_length(); Q < U;) {
                        var m = Q++,
                            u = this.rightStack.dominoAt(m);
                        s.add(u, s.get_curVal())
                    }
                } else {
                    n = !0;
                    for (var F = this.rightStack.indexOfDomino(l), N = 0; N < F;) {
                        var S = N++,
                            W = F - S,
                            B = this.rightStack.dominoAt(W);
                        i.add(B, 0 == S ? B.get_val1() : i.get_curVal())
                    }
                    for (var Z = F, D = this.rightStack.get_length(); Z < D;) {
                        var V = Z++;
                        s.add(this.rightStack.dominoAt(V), this.rightStack.valAt(V))
                    }
                    for (var f = 0, R = this.leftStack.get_length(); f < R;) {
                        var T = f++,
                            J = this.leftStack.dominoAt(T);
                        i.add(J, i.get_curVal())
                    }
                }
                var g = [i, s, this.topStack, this.bottomStack];
                if (n) {
                    (t = []).push(i.dominoAt(0));
                    for (var b = 0, E = g.length; b < E;)
                        for (var v = g[b++], k = 1, M = v.get_length(); k < M;) {
                            var y = k++;
                            t.push(v.dominoAt(y))
                        }
                }
                var x = [this.topStack, s, this.bottomStack, i],
                    w = [this.topStack.dominoAt(0), s.dominoAt(0), this.bottomStack.dominoAt(0), i.dominoAt(0)],
                    G = w[1];
                null == G && (G = i.dominoAt(0)), G.set_x(0), G.set_y(0), G.set_direction(G.get_isDouble() ? 0 : i.valAt(0) == G.get_val1() ? 1 : 3);
                for (var H = [], C = 0, Y = x.length; C < Y;) {
                    var O = C++;
                    null != w[O] ? H[O] = [w[O]] : H[O] = []
                }
                var X = Math.max(G.get_height(), G.get_width()),
                    z = Math.max(5, Math.round(this.boardZone.width * this.desk.levels.get_scaleX() / (.74 * X))),
                    I = Math.floor(z / 2),
                    j = [];
                j[0] = [0, 3, 0, 1], j[1] = [1, 0, 3, 0], j[2] = [2, 1, 2, 3], j[3] = [3, 2, 1, 2];
                for (var L = 0, A = x.length; L < A;)
                    for (var P = L++, $ = x[P], K = P, q = 0, ee = 1, te = 3 == K || 1 == K, ne = !1, le = 1, ie = $.get_length(); le < ie;) {
                        var se = le++,
                            ae = $.dominoAt(se),
                            re = $.dominoAt($.indexOfDomino(ae) - 1);
                        ae.putAfter(w[K], $.valWithDomino(ae), j[P][q], !1, ae != l && re != l), w[K] = ae;
                        var oe = 0 == j[K][q] || 2 == j[K][q];
                        oe && ee >= 1 && (ee = 0, q++, ne = !0), !oe && ee >= (te && ne ? I - 1 : I) && (ee = 0, q++, ne = !0), q >= j[K].length && (q = 0), ee++
                    }
                for (var de = 0, _e = this.pileDominoesCont.get_numChildren(); de < _e;) {
                    var he = de++;
                    this.pileDominoesCont.getChildAt(he).set_scaleX(this.pileDominoesCont.getChildAt(he).set_scaleY(1))
                }
                this.pileDominoesCont.set_x(0), this.pileDominoesCont.set_y(0), this.pileDominoesCont.set_scaleX(1), this.pileDominoesCont.set_scaleY(1);
                var pe = this.pileDominoesCont.getBounds(this.pileDominoesCont.parent),
                    ce = Math.min(1, Math.min(this.boardZone.width / pe.width, this.boardZone.height / pe.height));
                this.pileDominoesCont.set_scaleX(this.pileDominoesCont.set_scaleY(ce)), pe = this.pileDominoesCont.getBounds(this.pileDominoesCont.parent), this.pileDominoesCont.set_x(this.boardZone.x + this.boardZone.width / 2 - pe.width / 2 - pe.x), this.pileDominoesCont.set_y(this.boardZone.y + this.boardZone.height / 2 - pe.height / 2 - pe.y);
                e && this.playDominoRecordedAnim();
                for (var Qe = 0, Ue = this.deck; Qe < Ue.length;) {
                    var me = Ue[Qe];
                    ++Qe, -1 == HxOverrides.indexOf(this.pileList, me, 0) && -1 == HxOverrides.indexOf(this.players[0].hand, me, 0) && HxOverrides.indexOf(this.players[1].hand, me, 0)
                }
            }
        },
        selectTurnPlayer: function() {
            if (0 != DominoModeBase.curRound && DominoModeBase.lastWinner > -1) return DominoModeBase.lastWinner;
            var e = 0,
                t = 0;
            if (0 == DominoModeBase.curRound)
                for (var n = 0, l = this.players.length; n < l;)
                    for (var i = n++, s = 0, a = this.players[i].hand; s < a.length;) {
                        var r = a[s];
                        ++s, r.get_isDouble() && r.get_val1() > e && (e = r.get_val1(), t = i)
                    }
            if (0 == e) {
                for (var o = 0, d = 0, _ = this.players.length; d < _;)
                    for (var h = d++, p = 0, c = this.players[h].hand; p < c.length;) {
                        var Q = c[p];
                        ++p, Q.get_val1() + Q.get_val2() > o && (o = Q.get_val1() + Q.get_val2(), t = h)
                    }
                return t
            }
            return t
        },
        __class__: AllFivesDomino
    });
    var AnimationHelper = function() {};
    $hxClasses.AnimationHelper = AnimationHelper, AnimationHelper.__name__ = ["AnimationHelper"], AnimationHelper.shake = function(e, t, n) {
        var l;
        null == n && (n = 3), null == t && (t = .8), null != (l = js_Boot.__instanceof(e, openfl_display_DisplayObject) ? js_Boot.__cast(e, openfl_display_DisplayObject) : null) ? AnimationHelper.shakeRegularDisplayObject(l, t, n) : AnimationHelper.shakeDynamicObject(e, t, n)
    }, AnimationHelper.shakeRegularDisplayObject = function(e, t, n) {
        null == n && (n = 5), null == t && (t = .8), motion_Actuate.tween(e, t, {
            x: e.get_x() + n
        }, !1).ease(ShakeEase.get_shake()), motion_Actuate.tween(e, t, {
            y: e.get_y() + n
        }, !1).ease(ShakeEase.get_shake())
    }, AnimationHelper.shakeDynamicObject = function(e, t, n) {
        null == n && (n = 5), null == t && (t = .8), motion_Actuate.tween(e, t, {
            x: e.x + n
        }, !1).ease(ShakeEase.get_shake()), motion_Actuate.tween(e, t, {
            y: e.y + n
        }, !1).ease(ShakeEase.get_shake())
    }, AnimationHelper.skewMatrix = function(e, t, n) {
        var l = Math.sin(t),
            i = Math.cos(t),
            s = Math.sin(n),
            a = Math.cos(n);
        e.setTo(e.a * a - e.b * l, e.a * s + e.b * i, e.c * a - e.d * l, e.c * s + e.d * i, e.tx * a - e.ty * l, e.tx * s + e.ty * i)
    };
    var ShakeEase = function() {};
    $hxClasses.ShakeEase = ShakeEase, ShakeEase.__name__ = ["ShakeEase"], ShakeEase.__properties__ = {
        get_shake: "get_shake"
    }, ShakeEase.get_shake = function() {
        return new SimpleShakeEasing
    };
    var motion_easing_IEasing = function() {};
    $hxClasses["motion.easing.IEasing"] = motion_easing_IEasing, motion_easing_IEasing.__name__ = ["motion", "easing", "IEasing"], motion_easing_IEasing.prototype = {
        calculate: null,
        __class__: motion_easing_IEasing
    };
    var SimpleShakeEasing = function() {};
    $hxClasses.SimpleShakeEasing = SimpleShakeEasing, SimpleShakeEasing.__name__ = ["SimpleShakeEasing"], SimpleShakeEasing.__interfaces__ = [motion_easing_IEasing], SimpleShakeEasing.prototype = {
        calculate: function(e) {
            if (e >= 1) return 0;
            var t, n = 1 - -e * (e - 2);
            return n / 2 * (t = Math.random() > .5 ? 1 : -1) + Math.random() * (n / 2) * t
        },
        __class__: SimpleShakeEasing
    };
    var ApplicationMain = function() {};
    $hxClasses.ApplicationMain = ApplicationMain, ApplicationMain.__name__ = ["ApplicationMain"], ApplicationMain.main = function() {
        ApplicationMain.config = {
            build: "1336",
            company: "Bloomegames",
            file: "game",
            fps: 120,
            name: "Dominoes",
            orientation: "",
            packageName: "com.gloomegames.dominoes",
            version: "1.0.0",
            windows: [{
                allowHighDPI: !1,
                antialiasing: 4,
                background: 16620066,
                borderless: !1,
                depthBuffer: !1,
                display: 0,
                fullscreen: !1,
                hardware: !0,
                height: 0,
                hidden: null,
                maximized: null,
                minimized: null,
                parameters: "{}",
                resizable: !0,
                stencilBuffer: !0,
                title: "Dominoes",
                vsync: !1,
                width: 0,
                x: null,
                y: null
            }]
        }
    }, ApplicationMain.create = function() {
        var e = new openfl_display_Application;
        e.create(ApplicationMain.config);
        var t = new DefaultAssetLibrary;
        lime_utils_Assets.registerLibrary("default", t), ApplicationMain.preloader = new openfl_display_Preloader(new Preloader), e.setPreloader(ApplicationMain.preloader), ApplicationMain.preloader.create(ApplicationMain.config), ApplicationMain.preloader.onComplete.add(ApplicationMain.start), ApplicationMain.preloader.addLibrary(t), ApplicationMain.preloader.load();
        e.exec()
    }, ApplicationMain.embed = $hx_exports.game.embed = function(e, t, n, l, i) {
        var s = null;
        s = "string" == typeof e ? window.document.getElementById(js_Boot.__cast(e, String)) : null == e ? window.document.createElement("div") : e;
        var a = null;
        null != l && "" != l && (a = (l = StringTools.replace(l, "#", "")).indexOf("0x") > -1 ? Std.parseInt(l) : Std.parseInt("0x" + l)), null == t && (t = 0), null == n && (n = 0), ApplicationMain.config.windows[0].background = a, ApplicationMain.config.windows[0].element = s, ApplicationMain.config.windows[0].width = t, ApplicationMain.config.windows[0].height = n, ApplicationMain.config.assetsPrefix = i, ApplicationMain.create()
    }, ApplicationMain._embed = $hx_exports.lime.embed = function(e, t, n, l, i) {
        ApplicationMain.embed(e, t, n, l, i)
    }, ApplicationMain._embed2 = $hx_exports.openfl.embed = function(e, t, n, l, i) {
        ApplicationMain.embed(e, t, n, l, i)
    }, ApplicationMain.start = function() {
        try {
            Main.main()
        } catch (e) {
            e instanceof js__$Boot_HaxeError && (e = e.val), openfl_Lib.current.stage.__handleError(e)
        }
        openfl_Lib.current.stage.dispatchEvent(new openfl_events_Event("resize", !1, !1)), openfl_Lib.current.stage.window.__fullscreen && openfl_Lib.current.stage.dispatchEvent(new openfl_events_FullScreenEvent("fullScreen", !1, !1, !0, !0))
    };
    var openfl_events_IEventDispatcher = function() {};
    $hxClasses["openfl.events.IEventDispatcher"] = openfl_events_IEventDispatcher, openfl_events_IEventDispatcher.__name__ = ["openfl", "events", "IEventDispatcher"];
    var openfl_events_EventDispatcher = function(e) {
        null != e && (this.__targetDispatcher = e)
    };
    $hxClasses["openfl.events.EventDispatcher"] = openfl_events_EventDispatcher, openfl_events_EventDispatcher.__name__ = ["openfl", "events", "EventDispatcher"], openfl_events_EventDispatcher.__interfaces__ = [openfl_events_IEventDispatcher], openfl_events_EventDispatcher.__sortByPriority = function(e, t) {
        return e.priority == t.priority ? 0 : e.priority > t.priority ? -1 : 1
    }, openfl_events_EventDispatcher.prototype = {
        __eventMap: null,
        __iterators: null,
        __targetDispatcher: null,
        addEventListener: function(e, t, n, l, i) {
            if (null == i && (i = !1), null == l && (l = 0), null == n && (n = !1), null != t)
                if (null == this.__eventMap && (this.__eventMap = new haxe_ds_StringMap, this.__iterators = new haxe_ds_StringMap), this.__eventMap.exists(e)) {
                    for (var s = this.__eventMap.get(e), a = 0, r = s.length; a < r;) {
                        if (s[a++].match(t, n)) return
                    }
                    for (var o = this.__iterators.get(e), d = 0; d < o.length;) {
                        var _ = o[d];
                        ++d, _.active && _.copy()
                    }
                    s.push(new openfl_events__$EventDispatcher_Listener(t, n, l)), s.sort(openfl_events_EventDispatcher.__sortByPriority)
                } else {
                    var h = [];
                    h.push(new openfl_events__$EventDispatcher_Listener(t, n, l));
                    var p = new openfl_events__$EventDispatcher_DispatchIterator(h);
                    this.__eventMap.set(e, h), this.__iterators.set(e, [p])
                }
        },
        dispatchEvent: function(e) {
            return null != this.__targetDispatcher ? e.target = this.__targetDispatcher : e.target = this, this.__dispatchEvent(e)
        },
        hasEventListener: function(e) {
            return null != this.__eventMap && this.__eventMap.exists(e)
        },
        removeEventListener: function(e, t, n) {
            if (null == n && (n = !1), null != this.__eventMap && null != t) {
                var l = this.__eventMap.get(e);
                if (null != l) {
                    for (var i = this.__iterators.get(e), s = 0, a = l.length; s < a;) {
                        var r = s++;
                        if (l[r].match(t, n)) {
                            for (var o = 0; o < i.length;) {
                                var d = i[o];
                                ++o, d.remove(l[r], r)
                            }
                            l.splice(r, 1);
                            break
                        }
                    }
                    0 == l.length && (this.__eventMap.remove(e), this.__iterators.remove(e)), this.__eventMap.iterator().hasNext() || (this.__eventMap = null, this.__iterators = null)
                }
            }
        },
        __dispatchEvent: function(e) {
            if (null == this.__eventMap || null == e) return !0;
            var t = e.type,
                n = this.__eventMap.get(t);
            if (null == n) return !0;
            null == e.target && (null != this.__targetDispatcher ? e.target = this.__targetDispatcher : e.target = this), e.currentTarget = this;
            var l = 1 == e.eventPhase,
                i = this.__iterators.get(t),
                s = i[0];
            for (s.active && (s = new openfl_events__$EventDispatcher_DispatchIterator(n), i.push(s)), s.reset(n); s.hasNext();) {
                var a = s.next();
                if (null != a && (a.useCapture == l && (a.callback(e), e.__isCanceledNow))) break
            }
            return s != i[0] && HxOverrides.remove(i, s), !0
        },
        __class__: openfl_events_EventDispatcher
    };
    var openfl_display_IBitmapDrawable = function() {};
    $hxClasses["openfl.display.IBitmapDrawable"] = openfl_display_IBitmapDrawable, openfl_display_IBitmapDrawable.__name__ = ["openfl", "display", "IBitmapDrawable"], openfl_display_IBitmapDrawable.prototype = {
        __transform: null,
        __worldTransform: null,
        __renderCanvas: null,
        __renderGL: null,
        __updateChildren: null,
        __updateTransforms: null,
        __class__: openfl_display_IBitmapDrawable
    };
    var openfl_display_DisplayObject = function() {
        openfl_events_EventDispatcher.call(this), this.__alpha = 1, this.__blendMode = 10, this.__cacheAsBitmap = !1, this.__transform = new openfl_geom_Matrix, this.__visible = !0, this.__rotation = 0, this.__rotationSine = 0, this.__rotationCosine = 1, this.__scaleX = 1, this.__scaleY = 1, this.__worldAlpha = 1, this.__worldTransform = new openfl_geom_Matrix, this.__worldColorTransform = new openfl_geom_ColorTransform, this.__renderTransform = new openfl_geom_Matrix, this.set_name("instance" + ++openfl_display_DisplayObject.__instanceCount)
    };
    $hxClasses["openfl.display.DisplayObject"] = openfl_display_DisplayObject, openfl_display_DisplayObject.__name__ = ["openfl", "display", "DisplayObject"], openfl_display_DisplayObject.__interfaces__ = [openfl_display_IBitmapDrawable], openfl_display_DisplayObject.__super__ = openfl_events_EventDispatcher, openfl_display_DisplayObject.prototype = $extend(openfl_events_EventDispatcher.prototype, {
        opaqueBackground: null,
        parent: null,
        stage: null,
        __alpha: null,
        __blendMode: null,
        __cacheAsBitmap: null,
        __cairo: null,
        __children: null,
        __filters: null,
        __graphics: null,
        __isMask: null,
        __loaderInfo: null,
        __mask: null,
        __name: null,
        __objectTransform: null,
        __renderable: null,
        __renderDirty: null,
        __renderParent: null,
        __renderTransform: null,
        __rotation: null,
        __rotationCosine: null,
        __rotationSine: null,
        __scaleX: null,
        __scaleY: null,
        __scrollRect: null,
        __transform: null,
        __transformDirty: null,
        __visible: null,
        __worldAlpha: null,
        __worldClip: null,
        __worldClipChanged: null,
        __worldColorTransform: null,
        __worldTransform: null,
        __canvas: null,
        __context: null,
        addEventListener: function(e, t, n, l, i) {
            switch (null == i && (i = !1), null == l && (l = 0), null == n && (n = !1), e) {
                case "activate":
                case "deactivate":
                case "enterFrame":
                case "exitFrame":
                case "frameConstructed":
                case "render":
                    openfl_display_DisplayObject.__broadcastEvents.exists(e) || openfl_display_DisplayObject.__broadcastEvents.set(e, []);
                    var s = openfl_display_DisplayObject.__broadcastEvents.get(e); - 1 == HxOverrides.indexOf(s, this, 0) && s.push(this)
            }
            openfl_events_EventDispatcher.prototype.addEventListener.call(this, e, t, n, l, i)
        },
        dispatchEvent: function(e) {
            if (js_Boot.__instanceof(e, openfl_events_MouseEvent)) {
                var t = e;
                t.stageX = this.__getRenderTransform().__transformX(t.localX, t.localY), t.stageY = this.__getRenderTransform().__transformY(t.localX, t.localY)
            } else if (js_Boot.__instanceof(e, openfl_events_TouchEvent)) {
                var n = e;
                n.stageX = this.__getRenderTransform().__transformX(n.localX, n.localY), n.stageY = this.__getRenderTransform().__transformY(n.localX, n.localY)
            }
            return openfl_events_EventDispatcher.prototype.dispatchEvent.call(this, e)
        },
        getBounds: function(e) {
            var t;
            null != e ? (t = this.__getWorldTransform().clone()).concat(e.__getWorldTransform().clone().invert()) : (t = openfl_geom_Matrix.__temp).identity();
            var n = new openfl_geom_Rectangle;
            return this.__getBounds(n, t), n
        },
        globalToLocal: function(e) {
            return e = e.clone(), this.__getRenderTransform().__transformInversePoint(e), e
        },
        hitTestPoint: function(e, t, n) {
            return null == n && (n = !1), null != this.stage && this.__hitTest(e, t, n, null, !0, this)
        },
        removeEventListener: function(e, t, n) {
            switch (null == n && (n = !1), openfl_events_EventDispatcher.prototype.removeEventListener.call(this, e, t, n), e) {
                case "activate":
                case "deactivate":
                case "enterFrame":
                case "exitFrame":
                case "frameConstructed":
                case "render":
                    if (!this.hasEventListener(e) && openfl_display_DisplayObject.__broadcastEvents.exists(e)) {
                        var l = openfl_display_DisplayObject.__broadcastEvents.get(e);
                        HxOverrides.remove(l, this)
                    }
            }
        },
        __cleanup: function() {
            this.__cairo = null, this.__canvas = null, this.__context = null, null != this.__graphics && this.__graphics.__cleanup()
        },
        __dispatch: function(e) {
            if (null != this.__eventMap && this.hasEventListener(e.type)) {
                var t = openfl_events_EventDispatcher.prototype.__dispatchEvent.call(this, e);
                return !!e.__isCanceled || t
            }
            return !0
        },
        __dispatchChildren: function(e) {
            return this.__dispatchEvent(e)
        },
        __dispatchEvent: function(e) {
            var t = openfl_events_EventDispatcher.prototype.__dispatchEvent.call(this, e);
            return !!e.__isCanceled || (e.bubbles && null != this.parent && this.parent != this && (e.eventPhase = 3, null == e.target && (e.target = this), this.parent.__dispatchEvent(e)), t)
        },
        __enterFrame: function(e) {},
        __getBounds: function(e, t) {
            null != this.__graphics && this.__graphics.__getBounds(e, t)
        },
        __getCursor: function() {
            return null
        },
        __getInteractive: function(e) {
            return !1
        },
        __getRenderTransform: function() {
            return this.__getWorldTransform(), this.__renderTransform
        },
        __getWorldTransform: function() {
            if (this.__transformDirty || openfl_display_DisplayObject.__worldTransformDirty > 0) {
                var e = [],
                    t = this,
                    n = this.__transformDirty;
                if (null == this.parent) n && this.__update(!0, !1);
                else
                    for (; t != this.stage;) e.push(t), (t = t.parent) != this.stage && t.__transformDirty && (n = !0);
                if (n)
                    for (var l = e.length; --l >= 0;) e[l].__update(!0, !1)
            }
            return this.__worldTransform
        },
        __hitTest: function(e, t, n, l, i, s) {
            if (null != this.__graphics) {
                if (!s.get_visible() || this.__isMask) return !1;
                if (null != this.get_mask() && !this.get_mask().__hitTestMask(e, t)) return !1;
                if (this.__graphics.__hitTest(e, t, n, this.__getRenderTransform())) return null == l || i || l.push(s), !0
            }
            return !1
        },
        __hitTestMask: function(e, t) {
            return !(null == this.__graphics || !this.__graphics.__hitTest(e, t, !0, this.__getRenderTransform()))
        },
        __renderCanvas: function(e) {
            (null == this.get_mask() || this.get_mask().get_width() > 0 && this.get_mask().get_height() > 0) && openfl__$internal_renderer_canvas_CanvasDisplayObject.render(this, e)
        },
        __renderCanvasMask: function(e) {
            null != this.__graphics && openfl__$internal_renderer_canvas_CanvasGraphics.renderMask(this.__graphics, e)
        },
        __renderGL: function(e) {
            openfl__$internal_renderer_opengl_GLDisplayObject.render(this, e)
        },
        __setRenderDirty: function() {
            this.__renderDirty || (this.__renderDirty = !0, openfl_display_DisplayObject.__worldRenderDirty++)
        },
        __setStageReference: function(e) {
            this.stage = e
        },
        __setTransformDirty: function() {
            this.__transformDirty || (this.__transformDirty = !0, openfl_display_DisplayObject.__worldTransformDirty++)
        },
        __update: function(e, t, n) {
            var l;
            (this.__renderable = this.get_visible() && 0 != this.__scaleX && 0 != this.__scaleY && !this.__isMask && (null == this.parent || !this.parent.__isMask), this.__updateTransforms(), t && this.__transformDirty && (this.__transformDirty = !1, openfl_display_DisplayObject.__worldTransformDirty--), null != n && this.__updateMask(n), e) || (this.__worldColorTransform.__equals(this.get_transform().get_colorTransform()) || (this.__worldColorTransform = this.get_transform().get_colorTransform().__clone()), null != (l = null != this.parent ? this.parent : this.__renderParent) ? (this.__worldAlpha = this.get_alpha() * l.__worldAlpha, this.__worldColorTransform.__combine(l.__worldColorTransform), null != this.get_blendMode() && 10 != this.get_blendMode() || (this.__blendMode = l.__blendMode)) : this.__worldAlpha = this.get_alpha(), t && this.__renderDirty && (this.__renderDirty = !1))
        },
        __updateChildren: function(e) {
            this.__renderable = this.get_visible() && 0 != this.__scaleX && 0 != this.__scaleY && !this.__isMask && (null == this.parent || !this.parent.__isMask), this.__worldAlpha = this.get_alpha(), this.__transformDirty && (this.__transformDirty = !1, openfl_display_DisplayObject.__worldTransformDirty--)
        },
        __updateMask: function(e) {
            null != this.__graphics && (e.__commands.overrideMatrix(this.__worldTransform), e.__commands.append(this.__graphics.__commands), e.set___dirty(!0), e.__visible = !0, null == e.__bounds && (e.__bounds = new openfl_geom_Rectangle), this.__graphics.__getBounds(e.__bounds, openfl_geom_Matrix.__identity))
        },
        __updateTransforms: function(e) {
            var t, n = null != e;
            if (t = n ? e : this.__transform, null == this.__worldTransform && (this.__worldTransform = new openfl_geom_Matrix), null == this.__renderTransform && (this.__renderTransform = new openfl_geom_Matrix), n || null == this.parent) this.__worldTransform.copyFrom(t), this.__renderTransform.copyFrom(t);
            else {
                var l = this.parent.__worldTransform;
                this.__worldTransform.a = t.a * l.a + t.b * l.c, this.__worldTransform.b = t.a * l.b + t.b * l.d, this.__worldTransform.c = t.c * l.a + t.d * l.c, this.__worldTransform.d = t.c * l.b + t.d * l.d, this.__worldTransform.tx = t.tx * l.a + t.ty * l.c + l.tx, this.__worldTransform.ty = t.tx * l.b + t.ty * l.d + l.ty, l = this.parent.__renderTransform, this.__renderTransform.a = t.a * l.a + t.b * l.c, this.__renderTransform.b = t.a * l.b + t.b * l.d, this.__renderTransform.c = t.c * l.a + t.d * l.c, this.__renderTransform.d = t.c * l.b + t.d * l.d, this.__renderTransform.tx = t.tx * l.a + t.ty * l.c + l.tx, this.__renderTransform.ty = t.tx * l.b + t.ty * l.d + l.ty
            }
            null != this.__scrollRect && this.__renderTransform.__translateTransformed(-this.__scrollRect.x, -this.__scrollRect.y)
        },
        get_alpha: function() {
            return this.__alpha
        },
        set_alpha: function(e) {
            return e > 1 && (e = 1), e != this.__alpha && (this.__renderDirty || (this.__renderDirty = !0, openfl_display_DisplayObject.__worldRenderDirty++)), this.__alpha = e
        },
        get_blendMode: function() {
            return this.__blendMode
        },
        get_filters: function() {
            return null == this.__filters ? [] : this.__filters.slice()
        },
        set_filters: function(e) {
            return null != e && e.length > 0 ? this.__filters = e : this.__filters = null, this.__renderDirty || (this.__renderDirty = !0, openfl_display_DisplayObject.__worldRenderDirty++), e
        },
        get_height: function() {
            var e = new openfl_geom_Rectangle;
            return this.__getBounds(e, this.__transform), e.height
        },
        set_height: function(e) {
            var t = new openfl_geom_Rectangle,
                n = openfl_geom_Matrix.__temp;
            return n.identity(), this.__getBounds(t, n), e != t.height ? this.set_scaleY(e / t.height) : this.set_scaleY(1), e
        },
        get_loaderInfo: function() {
            return null != this.stage ? openfl_Lib.current.__loaderInfo : null
        },
        get_mask: function() {
            return this.__mask
        },
        set_mask: function(e) {
            return e != this.__mask && (this.__transformDirty || (this.__transformDirty = !0, openfl_display_DisplayObject.__worldTransformDirty++), this.__renderDirty || (this.__renderDirty = !0, openfl_display_DisplayObject.__worldRenderDirty++)), null != this.__mask && (this.__mask.__isMask = !1, this.__mask.__setTransformDirty(), this.__mask.__setRenderDirty()), null != e && (e.__isMask = !0), this.__mask = e
        },
        get_mouseX: function() {
            var e, t;
            return e = null != this.stage ? this.stage.__mouseX : openfl_Lib.current.stage.__mouseX, t = null != this.stage ? this.stage.__mouseY : openfl_Lib.current.stage.__mouseY, this.__getRenderTransform().__transformInverseX(e, t)
        },
        get_mouseY: function() {
            var e, t;
            return e = null != this.stage ? this.stage.__mouseX : openfl_Lib.current.stage.__mouseX, t = null != this.stage ? this.stage.__mouseY : openfl_Lib.current.stage.__mouseY, this.__getRenderTransform().__transformInverseY(e, t)
        },
        get_name: function() {
            return this.__name
        },
        set_name: function(e) {
            return this.__name = e
        },
        get_rotation: function() {
            return this.__rotation
        },
        set_rotation: function(e) {
            if (e != this.__rotation) {
                this.__rotation = e;
                var t = this.__rotation * (Math.PI / 180);
                this.__rotationSine = Math.sin(t), this.__rotationCosine = Math.cos(t), this.__transform.a = this.__rotationCosine * this.__scaleX, this.__transform.b = this.__rotationSine * this.__scaleX, this.__transform.c = -this.__rotationSine * this.__scaleY, this.__transform.d = this.__rotationCosine * this.__scaleY, this.__transformDirty || (this.__transformDirty = !0, openfl_display_DisplayObject.__worldTransformDirty++)
            }
            return e
        },
        get_scaleX: function() {
            return this.__scaleX
        },
        set_scaleX: function(e) {
            if (e != this.__scaleX)
                if (this.__scaleX = e, 0 == this.__transform.b) e != this.__transform.a && (this.__transformDirty || (this.__transformDirty = !0, openfl_display_DisplayObject.__worldTransformDirty++)), this.__transform.a = e;
                else {
                    var t = this.__rotationCosine * e,
                        n = this.__rotationSine * e;
                    this.__transform.a == t && this.__transform.b == n || this.__transformDirty || (this.__transformDirty = !0, openfl_display_DisplayObject.__worldTransformDirty++), this.__transform.a = t, this.__transform.b = n
                }
            return e
        },
        get_scaleY: function() {
            return this.__scaleY
        },
        set_scaleY: function(e) {
            if (e != this.__scaleY)
                if (this.__scaleY = e, 0 == this.__transform.c) e != this.__transform.d && (this.__transformDirty || (this.__transformDirty = !0, openfl_display_DisplayObject.__worldTransformDirty++)), this.__transform.d = e;
                else {
                    var t = -this.__rotationSine * e,
                        n = this.__rotationCosine * e;
                    this.__transform.d == n && this.__transform.c == t || this.__transformDirty || (this.__transformDirty = !0, openfl_display_DisplayObject.__worldTransformDirty++), this.__transform.c = t, this.__transform.d = n
                }
            return e
        },
        get_scrollRect: function() {
            return null == this.__scrollRect ? null : this.__scrollRect.clone()
        },
        set_scrollRect: function(e) {
            return e != this.__scrollRect && (this.__transformDirty || (this.__transformDirty = !0, openfl_display_DisplayObject.__worldTransformDirty++)), this.__scrollRect = e
        },
        get_transform: function() {
            return null == this.__objectTransform && (this.__objectTransform = new openfl_geom_Transform(this)), this.__objectTransform
        },
        get_visible: function() {
            return this.__visible
        },
        set_visible: function(e) {
            return e != this.__visible && (this.__renderDirty || (this.__renderDirty = !0, openfl_display_DisplayObject.__worldRenderDirty++)), this.__visible = e
        },
        get_width: function() {
            var e = new openfl_geom_Rectangle;
            return this.__getBounds(e, this.__transform), e.width
        },
        set_width: function(e) {
            var t = new openfl_geom_Rectangle,
                n = openfl_geom_Matrix.__temp;
            return n.identity(), this.__getBounds(t, n), e != t.width ? this.set_scaleX(e / t.width) : this.set_scaleX(1), e
        },
        get_x: function() {
            return this.__transform.tx
        },
        set_x: function(e) {
            return e != this.__transform.tx && (this.__transformDirty || (this.__transformDirty = !0, openfl_display_DisplayObject.__worldTransformDirty++)), this.__transform.tx = e
        },
        get_y: function() {
            return this.__transform.ty
        },
        set_y: function(e) {
            return e != this.__transform.ty && (this.__transformDirty || (this.__transformDirty = !0, openfl_display_DisplayObject.__worldTransformDirty++)), this.__transform.ty = e
        },
        __class__: openfl_display_DisplayObject,
        __properties__: {
            set_y: "set_y",
            get_y: "get_y",
            set_x: "set_x",
            get_x: "get_x",
            set_width: "set_width",
            get_width: "get_width",
            set_visible: "set_visible",
            get_visible: "get_visible",
            get_transform: "get_transform",
            set_scrollRect: "set_scrollRect",
            get_scrollRect: "get_scrollRect",
            set_scaleY: "set_scaleY",
            get_scaleY: "get_scaleY",
            set_scaleX: "set_scaleX",
            get_scaleX: "get_scaleX",
            set_rotation: "set_rotation",
            get_rotation: "get_rotation",
            set_name: "set_name",
            get_name: "get_name",
            get_mouseY: "get_mouseY",
            get_mouseX: "get_mouseX",
            set_mask: "set_mask",
            get_mask: "get_mask",
            get_loaderInfo: "get_loaderInfo",
            set_height: "set_height",
            get_height: "get_height",
            set_filters: "set_filters",
            get_filters: "get_filters",
            get_blendMode: "get_blendMode",
            set_alpha: "set_alpha",
            get_alpha: "get_alpha"
        }
    });
    var openfl_display_InteractiveObject = function() {
        openfl_display_DisplayObject.call(this), this.doubleClickEnabled = !1, this.mouseEnabled = !0, this.needsSoftKeyboard = !1, this.__tabEnabled = !1, this.tabIndex = -1
    };
    $hxClasses["openfl.display.InteractiveObject"] = openfl_display_InteractiveObject, openfl_display_InteractiveObject.__name__ = ["openfl", "display", "InteractiveObject"], openfl_display_InteractiveObject.__super__ = openfl_display_DisplayObject, openfl_display_InteractiveObject.prototype = $extend(openfl_display_DisplayObject.prototype, {
        doubleClickEnabled: null,
        mouseEnabled: null,
        needsSoftKeyboard: null,
        tabIndex: null,
        __tabEnabled: null,
        __getInteractive: function(e) {
            return null != e && (e.push(this), null != this.parent && this.parent.__getInteractive(e)), !0
        },
        __hitTest: function(e, t, n, l, i, s) {
            return !(!s.get_visible() || this.__isMask || i && !this.mouseEnabled) && openfl_display_DisplayObject.prototype.__hitTest.call(this, e, t, n, l, i, s)
        },
        get_tabEnabled: function() {
            return this.__tabEnabled
        },
        __class__: openfl_display_InteractiveObject,
        __properties__: $extend(openfl_display_DisplayObject.prototype.__properties__, {
            get_tabEnabled: "get_tabEnabled"
        })
    });
    var openfl_display_DisplayObjectContainer = function() {
        openfl_display_InteractiveObject.call(this), this.mouseChildren = !0, this.__children = [], this.__removedChildren = openfl__$Vector_Vector_$Impl_$.toObjectVector(null)
    };
    $hxClasses["openfl.display.DisplayObjectContainer"] = openfl_display_DisplayObjectContainer, openfl_display_DisplayObjectContainer.__name__ = ["openfl", "display", "DisplayObjectContainer"], openfl_display_DisplayObjectContainer.__super__ = openfl_display_InteractiveObject, openfl_display_DisplayObjectContainer.prototype = $extend(openfl_display_InteractiveObject.prototype, {
        mouseChildren: null,
        __removedChildren: null,
        addChild: function(e) {
            return this.addChildAt(e, this.get_numChildren())
        },
        addChildAt: function(e, t) {
            if (t > this.__children.length || t < 0) throw new js__$Boot_HaxeError("Invalid index position " + t);
            if (e.parent == this) this.__children[t] != e && (HxOverrides.remove(this.__children, e), this.__children.splice(t, 0, e));
            else {
                null != e.parent && e.parent.removeChild(e), this.__children.splice(t, 0, e), e.parent = this;
                var n = null != this.stage && null == e.stage;
                n && this.__setStageReference(this.stage), e.__transformDirty || (e.__transformDirty = !0, openfl_display_DisplayObject.__worldTransformDirty++), e.__renderDirty || (e.__renderDirty = !0, openfl_display_DisplayObject.__worldRenderDirty++), this.__renderDirty || (this.__renderDirty = !0, openfl_display_DisplayObject.__worldRenderDirty++);
                var l = new openfl_events_Event("added", !0);
                l.target = e, e.__dispatchEvent(l), n && e.__dispatchChildren(new openfl_events_Event("addedToStage", !1, !1))
            }
            return e
        },
        getChildAt: function(e) {
            return e >= 0 && e < this.__children.length ? this.__children[e] : null
        },
        getChildByName: function(e) {
            for (var t = 0, n = this.__children; t < n.length;) {
                var l = n[t];
                if (++t, l.get_name() == e) return l
            }
            return null
        },
        getChildIndex: function(e) {
            for (var t = 0, n = this.__children.length; t < n;) {
                var l = t++;
                if (this.__children[l] == e) return l
            }
            return -1
        },
        removeChild: function(e) {
            return null != e && e.parent == this && (e.__transformDirty || (e.__transformDirty = !0, openfl_display_DisplayObject.__worldTransformDirty++), e.__renderDirty || (e.__renderDirty = !0, openfl_display_DisplayObject.__worldRenderDirty++), this.__renderDirty || (this.__renderDirty = !0, openfl_display_DisplayObject.__worldRenderDirty++), e.__dispatchEvent(new openfl_events_Event("removed", !0)), null != this.stage && (null != e.stage && this.stage.get_focus() == e && this.stage.set_focus(null), e.__dispatchChildren(new openfl_events_Event("removedFromStage", !1, !1)), e.__setStageReference(null)), e.parent = null, HxOverrides.remove(this.__children, e), this.__removedChildren.push(e), e.__transformDirty || (e.__transformDirty = !0, openfl_display_DisplayObject.__worldTransformDirty++)), e
        },
        removeChildAt: function(e) {
            return e >= 0 && e < this.__children.length ? this.removeChild(this.__children[e]) : null
        },
        setChildIndex: function(e, t) {
            t >= 0 && t <= this.__children.length && e.parent == this && (HxOverrides.remove(this.__children, e), this.__children.splice(t, 0, e))
        },
        swapChildren: function(e, t) {
            if (e.parent == this && t.parent == this) {
                var n = HxOverrides.indexOf(this.__children, e, 0),
                    l = HxOverrides.indexOf(this.__children, t, 0);
                this.__children[n] = t, this.__children[l] = e
            }
        },
        __dispatchChildren: function(e) {
            var t = this.__dispatchEvent(e);
            if (t && null != this.__children)
                for (var n = 0, l = this.__children; n < l.length;) {
                    var i = l[n];
                    if (++n, e.target = i, !i.__dispatchChildren(e)) return !1
                }
            return t
        },
        __enterFrame: function(e) {
            for (var t = 0, n = this.__children; t < n.length;) {
                var l = n[t];
                ++t, l.__enterFrame(e)
            }
        },
        __getBounds: function(e, t) {
            if (openfl_display_InteractiveObject.prototype.__getBounds.call(this, e, t), 0 != this.__children.length) {
                null != t && (this.__updateTransforms(t), this.__updateChildren(!0));
                for (var n = 0, l = this.__children; n < l.length;) {
                    var i = l[n];
                    ++n, 0 != i.__scaleX && 0 != i.__scaleY && i.__getBounds(e, i.__worldTransform)
                }
                null != t && (this.__updateTransforms(), this.__updateChildren(!0))
            }
        },
        __hitTest: function(e, t, n, l, i, s) {
            if (!s.get_visible() || this.__isMask || i && !this.mouseEnabled && !this.mouseChildren) return !1;
            if (null != this.get_mask() && !this.get_mask().__hitTestMask(e, t)) return !1;
            if (null != this.__scrollRect) {
                var a = openfl_geom_Point.__temp;
                if (a.setTo(e, t), this.__getRenderTransform().__transformInversePoint(a), !this.__scrollRect.containsPoint(a)) return !1
            }
            var r = this.__children.length;
            if (i) {
                if (null != l && this.mouseChildren) {
                    if (null != l) {
                        for (var o = l.length, d = !1, _ = !1; --r >= 0 && !(((d = this.__children[r].__getInteractive(null)) || this.mouseEnabled && !_) && this.__children[r].__hitTest(e, t, n, l, !0, this.__children[r]) && (_ = !0, d)););
                        if (_) return l.splice(o, 0, s), !0
                    }
                } else
                    for (; --r >= 0;)
                        if (this.__children[r].__hitTest(e, t, n, null, !0, this.__children[r])) return null != l && l.push(s), !0
            } else
                for (; --r >= 0;) this.__children[r].__hitTest(e, t, n, l, !1, this.__children[r]);
            return !1
        },
        __hitTestMask: function(e, t) {
            for (var n = this.__children.length; --n >= 0;)
                if (this.__children[n].__hitTestMask(e, t)) return !0;
            return !1
        },
        __renderCanvas: function(e) {
            if (!(!this.__renderable || this.__worldAlpha <= 0 || null != this.get_mask() && (this.get_mask().get_width() <= 0 || this.get_mask().get_height() <= 0))) {
                openfl_display_InteractiveObject.prototype.__renderCanvas.call(this, e), e.maskManager.pushObject(this);
                for (var t = 0, n = this.__children; t < n.length;) {
                    var l = n[t];
                    ++t, l.__renderCanvas(e)
                }
                for (var i = 0, s = this.__removedChildren; i < s.get_length();) {
                    var a = s.get(i);
                    ++i, null == a.stage && a.__cleanup()
                }
                this.__removedChildren.set_length(0), e.maskManager.popObject(this)
            }
        },
        __renderCanvasMask: function(e) {
            null != this.__graphics && openfl__$internal_renderer_canvas_CanvasGraphics.renderMask(this.__graphics, e);
            var t = new openfl_geom_Rectangle;
            this.__getBounds(t, this.__transform), e.context.rect(0, 0, t.width, t.height)
        },
        __renderGL: function(e) {
            if (this.__renderable && !(this.__worldAlpha <= 0)) {
                openfl_display_InteractiveObject.prototype.__renderGL.call(this, e), e.maskManager.pushObject(this), e.filterManager.pushObject(this);
                for (var t = 0, n = this.__children; t < n.length;) {
                    var l = n[t];
                    ++t, l.__renderGL(e)
                }
                for (var i = 0, s = this.__removedChildren; i < s.get_length();) {
                    var a = s.get(i);
                    ++i, null == a.stage && a.__cleanup()
                }
                this.__removedChildren.set_length(0), e.filterManager.popObject(this), e.maskManager.popObject(this)
            }
        },
        __setStageReference: function(e) {
            if (openfl_display_InteractiveObject.prototype.__setStageReference.call(this, e), null != this.__children)
                for (var t = 0, n = this.__children; t < n.length;) {
                    var l = n[t];
                    ++t, l.__setStageReference(e)
                }
        },
        __update: function(e, t, n) {
            if (openfl_display_InteractiveObject.prototype.__update.call(this, e, t, n), t)
                for (var l = 0, i = this.__children; l < i.length;) {
                    var s = i[l];
                    ++l, s.__update(e, !0, n)
                }
        },
        __updateChildren: function(e) {
            openfl_display_InteractiveObject.prototype.__updateChildren.call(this, e);
            for (var t = 0, n = this.__children; t < n.length;) {
                var l = n[t];
                ++t, l.__update(e, !0)
            }
        },
        get_numChildren: function() {
            return this.__children.length
        },
        __class__: openfl_display_DisplayObjectContainer,
        __properties__: $extend(openfl_display_InteractiveObject.prototype.__properties__, {
            get_numChildren: "get_numChildren"
        })
    });
    var openfl_display_Sprite = function() {
        openfl_display_DisplayObjectContainer.call(this), this.buttonMode = !1, this.useHandCursor = !0
    };
    $hxClasses["openfl.display.Sprite"] = openfl_display_Sprite, openfl_display_Sprite.__name__ = ["openfl", "display", "Sprite"], openfl_display_Sprite.__super__ = openfl_display_DisplayObjectContainer, openfl_display_Sprite.prototype = $extend(openfl_display_DisplayObjectContainer.prototype, {
        buttonMode: null,
        dropTarget: null,
        hitArea: null,
        useHandCursor: null,
        __getCursor: function() {
            return this.buttonMode && this.useHandCursor ? lime_ui_MouseCursor.POINTER : null
        },
        __hitTest: function(e, t, n, l, i, s) {
            if (null != this.hitArea) {
                if (!this.hitArea.mouseEnabled) {
                    this.hitArea.mouseEnabled = !0;
                    var a = this.hitArea.__hitTest(e, t, n, null, !0, s);
                    return this.hitArea.mouseEnabled = !1, a && (l[l.length] = s), a
                }
            } else {
                if (!s.get_visible() || this.__isMask || i && !this.mouseEnabled && !this.mouseChildren) return !1;
                if (null != this.get_mask() && !this.get_mask().__hitTestMask(e, t)) return !1;
                if (null != this.__scrollRect) {
                    var r = openfl_geom_Point.__temp;
                    if (r.setTo(e, t), this.__getRenderTransform().__transformInversePoint(r), !this.__scrollRect.containsPoint(r)) return !1
                }
                if (openfl_display_DisplayObjectContainer.prototype.__hitTest.call(this, e, t, n, l, i, s)) return i;
                if ((!i || this.mouseEnabled) && null != this.__graphics && this.__graphics.__hitTest(e, t, n, this.__getRenderTransform())) return null != l && l.push(s), !0
            }
            return !1
        },
        __hitTestMask: function(e, t) {
            return !!openfl_display_DisplayObjectContainer.prototype.__hitTestMask.call(this, e, t) || !(null == this.__graphics || !this.__graphics.__hitTest(e, t, !0, this.__getRenderTransform()))
        },
        get_graphics: function() {
            return null == this.__graphics && (this.__graphics = new openfl_display_Graphics(this)), this.__graphics
        },
        get_tabEnabled: function() {
            return this.__tabEnabled || this.buttonMode
        },
        __class__: openfl_display_Sprite,
        __properties__: $extend(openfl_display_DisplayObjectContainer.prototype.__properties__, {
            get_graphics: "get_graphics"
        })
    });
    var Main = function() {
        var e;
        this.maxDrawCalls = 0, this.curFrameDrawCalls = 0, this.wasMuted1 = !1, this.fullStop = !1, this.addOverlay = null, this.lastLevel = 0, this._mouseY = 0, this._mouseX = 0, this.movieClips = [], this.clearedCanvas = !0, this.thisAddedToStage = !1, this.overlayMaker = null, this.isPlayingMusic = !1, this.isMouseDown = !1, this.isMobileBrowser = !1, this.inputType = "", this.minUpdateTime = 1, this.lastTime = 0, this.N = 1, this.paused = !0, this.atlases = [], this.inited = !1, openfl_display_Sprite.call(this), this.soundsSpritesStartedThisFrame = [], this.objectsToUpdate = [], Main.current = this, this.config = new Config, this.musicSounds = [], this.isMobileBrowser = this.config.getIsMobileBrowser(), this.addEventListener("addedToStage", $bind(this, this.added)), this.gradToRad = Math.PI / 180, this.hm = new openfl_geom_Matrix, (openfl_Assets.exists("img/MainAtlas.png") || openfl_Assets.cache.hasBitmapData("img/MainAtlas.png")) && (this.batch = new Batching(null, 0, 0, "img/MainAtlas.png", "img/MainAtlas.xml"), this.batch.main = this, this.atlases.push(this.batch));
        for (var t = null, n = 0; n < 100;) {
            var l = n++;
            if (!openfl_Assets.exists("img/Atlas" + l + ".png") && !openfl_Assets.cache.hasBitmapData("img/Atlas" + l + ".png")) break;
            (e = new Batching(null, 0, 0, "img/Atlas" + l + ".png", "img/Atlas" + l + ".xml")).main = this, this.atlases.push(e), 0 == l && (t = e)
        }
        null == this.batch && (this.batch = t);
        
		this.levelsData = levelsData;
		this.lastLevel = 0;
        
		for (var a = 0, r = this.levelsData.levels.length; a < r;) {
            var o = a++;
            if (-1 != (this.levelsData.levels[o].name + "").indexOf("level")) {
                var d = Std.parseInt(StringTools.replace(this.levelsData.levels[o].name, "level", ""));
                this.lastLevel < d && (this.lastLevel = d)
            }
        }
        gradle.onPauseRequested = $bind(this, this.pausePublisherApi), gradle.onResumeRequested = $bind(this, this.resumePublisherApi)
    };
    $hxClasses.Main = Main, Main.__name__ = ["Main"], Main.main = function() {
        Main.created || (openfl_Lib.current.stage.align = 6, openfl_Lib.current.stage.scaleMode = 2, openfl_Lib.current.addChildAt(new Main, 0), Main.created = !0, Preloader.remove())
    }, Main.__super__ = openfl_display_Sprite, Main.prototype = $extend(openfl_display_Sprite.prototype, {
        inited: null,
        config: null,
        sWidth: null,
        sHeight: null,
        objectsToUpdate: null,
        atlases: null,
        batch: null,
        lastBatch: null,
        canvas: null,
        paused: null,
        N: null,
        lastTime: null,
        minUpdateTime: null,
        inputType: null,
        isMobileBrowser: null,
        isMouseDown: null,
        sounds: null,
        isPlayingMusic: null,
        musicSounds: null,
        keyCodesDown: null,
        overlayMaker: null,
        soundsSpritesStartedThisFrame: null,
        thisAddedToStage: null,
        clearedCanvas: null,
        movieClips: null,
        _mouseX: null,
        _mouseY: null,
        desk: null,
        hm: null,
        gradToRad: null,
        levelsData: null,
        lastLevel: null,
        resize: function(e) {
            this.inited ? (this.config.resizeSet(this.inited), this.config.initSize(!0), this.sWidth = this.config.sWidth, this.sHeight = this.config.sHeight, this.N = this.config.N, null != this.addOverlay && (this.addOverlay.set_x(this.addOverlay.set_y(0)), this.addOverlay.set_width(openfl_Lib.current.stage.stageWidth), this.addOverlay.set_height(openfl_Lib.current.stage.stageHeight)), null != this.canvas && (this.canvas.resize(), this.desk.onResize())) : this.init()
        },
        getBatchByImName: function(e) {
            for (var t = 0, n = this.atlases; t < n.length;) {
                var l = n[t];
                if (++t, -1 != l.getImgId(e)) return l
            }
            return null
        },
        addOverlay: null,
        fullStop: null,
        set_fullStop: function(e) {
            return this.fullStop = e, e
        },
        wasMuted1: null,
        pausePublisherApi: function() {
            this.fullStop || (this.set_fullStop(!0), this.soundOfPublisherApi())
        },
        resumePublisherApi: function() {
            this.fullStop && (this.soundOnPublisherApi(), this.set_fullStop(!1), null != Desk.current && Desk.current.updateSoundBtn())
        },
        soundOnPublisherApi: function() {
            this.wasMuted1 || this.unMute()
        },
        soundOfPublisherApi: function() {
            this.wasMuted1 = this.sounds.muted, this.sounds.muted || this.mute()
        },
        added: function(e) {
            this.removeEventListener("addedToStage", $bind(this, this.added)), this.stage.addEventListener("resize", $bind(this, this.resize)), this.thisAddedToStage = !0, this.init(), this.stage.__transparent = !0
        },
        playSpriteSound: function(e, t) {
            null == t && (t = !1), -1 == HxOverrides.indexOf(this.soundsSpritesStartedThisFrame, e, 0) && (this.soundsSpritesStartedThisFrame.push(e), this.sounds.playSound("sprite", e, t, !1, !1, "sound"))
        },
        stopSpriteSound: function(e, t) {
            null == t && (t = !1), this.sounds.stopSound("sprite", e)
        },
        playSpriteMusicE: function(e, t, n, l) {
            null == l && (l = !0), null == n && (n = !0), null == t && (t = !1), n && this.stopAllMusics(l ? null : [e]), (l || -1 == HxOverrides.indexOf(this.musicSounds, e, 0)) && (this.sounds.stopSound("sprite", e), this.sounds.playSound("sprite", e, t, !1, !1, "music"), HxOverrides.remove(this.musicSounds, e)), -1 == HxOverrides.indexOf(this.musicSounds, e, 0) && this.musicSounds.push(e), this.isPlayingMusic = !0
        },
        stopSpriteMusic: function(e) {
            this.sounds.stopSound("sprite", e), this.isPlayingMusic = !1
        },
        stopAllMusics: function(e) {
            for (var t = 0; t < this.musicSounds.length;) null == e || -1 == HxOverrides.indexOf(e, this.musicSounds[t], 0) ? (this.stopSpriteMusic(this.musicSounds[t]), HxOverrides.remove(this.musicSounds, this.musicSounds[t])) : t++
        },
        mute: function() {
            this.sounds.mute(), this.fullStop || gradle.event("EVENT_VOLUMECHANGE", {
                bgmVolume: 0,
                sfxVolume: 0
            })
        },
        unMute: function() {
            this.sounds.unMute(), this.fullStop || gradle.event("EVENT_VOLUMECHANGE", {
                bgmVolume: 1,
                sfxVolume: 1
            })
        },
        init: function() {
            this.inited || (this.inited = !0, this.config.checkSiteLock(), this.config.initSize() ? this.inited = !1 : (this.sWidth = this.config.sWidth, this.sHeight = this.config.sHeight, this.N = this.config.N, this.sounds = this.config.initSounds(), null == this.canvas && (this.canvas = new BatchCanvas), this.addChild(this.canvas), this.canvas.set_visible(!1), this.addEventListener("enterFrame", $bind(this, this.update)), this.lastTime = openfl_Lib.getTimer(), this.keyCodesDown = [], this.stage.addEventListener("keyDown", $bind(this, this.keyDown)), this.stage.addEventListener("keyUp", $bind(this, this.keyUp)), "click" == this.inputType || "" == this.inputType ? (this.stage.addEventListener("mouseDown", $bind(this, this.mDown)), this.stage.addEventListener("mouseMove", $bind(this, this.mMove)), this.stage.addEventListener("mouseUp", $bind(this, this.mUp))) : (this.stage.addEventListener("touchBegin", $bind(this, this.mDown)), this.stage.addEventListener("touchMove", $bind(this, this.mMove)), this.stage.addEventListener("touchEnd", $bind(this, this.mUp))), this.setUp(), this.setChildIndex(this.canvas, this.get_numChildren() - 1), this.newGame(), this.config.sendToTopTapToStart(), this.paused = !1))
        },
        setUp: function() {
            this.desk = new Desk
        },
        keyDown: function(e) {
            for (var t = 0, n = this.keyCodesDown.length; t < n;) {
                var l = t++;
                if (this.keyCodesDown[l] == e.keyCode) return
            }
            this.keyCodesDown.push(e.keyCode)
        },
        keyUp: function(e) {
            HxOverrides.remove(this.keyCodesDown, e.keyCode)
        },
        tapToStartClick: function(e) {
            this.inputType = e.type
        },
        mDown: function(e) {
            this._mouseX = openfl_Lib.current.stage.__mouseX / this.get_scaleX(), this._mouseY = openfl_Lib.current.stage.__mouseY / this.get_scaleY(), this.isMouseDown = !0
        },
        mMove: function(e) {
            this._mouseX = openfl_Lib.current.stage.__mouseX / this.get_scaleX(), this._mouseY = openfl_Lib.current.stage.__mouseY / this.get_scaleY()
        },
        mUp: function(e) {
            this._mouseX = openfl_Lib.current.stage.__mouseX / this.get_scaleX(), this._mouseY = openfl_Lib.current.stage.__mouseY / this.get_scaleY(), this.isMouseDown = !1
        },
        pauseGame: function(e) {},
        newGame: function() {
            this.desk.startNewGame(0), this.paused = !1
        },
        isKeyDown: function(e) {
            for (var t = 0, n = this.keyCodesDown.length; t < n;) {
                var l = t++;
                if (this.keyCodesDown[l] == e) return !0
            }
            return !1
        },
        curFrameDrawCalls: null,
        maxDrawCalls: null,
        get_mouseX: function() {
            return this._mouseX
        },
        get_mouseY: function() {
            return this._mouseY
        },
        updateWorld: function(e) {},
        update: function(e) {
            this._mouseX = openfl_Lib.current.stage.__mouseX / this.get_scaleX(), this._mouseY = openfl_Lib.current.stage.__mouseY / this.get_scaleY();
            var t = openfl_Lib.getTimer(),
                n = t - this.lastTime;
            if (n >= this.minUpdateTime && (this.lastTime = t, !this.fullStop)) {
                for (var l = 0, i = this.movieClips.length; l < i;) {
                    var s = l++;
                    this.movieClips[s].update()
                }
                for (; this.soundsSpritesStartedThisFrame.length > 0;) this.soundsSpritesStartedThisFrame.pop();
                for (var a = 0, r = this.objectsToUpdate.length; a < r;) {
                    var o = a++;
                    this.objectsToUpdate[o].update(n)
                }
                this.paused && null != e || (this.desk.update(n), this.updateWorld(n), null != this.lastBatch && this.lastBatch.render(this.canvas, !this.clearedCanvas), this.lastBatch = null, this.clearedCanvas = !1, this.curFrameDrawCalls > this.maxDrawCalls && (this.maxDrawCalls = this.curFrameDrawCalls), this.curFrameDrawCalls = 0)
            }
        },
        __class__: Main,
        __properties__: $extend(openfl_display_Sprite.prototype.__properties__, {
            set_fullStop: "set_fullStop"
        })
    });
    var DocumentClass = function() {
        openfl_Lib.current.addChild(this), Main.call(this), this.dispatchEvent(new openfl_events_Event("addedToStage", !1, !1))
    };
    $hxClasses.DocumentClass = DocumentClass, DocumentClass.__name__ = ["DocumentClass"], DocumentClass.__super__ = Main, DocumentClass.prototype = $extend(Main.prototype, {
        __class__: DocumentClass
    });
    var ArrayTools = function() {};
    $hxClasses.ArrayTools = ArrayTools, ArrayTools.__name__ = ["ArrayTools"], ArrayTools.randomSort = function(e) {
        for (var t = 0, n = e.length; t < n;) {
            t++;
            var l = Std.random(e.length),
                i = Std.random(e.length),
                s = e[l];
            e[l] = e[i], e[i] = s
        }
        return e
    };
    var Assembler = function(e) {
        var t;
        this.endAnimRobot = null, this.quake = null, this.wasFrameChildIndex = 0, this.mostTopChildIndex = 0, this.passedTime = 0, this.timerTf = null, this.started = !1, this.drY = 0, this.drX = 0, this.dragObjectOnCellTransform = null, this.dragObject = null, this.isDragging = !1, this.completed = !1, this.curTargetIndex = -1, this.targetsFrames = [], this.initTargetsTransfoms = new haxe_ds_ObjectMap, this.allTargets = [], this.targetsGroups = [], this.assembleData = e, this.main = Main.current, this.desk = Desk.current;
        for (var n = 0, l = e.targets; n < l.length;) {
            var i = l[n];
            ++n, t = this.getTargets(i), this.targetsGroups.push(t), this.allTargets = this.allTargets.concat(t);
            for (var s = 0; s < t.length;) {
                var a = t[s];
                ++s;
                var r = {
                    x: a.get_x(),
                    y: a.get_y(),
                    sx: a.get_scaleX(),
                    sy: a.get_scaleY(),
                    rotation: a.get_rotation()
                };
                this.initTargetsTransfoms.set(a, r)
            }
            var o, d = i.split(":");
            o = 1 == d.length ? d[0] : d[1];
            var _ = this.desk.getElementByName(o);
            _.set_alpha(.5), this.targetsFrames.push(_)
        }
        for (var h = 0, p = this.allTargets; h < p.length;) {
            var c = p[h];
            ++h, c.set_visible(!1), this.desk.levels.getChildIndex(c) > this.mostTopChildIndex && (this.mostTopChildIndex = this.desk.levels.getChildIndex(c))
        }
        this.cells = this.desk.getElementsByNamePrefix(e.cellsTarget), this.activateNextTargets(), this.timerTf = this.desk.levelsTextFields[e.timerTfIndex], null != this.timerTf && this.timerTf.set_text("0"), this.quake = this.desk.getElementByName("quake"), null != this.quake && this.quake.set_visible(!1), Assembler.lastAssemblerSeqIndex = e.assemblerSequenceIndex, Assembler.lastAssemblerLevel = this.desk.curLevel, this.endAnimRobot = this.desk.getElementByName("RobotAnim"), null != this.endAnimRobot && this.endAnimRobot.set_visible(!1), this.tutor = this.desk.getElementByName("AssembleTutor"), null != this.tutor && this.tutor.play()
    };
    $hxClasses.Assembler = Assembler, Assembler.__name__ = ["Assembler"], Assembler.__properties__ = {
        set_bestTime: "set_bestTime",
        get_bestTime: "get_bestTime",
        set_assembledRobots: "set_assembledRobots",
        get_assembledRobots: "get_assembledRobots"
    }, Assembler.get_assembledRobots = function() {
        return null == Assembler._assembledRobots && (null != LocalSaves.getVar("assembledRobots") ? Assembler._assembledRobots = LocalSaves.getVar("assembledRobots") : Assembler._assembledRobots = []), Assembler._assembledRobots
    }, Assembler.set_assembledRobots = function(e) {
        return LocalSaves.setVar("assembledRobots", Assembler._assembledRobots), Assembler._assembledRobots
    }, Assembler.get_bestTime = function() {
        return -1 == Assembler._bestTime && (null != LocalSaves.getVar("bestTime") ? Assembler._bestTime = LocalSaves.getVar("bestTime") : Assembler._bestTime = 0), Assembler._bestTime
    }, Assembler.set_bestTime = function(e) {
        return Assembler._bestTime != e && (Assembler._bestTime = e, LocalSaves.setVar("bestTime", Assembler._bestTime)), Assembler._bestTime
    }, Assembler.prototype = {
        targetsGroups: null,
        allTargets: null,
        assembleData: null,
        initTargetsTransfoms: null,
        targetsFrames: null,
        main: null,
        desk: null,
        curTargetIndex: null,
        curAssembleParts: null,
        completed: null,
        cells: null,
        isDragging: null,
        dragObject: null,
        dragObjectInitIndex: null,
        dragObjectOnCellTransform: null,
        drX: null,
        drY: null,
        started: null,
        timerTf: null,
        passedTime: null,
        mostTopChildIndex: null,
        wasFrameChildIndex: null,
        curFrame: null,
        quake: null,
        endAnimRobot: null,
        tutor: null,
        findSlot: function(e) {
            var t, n = e.split(":");
            t = 1 == n.length ? n[0] : n[1];
            for (var l = this.desk.getElementsByFolderName("Slots"), i = 0; i < l.length;) {
                var s = l[i];
                if (++i, s.get_name() == t) return s
            }
            return null
        },
        activateNextTargets: function() {
            if (null != this.curFrame && (motion_Actuate.stop(this.curFrame), this.curFrame.set_alpha(.5), this.desk.levels.setChildIndex(this.curFrame, this.wasFrameChildIndex)), this.curTargetIndex >= 0) {
                var e = this.findSlot(this.assembleData.targets[this.curTargetIndex]);
                null != e && e.gotoAndStop(1)
            }
            if (-1 != this.curTargetIndex && this.main.playSpriteSound("CompleteGroup"), this.curTargetIndex++, this.curTargetIndex >= this.targetsGroups.length) {
                this.completed = !0, this.main.playSpriteSound("AssembleComplete"), Assembler.curTime = Math.ceil(this.passedTime / 1e3), 0 == Assembler.get_bestTime() && Assembler.set_bestTime(Assembler.curTime), Assembler.get_bestTime() > Assembler.curTime && Assembler.set_bestTime(Assembler.curTime);
                for (var t = 0, n = this.allTargets; t < n.length;) {
                    var l = n[t];
                    ++t, l.set_visible(!1)
                }
                for (var i = 0, s = this.targetsFrames; i < s.length;) {
                    var a = s[i];
                    ++i, a.set_visible(!1)
                }
                return null != this.endAnimRobot && (this.endAnimRobot.set_visible(!0), this.endAnimRobot.play(), this.endAnimRobot.isLoop = !0), void(-1 == (r = Assembler.get_assembledRobots(), HxOverrides.indexOf(r, Assembler.lastAssemblerSeqIndex, 0)) && (Assembler.get_assembledRobots().push(Assembler.lastAssemblerSeqIndex), Assembler.set_assembledRobots(Assembler.get_assembledRobots())))
            }
            var r;
            this.curAssembleParts = this.targetsGroups[this.curTargetIndex];
            for (var o, d = 0, _ = 0, h = this.curAssembleParts; _ < h.length;) {
                var p = h[_];
                ++_, p.set_visible(!0), o = this.cells[d], p.set_x(o.get_x()), p.set_y(o.get_y());
                var c = Math.max(p.get_width(), p.get_height());
                p.set_scaleX(p.set_scaleY(Math.min(o.get_width(), o.get_height()) / c)), p.get_scaleX() > 1 && p.set_scaleX(p.set_scaleY(1)), d++
            }
            this.curFrame = this.targetsFrames[this.curTargetIndex], this.wasFrameChildIndex = this.desk.levels.getChildIndex(this.curFrame), this.desk.levels.setChildIndex(this.curFrame, this.mostTopChildIndex), motion_Actuate.tween(this.curFrame, .8, {
                alpha: 1
            }).ease(motion_easing_Linear.get_easeNone()).repeat(-1).reflect()
        },
        getTargets: function(e) {
            var t = e.split(":");
            return t.length > 1 && ("folder" == t[0] || "layer" == t[0]) ? "layer" == t[0] ? this.desk.getElementsByLayerName(t[1]) : "folder" == t[0] ? this.desk.getElementsByFolderName(t[1]) : null : [this.desk.getElementByName(e)]
        },
        destroy: function() {
            this.targetsGroups = null, this.allTargets = null, this.assembleData = null, this.desk = null, this.curAssembleParts = null, this.cells = null, this.initTargetsTransfoms = null, this.dragObject = null, this.dragObjectOnCellTransform = null, this.main = null, this.endAnimRobot = null, null != this.curFrame && motion_Actuate.stop(this.curFrame), this.curFrame = null, this.targetsFrames = null, this.tutor = null
        },
        onMDown: function() {
            for (var e = 0, t = this.curAssembleParts; e < t.length;) {
                var n = t[e];
                if (++e, this.desk.hitsMouse(n)) {
                    this.started = !0, this.isDragging = !0, this.dragObject = n, this.dragObjectOnCellTransform = {
                        x: n.get_x(),
                        y: n.get_y(),
                        sx: n.get_scaleX(),
                        sy: n.get_scaleY(),
                        rotation: n.get_rotation()
                    };
                    var l = this.initTargetsTransfoms.h[n.__id__];
                    this.dragObjectInitIndex = this.desk.levels.getChildIndex(this.dragObject), this.desk.levels.addChild(this.dragObject), motion_Actuate.tween(this.dragObject, .3, {
                        scaleX: l.sx,
                        scaleY: l.sy
                    }).ease(motion_easing_Back.get_easeOut()), this.drX = this.main.get_mouseX() - this.dragObject.get_x(), this.drY = this.main.get_mouseY() - this.dragObject.get_y(), this.main.playSpriteSound("TakePart"), null != this.tutor && this.tutor.get_visible() && this.tutor.set_visible(!1);
                    break
                }
            }
        },
        checkDragObjectIsOnPos: function() {
            if (null == this.dragObject) return !1;
            var e, t = this.initTargetsTransfoms.h[this.dragObject.__id__],
                n = this.dragObject.get_x() - t.x,
                l = this.dragObject.get_y() - t.y;
            return e = this.main.isMobileBrowser ? 60 : 30, Math.sqrt(n * n + l * l) < e
        },
        onMUp: function() {
            this.isDragging && (motion_Actuate.stop(this.dragObject), this.checkDragObjectIsOnPos() ? this.setDragObjectOnPlace() : this.returnDragObjectToCell(), this.dragObject = null, this.isDragging = !1)
        },
        setDragObjectOnPlace: function() {
            if (null != this.dragObject) {
                var e = this.initTargetsTransfoms.h[this.dragObject.__id__];
                motion_Actuate.tween(this.dragObject, .2, {
                    x: e.x,
                    y: e.y
                }).ease(motion_easing_Sine.get_easeOut()).onComplete($bind(this, this.onPartGetInPlace)), this.desk.levels.setChildIndex(this.dragObject, this.dragObjectInitIndex), HxOverrides.remove(this.curAssembleParts, this.dragObject), this.main.playSpriteSound("PutPart"), 0 == this.curAssembleParts.length && this.activateNextTargets()
            }
        },
        onPartGetInPlace: function() {
            this.shakeWorld(), this.showQuake()
        },
        shakeWorld: function() {
            null != this.desk && AnimationHelper.shake(this.desk)
        },
        showQuake: function() {
            null != this.quake && (this.quake.set_visible(!0), this.quake.set_alpha(.15), this.quake.set_scaleX(this.quake.set_scaleY(8)), motion_Actuate.tween(this.quake, .2, {
                scaleX: 15,
                scaleY: 15,
                alpha: 1e-4
            }).ease(motion_easing_Linear.get_easeNone()).onComplete($bind(this, this.onQuakeEnd)))
        },
        onQuakeEnd: function() {
            null != this.quake && this.quake.set_visible(!1)
        },
        returnDragObjectToCell: function() {
            motion_Actuate.tween(this.dragObject, .4, {
                x: this.dragObjectOnCellTransform.x,
                y: this.dragObjectOnCellTransform.y,
                scaleX: this.dragObjectOnCellTransform.sx,
                scaleY: this.dragObjectOnCellTransform.sy
            }).ease(motion_easing_Sine.get_easeOut()), this.desk.levels.setChildIndex(this.dragObject, this.dragObjectInitIndex)
        },
        update: function(e) {
            this.isDragging && (this.dragObject.set_x(this.main.get_mouseX() - this.drX), this.dragObject.set_y(this.main.get_mouseY() - this.drY)), this.started && !this.completed && (this.passedTime += e, this.timerTf.set_text(Math.ceil(this.passedTime / 1e3) + ""))
        },
        __class__: Assembler
    };
    var BaseGameMode = function() {
        this.clickFunctions = [], this.completed = !1, this.main = Main.current, this.desk = Desk.current
    };
    $hxClasses.BaseGameMode = BaseGameMode, BaseGameMode.__name__ = ["BaseGameMode"], BaseGameMode.prototype = {
        main: null,
        desk: null,
        completed: null,
        clickFunctions: null,
        destroy: function() {
            this.clickFunctions = null, this.desk = null, this.main = null
        },
        onResize: function() {},
        onMDown: function() {
            for (var e = this, t = 0, n = this.clickFunctions; t < n.length;) {
                var l = [n[t]];
                if (++t, l[0].el.get_visible() && l[0].el.get_alpha() > .5 && this.desk.hitsMouse(l[0].el)) {
                    this.desk.animateBtnClick(l[0].el, function(t) {
                        return function() {
                            e.callMethod(t[0].callback, t[0].params)
                        }
                    }(l));
                    break
                }
            }
        },
        onMUp: function() {},
        update: function(e) {},
        callMethod: function(e, t) {
            return null == t && (t = []), Reflect.callMethod(e, e, t)
        },
        __class__: BaseGameMode
    };
    var BatchCanvas = function(e, t) {
        null == t && (t = 0), null == e && (e = 0), openfl_display_Sprite.call(this), this.main = Main.current
    };
    $hxClasses.BatchCanvas = BatchCanvas, BatchCanvas.__name__ = ["BatchCanvas"], BatchCanvas.__super__ = openfl_display_Sprite, BatchCanvas.prototype = $extend(openfl_display_Sprite.prototype, {
        bmCanvas: null,
        main: null,
        resize: function() {
            if (null != this.bmCanvas) {
                var e = this.bmCanvas.bitmapData.image.buffer.__srcContext;
                e.canvas.width = Math.ceil(Main.current.sWidth), e.canvas.height = Math.ceil(Main.current.sHeight)
            }
        },
        clearTileMap: function() {
            for (var e, t = 0; t < this.get_numChildren();)
                if (Std.is(this.getChildAt(t), openfl_display_Tilemap))
                    for (var n = 0, l = (e = this.removeChildAt(t)).numTiles; n < l;) {
                        var i = n++;
                        e.getTileAt(i).visible = !1
                    } else t++
        },
        __class__: BatchCanvas
    });
    var Batching = function(e, t, n, l, i, s, a, r, o) {
        if (null == o && (o = ""), null == a && (a = ""), null == n && (n = 1024), null == t && (t = 1024), this._curChildIndex = 0, this.getBitmapDataCache = new haxe_ds_StringMap, this.maxHeight = 0, this.curY = 0, this.curX = 0, this.atlasImgPath = l, this.atlasXmlPath = i, this.atlasBmd = r, this.atlasXml = o, this.drawArr = [], Batching.instances.h[Batching.count] = this, this.tileSheetId = Batching.count, Batching.count++, this.zonesMap = new haxe_ds_StringMap, this.mapZones = new haxe_ds_IntMap, this.rects = new haxe_ds_StringMap, this.frames = new haxe_ds_StringMap, this.framesByInd = [], this.frameM = new openfl_geom_Matrix, this.hm = new openfl_geom_Matrix, this.p = new openfl_geom_Point, this.ct = new openfl_geom_ColorTransform, this.hmm1 = new openfl_geom_Matrix, this.hmm2 = new openfl_geom_Matrix, null == l && null == s && null == r && (this.bmd = new openfl_display_BitmapData(t, n, !0, 0)), null == l && null == r)
            if (null == s) {
                for (var d, _ = null, h = new openfl_geom_Point; e.length > 0;) {
                    d = e.pop(), _ = openfl_Assets.getBitmapData(d), this.curX + _.width > this.bmd.width && (this.curX = 0, this.curY += this.maxHeight + 1, this.maxHeight = 0), this.maxHeight < _.height && (this.maxHeight = _.height), h.x = this.curX, h.y = this.curY, this.bmd.copyPixels(_, _.rect, h);
                    var p = new openfl_geom_Rectangle(h.x, h.y, _.width, _.height);
                    this.rects.set(d, p), this.curX += _.width + 1
                }
                this.tileSet = new openfl_display_Tileset(this.bmd);
                var c, Q, U = Main.current.sWidth,
                    m = Main.current.sWidth;
                c = null == U ? 1 : 0 | Main.current.sWidth, Q = null == m ? 1 : 0 | Main.current.sHeight, c = 0 == c ? 1 : c, Q = 0 == Q ? 1 : Q, this.tileMap = new openfl_display_Tilemap(c, Q, this.tileSet, !0);
                for (var u = 0, F = (new openfl_geom_Rectangle, this.rects.keys()); F.hasNext();) {
                    var N = F.next();
                    u = this.tileSet.addRect(this.rects.get(N)), this.zonesMap.set(N, u), this.mapZones.h[u] = N
                }
                this.main = Main.current
            } else this.setFromBmd(s, a);
        else this.parseAtlas()
    };
    $hxClasses.Batching = Batching, Batching.__name__ = ["Batching"], Batching.prototype = {
        tileSheetId: null,
        curX: null,
        curY: null,
        maxHeight: null,
        zonesMap: null,
        mapZones: null,
        rects: null,
        frames: null,
        framesByInd: null,
        bmd: null,
        tileMap: null,
        tileSet: null,
        atlasImgPath: null,
        atlasXmlPath: null,
        hm: null,
        hmm1: null,
        hmm2: null,
        p: null,
        ct: null,
        frameM: null,
        drawArr: null,
        getBitmapDataCache: null,
        main: null,
        atlasBmd: null,
        atlasXml: null,
        parseAtlas: function() {
            var e, t, n;
            null == this.atlasBmd ? (e = openfl_Assets.getBitmapData(this.atlasImgPath), t = Xml.parse(openfl_Assets.getText(this.atlasXmlPath))) : (e = this.atlasBmd, t = Xml.parse(this.atlasXml));
            for (var l, i = t.firstElement().elementsNamed("SubTexture"); i.hasNext();) {
                var s = i.next();
                n = new openfl_geom_Rectangle(Std.parseFloat(s.get("x")), Std.parseFloat(s.get("y")), Std.parseFloat(s.get("width")), Std.parseFloat(s.get("height")));
                var a = s.get("name");
                if (this.rects.set(a, n), void 0, l = Std.parseFloat(s.get("frameX")), !isNaN(l)) {
                    n = new openfl_geom_Rectangle(Std.parseFloat(s.get("frameX")), Std.parseFloat(s.get("frameY")), Std.parseFloat(s.get("frameWidth")), Std.parseFloat(s.get("frameHeight")));
                    var r = s.get("name");
                    this.frames.set(r, n)
                }
            }
            this.bmd = e, this.tileSet = new openfl_display_Tileset(this.bmd);
            var o, d, _, h = Main.current.sWidth,
                p = Main.current.sWidth;
            o = null == h ? 1 : 0 | Main.current.sWidth, d = null == p ? 1 : 0 | Main.current.sHeight, o = 0 == o ? 1 : o, d = 0 == d ? 1 : d, this.tileMap = new openfl_display_Tilemap(o, d, this.tileSet, !0);
            new openfl_geom_Rectangle;
            for (var c = this.rects.keys(); c.hasNext();) {
                var Q = c.next();
                _ = this.tileSet.addRect(this.rects.get(Q)), this.zonesMap.set(Q, _), this.mapZones.h[_] = Q, this.framesByInd[_] = this.frames.get(Q)
            }
        },
        setFromBmd: function(e, t) {
            this.rects.set(t, e.rect), this.bmd = e, this.tileSet = new openfl_display_Tileset(this.bmd);
            var n, l, i, s = Main.current.sWidth,
                a = Main.current.sWidth;
            n = null == s ? 1 : 0 | Main.current.sWidth, l = null == a ? 1 : 0 | Main.current.sHeight, n = 0 == n ? 1 : n, l = 0 == l ? 1 : l, this.tileMap = new openfl_display_Tilemap(n, l, this.tileSet, !0);
            new openfl_geom_Rectangle;
            for (var r = this.rects.keys(); r.hasNext();) {
                var o = r.next();
                i = this.tileSet.addRect(this.rects.get(o)), this.zonesMap.set(o, i), this.mapZones.h[i] = o, this.framesByInd[i] = this.frames.get(o)
            }
        },
        getImgId: function(e) {
            var t = this.zonesMap.get(e);
            return null == t ? -1 : t
        },
        getImgRect: function(e) {
            return this.frames.exists(e) ? this.frames.get(e).clone() : this.rects.get(e).clone()
        },
        getBitmapData: function(e, t) {
            if (null == t && (t = !0), -1 == this.getImgId(e)) return null;
            var n, l, i, s, a, r = this.getImgRect(e);
            return n = this.frames.exists(e) ? this.frames.get(e) : null, !t && this.getBitmapDataCache.exists(e) ? this.getBitmapDataCache.get(e) : (l = null != n ? new openfl_display_BitmapData(Math.ceil(n.width), Math.ceil(n.height), !0, 0) : new openfl_display_BitmapData(Math.ceil(r.width), Math.ceil(r.height), !0, 0), i = null != n ? -n.x : 0, s = null != n ? -n.y : 0, a = this.tileSet.getRect(this.getImgId(e)), this.p.x = i, this.p.y = s, l.copyPixels(this.bmd, a, this.p, null, null, !0), t || this.getBitmapDataCache.exists(e) || this.getBitmapDataCache.set(e, l), l)
        },
        _curChildIndex: null,
        render: function(e, t) {
            if (null == t && (t = !0), t && (this._curChildIndex = 0, e.clearTileMap()), this.tileMap.parent != e ? e.addChild(this.tileMap) : e.setChildIndex(this.tileMap, e.get_numChildren()), this.tileMap.get_width() != (0 | Main.current.sWidth) || this.tileMap.get_height() != (0 | Main.current.sHeight)) {
                var n, l, i = Main.current.sWidth,
                    s = Main.current.sWidth;
                n = null == i ? 1 : 0 | Main.current.sWidth, l = null == s ? 1 : 0 | Main.current.sHeight, n = 0 == n ? 1 : n, l = 0 == l ? 1 : l, this.tileMap.set_width(n), this.tileMap.set_height(l)
            }
            if (0 != this.drawArr.length) {
                for (var a, r = 1, o = 0; o < this.drawArr.length;) this.tileMap.numTiles > this._curChildIndex + 1 ? (a = this.tileMap.getTileAt(this._curChildIndex)).id != (0 | this.drawArr[o + 2]) && a.set_id(0 | this.drawArr[o + 2]) : (a = new openfl_display_Tile(0 | this.drawArr[o + 2]), this.tileMap.addTile(a)), a.matrix.identity(), a.matrix.tx = this.drawArr[o], a.matrix.ty = this.drawArr[o + 1], 0 | this.drawArr[o + 2], a.matrix.a = this.drawArr[o + 3], a.matrix.b = this.drawArr[o + 4], a.matrix.c = this.drawArr[o + 5], a.matrix.d = this.drawArr[o + 6], r = this.drawArr[o + 7], o += 8, a.set_matrix(a.matrix), a.visible = !0, a.set_alpha(r), this._curChildIndex++;
                for (; this.drawArr.length > 0;) this.drawArr.pop()
            }
        },
        __class__: Batching
    };
    var openfl_display_Bitmap = function(e, t, n) {
        null == n && (n = !1), openfl_display_DisplayObject.call(this), this.set_bitmapData(e), this.pixelSnapping = t, this.smoothing = n, null == t && (this.pixelSnapping = 1)
    };
    $hxClasses["openfl.display.Bitmap"] = openfl_display_Bitmap, openfl_display_Bitmap.__name__ = ["openfl", "display", "Bitmap"], openfl_display_Bitmap.__super__ = openfl_display_DisplayObject, openfl_display_Bitmap.prototype = $extend(openfl_display_DisplayObject.prototype, {
        bitmapData: null,
        pixelSnapping: null,
        smoothing: null,
        __getBounds: function(e, t) {
            if (null != this.bitmapData) {
                var n = openfl_geom_Rectangle.__temp;
                n.setTo(0, 0, this.bitmapData.width, this.bitmapData.height), n.__transform(n, t), e.__expand(n.x, n.y, n.width, n.height)
            }
        },
        __hitTest: function(e, t, n, l, i, s) {
            if (!s.get_visible() || this.__isMask || null == this.bitmapData) return !1;
            if (null != this.get_mask() && !this.get_mask().__hitTestMask(e, t)) return !1;
            this.__getRenderTransform();
            var a = this.__renderTransform.__transformInverseX(e, t),
                r = this.__renderTransform.__transformInverseY(e, t);
            return a > 0 && r > 0 && a <= this.bitmapData.width && r <= this.bitmapData.height && (!(null != this.__scrollRect && !this.__scrollRect.contains(a, r)) && (null == l || i || l.push(s), !0))
        },
        __hitTestMask: function(e, t) {
            if (null == this.bitmapData) return !1;
            this.__getRenderTransform();
            var n = this.__renderTransform.__transformInverseX(e, t),
                l = this.__renderTransform.__transformInverseY(e, t);
            return n > 0 && l > 0 && n <= this.bitmapData.width && l <= this.bitmapData.height
        },
        __renderCanvas: function(e) {
            openfl__$internal_renderer_canvas_CanvasBitmap.render(this, e)
        },
        __renderCanvasMask: function(e) {
            e.context.rect(0, 0, this.get_width(), this.get_height())
        },
        __renderGL: function(e) {
            openfl__$internal_renderer_opengl_GLBitmap.render(this, e)
        },
        __updateMask: function(e) {
            null != this.bitmapData && (e.__commands.overrideMatrix(this.__worldTransform), e.beginFill(0), e.drawRect(0, 0, this.bitmapData.width, this.bitmapData.height), null == e.__bounds && (e.__bounds = new openfl_geom_Rectangle), this.__getBounds(e.__bounds, openfl_geom_Matrix.__identity), openfl_display_DisplayObject.prototype.__updateMask.call(this, e))
        },
        set_bitmapData: function(e) {
            return this.bitmapData = e, this.smoothing = !1, null != this.__filters && this.__filters.length, this.bitmapData
        },
        get_height: function() {
            return null != this.bitmapData ? this.bitmapData.height * Math.abs(this.get_scaleY()) : 0
        },
        set_height: function(e) {
            return null != this.bitmapData ? (e != this.bitmapData.height && this.set_scaleY(e / this.bitmapData.height), e) : 0
        },
        get_width: function() {
            return null != this.bitmapData ? this.bitmapData.width * Math.abs(this.__scaleX) : 0
        },
        set_width: function(e) {
            return null != this.bitmapData ? (e != this.bitmapData.width && this.set_scaleX(e / this.bitmapData.width), e) : 0
        },
        __class__: openfl_display_Bitmap,
        __properties__: $extend(openfl_display_DisplayObject.prototype.__properties__, {
            set_bitmapData: "set_bitmapData"
        })
    });
    var lime_math_Matrix3 = function() {};
    $hxClasses["lime.math.Matrix3"] = lime_math_Matrix3, lime_math_Matrix3.__name__ = ["lime", "math", "Matrix3"];
    var openfl_geom_Matrix = function(e, t, n, l, i, s) {
        null == s && (s = 0), null == i && (i = 0), null == l && (l = 1), null == n && (n = 0), null == t && (t = 0), null == e && (e = 1), this.a = e, this.b = t, this.c = n, this.d = l, this.tx = i, this.ty = s
    };
    $hxClasses["openfl.geom.Matrix"] = openfl_geom_Matrix, openfl_geom_Matrix.__name__ = ["openfl", "geom", "Matrix"], openfl_geom_Matrix.prototype = {
        a: null,
        b: null,
        c: null,
        d: null,
        tx: null,
        ty: null,
        clone: function() {
            return new openfl_geom_Matrix(this.a, this.b, this.c, this.d, this.tx, this.ty)
        },
        concat: function(e) {
            var t = this.a * e.a + this.b * e.c;
            this.b = this.a * e.b + this.b * e.d, this.a = t;
            var n = this.c * e.a + this.d * e.c;
            this.d = this.c * e.b + this.d * e.d, this.c = n;
            var l = this.tx * e.a + this.ty * e.c + e.tx;
            this.ty = this.tx * e.b + this.ty * e.d + e.ty, this.tx = l
        },
        copyFrom: function(e) {
            this.a = e.a, this.b = e.b, this.c = e.c, this.d = e.d, this.tx = e.tx, this.ty = e.ty
        },
        identity: function() {
            this.a = 1, this.b = 0, this.c = 0, this.d = 1, this.tx = 0, this.ty = 0
        },
        invert: function() {
            var e = this.a * this.d - this.b * this.c;
            if (0 == e) this.a = this.b = this.c = this.d = 0, this.tx = -this.tx, this.ty = -this.ty;
            else {
                e = 1 / e;
                var t = this.d * e;
                this.d = this.a * e, this.a = t, this.b *= -e, this.c *= -e;
                var n = -this.a * this.tx - this.c * this.ty;
                this.ty = -this.b * this.tx - this.d * this.ty, this.tx = n
            }
            return this
        },
        rotate: function(e) {
            var t = Math.cos(e),
                n = Math.sin(e),
                l = this.a * t - this.b * n;
            this.b = this.a * n + this.b * t, this.a = l;
            var i = this.c * t - this.d * n;
            this.d = this.c * n + this.d * t, this.c = i;
            var s = this.tx * t - this.ty * n;
            this.ty = this.tx * n + this.ty * t, this.tx = s
        },
        scale: function(e, t) {
            this.a *= e, this.b *= t, this.c *= e, this.d *= t, this.tx *= e, this.ty *= t
        },
        setTo: function(e, t, n, l, i, s) {
            this.a = e, this.b = t, this.c = n, this.d = l, this.tx = i, this.ty = s
        },
        transformPoint: function(e) {
            return new openfl_geom_Point(e.x * this.a + e.y * this.c + this.tx, e.x * this.b + e.y * this.d + this.ty)
        },
        translate: function(e, t) {
            this.tx += e, this.ty += t
        },
        __transformInversePoint: function(e) {
            var t = this.a * this.d - this.b * this.c;
            if (0 == t) e.x = -this.tx, e.y = -this.ty;
            else {
                var n = 1 / t * (this.c * (this.ty - e.y) + this.d * (e.x - this.tx));
                e.y = 1 / t * (this.a * (e.y - this.ty) + this.b * (this.tx - e.x)), e.x = n
            }
        },
        __transformInverseX: function(e, t) {
            var n = this.a * this.d - this.b * this.c;
            return 0 == n ? -this.tx : 1 / n * (this.c * (this.ty - t) + this.d * (e - this.tx))
        },
        __transformInverseY: function(e, t) {
            var n = this.a * this.d - this.b * this.c;
            return 0 == n ? -this.ty : 1 / n * (this.a * (t - this.ty) + this.b * (this.tx - e))
        },
        __transformX: function(e, t) {
            return e * this.a + t * this.c + this.tx
        },
        __transformY: function(e, t) {
            return e * this.b + t * this.d + this.ty
        },
        __translateTransformed: function(e, t) {
            this.tx = e * this.a + t * this.c + this.tx, this.ty = e * this.b + t * this.d + this.ty
        },
        __class__: openfl_geom_Matrix
    };
    var BitmapBatch = function(e, t) {
        null == t && (t = ""), this.ignoreUpdate = !1, this.tr = new openfl_geom_Rectangle, this.needUpdateTransform = !1, this.mHm1 = new openfl_geom_Matrix, this.baseMatrix = new openfl_geom_Matrix, this.mHm = new openfl_geom_Matrix, this.frameHeight = 0, this.frameWidth = 0, this.frameOffsetY = 0, this.frameOffsetX = 0, this._rotation = 0, this._scaleY = 1, this._scaleX = 1, this._y = 0, this._x = 0, this.imName = "", this.set_imName(t), this.batch = e, null != e && "" != t ? (openfl_display_Bitmap.call(this, e.bmd, 1, !0), "" != t ? (this.posRect = this.getImgAtlasBounds(t), this.set_scrollRect(this.posRect.clone())) : (this.set_scrollRect(new openfl_geom_Rectangle), this.posRect = new openfl_geom_Rectangle)) : (openfl_display_Bitmap.call(this), this.posRect = new openfl_geom_Rectangle), this.set_x(0), this.set_y(0)
    };
    $hxClasses.BitmapBatch = BitmapBatch, BitmapBatch.__name__ = ["BitmapBatch"], BitmapBatch.renderGLStack = function(e) {
        if (0 != BitmapBatch.renderStack.length && null != BitmapBatch.curRenderBMD) {
            null == e && (e = openfl_Lib.current.stage.__renderer.renderSession);
            var t = e.renderer,
                n = e.gl;
            e.blendModeManager.setBlendMode(10);
            var l, i, s, a, r, o = e.shaderManager.defaultShader;
            BitmapBatch.__hm.identity(), o.get_data().uMatrix.value = t.getMatrix(BitmapBatch.__hm), o.get_data().uImage0.smoothing = e.allowSmoothing;
            var d, _, h, p, c, Q, U, m, u, F, N = 0,
                S = 0;
            if (i = (l = BitmapBatch.renderStack).length, null == (s = BitmapBatch.curRenderBMD.__bufferData) || s.length != 30 * i) {
                if (a = 0, null == s) {
                    var W = 30 * i;
                    s = null != W ? new Float32Array(W) : null
                } else if (s.length != 30 * i) {
                    var B, Z = 30 * i;
                    B = null != Z ? new Float32Array(Z) : null, s.length <= B.length ? B.set(s) : B.set(s.subarray(0, B.length)), s = B
                }
                for (var D = a; D < i;) {
                    var V = D++;
                    BitmapBatch.__updateTileAlpha(l[V], l[V].__worldAlpha, 30 * V, s), BitmapBatch.__updateTileUV(l[V], 30 * V, s)
                }
                BitmapBatch.curRenderBMD.__bufferData = s
            }
            null == BitmapBatch.curRenderBMD.__buffer && (BitmapBatch.curRenderBMD.__buffer = n.createBuffer()), n.bindBuffer(n.ARRAY_BUFFER, BitmapBatch.curRenderBMD.__buffer);
            for (var f = 0, R = 0; R < i;) {
                var T = R++;
                r = 30 * T, (d = l[T]).get_alpha(), d.get_visible(), N = Std.int(d.get_scrollRect().width), S = Std.int(d.get_scrollRect().height), BitmapBatch.__updateTileAlpha(d, d.__worldAlpha, r, s), BitmapBatch.__updateTileUV(d, r, s), (_ = openfl_geom_Matrix.__temp).setTo(1, 0, 0, 1, -d.frameOffsetX, -d.frameOffsetY), _.concat(d.__worldTransform), h = 0 * _.a + 0 * _.c + _.tx, p = 0 * _.b + 0 * _.d + _.ty, c = N * _.a + 0 * _.c + _.tx, Q = N * _.b + 0 * _.d + _.ty, U = 0 * _.a + S * _.c + _.tx, m = 0 * _.b + S * _.d + _.ty, u = N * _.a + S * _.c + _.tx, F = N * _.b + S * _.d + _.ty, s[r] = h, s[r + 1] = p, s[r + 5] = c, s[r + 6] = Q, s[r + 10] = U, s[r + 11] = m, s[r + 15] = U, s[r + 16] = m, s[r + 20] = c, s[r + 21] = Q, s[r + 25] = u, s[r + 26] = F, f = T
            }
            n.bufferData(n.ARRAY_BUFFER, s, n.DYNAMIC_DRAW), n.vertexAttribPointer(o.get_data().aPosition.index, 2, n.FLOAT, !1, 20, 0), n.vertexAttribPointer(o.get_data().aTexCoord.index, 2, n.FLOAT, !1, 20, 8), n.vertexAttribPointer(o.get_data().aAlpha.index, 1, n.FLOAT, !1, 20, 16);
            for (var J = null, g = 0, b = 0, E = f + 1; b < E;) {
                var v = b++;
                d = l[v], BitmapBatch.curRenderBMD != J && (null != J && (o.get_data().uImage0.input = J, e.shaderManager.setShader(o), n.drawArrays(n.TRIANGLES, 6 * g, 6 * (v - g))), J = BitmapBatch.curRenderBMD, g = v), v == f && (o.get_data().uImage0.input = BitmapBatch.curRenderBMD, e.shaderManager.setShader(o), n.drawArrays(n.TRIANGLES, 6 * g, 6 * (v + 1 - g)))
            }
            for (n.disableVertexAttribArray(o.get_data().aAlpha.index), BitmapBatch.curRenderBMD = null; BitmapBatch.renderStack.length > 0;) BitmapBatch.renderStack.pop()
        }
    }, BitmapBatch.__updateTileAlpha = function(e, t, n, l) {
        var i = t * e.get_alpha();
        l[n + 4] = i, l[n + 9] = i, l[n + 14] = i, l[n + 19] = i, l[n + 24] = i, l[n + 29] = i
    }, BitmapBatch.__updateTileUV = function(e, t, n) {
        var l, i, s = e.posRect;
        l = null == s ? 0 : s.x, i = null == s ? 0 : s.y;
        var a = BitmapBatch.curRenderBMD.width,
            r = BitmapBatch.curRenderBMD.height,
            o = l / a,
            d = i / r,
            _ = (l + (null == s ? 1 : 0 | s.width)) / a,
            h = (i + (null == s ? 1 : 0 | s.height)) / r;
        n[t + 2] = o, n[t + 3] = d, n[t + 7] = _, n[t + 8] = d, n[t + 12] = o, n[t + 13] = h, n[t + 17] = o, n[t + 18] = h, n[t + 22] = _, n[t + 23] = d, n[t + 27] = _, n[t + 28] = h
    }, BitmapBatch.__super__ = openfl_display_Bitmap, BitmapBatch.prototype = $extend(openfl_display_Bitmap.prototype, {
        batch: null,
        imName: null,
        _x: null,
        _y: null,
        _scaleX: null,
        _scaleY: null,
        _rotation: null,
        posRect: null,
        frameOffsetX: null,
        frameOffsetY: null,
        frameWidth: null,
        frameHeight: null,
        mHm: null,
        baseMatrix: null,
        mHm1: null,
        needUpdateTransform: null,
        getImgAtlasBounds: function(e) {
            var t;
            if (!this.batch.rects.exists(e)) return new openfl_geom_Rectangle;
            if (t = this.batch.rects.get(e).clone(), this.batch.frames.exists(this.imName)) {
                var n = this.batch.frames.get(this.imName);
                this.frameOffsetX = n.x, this.frameOffsetY = n.y, this.frameWidth = n.width, this.frameHeight = n.height
            } else this.frameOffsetX = this.frameOffsetY = this.frameWidth = this.frameWidth = 0, this.frameWidth = t.width, this.frameHeight = t.height;
            return t
        },
        set_imName: function(e) {
            return this.imName = e, "" == this.imName && this.set_scrollRect(new openfl_geom_Rectangle), null == this.batch ? e : (this.posRect = this.getImgAtlasBounds(this.imName), this.set_scrollRect(this.posRect.clone()), e)
        },
        changeImName: function(e, t) {
            null == e && (e = ""), null != t && (this.batch = t, this.set_bitmapData(t.bmd), this.smoothing = !0), this.set_imName(e)
        },
        set_x: function(e) {
            return this._x = e, this.setActualMatrix(), this._x
        },
        set_y: function(e) {
            return this._y = e, this.setActualMatrix(), this._y
        },
        get_x: function() {
            return this.updateTransforms(), this._x
        },
        get_y: function() {
            return this.updateTransforms(), this._y
        },
        set_rotation: function(e) {
            return this._rotation = e, this.setActualMatrix(), this._rotation
        },
        get_rotation: function() {
            return this.updateTransforms(), this._rotation
        },
        set_scaleX: function(e) {
            return this._scaleX = e, this.setActualMatrix(), this._scaleX
        },
        get_scaleX: function() {
            return this.updateTransforms(), this._scaleX
        },
        set_scaleY: function(e) {
            return this._scaleY = e, this.setActualMatrix(), this._scaleY
        },
        get_scaleY: function() {
            return this.updateTransforms(), this._scaleY
        },
        get_width: function() {
            return this.getBounds(this).width
        },
        get_height: function() {
            return this.getBounds(this).height
        },
        set_width: function(e) {
            var t = new openfl_geom_Rectangle,
                n = this.mHm1;
            return n.identity(), this.__getBounds(t, n), e != t.width ? this._scaleX = e / t.width : this._scaleX = 1, this.setActualMatrix(), e
        },
        set_height: function(e) {
            var t = new openfl_geom_Rectangle,
                n = this.mHm1;
            return n.identity(), this.__getBounds(t, n), e != t.width ? this._scaleY = e / t.height : this._scaleY = 1, this.setActualMatrix(), e
        },
        get_transform: function() {
            return null == this.__objectTransform && (this.__objectTransform = new MyTransform(this)), this.__objectTransform
        },
        tr: null,
        __getBounds: function(e, t) {
            if (null != this.bitmapData) {
                var n = this.tr;
                n.setTo(0, 0, this.frameWidth, this.frameHeight), this.__transformBounds(n, t), this.__expandBounds(e, n.x, n.y, n.width, n.height)
            }
        },
        __expandBounds: function(e, t, n, l, i) {
            if (0 == e.width && 0 == e.height) return e.x = t, e.y = n, e.width = l, void(e.height = i);
            var s = e.get_right(),
                a = e.get_bottom();
            e.x > t && (e.x = t, e.width = s - t), e.y > n && (e.y = n, e.height = a - n), s < t + l && (e.width = t + l - e.x), a < n + i && (e.height = n + i - e.y)
        },
        __transformBounds: function(e, t) {
            var n = t.a * e.x + t.c * e.y,
                l = n,
                i = t.b * e.x + t.d * e.y,
                s = i,
                a = t.a * (e.x + e.width) + t.c * e.y,
                r = t.b * (e.x + e.width) + t.d * e.y;
            a < n && (n = a), r < i && (i = r), a > l && (l = a), r > s && (s = r), a = t.a * (e.x + e.width) + t.c * (e.y + e.height), r = t.b * (e.x + e.width) + t.d * (e.y + e.height), a < n && (n = a), r < i && (i = r), a > l && (l = a), r > s && (s = r), a = t.a * e.x + t.c * (e.y + e.height), r = t.b * e.x + t.d * (e.y + e.height), a < n && (n = a), r < i && (i = r), a > l && (l = a), r > s && (s = r), e.setTo(n + t.tx, i + t.ty, l - n, s - i)
        },
        getBounds: function(e) {
            if (this.updateTransforms(), e == this) {
                var t = new openfl_geom_Rectangle(this._x, this._y, this.frameWidth, this.frameHeight);
                return this.__transformBounds(t, this.baseMatrix), t
            }
            var n = this.mHm1;
            n.identity(), n.copyFrom(this.baseMatrix);
            for (var l = this.parent; null != l && (n.concat(l.get_transform().get_matrix()), l != e);) l = l.parent;
            var i = new openfl_geom_Rectangle;
            return this.__getBounds(i, n), i
        },
        __hitTest: function(e, t, n, l, i, s) {
            if (!s.get_visible() || this.__isMask || null == this.bitmapData) return !1;
            if (null != this.get_mask() && !this.get_mask().__hitTestMask(e, t)) return !1;
            this.mHm1.copyFrom(this.baseMatrix);
            var a = this.parent;
            for (this.mHm1.concat(a.get_transform().get_matrix()); a != this.stage;) a = a.parent, this.mHm1.concat(a.get_transform().get_matrix());
            var r = this.mHm1.__transformInverseX(e, t),
                o = this.mHm1.__transformInverseY(e, t);
            return r > 0 && o > 0 && r <= this.frameWidth && o <= this.frameHeight && (null == l || i || l.push(s), !0)
        },
        updateTransforms: function() {
            this.needUpdateTransform && (this.updateMatrix(), this.ignoreUpdate = !0, this.get_transform().set_matrix(this.mHm.clone()), this.ignoreUpdate = !1, this.needUpdateTransform = !1)
        },
        __update: function(e, t, n) {
            this.updateTransforms(), openfl_display_Bitmap.prototype.__update.call(this, e, t, n)
        },
        __updateTransforms: function(e) {
            this.updateTransforms(), openfl_display_Bitmap.prototype.__updateTransforms.call(this, e), this.mHm1.identity(), this.mHm1.translate(this.frameOffsetX, this.frameOffsetY), this.mHm1.concat(this.__worldTransform), this.__worldTransform.copyFrom(this.mHm1)
        },
        canBeRendered: function() {
            if (!this.get_visible() || 0 == this.__scaleX || 0 == this.__scaleY || this.get_alpha() <= 0 || null == this.parent) return !1;
            for (var e = !0, t = this.parent; e && null != t;) e = t.get_visible(), t = t.parent;
            return e
        },
        __renderGL: function(e) {
            BitmapBatch.curRenderBMD == this.bitmapData ? this.canBeRendered() && BitmapBatch.renderStack.push(this) : this.canBeRendered() && (null != BitmapBatch.curRenderBMD && BitmapBatch.renderGLStack(), BitmapBatch.curRenderBMD = this.bitmapData, BitmapBatch.renderStack.push(this))
        },
        setActualMatrix: function() {
            this.needUpdateTransform = !0
        },
        updateMatrix: function() {
            this.mHm.identity();
            var e = this._rotation * (Math.PI / 180);
            if (1 == this._scaleX && 1 == this._scaleY && 0 == e) this.mHm.tx = this._x, this.mHm.ty = this._y;
            else if (0 == e) this.mHm.scale(this._scaleX, this._scaleY), this.mHm1.identity(), this.mHm1.tx = this._x, this.mHm1.ty = this._y, this.mHm.concat(this.mHm1);
            else if (0 == e) this.mHm.a = this._scaleX, this.mHm.b = 0, this.mHm.c = 0, this.mHm.d = this._scaleY, this.mHm.tx = this._x - 0 * this._scaleX, this.mHm.ty = this._y - 0 * this._scaleY;
            else if (0 != e) {
                var t = Math.cos(e),
                    n = Math.sin(e);
                this.mHm.a = this._scaleX * t, this.mHm.b = this._scaleX * n, this.mHm.c = this._scaleY * -n, this.mHm.d = this._scaleY * t, this.mHm.tx = this._x - 0 * this.mHm.a - 0 * this.mHm.c, this.mHm.ty = this._y - 0 * this.mHm.b - 0 * this.mHm.d
            }
            this.mHm1.identity(), this.mHm1.tx = -this.frameOffsetX, this.mHm1.ty = -this.frameOffsetY, this.baseMatrix.copyFrom(this.mHm), this.mHm1.concat(this.mHm), this.mHm.copyFrom(this.mHm1)
        },
        setActualMatrixFromMatrix: function(e) {
            return this.ignoreUpdate ? this.mHm : (this.mHm.identity(), this.mHm.tx -= this.frameOffsetX, this.mHm.ty -= this.frameOffsetY, this.mHm.concat(e), this.mHm)
        },
        ignoreUpdate: null,
        updateParamsFromMatrix: function(e) {
            if (!this.ignoreUpdate) {
                this.baseMatrix.copyFrom(e);
                var t = this.baseMatrix,
                    n = Math.PI / 4,
                    l = Math.atan(-t.c / t.d),
                    i = Math.atan(t.b / t.a);
                l != l && (l = 0), i != i && (i = 0), this._scaleY = l > -n && l < n ? t.d / Math.cos(l) : -t.c / Math.sin(l), this._scaleX = i > -n && i < n ? t.a / Math.cos(i) : t.b / Math.sin(i), this.isEquivalent(l, i) ? (this._rotation = l * (180 / Math.PI), l = i = 0) : this._rotation = 0, this._x = t.tx, this._y = t.ty, this.needUpdateTransform = !1
            }
        },
        isEquivalent: function(e, t, n) {
            return null == n && (n = 1e-4), e - n < t && e + n > t
        },
        __class__: BitmapBatch,
        __properties__: $extend(openfl_display_Bitmap.prototype.__properties__, {
            set_imName: "set_imName"
        })
    });
    var openfl_geom_Transform = function(e) {
        this.__colorTransform = new openfl_geom_ColorTransform, this.concatenatedColorTransform = new openfl_geom_ColorTransform, this.pixelBounds = new openfl_geom_Rectangle, this.__displayObject = e, this.__hasMatrix = !0
    };
    $hxClasses["openfl.geom.Transform"] = openfl_geom_Transform, openfl_geom_Transform.__name__ = ["openfl", "geom", "Transform"], openfl_geom_Transform.prototype = {
        concatenatedColorTransform: null,
        pixelBounds: null,
        __colorTransform: null,
        __displayObject: null,
        __hasMatrix: null,
        __hasMatrix3D: null,
        get_colorTransform: function() {
            return this.__colorTransform
        },
        set_colorTransform: function(e) {
            return this.__colorTransform.__equals(e) || (this.__colorTransform = e, null != e && this.__displayObject.set_alpha(e.alphaMultiplier), this.__displayObject.__setRenderDirty()), this.__colorTransform
        },
        get_matrix: function() {
            return this.__hasMatrix ? this.__displayObject.__transform.clone() : null
        },
        set_matrix: function(e) {
            return null == e ? (this.__hasMatrix = !1, null) : (this.__hasMatrix = !0, this.__hasMatrix3D = !1, null != this.__displayObject && this.__setTransform(e.a, e.b, e.c, e.d, e.tx, e.ty), e)
        },
        __setTransform: function(e, t, n, l, i, s) {
            if (null != this.__displayObject) {
                var a = 0,
                    r = 0;
                a = 0 == t ? e : Math.sqrt(e * e + t * t), r = 0 == n ? e : Math.sqrt(n * n + l * l), this.__displayObject.__scaleX = a, this.__displayObject.__scaleY = r;
                var o = 180 / Math.PI * Math.atan2(l, n) - 90;
                if (o != this.__displayObject.__rotation) {
                    this.__displayObject.__rotation = o;
                    var d = o * (Math.PI / 180);
                    this.__displayObject.__rotationSine = Math.sin(d), this.__displayObject.__rotationCosine = Math.cos(d)
                }
                this.__displayObject.__transform.a = e, this.__displayObject.__transform.b = t, this.__displayObject.__transform.c = n, this.__displayObject.__transform.d = l, this.__displayObject.__transform.tx = i, this.__displayObject.__transform.ty = s, this.__displayObject.__setTransformDirty()
            }
        },
        __class__: openfl_geom_Transform,
        __properties__: {
            set_matrix: "set_matrix",
            get_matrix: "get_matrix",
            set_colorTransform: "set_colorTransform",
            get_colorTransform: "get_colorTransform"
        }
    };
    var MyTransform = function(e, t) {
        openfl_geom_Transform.call(this, e), this.dobj = e
    };
    $hxClasses.MyTransform = MyTransform, MyTransform.__name__ = ["MyTransform"], MyTransform.__super__ = openfl_geom_Transform, MyTransform.prototype = $extend(openfl_geom_Transform.prototype, {
        dobj: null,
        set_matrix: function(e) {
            return openfl_geom_Transform.prototype.set_matrix.call(this, this.dobj.setActualMatrixFromMatrix(e).clone()), this.dobj.updateParamsFromMatrix(e), openfl_geom_Transform.prototype.get_matrix.call(this)
        },
        __class__: MyTransform
    });
    var BlockDomino = function(e) {
        null == e && (e = !1), DominoModeBase.call(this), DominoModeBase.current = this, DominoModeBase.playToScore = 100, this.modeName = "BlockDominoes", this.modeIDX = 2, this.allowBoneyard = !1, this.boardZone.width = Desk.get_sWidthLevels(), this.boardZone.height = Desk.get_sHeightLevels(), this.init(e)
    };
    $hxClasses.BlockDomino = BlockDomino, BlockDomino.__name__ = ["BlockDomino"], BlockDomino.__super__ = DominoModeBase, BlockDomino.prototype = $extend(DominoModeBase.prototype, {
        init: function(e) {
            if (null == e && (e = !1), DominoModeBase.prototype.init.call(this), this.leftStack = new DominoStack, this.rightStack = new DominoStack, e) this.loadSave();
            else {
                this.numPlayers = DominoModeBase.playersTypes.length;
                for (var t = 0, n = DominoModeBase.playersTypes.length; t < n;) {
                    var l = t++;
                    this.players.push("computer" == DominoModeBase.playersTypes[l] ? new BlockDominoAI(this) : new HumanPlayer(this))
                }
                this.deal(), this.changeTurnNextFrame = !0
            }
        },
        deal: function() {
            this.simpleDeal()
        },
        updatePoses: function(e) {
            null == e && (e = !0), e && this.rememberDominoTransforms(), this.updateHandsPoses();
            this.get_isPortraitMode() ? this.boardZone.width = Desk.get_sWidthLevels() : this.boardZone.width = this.p2HRect.x - this.p1HandRect.get_right(), this.get_isPortraitMode() ? this.boardZone.height = this.p1HandRect.y - this.p2HandRect.get_bottom() : this.boardZone.height = Desk.get_sHeightLevels(), this.get_isPortraitMode() ? this.boardZone.x = (Desk.get_sWidthLevels() - .9 * this.boardZone.width) / 2 : this.boardZone.x = this.p1HandRect.width + (this.boardZone.width - .9 * this.boardZone.width) / 2, this.get_isPortraitMode() ? this.boardZone.y = this.p2HandRect.get_bottom() - -Desk.get_topLevels() + (this.boardZone.height - .9 * this.boardZone.height) / 2 : this.boardZone.y = (this.boardZone.height - .9 * this.boardZone.height) / 2, this.boardZone.x -= Desk.get_leftLevels(), this.boardZone.y -= Desk.get_topLevels(), this.boardZone.width *= .9, this.boardZone.height *= .9, this.pileDominoesCont.set_x(-Desk.get_leftLevels() + Desk.get_sWidthLevels() / 2);
            var t, n = this.leftStack.dominoAt(0),
                l = n;
            null != n && (n.set_x(0), n.set_y(0), n.set_direction(n.get_isDouble() ? 0 : this.leftStack.valAt(0) == n.get_val1() ? 1 : 3)), t = null == n ? 0 : Math.max(n.get_height(), n.get_width());
            for (var i, s = Math.round(this.boardZone.width * this.desk.levels.get_scaleX() / (.74 * t)), a = [1, 0, 3, 0], r = [3, 2, 1, 2], o = 0, d = 0, _ = 0, h = 0, p = s / 2 * -t, c = t * (s / 2), Q = new haxe_ds_ObjectMap, U = 1, m = this.pileList.length; U < m;) {
                var u, F = U++,
                    N = this.pileList[F],
                    S = !1;
                if (this.rightStack.hasDomino(N)) {
                    u = this.rightStack, i = a[o];
                    var W = n.getBounds(n.parent);
                    if ((3 == i && W.x <= p || 1 == i && W.get_right() >= c || _ >= 2) && (++o >= a.length && (o = 0), i = a[o], _ = 0, S = !0), S) {
                        var B = u.previousDomino(N);
                        if (null != B && B.get_isDouble()) {
                            var Z = u.previousDomino(B);
                            null != Z && (B.putAfter(Z, u.valWithDomino(B), this.isVertDir(Q.h[B.__id__]) && _ < 2 ? Q.h[B.__id__] : i, !0), 0 != i && 2 != i || _++)
                        }
                    }
                    N.putAfter(n, u.valWithDomino(N), i, S), Q.set(N, i), 0 != i && 2 != i || _++, 0, n = N
                } else {
                    u = this.leftStack, i = r[d];
                    var D = l.getBounds(l.parent);
                    if ((3 == i && D.x <= p || 1 == i && D.get_right() >= c || h >= 2) && (++d >= r.length && (d = 0), i = r[d], h = 0, S = !0), S) {
                        var V = u.previousDomino(N);
                        if (null != V && V.get_isDouble()) {
                            var f = u.previousDomino(V);
                            null != f && (V.putAfter(f, u.valWithDomino(V), this.isVertDir(Q.h[V.__id__]) && h < 2 ? Q.h[V.__id__] : i, !0), 0 != i && 2 != i || h++)
                        }
                    }
                    N.putAfter(l, u.valWithDomino(N), i, S), Q.set(N, i), 0 != i && 2 != i || h++, 0, l = N
                }
            }
            for (var R = 0, T = this.pileDominoesCont.get_numChildren(); R < T;) {
                var J = R++;
                this.pileDominoesCont.getChildAt(J).set_scaleX(this.pileDominoesCont.getChildAt(J).set_scaleY(1))
            }
            this.pileDominoesCont.set_x(0), this.pileDominoesCont.set_y(0), this.pileDominoesCont.set_scaleX(1), this.pileDominoesCont.set_scaleY(1);
            var g = this.pileDominoesCont.getBounds(this.pileDominoesCont.parent),
                b = Math.min(1, Math.min(this.boardZone.width / g.width, this.boardZone.height / g.height));
            this.pileDominoesCont.set_scaleX(this.pileDominoesCont.set_scaleY(b)), g = this.pileDominoesCont.getBounds(this.pileDominoesCont.parent), this.pileDominoesCont.set_x(this.boardZone.x + this.boardZone.width / 2 - g.width / 2 - g.x), this.pileDominoesCont.set_y(this.boardZone.y + this.boardZone.height / 2 - g.height / 2 - g.y);
            e && this.playDominoRecordedAnim();
            for (var E = 0, v = this.deck; E < v.length;) {
                var k = v[E];
                ++E, -1 == HxOverrides.indexOf(this.pileList, k, 0) && -1 == HxOverrides.indexOf(this.players[0].hand, k, 0) && HxOverrides.indexOf(this.players[1].hand, k, 0)
            }
        },
        selectTurnPlayer: function() {
            if (0 != DominoModeBase.curRound && DominoModeBase.lastWinner > -1) return DominoModeBase.lastWinner;
            var e = 0,
                t = 0;
            if (0 == DominoModeBase.curRound)
                for (var n = 0, l = this.players.length; n < l;)
                    for (var i = n++, s = 0, a = this.players[i].hand; s < a.length;) {
                        var r = a[s];
                        ++s, r.get_isDouble() && r.get_val1() > e && (e = r.get_val1(), t = i)
                    }
            if (0 == e) {
                for (var o = 0, d = 0, _ = this.players.length; d < _;)
                    for (var h = d++, p = 0, c = this.players[h].hand; p < c.length;) {
                        var Q = c[p];
                        ++p, Q.get_val1() + Q.get_val2() > o && (o = Q.get_val1() + Q.get_val2(), t = h)
                    }
                return t
            }
            return t
        },
        __class__: BlockDomino
    });
    var Player = function(e) {
        this.dominoMode = e, this.hand = []
    };
    $hxClasses.Player = Player, Player.__name__ = ["Player"], Player.prototype = {
        hand: null,
        dominoMode: null,
        play: function() {
            return !0
        },
        draw: function(e) {
            var t = e;
            return 0 == this.dominoMode.boneyard.length ? null : (null == t && (t = this.dominoMode.boneyard[Std.random(this.dominoMode.boneyard.length)]), null != t && (this.dominoMode.drawDomino(t), this.hand.push(t)), t)
        },
        onResize: function() {},
        update: function(e) {},
        onMDown: function() {},
        onMUp: function() {},
        isHandPlayable: function() {
            return this.dominoMode.isHandPlayable(this.hand)
        },
        scoreHand: function() {
            for (var e = 0, t = 0, n = this.hand; t < n.length;) {
                var l = n[t];
                ++t, e += l.get_score()
            }
            return e
        },
        __class__: Player
    };
    var BlockDominoAI = function(e) {
        Player.call(this, e)
    };
    $hxClasses.BlockDominoAI = BlockDominoAI, BlockDominoAI.__name__ = ["BlockDominoAI"], BlockDominoAI.__super__ = Player, BlockDominoAI.prototype = $extend(Player.prototype, {
        play: function() {
            var e = this.dominoMode.getAllPlays(this.hand),
                t = e.length > 0;
            if (0 == e.length && this.dominoMode.canDraw()) return this.dominoMode.boneyardIsActive ? (this.draw(), !1) : (this.dominoMode.showBoneyard(), GameConfig.timerWithComp(GameConfig.boneyardShowTime * GameConfig.gameSpeedCoef, $bind(this, this.draw), null, null), !1);
            if ((0 != e.length || !this.dominoMode.canDraw()) && this.dominoMode.boneyardIsActive) return this.dominoMode.hideBoneyard(), GameConfig.timerWithComp(GameConfig.boneyardShowTime * GameConfig.gameSpeedCoef, $bind(this, this.play), null, null), !1;
            if (t) {
                var n = this.dominoMode.getAllPlays(this.hand),
                    l = n[Std.random(n.length)];
                return this.dominoMode.playPlay(this, l), l.domino.open(!0), !0
            }
            return this.dominoMode.showPass(), !1
        },
        draw: function(e) {
            if (this.dominoMode.canDraw()) {
                var t = Player.prototype.draw.call(this);
                return this.dominoMode.updatePoses(), GameConfig.timerWithComp(GameConfig.afterDrawDelay * GameConfig.gameSpeedCoef, $bind(this, this.play), null, null), t.sendOnTop(), t
            }
            return null
        },
        __class__: BlockDominoAI
    });
    var CheatingModeHelper = function(e) {
        this.offsetWindowsY = 800, this.won = !1, this.failed = !1, this.started = !1, this.isCheating = !1, this.isDanger = !1, this.warningTime = 0, this.timeToWarning = 0, this.dangerTime = 0, this.beatingHeart = null, this.heartsAnims = null, this.complexProgressBar = null, this.desk = Desk.current, this.main = Main.current, this.setup = e;
        var t = this.desk.getElementsByName("heartParticle");
        this.heartsAnims = [];
        for (var n = 0; n < t.length;) {
            var l = t[n];
            ++n, l.set_visible(!1);
            var i = new HartsAnim(this.main.batch, js_Boot.__cast(l.framesList[0].getChildAt(0), BitmapBatch).imName);
            i.set_x(l.get_x()), i.set_y(l.get_y()), this.desk.levels.addChildAt(i, this.desk.levels.getChildIndex(l)), this.heartsAnims.push(i)
        }
        var s = this.desk.getElementByName("beatingHeart");
        null != s && (this.beatingHeart = new HartAnim(s)), this.complexProgressBar = new ComplexProgressBar(this.desk.getElementsByFolderName("ProgressBar"), e.progressPercentPerSec / 100 / 1e3, e.regressPercentPerSec / 100 / 1e3), null != this.complexProgressBar && (this.complexProgressBar.completeCallback = $bind(this, this.onWon), this.complexProgressBar.timeoutCallback = $bind(this, this.onTimeout)), this.char1 = this.desk.getElementByName("character1"), this.char2 = this.desk.getElementByName("character2"), this.char3 = this.desk.getElementByName("character3"), this.warningMC = this.desk.getElementByName("Warning"), null != this.warningMC && this.warningMC.set_visible(!1), this.char1GotoIddle(), this.char2.playLabel("iddle1", $bind(this, this.onIddleAnimEnd)), this.char3.playLabel("iddle1", $bind(this, this.onIddleAnimEnd)), this.hideWindowses(), this.hideDisapointment()
    };
    $hxClasses.CheatingModeHelper = CheatingModeHelper, CheatingModeHelper.__name__ = ["CheatingModeHelper"], CheatingModeHelper.prototype = {
        complexProgressBar: null,
        heartsAnims: null,
        beatingHeart: null,
        char1: null,
        char2: null,
        char3: null,
        warningMC: null,
        desk: null,
        main: null,
        setup: null,
        dangerTime: null,
        timeToWarning: null,
        warningTime: null,
        isDanger: null,
        isCheating: null,
        started: null,
        failed: null,
        won: null,
        curOvl: null,
        curWindowEls: null,
        offsetWindowsY: null,
        reset: function() {
            this.stopProgramAnims(), null != this.beatingHeart && this.beatingHeart.stop(), null != this.complexProgressBar && (this.complexProgressBar.reset(), this.complexProgressBar.completeCallback = $bind(this, this.onWon), this.complexProgressBar.timeoutCallback = $bind(this, this.onTimeout)), this.dangerTime = 0, this.timeToWarning = 0, this.warningTime = 0, this.isDanger = !1, this.isCheating = !1, this.started = !1, this.failed = !1, this.won = !1, this.curOvl = null, this.curWindowEls = null, null != this.warningMC && this.warningMC.set_visible(!1), this.char1GotoIddle(), this.char2.playLabel("iddle1", $bind(this, this.onIddleAnimEnd)), this.char3.playLabel("iddle1", $bind(this, this.onIddleAnimEnd)), this.hideWindowses(!1), this.hideDisapointment()
        },
        hideDisapointment: function() {
            for (var e = this.desk.getElementsByLayerName("Disappointment"), t = 0; t < e.length;) {
                var n = e[t];
                ++t, n.set_visible(!1)
            }
        },
        showDisapointment: function() {
            for (var e = this.desk.getElementsByLayerName("Disappointment"), t = 0; t < e.length;) {
                var n = e[t];
                ++t, n.set_visible(!0), motion_Actuate.timer(.5 * Math.random()).onComplete($bind(n, n.gotoAndPlay), [0])
            }
        },
        hideWindowses: function(e) {
            null == e && (e = !0);
            for (var t = this.desk.getElementsByLayerName("WinWindow"), n = this.desk.getElementsByLayerName("LoseWindow"), l = this.desk.getElementsByLayerName("TimeoutWindow"), i = 0; i < t.length;) {
                var s = t[i];
                if (++i, s.set_visible(!1), e && "overlay" != s.get_name()) {
                    var a = s;
                    a.set_y(a.get_y() + this.offsetWindowsY)
                }
            }
            for (var r = 0; r < n.length;) {
                var o = n[r];
                if (++r, o.set_visible(!1), e && "overlay" != o.get_name()) {
                    var d = o;
                    d.set_y(d.get_y() + this.offsetWindowsY)
                }
            }
            for (var _ = 0; _ < l.length;) {
                var h = l[_];
                if (++_, h.set_visible(!1), e && "overlay" != h.get_name()) {
                    var p = h;
                    p.set_y(p.get_y() + this.offsetWindowsY)
                }
            }
        },
        onResize: function() {
            null != this.curOvl && (this.curOvl.set_x(-this.desk.levels.get_x() - 1 / this.desk.levels.get_scaleX() * 10), this.curOvl.set_y(-this.desk.levels.get_y() - 1 / this.desk.levels.get_scaleY() * 10), this.curOvl.set_width((this.main.sWidth + 20) * (1 / this.desk.levels.get_scaleX())), this.curOvl.set_height((this.main.sHeight + 20) * (1 / this.desk.levels.get_scaleY())))
        },
        showWindow: function(e) {
            for (var t = this.desk.getElementsByLayerName(e), n = 0; n < t.length;) {
                var l = t[n];
                ++n, l.set_visible(!0), "overlay" == l.get_name() ? (this.curOvl = l, l.set_alpha(1e-4), motion_Actuate.tween(l, .4, {
                    alpha: 1
                }).ease(motion_easing_Linear.get_easeNone()).delay(0)) : motion_Actuate.tween(l, .4, {
                    y: l.get_y() - this.offsetWindowsY
                }).ease(motion_easing_Back.get_easeOut()).delay(0)
            }
            this.curWindowEls = t, this.onResize()
        },
        onIddleAnimEnd: function(e) {
            var t = Std.parseInt(StringTools.replace(e.curLabel, "iddle", ""));
            e.hasLabel("iddle" + (t + 1)) ? e.playLabel("iddle" + (t + 1), $bind(this, this.onIddleAnimEnd)) : e.playLabel("iddle1", $bind(this, this.onIddleAnimEnd))
        },
        gotoIddleRand: function(e) {
            for (var t = 1; t < 100;) {
                var n = t++;
                if (!e.hasLabel("iddle" + n)) break;
                0
            }
            e.playLabel("iddle1", $bind(this, this.onIddleAnimEnd))
        },
        startCheatingAnim: function() {
            for (var e = 0, t = 0, n = 1; n < 100;) {
                var l = n++;
                if (!this.char2.hasLabel("cheat" + l)) break;
                e++
            }
            for (var i = 1; i < 100;) {
                var s = i++;
                if (!this.char3.hasLabel("cheat" + s)) break;
                t++
            }
            var a = Math.round(Math.min(e, t)),
                r = Std.random(a) + 1;
            if (this.char2.playLabel("cheat" + r), this.char3.playLabel("cheat" + r), 1 == r)
                for (var o = 0, d = this.heartsAnims; o < d.length;) {
                    var _ = d[o];
                    ++o, _.start()
                }
            null != this.beatingHeart && this.beatingHeart.start(), null != this.setup.cheatingSound && this.desk.playSoundData(this.setup.cheatingSound, !0)
        },
        char1GotoIddle: function() {
            this.gotoIddleRand(this.char1), this.timeToWarning = this.setup.char1MinIddleTime + Std.random(this.setup.char1MaxIddleTime - this.setup.char1MinIddleTime), null != this.warningMC && this.warningMC.set_visible(!1), this.isDanger = !1
        },
        startWarning: function() {
            null != this.warningMC && this.warningMC.set_visible(!0), this.warningMC.gotoAndPlay(0), this.warningMC.isLoop = !0, this.warningTime = this.setup.warningTimeMin + Std.random(this.setup.warningTimeMax - this.setup.warningTimeMin)
        },
        startDanger: function() {
            this.dangerTime = this.setup.dangerTimeMax + Std.random(this.setup.dangerTimeMax - this.setup.dangerTimeMin), this.char1.playLabel("turn"), this.isDanger = !0
        },
        onWon: function() {
            this.failed || this.won || (this.won = !0, this.gotoIddleRand(this.char1), this.gotoIddleRand(this.char2), this.gotoIddleRand(this.char3), this.isCheating = !1, this.stopProgramAnims(), null != this.beatingHeart && this.beatingHeart.stop(), null != this.complexProgressBar && (this.complexProgressBar.isActive = !1), null != this.warningMC && this.warningMC.set_visible(!1), this.showWindow("WinWindow"), null != this.setup.cheatingSound && this.desk.stopSoundData(this.setup.cheatingSound))
        },
        onTimeout: function() {
            this.failed || this.won || this.fail(!0)
        },
        fail: function(e) {
            null == e && (e = !1), this.failed || this.won || (e ? this.gotoIddleRand(this.char1) : this.char1.playLabel("angry"), this.gotoIddleRand(this.char2), this.gotoIddleRand(this.char3), this.stopProgramAnims(), null != this.complexProgressBar && (this.complexProgressBar.isActive = !1), null != this.beatingHeart && this.beatingHeart.stop(), this.failed = !0, null != this.warningMC && this.warningMC.set_visible(!1), e || this.showDisapointment(), e ? this.showWindow("TimeoutWindow") : this.showWindow("LoseWindow"), null != this.setup.cheatingSound && this.desk.stopSoundData(this.setup.cheatingSound))
        },
        restartLevelClick: function() {
            this.reset()
        },
        restartGameClick: function() {
            Desk.current.startNewGame(0)
        },
        nextClick: function() {
            Desk.current.nextLevel()
        },
        animHideEls: function(e, t) {
            for (var n = !1, l = 0; l < e.length;) {
                var i = e[l];
                ++l, "overlay" == i.get_name() ? motion_Actuate.tween(i, .4, {
                    alpha: 1e-5
                }).ease(motion_easing_Linear.get_easeNone()).onComplete(n ? null : t) : motion_Actuate.tween(i, .4, {
                    y: i.get_y() + this.offsetWindowsY
                }).ease(motion_easing_Back.get_easeIn()).onComplete(n ? null : t), n = !0
            }
        },
        onMDown: function() {
            if (this.failed || this.won) {
                if (null != this.curWindowEls && this.curWindowEls.length > 0)
                    for (var e = 0, t = this.curWindowEls; e < t.length;) {
                        var n = t[e];
                        if (++e, (-1 != n.get_name().indexOf("btn") || -1 != n.get_name().indexOf("Btn")) && this.desk.hitsMouse(n)) {
                            if ("nextLevelBtn" == n.get_name()) {
                                this.animHideEls(this.curWindowEls, $bind(this, this.nextClick));
                                break
                            }
                            if ("restartLevelBtn" == n.get_name()) {
                                this.animHideEls(this.curWindowEls, $bind(this, this.restartLevelClick));
                                break
                            }
                            if ("restartGameBtn" == n.get_name()) {
                                this.animHideEls(this.curWindowEls, $bind(this, this.restartGameClick));
                                break
                            }
                        }
                    }
            } else this.complexProgressBar.start(), this.started = !0, this.isCheating = !0, this.startCheatingAnim()
        },
        onMUp: function() {
            this.failed || this.won || (this.isCheating = !1, this.gotoIddleRand(this.char2), this.gotoIddleRand(this.char3), this.stopProgramAnims(), null != this.setup.cheatingSound && this.desk.stopSoundData(this.setup.cheatingSound))
        },
        stopProgramAnims: function() {
            for (var e = 0, t = this.heartsAnims; e < t.length;) {
                var n = t[e];
                ++e, n.stop()
            }
            null != this.beatingHeart && this.beatingHeart.stop()
        },
        update: function(e) {
            this.failed || this.won || (null != this.complexProgressBar && this.started && (this.main.isMouseDown ? this.complexProgressBar.addProgress(e) : this.complexProgressBar.addRegress(e), this.complexProgressBar.update(e)), this.started && (this.timeToWarning > 0 ? (this.timeToWarning -= e, this.timeToWarning <= 0 && this.startWarning()) : this.warningTime > 0 ? (this.warningTime -= e, this.warningTime <= 0 && this.startDanger()) : this.dangerTime > 0 && (this.dangerTime -= e, this.dangerTime <= 0 && this.char1GotoIddle())), this.isCheating && this.isDanger && this.fail())
        },
        destroy: function() {
            for (null != this.complexProgressBar && this.complexProgressBar.destroy(), this.complexProgressBar = null, null != this.setup.cheatingSound && this.desk.stopSoundData(this.setup.cheatingSound); this.heartsAnims.length > 0;) {
                this.heartsAnims.pop().destroy()
            }
            this.heartsAnims = null, null != this.beatingHeart && this.beatingHeart.destroy(), this.beatingHeart = null, this.char1 = null, this.char2 = null, this.char3 = null, this.desk = null, this.main = null
        },
        __class__: CheatingModeHelper
    };
    var ComplexProgressBar = function(e, t, n) {
        this.timeProgress = 0, this.timeoutCallback = null, this.completeCallback = null, this.gameStarted = !1, this.isActive = !0, this.minuteSpeeed = 80, this.progress = 0, this.curHoursRot = 0, this.hoursSprite = new openfl_display_Sprite, this.fillClockInitY = 0, this.elements = e, this.main = Main.current, this.desk = Desk.current, this.progressInSec = t, this.regressInSec = n;
        for (var l = null, i = null, s = 0; s < e.length;) {
            var a = e[s];
            ++s, "FillLine" == a.get_name() && (l = a), "HeartFill" == a.get_name() && (i = a), "minutes" == a.get_name() && (this.minuteMC = a), "hours" == a.get_name() && (this.hoursMC = a)
        }
        this.fillLineBmdSource = this.main.batch.getBitmapData(js_Boot.__cast(l.framesList[0].getChildAt(0), BitmapBatch).imName), this.fillLine = new openfl_display_Bitmap(this.fillLineBmdSource.clone(), 2, !0), this.fillLine.set_x(l.get_x()), this.fillLine.set_y(l.get_y()), this.desk.levels.addChildAt(this.fillLine, this.desk.levels.getChildIndex(l)), this.desk.levels.removeChild(l), this.fillClockBmdSource = this.main.batch.getBitmapData(js_Boot.__cast(i.framesList[0].getChildAt(0), BitmapBatch).imName), this.fillClock = new openfl_display_Bitmap(this.fillClockBmdSource.clone(), 2, !0), this.fillClock.set_x(i.get_x()), this.fillClock.set_y(i.get_y()), this.desk.levels.addChildAt(this.fillClock, this.desk.levels.getChildIndex(i)), this.desk.levels.removeChild(i), this.fillClockInitY = this.fillClock.get_y(), this.hoursMC.set_visible(!1), this.desk.levels.addChildAt(this.hoursSprite, this.desk.levels.getChildIndex(this.hoursMC));
        var r = this.main.batch.getBitmapData(js_Boot.__cast(this.hoursMC.framesList[0].getChildAt(0), BitmapBatch).imName),
            o = new openfl_display_Bitmap(r, 2, !0);
        this.hoursSprite.addChild(o), o.set_x(this.hoursMC.framesList[0].getChildAt(0).get_x()), o.set_y(this.hoursMC.framesList[0].getChildAt(0).get_y()), this.hoursSprite.set_x(this.hoursMC.get_x()), this.hoursSprite.set_y(this.hoursMC.get_y()), this.setProgress(.09), this.setTimeProgress(0)
    };
    $hxClasses.ComplexProgressBar = ComplexProgressBar, ComplexProgressBar.__name__ = ["ComplexProgressBar"], ComplexProgressBar.prototype = {
        elements: null,
        fillLineBmdSource: null,
        fillClockBmdSource: null,
        fillLine: null,
        fillClock: null,
        fillClockInitY: null,
        minuteMC: null,
        hoursMC: null,
        hoursSprite: null,
        curHoursRot: null,
        main: null,
        desk: null,
        progress: null,
        minuteSpeeed: null,
        isActive: null,
        gameStarted: null,
        progressInSec: null,
        regressInSec: null,
        completeCallback: null,
        timeoutCallback: null,
        start: function() {
            this.isActive = !0, this.gameStarted = !0
        },
        reset: function() {
            this.gameStarted = !1, this.isActive = !1, this.setProgress(.09), this.setTimeProgress(0), this.curHoursRot = 0, this.minuteMC.set_rotation(0), this.curHoursRot = 0
        },
        setProgress: function(e) {
            e < .09 && (e = .09), e > 1 && (e = 1), this.progress = e;
            var t = this.fillLine.bitmapData.width * e;
            this.fillLine.set_scrollRect(new openfl_geom_Rectangle(this.fillLine.bitmapData.width - t, 0, t, this.fillLine.bitmapData.height))
        },
        addProgress: function(e) {
            this.isActive && (this.setProgress(this.progress + e * this.progressInSec), this.progress >= 1 && null != this.completeCallback && this.completeCallback())
        },
        addRegress: function(e) {
            this.isActive && (this.progress -= e * this.regressInSec, this.setProgress(this.progress))
        },
        setTimeProgress: function(e) {
            e > 1 && (e = 1), e < 0 && (e = 0), 0 == e && (e = .01);
            var t = this.fillClock.bitmapData.height * e;
            this.fillClock.set_scrollRect(new openfl_geom_Rectangle(0, this.fillClock.bitmapData.height - t, this.fillClock.bitmapData.width, t)), this.fillClock.set_y(this.fillClockInitY + (this.fillClock.bitmapData.height - t))
        },
        timeProgress: null,
        update: function(e) {
            if (this.isActive) {
                var t, n = this.minuteMC;
                n.set_rotation(n.get_rotation() + e / 1e3 * this.minuteSpeeed), this.curHoursRot += e / 1e3 * this.minuteSpeeed / 12, this.hoursMC.set_rotation(this.curHoursRot), t = this.hoursMC.get_rotation() >= 0 ? this.hoursMC.get_rotation() : this.hoursMC.get_rotation() + 360, this.timeProgress = t / 359, this.setTimeProgress(this.timeProgress), this.curHoursRot >= 360 && null != this.timeoutCallback && this.timeoutCallback(), this.hoursSprite.set_rotation(this.hoursMC.get_rotation())
            }
        },
        destroy: function() {
            this.elements = null, this.fillLineBmdSource = null, this.fillClockBmdSource = null, null != this.fillLine && null != this.fillLine.parent && this.fillLine.parent.removeChild(this.fillLine), null != this.fillClock && null != this.fillClock.parent && this.fillClock.parent.removeChild(this.fillClock), this.fillLine = null, this.fillClock = null, this.minuteMC = null, this.hoursMC = null, null != this.hoursSprite && null != this.hoursSprite.parent && this.hoursSprite.parent.removeChild(this.hoursSprite), this.hoursSprite = null, this.main = null, this.desk = null
        },
        __class__: ComplexProgressBar
    };
    var Confetti = function(e, t, n, l, i, s, a) {
        null == a && (a = 1.5), null == s && (s = 1), null == i && (i = 130), null == l && (l = 90), null == n && (n = .3), null == t && (t = .1), this.nextGenTime = 0, this.particlesGenData = [], this.confettis = [], this.isActive = !1, openfl_display_Sprite.call(this), this.from = e, this.minGenTime = t, this.maxGenTime = n, this.speedMin = l, this.speedMax = i, this.minRotSpeed = s, this.maxRotSpeed = a;
        for (var r = 0, o = e.totalFrames; r < o;) {
            var d = r++,
                _ = e.framesList[d].getChildAt(0);
            this.particlesGenData.push({
                imName: _.imName,
                batch: _.batch
            })
        }
        e.parent.addChildAt(this, e.parent.getChildIndex(e)), e.parent.removeChild(e), HxOverrides.remove(Desk.current.levels.physicElements, e)
    };
    $hxClasses.Confetti = Confetti, Confetti.__name__ = ["Confetti"], Confetti.__super__ = openfl_display_Sprite, Confetti.prototype = $extend(openfl_display_Sprite.prototype, {
        from: null,
        minGenTime: null,
        maxGenTime: null,
        speedMin: null,
        speedMax: null,
        minRotSpeed: null,
        maxRotSpeed: null,
        isActive: null,
        confettis: null,
        particlesGenData: null,
        nextGenTime: null,
        getParticle: function() {
            var e = this.particlesGenData[Std.random(this.particlesGenData.length)],
                t = new BitmapBatch(e.batch, e.imName);
            this.addChild(t), t.set_x(-Desk.get_leftLevels() + Desk.get_sWidthLevels() * Math.random()), t.set_y(-Desk.get_topLevels() - 100 * Math.random() - t.get_height());
            var n = {
                bm: t,
                speed: this.speedMin + Math.random() * (this.speedMax - this.speedMin),
                rotSpeed: this.minRotSpeed + Math.random() * (this.maxRotSpeed - this.minRotSpeed),
                curRot: Math.random() * Math.PI,
                sinDist: 50 * Math.random(),
                curSin: 0,
                x: t.get_x(),
                y: t.get_y(),
                tx: t.get_width() / 2,
                ty: t.get_height() / 2
            };
            this.confettis.push(n)
        },
        start: function() {
            this.isActive = !0, this.nextGenTime = 0
        },
        update: function(e) {
            if (this.isActive) {
                for (var t = e / 1e3, n = 0, l = Desk.get_bottomLevels(), i = Math.PI; n < this.confettis.length;) {
                    var s = this.confettis[n];
                    if (s.y - 50 > l) HxOverrides.remove(this.confettis, s);
                    else {
                        s.y += s.speed * t, s.curRot += s.rotSpeed * t, s.curSin += s.rotSpeed * t;
                        var a = s.bm,
                            r = a.get_transform().get_matrix();
                        r.identity(), r.translate(-s.tx, -s.ty);
                        var o, d, _ = Math.sin(s.curRot),
                            h = s.curRot / i % 2 == 0;
                        o = h ? _ : 1, d = h ? 1 : _, r.scale(o, d), r.rotate(s.curRot), r.translate(s.tx + (s.x + Math.sin(s.curSin) * s.sinDist), s.ty + s.y), a.get_transform().set_matrix(r), n++
                    }
                }
                this.nextGenTime -= t, this.nextGenTime < 0 && (this.nextGenTime = this.minGenTime + Math.random() * (this.maxGenTime - this.minGenTime), this.getParticle())
            }
        },
        destroy: function() {
            for (this.isActive = !1; this.confettis.length > 0;) this.confettis.pop();
            for (; this.get_numChildren() > 0;) this.removeChildAt(0)
        },
        __class__: Confetti
    });
    var Config = function() {
        this.hidden = "", this.isPausedByOrientation = !1, this.N = 1, this.sHeight = 0, this.sWidth = 0, this.wasLandscape = !1, this.wasPortrait = !1, this.roundPixelsHtml5 = !1, this.initSHeight = 600, this.isPortrait = !0, openfl_Lib.current.stage.__renderer.renderSession.roundPixels = this.roundPixelsHtml5, this.main = Main.current, this.iOSjs = eval("iOSjs"), this.iOSjs.setResFunction($bind(this, this.iosRes)), this.activateHtml5SoundsBrowserVisible(), this.prepareFontsLoad()
    };
    $hxClasses.Config = Config, Config.__name__ = ["Config"], Config.openLink = function(e) {
        window.open(e, "_blank").focus()
    }, Config._getIsMobileBrowser = function() {
        var isMobileBrowser = !1,
            evalString = "";
        return evalString += "/Android|webOS|iPhone|iPad|iPod|BlackBerry|Windows Phone|IEMobile|Opera Mini/i.test(navigator.userAgent)", isMobileBrowser = eval(evalString), isMobileBrowser || eval("document.getElementById('openfl-content').style.overflow = 'hidden'"), isMobileBrowser
    }, Config.prototype = {
        isPortrait: null,
        initSHeight: null,
        roundPixelsHtml5: null,
        wasPortrait: null,
        wasLandscape: null,
        sWidth: null,
        sHeight: null,
        sounds: null,
        N: null,
        tapToStartWin: null,
        rotateScreenWindow: null,
        iOSjs: null,
        main: null,
        isPausedByOrientation: null,
        prepareFontsLoad: function() {},
        iosRes: function() {
            this.main.resize(null)
        },
        hidden: null,
        activateHtml5SoundsBrowserVisible: function() {
            var e = "";
            null != window.document.hidden ? (this.hidden = "hidden", e = "visibilitychange") : "undefined" != document.mozHidden ? (this.hidden = "mozHidden", e = "mozvisibilitychange") : "undefined" != document.msHidden ? (this.hidden = "msHidden", e = "msvisibilitychange") : "undefined" != document.webkitHidden && (this.hidden = "webkitHidden", e = "webkitvisibilitychange"), window.document.addEventListener(e, $bind(this, this.handleVisibilityChange), !1)
        },
        handleVisibilityChange: function() {
            document[this.hidden] ? window.Howler.mute(!0) : window.Howler.mute(!1)
        },
        initSounds: function() {
            if (null != this.sounds) return this.sounds;
            if (null != Sounds.current) return this.sounds = Sounds.current, this.sounds;
            return this.sounds = new Sounds, this.sounds
        },
        getIsMobileBrowser: function() {
            return Config._getIsMobileBrowser()
        },
        checkSiteLock: function() {},
        setRotateWin: function(e) {
            var t, n;
            (null == e && (e = !0), (t = this.iOSjs.getCurSize()).width = this.sWidth, t.height = this.sHeight, e && !this.isPortrait && (this.wasPortrait = !0), e && this.isPortrait && (this.wasLandscape = !0), null == this.rotateScreenWindow) && (this.rotateScreenWindow = new openfl_display_Sprite, n = openfl_Assets.exists("img/Rotate_to_play.jpg") ? new openfl_display_Bitmap(openfl_Assets.getBitmapData("img/Rotate_to_play.jpg"), 1, !0) : new openfl_display_Bitmap, this.rotateScreenWindow.addChild(n), this.main.addChild(this.rotateScreenWindow));
            e && (this.rotateScreenWindow.set_height(t.height), this.rotateScreenWindow.set_scaleX(this.rotateScreenWindow.get_scaleY()), this.rotateScreenWindow.get_width() < t.width && (this.rotateScreenWindow.set_width(t.width), this.rotateScreenWindow.set_scaleY(this.rotateScreenWindow.get_scaleX())), this.rotateScreenWindow.set_y(t.height / 2 - this.rotateScreenWindow.get_height() / 2), this.rotateScreenWindow.set_x(t.width / 2 - this.rotateScreenWindow.get_width() / 2)), this.rotateScreenWindow.set_visible(e), e || null == this.rotateScreenWindow.parent ? this.main.addChild(this.rotateScreenWindow) : this.rotateScreenWindow.parent.removeChild(this.rotateScreenWindow)
        },
        resizeSet: function(e) {
            var t;
            return this.setRotateWin(!1), !1
        },
        initSize: function(isReinit, levelsScaleY) {
            var viewPort;
            null == levelsScaleY && (levelsScaleY = 1), null == isReinit && (isReinit = !1), viewPort = this.iOSjs.getCurSize(), this.sHeight = this.initSHeight, this.sWidth = viewPort.width / viewPort.height * this.initSHeight, 1 != levelsScaleY && (this.sHeight = this.initSHeight / levelsScaleY, this.sWidth = viewPort.width / viewPort.height * this.sHeight, this.main.sWidth = this.sWidth, this.main.sHeight = this.sHeight, Desk.current.onResize(!0)), this.setCorrectMainSize(), this.N = 30 / openfl_Lib.current.stage.get_frameRate(), eval("document.getElementById('openfl-content').style.top = '0px'"), eval("document.getElementById('openfl-content').style.left = '0px'"), eval("document.getElementById('openfl-content').style.margin = 'auto'"), window.scroll(0, 0), window.scrollTo(0, 0), window.document.body.scrollTop = 0;
            var color = 16711680;
            return window.scrollTo(0, 0), isReinit || (openfl_Lib.current.stage.addEventListener("touchEnd", $bind(this, this.tapToStartClick)), openfl_Lib.current.stage.addEventListener("click", $bind(this, this.tapToStartClick))), !1
        },
        setCorrectMainSize: function() {
            var e;
            if (e = this.iOSjs.getCurSize(), Config.scale = e.height / this.sHeight, Math.ceil(this.sWidth) > e.width || Math.ceil(this.sHeight) > e.height) {
                this.main.set_scaleX(this.main.set_scaleY(1)), openfl_Lib.current.stage.stage.window.set_width(Math.ceil(e.width)), openfl_Lib.current.stage.stage.window.set_height(Math.ceil(e.height)), openfl_Lib.current.stage.__setLogicalSize(Math.ceil(this.sWidth), Math.ceil(this.sHeight));
                for (var t = 0, n = openfl_Lib.current.stage.stage3Ds; t < n.get_length();) {
                    var l = n.get(t);
                    ++t, l.__resize(Math.ceil(this.sWidth), Math.ceil(this.sHeight))
                }
                if (js_Boot.__instanceof(openfl_Lib.current.stage.__renderer, openfl__$internal_renderer_opengl_GLRenderer)) {
                    js_Boot.__cast(openfl_Lib.current.stage.__renderer, openfl__$internal_renderer_opengl_GLRenderer).displayWidth = Math.ceil(this.sWidth), js_Boot.__cast(openfl_Lib.current.stage.__renderer, openfl__$internal_renderer_opengl_GLRenderer).displayHeight = Math.ceil(this.sHeight), js_Boot.__cast(openfl_Lib.current.stage.__renderer, openfl__$internal_renderer_opengl_GLRenderer).projection = lime_math__$Matrix4_Matrix4_$Impl_$.createOrtho(0, js_Boot.__cast(openfl_Lib.current.stage.__renderer, openfl__$internal_renderer_opengl_GLRenderer).displayWidth, js_Boot.__cast(openfl_Lib.current.stage.__renderer, openfl__$internal_renderer_opengl_GLRenderer).displayHeight, 0, -1e3, 1e3), js_Boot.__cast(openfl_Lib.current.stage.__renderer, openfl__$internal_renderer_opengl_GLRenderer).projectionFlipped = lime_math__$Matrix4_Matrix4_$Impl_$.createOrtho(0, e.width, e.height, 0, -1e3, 1e3);
                    var i = new openfl_geom_Matrix;
                    Math.ceil(this.sWidth), e.width;
                    i.scale(Config.scale, Config.scale), js_Boot.__cast(openfl_Lib.current.stage.__renderer, openfl__$internal_renderer_opengl_GLRenderer).displayMatrix = i, js_Boot.__cast(openfl_Lib.current.stage.__renderer, openfl__$internal_renderer_opengl_GLRenderer).width = Math.ceil(this.sWidth), js_Boot.__cast(openfl_Lib.current.stage.__renderer, openfl__$internal_renderer_opengl_GLRenderer).height = Math.ceil(this.sHeight), openfl_Lib.current.stage.__displayMatrix.identity(), openfl_Lib.current.stage.__displayMatrix.scale(Config.scale, Config.scale)
                } else openfl_Lib.current.stage.__displayMatrix.identity(), openfl_Lib.current.stage.__displayMatrix.scale(Config.scale, Config.scale);
                window.document.getElementById("openfl-content").style.width = Std.string(e.width) + "px", window.document.getElementById("openfl-content").style.height = Std.string(e.height) + "px";
                var s = window.document.getElementById("openfl-content").firstChild;
                s.setAttribute("width", Math.ceil(this.sWidth) + ""), s.setAttribute("height", Math.ceil(this.sHeight) + ""), s.style.width = Std.string(e.width) + "px", s.style.height = Std.string(e.height) + "px"
            } else {
                this.main.set_scaleX(this.main.set_scaleY(e.height / this.sHeight)), openfl_Lib.current.stage.stage.window.set_width(Math.ceil(e.width)), openfl_Lib.current.stage.stage.window.set_height(Math.ceil(e.height)), openfl_Lib.current.stage.__setLogicalSize(0, 0), window.document.getElementById("openfl-content").style.width = Std.string(e.width) + "px", window.document.getElementById("openfl-content").style.height = Std.string(e.height) + "px";
                var a = window.document.getElementById("openfl-content").firstChild;
                a.setAttribute("width", Math.ceil(e.width) + ""), a.setAttribute("height", Math.ceil(e.height) + ""), a.style.width = Math.ceil(e.width) + "px", a.style.height = Math.ceil(e.height) + "px"
            }
        },
        sendToTopTapToStart: function() {},
        tapToStartClick: function(e) {
            openfl_Lib.current.stage.removeEventListener("touchEnd", $bind(this, this.tapToStartClick)), openfl_Lib.current.stage.removeEventListener("click", $bind(this, this.tapToStartClick)), null != this.tapToStartWin && null != this.tapToStartWin.parent && this.tapToStartWin.parent.removeChild(this.tapToStartWin), null != this.tapToStartWin && this.tapToStartWin.close(), this.tapToStartWin = null, this.main.tapToStartClick(e)
        },
        __class__: Config
    };
    var lime_utils_AssetLibrary = function() {
        this.types = new haxe_ds_StringMap, this.sizes = new haxe_ds_StringMap, this.preload = new haxe_ds_StringMap, this.paths = new haxe_ds_StringMap, this.classTypes = new haxe_ds_StringMap, this.cachedText = new haxe_ds_StringMap, this.cachedImages = new haxe_ds_StringMap, this.cachedFonts = new haxe_ds_StringMap, this.cachedBytes = new haxe_ds_StringMap, this.cachedAudioBuffers = new haxe_ds_StringMap, this.onChange = new lime_app__$Event_$Void_$Void, this.bytesLoaded = 0, this.bytesTotal = 0
    };
    $hxClasses["lime.utils.AssetLibrary"] = lime_utils_AssetLibrary, lime_utils_AssetLibrary.__name__ = ["lime", "utils", "AssetLibrary"], lime_utils_AssetLibrary.fromManifest = function(e) {
        if (null == e) return null;
        var t = null;
        return (t = null == e.libraryType ? new lime_utils_AssetLibrary : Type.createInstance(Type.resolveClass(e.libraryType), e.libraryArgs)).__fromManifest(e), t
    }, lime_utils_AssetLibrary.prototype = {
        onChange: null,
        assetsLoaded: null,
        assetsTotal: null,
        bytesLoaded: null,
        bytesLoadedCache: null,
        bytesTotal: null,
        cachedAudioBuffers: null,
        cachedBytes: null,
        cachedFonts: null,
        cachedImages: null,
        cachedText: null,
        classTypes: null,
        paths: null,
        preload: null,
        promise: null,
        sizes: null,
        types: null,
        pathGroups: null,
        exists: function(e, t) {
            var n;
            n = null != t ? js_Boot.__cast(t, String) : null;
            var l = this.types.get(e);
            if (null != l) {
                if (l == n || ("SOUND" == n || "MUSIC" == n) && ("MUSIC" == l || "SOUND" == l)) return !0;
                if ("BINARY" == n || null == n || "BINARY" == l && "TEXT" == n) return !0
            }
            return !1
        },
        getAsset: function(e, t) {
            switch (t) {
                case "BINARY":
                    return this.getBytes(e);
                case "FONT":
                    return this.getFont(e);
                case "IMAGE":
                    return this.getImage(e);
                case "MUSIC":
                case "SOUND":
                    return this.getAudioBuffer(e);
                case "TEXT":
                    return this.getText(e);
                case "TEMPLATE":
                    throw new js__$Boot_HaxeError("Not sure how to get template: " + e);
                default:
                    throw new js__$Boot_HaxeError("Unknown asset type: " + t)
            }
        },
        getAudioBuffer: function(e) {
            return this.cachedAudioBuffers.exists(e) ? this.cachedAudioBuffers.get(e) : this.classTypes.exists(e) ? lime_media_AudioBuffer.fromBytes(js_Boot.__cast(Type.createInstance(this.classTypes.get(e), []), haxe_io_Bytes)) : lime_media_AudioBuffer.fromFile(this.paths.get(e))
        },
        getBytes: function(e) {
            if (this.cachedBytes.exists(e)) return this.cachedBytes.get(e);
            if (this.cachedText.exists(e)) {
                var t = lime_utils__$Bytes_Bytes_$Impl_$.ofString(this.cachedText.get(e));
                return this.cachedBytes.set(e, t), t
            }
            return this.classTypes.exists(e) ? js_Boot.__cast(Type.createInstance(this.classTypes.get(e), []), haxe_io_Bytes) : lime_utils__$Bytes_Bytes_$Impl_$.fromFile(this.paths.get(e))
        },
        getFont: function(e) {
            return this.cachedFonts.exists(e) ? this.cachedFonts.get(e) : this.classTypes.exists(e) ? js_Boot.__cast(Type.createInstance(this.classTypes.get(e), []), lime_text_Font) : lime_text_Font.fromFile(this.paths.get(e))
        },
        getImage: function(e) {
            return this.cachedImages.exists(e) ? this.cachedImages.get(e) : this.classTypes.exists(e) ? js_Boot.__cast(Type.createInstance(this.classTypes.get(e), []), lime_graphics_Image) : lime_graphics_Image.fromFile(this.paths.get(e))
        },
        getText: function(e) {
            if (this.cachedText.exists(e)) return this.cachedText.get(e);
            var t = this.getBytes(e);
            return null == t ? null : t.getString(0, t.length)
        },
        isLocal: function(e, t) {
            if (this.classTypes.exists(e)) return !0;
            switch (null != t ? js_Boot.__cast(t, String) : null) {
                case "IMAGE":
                    return this.cachedImages.exists(e);
                case "MUSIC":
                case "SOUND":
                    return this.cachedAudioBuffers.exists(e);
                default:
                    return this.cachedBytes.exists(e) || this.cachedText.exists(e)
            }
        },
        loadAsset: function(e, t) {
            switch (t) {
                case "BINARY":
                    return this.loadBytes(e);
                case "FONT":
                    return this.loadFont(e);
                case "IMAGE":
                    return this.loadImage(e);
                case "MUSIC":
                case "SOUND":
                    return this.loadAudioBuffer(e);
                case "TEXT":
                    return this.loadText(e);
                case "TEMPLATE":
                    throw new js__$Boot_HaxeError("Not sure how to load template: " + e);
                default:
                    throw new js__$Boot_HaxeError("Unknown asset type: " + t)
            }
        },
        load: function() {
            if (null == this.promise) {
                this.promise = new lime_app_Promise, this.bytesLoadedCache = new haxe_ds_StringMap, this.assetsLoaded = 0, this.assetsTotal = 1;
                for (var e = this.preload.keys(); e.hasNext();) {
                    var t = e.next(),
                        n = this.types.get(t);
                    if (null != n) switch (n) {
                        case "BINARY":
                            this.assetsTotal++;
                            var l = this.loadBytes(t);
                            l.onProgress(function(e, t) {
                                return function(n, l) {
                                    e(t, n, l)
                                }
                            }($bind(this, this.load_onProgress), t)), l.onError(function(e, t) {
                                return function(n) {
                                    e(t, n)
                                }
                            }($bind(this, this.load_onError), t)), l.onComplete(function(e, t) {
                                return function(n) {
                                    e(t, n)
                                }
                            }($bind(this, this.loadBytes_onComplete), t));
                            break;
                        case "FONT":
                            this.assetsTotal++;
                            var i = this.loadFont(t);
                            i.onProgress(function(e, t) {
                                return function(n, l) {
                                    e(t, n, l)
                                }
                            }($bind(this, this.load_onProgress), t)), i.onError(function(e, t) {
                                return function(n) {
                                    e(t, n)
                                }
                            }($bind(this, this.load_onError), t)), i.onComplete(function(e, t) {
                                return function(n) {
                                    e(t, n)
                                }
                            }($bind(this, this.loadFont_onComplete), t));
                            break;
                        case "IMAGE":
                            this.assetsTotal++;
                            var s = this.loadImage(t);
                            s.onProgress(function(e, t) {
                                return function(n, l) {
                                    e(t, n, l)
                                }
                            }($bind(this, this.load_onProgress), t)), s.onError(function(e, t) {
                                return function(n) {
                                    e(t, n)
                                }
                            }($bind(this, this.load_onError), t)), s.onComplete(function(e, t) {
                                return function(n) {
                                    e(t, n)
                                }
                            }($bind(this, this.loadImage_onComplete), t));
                            break;
                        case "MUSIC":
                        case "SOUND":
                            this.assetsTotal++;
                            var a = this.loadAudioBuffer(t);
                            a.onProgress(function(e, t) {
                                return function(n, l) {
                                    e(t, n, l)
                                }
                            }($bind(this, this.load_onProgress), t)), a.onError(function(e, t) {
                                return function(n) {
                                    e(t, n)
                                }
                            }($bind(this, this.load_onError), t)), a.onComplete(function(e, t) {
                                return function(n) {
                                    e(t, n)
                                }
                            }($bind(this, this.loadAudioBuffer_onComplete), t));
                            break;
                        case "TEXT":
                            this.assetsTotal++;
                            var r = this.loadText(t);
                            r.onProgress(function(e, t) {
                                return function(n, l) {
                                    e(t, n, l)
                                }
                            }($bind(this, this.load_onProgress), t)), r.onError(function(e, t) {
                                return function(n) {
                                    e(t, n)
                                }
                            }($bind(this, this.load_onError), t)), r.onComplete(function(e, t) {
                                return function(n) {
                                    e(t, n)
                                }
                            }($bind(this, this.loadText_onComplete), t))
                    }
                }
                this.__assetLoaded(null)
            }
            return this.promise.future
        },
        loadAudioBuffer: function(e) {
            return this.cachedAudioBuffers.exists(e) ? lime_app_Future.withValue(this.cachedAudioBuffers.get(e)) : this.classTypes.exists(e) ? lime_app_Future.withValue(Type.createInstance(this.classTypes.get(e), [])) : this.pathGroups.exists(e) ? lime_media_AudioBuffer.loadFromFiles(this.pathGroups.get(e)) : lime_media_AudioBuffer.loadFromFile(this.paths.get(e))
        },
        loadBytes: function(e) {
            return this.cachedBytes.exists(e) ? lime_app_Future.withValue(this.cachedBytes.get(e)) : this.classTypes.exists(e) ? lime_app_Future.withValue(Type.createInstance(this.classTypes.get(e), [])) : lime_utils__$Bytes_Bytes_$Impl_$.loadFromFile(this.paths.get(e))
        },
        loadFont: function(e) {
            if (this.cachedFonts.exists(e)) return lime_app_Future.withValue(this.cachedFonts.get(e));
            if (this.classTypes.exists(e)) {
                var t = Type.createInstance(this.classTypes.get(e), []);
                return lime_text_Font.loadFromName(t.name)
            }
            return lime_text_Font.loadFromName(this.paths.get(e))
        },
        loadImage: function(e) {
            return this.cachedImages.exists(e) ? lime_app_Future.withValue(this.cachedImages.get(e)) : this.classTypes.exists(e) ? lime_app_Future.withValue(Type.createInstance(this.classTypes.get(e), [])) : lime_graphics_Image.loadFromFile(this.paths.get(e))
        },
        loadText: function(e) {
            var t = this;
            return this.cachedText.exists(e) ? lime_app_Future.withValue(this.cachedText.get(e)) : this.loadBytes(e).then(function(n) {
                return new lime_app_Future(function() {
                    if (null == n) return null;
                    var l = n.getString(0, n.length);
                    return t.cachedText.set(e, l), l
                }, !0)
            })
        },
        unload: function() {},
        __assetLoaded: function(e) {
            if (this.assetsLoaded++, null != e) {
                var t = this.sizes.get(e);
                if (this.bytesLoadedCache.exists(e)) {
                    var n = this.bytesLoadedCache.get(e);
                    n < t && (this.bytesLoaded += t - n)
                } else this.bytesLoaded += t;
                this.bytesLoadedCache.set(e, t)
            }
            this.assetsLoaded < this.assetsTotal ? this.promise.progress(this.bytesLoaded, this.bytesTotal) : (this.promise.progress(this.bytesTotal, this.bytesTotal), this.promise.complete(this))
        },
        __fromManifest: function(e) {
            for (var t, n, l = e.version >= 2, i = e.basePath, s = 0, a = e.assets; s < a.length;) {
                var r = a[s];
                ++s, t = l ? r.size : 100, n = r.id, this.paths.set(n, i + Std.string(r.path)), this.sizes.set(n, t);
                var o = r.type;
                this.types.set(n, o)
            }
            null == this.pathGroups && (this.pathGroups = new haxe_ds_StringMap);
            for (var d, _, h, p = new haxe_ds_StringMap, c = new haxe_ds_StringMap, Q = this.types.keys(); Q.hasNext();) {
                var U = Q.next();
                if ("MUSIC" == (d = this.types.get(U)) || "SOUND" == d) {
                    if (_ = this.paths.get(U), h = haxe_io_Path.withoutExtension(_), !(null != __map_reserved[h] ? p.existsReserved(h) : p.h.hasOwnProperty(h))) {
                        var m = [];
                        null != __map_reserved[h] ? p.setReserved(h, m) : p.h[h] = m
                    }
                    var u;
                    (null != __map_reserved[h] ? p.getReserved(h) : p.h[h]).push(_), u = null != __map_reserved[h] ? p.getReserved(h) : p.h[h], this.pathGroups.set(U, u), this.preload.exists(U) && ((null != __map_reserved[h] ? c.existsReserved(h) : c.h.hasOwnProperty(h)) ? this.preload.remove(U) : null != __map_reserved[h] ? c.setReserved(h, !0) : c.h[h] = !0)
                }
            }
            this.bytesTotal = 0;
            for (var F = 0, N = e.assets; F < N.length;) {
                var S = N[F];
                ++F, n = S.id, this.preload.exists(n) && (this.bytesTotal += this.sizes.get(n))
            }
        },
        loadAudioBuffer_onComplete: function(e, t) {
            this.cachedAudioBuffers.set(e, t), this.__assetLoaded(e)
        },
        loadBytes_onComplete: function(e, t) {
            this.cachedBytes.set(e, t), this.__assetLoaded(e)
        },
        loadFont_onComplete: function(e, t) {
            this.cachedFonts.set(e, t), this.__assetLoaded(e)
        },
        loadImage_onComplete: function(e, t) {
            this.cachedImages.set(e, t), this.__assetLoaded(e)
        },
        loadText_onComplete: function(e, t) {
            this.cachedText.set(e, t), this.__assetLoaded(e)
        },
        load_onError: function(e, t) {
            this.promise.error('Error loading asset "' + e + '"')
        },
        load_onProgress: function(e, t, n) {
            if (t > 0) {
                var l, i = this.sizes.get(e);
                if (n > 0 ? ((l = t / n) > 1 && (l = 1), t = Math.floor(l * i)) : t > i && (t = i), this.bytesLoadedCache.exists(e)) {
                    var s = this.bytesLoadedCache.get(e);
                    t != s && (this.bytesLoaded += t - s)
                } else this.bytesLoaded += t;
                this.bytesLoadedCache.set(e, t), this.promise.progress(this.bytesLoaded, this.bytesTotal)
            }
        },
        __class__: lime_utils_AssetLibrary
    };
    var DefaultAssetLibrary = function() {
        lime_utils_AssetLibrary.call(this), null != ApplicationMain.config && Object.prototype.hasOwnProperty.call(ApplicationMain.config, "assetsPrefix") && (this.rootPath = Reflect.field(ApplicationMain.config, "assetsPrefix")), null == this.rootPath && (this.rootPath = "");
        var e;
        e = "img/backgrounds/BG1.jpg", this.preload.set(e, !0), e = "img/backgrounds/BG2.jpg", this.preload.set(e, !0), e = "img/backgrounds/BG3.jpg", this.preload.set(e, !0), e = "img/backgrounds/BG4.jpg", this.preload.set(e, !0), e = "img/backgrounds/BG5.jpg", this.preload.set(e, !0), e = "img/MainAtlas.png", this.preload.set(e, !0), e = "img/MainAtlas.xml", this.preload.set(e, !0), e = "img/Nums.png", this.preload.set(e, !0), e = "img/WordsData.json", this.preload.set(e, !0), e = "snd/sprite.ac3", e = "snd/sprite.json", e = "snd/sprite.m4a", e = "snd/sprite.mp3", e = "snd/sprite.ogg", e = "snd/sprite.json", this.preload.set(e, !0), this.loadManifest()
    };
    $hxClasses.DefaultAssetLibrary = DefaultAssetLibrary, DefaultAssetLibrary.__name__ = ["DefaultAssetLibrary"], DefaultAssetLibrary.__super__ = lime_utils_AssetLibrary, DefaultAssetLibrary.prototype = $extend(lime_utils_AssetLibrary.prototype, {
        lastModified: null,
        rootPath: null,
        timer: null,
        loadManifest: function() {
            var e = haxe_Resource.getBytes("__ASSET_MANIFEST__");
            if (null != e) {
                var t = lime_utils_AssetManifest.fromBytes(e);
                t.basePath = this.rootPath, this.__fromManifest(t)
            } else {
                var n = lime_utils_AssetManifest.fromFile(this.rootPath + "manifest");
                null != n ? (n.basePath = this.rootPath, this.__fromManifest(n)) : lime_utils_Log.warn("Could not load asset manifest (bytes was null)", {
                    fileName: "DefaultAssetLibrary.hx",
                    lineNumber: 196,
                    className: "DefaultAssetLibrary",
                    methodName: "loadManifest"
                })
            }
        },
        __class__: DefaultAssetLibrary
    });
    var motion_easing_BackEaseIn = function(e) {
        this.s = e
    };
    $hxClasses["motion.easing.BackEaseIn"] = motion_easing_BackEaseIn, motion_easing_BackEaseIn.__name__ = ["motion", "easing", "BackEaseIn"], motion_easing_BackEaseIn.__interfaces__ = [motion_easing_IEasing], motion_easing_BackEaseIn.prototype = {
        s: null,
        calculate: function(e) {
            return e * e * ((this.s + 1) * e - this.s)
        },
        __class__: motion_easing_BackEaseIn
    };
    var motion_easing_BackEaseOut = function(e) {
        this.s = e
    };
    $hxClasses["motion.easing.BackEaseOut"] = motion_easing_BackEaseOut, motion_easing_BackEaseOut.__name__ = ["motion", "easing", "BackEaseOut"], motion_easing_BackEaseOut.__interfaces__ = [motion_easing_IEasing], motion_easing_BackEaseOut.prototype = {
        s: null,
        calculate: function(e) {
            return (e -= 1) * e * ((this.s + 1) * e + this.s) + 1
        },
        __class__: motion_easing_BackEaseOut
    };
    var Desk = function() {
        this.wasMDown = !1, this.fonSoundStarted = !1, this.wasHideAllTutors = !1, this.isBtnClickAnim = !1, this.onBtnAnimEndFun = null, this.currentlyInitedLevel = !1, this.opLevelAfterOvl = -1, this.lastWinner = -1, this.pauseClickFunction = null, this.pauseBtns = [], this.paused = !1, this.levelCompleteActions = null, this.levelsTextFields = null, this.actionBtnsActions = null, this.actionBtns = null, this.nextBtnClickLevel = -1, this.gameModes = [], this.fightTable = null, this.fightingMode = null, this.assembler = null, this.isFightTable = !1, this.isFightingMode = !1, this.isAssembleMode = !1, this.curFonSound = "", this.cheatingModeHelper = null, this.cheatingMode = !1, this.closeGameBtn = null, this.fireWorkLayer = new openfl_display_Sprite, this.fireWorkInterval = 1, this.fireWorks = [], this.fireIsActive = !1, this.gameLogoInitY = 0, this.gameLogoInitX = 0, this.maxLogoDx = 0, this.randAnimElements = [], this.addonPanelsOffsetX = 0, this.offsetToolsXOnSides = 0, this.isSequentToolsShow = !1, this.toolsApearTopOffset = 0, this.toolsApearKeepTopOffset = !1, this.toolsApearAlignYTarget = null, this.isToolsApearDelay = !1, this.autoAlignTools = !1, this.centerResize = !1, this.resizeByElement = null, this.resizeSquareSize = -1, this.isAnimation = !1, this.isToolActive = !1, this.activeTool = null, this.passedLevels = [], this.selectionBtns = [], this.isSelectionLevel = !1, this.removeTutorObject = null, this.removeTutor = null, this.scaledObjectsInits = [], this.objectsToRemove = [], this.isObjectRemovingReverse = !1, this.isObjectRemoving = !1, this.timeToDrawEraseTutor = 0, this.initTimeToDrawEraseTutor = 2500, this.isDragging = !1, this.isErasingMask = !1, this.isSequentToolClicked = !1, this.isHitHizone = !1, this.isAutoMaskAction = !1, this.isAutoMask = !1, this.isDrawingMask = !1, this.isBlockedAction = !1, this.totalInSequent = 0, this.numUsedTools = 0, this.currentSequent = 0, this.minTimeToBlink = 2, this.maxTimeToBlink = 5, this.isBusy = !1, this.curScrollToolsIDX = 0, this.initToolsPosIsLeft = new haxe_ds_ObjectMap, this.initToolsX = new haxe_ds_ObjectMap, this.initToolsY = new haxe_ds_ObjectMap, this.initToolsMostTop = 0, this.toolsConfig = new haxe_ds_StringMap, this.toolsMap = new haxe_ds_StringMap, this.toolsArr = [], this.bgScaleAlign = null, this.hp = new openfl_geom_Point, this.hm = new openfl_geom_Matrix, this.openedLevels = [], this.levelIndex = 0, this.curLevelIndex = 0, this.curLevel = 0;
        var e = this;
        openfl_display_Sprite.call(this), this.main = Main.current, this.levels = new LevelsExt, this.addChild(this.levels), this.main.addChild(this), Desk.current = this, this.deskHelper = new DeskHelper;
        var t = null; //gradle more
        null != t && null == this.moreGamesBtn && (this.moreGamesBtn = new openfl_display_Bitmap, openfl_display_BitmapData.loadFromFile(t.getMoreGamesButtonImage()).onComplete(function(t) {
            e.moreGamesBtn.set_bitmapData(t), e.moreGamesBtn.smoothing = !0, e.moreGamesBtn.set_scaleX(e.moreGamesBtn.set_scaleY(.4)), e.onResize()
        })), window.document.addEventListener("click", $bind(this, this.onClick)), window.document.addEventListener("touchend", $bind(this, this.onClick))
    };
    $hxClasses.Desk = Desk, Desk.__name__ = ["Desk"], Desk.__properties__ = {
        get_leftLevels: "get_leftLevels",
        get_bottomLevels: "get_bottomLevels",
        get_topLevels: "get_topLevels",
        get_sHeightLevels: "get_sHeightLevels",
        get_sWidthLevels: "get_sWidthLevels"
    }, Desk.get_sWidthLevels = function() {
        return Main.current.sWidth / Desk.current.levels.get_scaleX()
    }, Desk.get_sHeightLevels = function() {
        return Main.current.sHeight / Desk.current.levels.get_scaleY()
    }, Desk.get_topLevels = function() {
        return Desk.current.levels.get_y() / Desk.current.levels.get_scaleY()
    }, Desk.get_bottomLevels = function() {
        return -Desk.get_topLevels() + Desk.get_sHeightLevels()
    }, Desk.get_leftLevels = function() {
        return Desk.current.levels.get_x() / Desk.current.levels.get_scaleX()
    }, Desk.__super__ = openfl_display_Sprite, Desk.prototype = $extend(openfl_display_Sprite.prototype, {
        curLevel: null,
        curLevelIndex: null,
        levelIndex: null,
        openedLevels: null,
        levels: null,
        main: null,
        hm: null,
        hp: null,
        bg: null,
        bgScaleAlign: null,
        toolsArr: null,
        toolsMap: null,
        toolsConfig: null,
        initToolsMostTop: null,
        initToolsY: null,
        initToolsX: null,
        initToolsPosIsLeft: null,
        playBtn: null,
        soundBtn: null,
        nextBtn: null,
        restartBtn: null,
        toolsScrollBtnUP: null,
        toolsScrollBtnDown: null,
        scrollToolsArr: null,
        curScrollToolsIDX: null,
        isBusy: null,
        blinkTimer: null,
        maxTimeToBlink: null,
        minTimeToBlink: null,
        currentSequent: null,
        numUsedTools: null,
        totalInSequent: null,
        isBlockedAction: null,
        curHitZone: null,
        curHitTutor: null,
        initHitCounter: null,
        curHitCounter: null,
        currentProgressBar: null,
        curMaskBmd: null,
        curMaskBm: null,
        curBrushBmd: null,
        curBrushObj: null,
        draggingObject: null,
        dragSound: null,
        isDrawingMask: null,
        isAutoMask: null,
        isAutoMaskAction: null,
        isHitHizone: null,
        isSequentToolClicked: null,
        isErasingMask: null,
        isDragging: null,
        drawEraseTutor: null,
        initTimeToDrawEraseTutor: null,
        timeToDrawEraseTutor: null,
        isObjectRemoving: null,
        isObjectRemovingReverse: null,
        objectsToRemove: null,
        scaledObjectsInits: null,
        objectsRemoveSound: null,
        removeTutor: null,
        removeTutorObject: null,
        isSelectionLevel: null,
        selectionBtns: null,
        passedLevels: null,
        activeTool: null,
        isToolActive: null,
        isAnimation: null,
        resizeSquareSize: null,
        resizeByElement: null,
        centerResize: null,
        autoAlignTools: null,
        isToolsApearDelay: null,
        toolsApearAlignYTarget: null,
        toolsApearKeepTopOffset: null,
        toolsApearTopOffset: null,
        isSequentToolsShow: null,
        offsetToolsXOnSides: null,
        toolsHighlighter: null,
        toolsHighlighterAlignTarget: null,
        addonPanelsOffsetX: null,
        randAnimElements: null,
        moreGamesBtn: null,
        gameLogo: null,
        maxLogoDx: null,
        gameLogoInitX: null,
        gameLogoInitY: null,
        externalLinksBtns: null,
        links: null,
        finishScreenBtns: null,
        fireIsActive: null,
        fireWorks: null,
        fireWorkInterval: null,
        fireWorkTimer: null,
        fireWorkLayer: null,
        closeGameBtn: null,
        cheatingMode: null,
        cheatingModeHelper: null,
        curFonSound: null,
        isAssembleMode: null,
        isFightingMode: null,
        isFightTable: null,
        assembler: null,
        fightingMode: null,
        fightTable: null,
        gameModes: null,
        nextBtnClickLevel: null,
        actionBtns: null,
        actionBtnsActions: null,
        levelsTextFields: null,
        levelCompleteActions: null,
        paused: null,
        pauseWindow: null,
        pauseBtns: null,
        pauseClickFunction: null,
        pauseFill: null,
        lastWinner: null,
        deskHelper: null,
        startNewGame: function(e, t) {
            null == t && (t = !1), this.curLevel = e;
            for (var n = !1, l = 0, i = this.levels.data.levels.length; l < i;) {
                var s = l++;
                if (this.levels.data.levels[s].name == "level" + (t ? "_select" : e + "")) {
                    this.levelIndex = s, this.curLevelIndex = e, n = !0;
                    break
                }
            }
            if (n) {
                e = this.levelIndex, this.curLevelIndex = e, this.isSelectionLevel = t;
                var a = TJSON.parse(this.levels.data.levels[e].levelSetup);
                "" != a && null != a && null != a.isFightTable && a.isFightTable && Assembler.isTwoPlayersFightMode ? this.startNewGame(e + 1) : this.init(e)
            } else this.startNewGame(1)
        },
        onOvlShowed: function(e) {
            HxOverrides.remove(this.levels.physicElements, e), null != e.parent && e.parent.removeChild(e), this.init(this.opLevelAfterOvl, !0), this.levels.addChild(e), this.levels.physicElements.push(e), e.playLabel("hide", $bind(this, this.onOvlHidden))
        },
        onOvlHidden: function(e) {
            null != e.parent && e.parent.removeChild(e), HxOverrides.remove(this.levels.physicElements, e), e.destroy()
        },
        opLevelAfterOvl: null,
        currentlyInitedLevel: null,
        init: function(e, t) {
            null == t && (t = !1);
            var n = this;
            if (!t && null != this.getElementByName("changeOverlay_hidden")) {
                var l = this.getElementByName("changeOverlay_hidden");
                return l.set_visible(!0), this.opLevelAfterOvl = e, l.playLabel("show", $bind(this, this.onOvlShowed)), void(this.paused = !1)
            }
            for (ToolActions.resetObjectsScale(), ToolActions.stopAllSounds(), this.currentlyInitedLevel = !0, this.pauseClickFunction = null, this.activeTool = null, this.isToolActive = !1, this.nextBtnClickLevel = -1, this.isAssembleMode = !1, null != this.assembler && this.assembler.destroy(); this.gameModes.length > 0;) {
                var i = this.gameModes.pop();
                null != i && i.destroy()
            }
            for (this.isFightingMode = !1, null != this.fightingMode && this.fightingMode.destroy(), this.fightingMode = null, this.isFightTable = !1, null != this.fightTable && this.fightTable.destroy(), this.fightTable = null, this.cheatingMode = !1, null != this.cheatingModeHelper && this.cheatingModeHelper.destroy(), this.cheatingModeHelper = null, this.dragSound = null, null != this.fireWorkLayer.parent && this.fireWorkLayer.parent.removeChild(this.fireWorkLayer); this.fireWorkLayer.get_numChildren() > 0;) this.fireWorkLayer.removeChildAt(0);
            for (null != this.fireWorkTimer && (motion_Actuate.stop(this.fireWorkTimer, null, !1, !1), this.fireWorkTimer = null); this.fireWorks.length > 0;) this.fireWorks.pop().Destroy();
            this.fireIsActive = !1, this.isBlockedAction = !1, this.removeTutorObject = null, this.removeTutor = null, this.curHitZone = null, this.curHitTutor = null, this.currentProgressBar = null, this.isBusy = !1;
            var s = TJSON.parse(this.levels.data.levels[e].levelSetup);
            if ("" == this.levels.data.levels[e].levelSetup && (s = {}), null != s.fonSound ? (this.curFonSound = s.fonSound, this.main.sounds.canPlaySound && (this.main.playSpriteMusicE(this.curFonSound, !0, !0, !1), this.curFonSound = "")) : this.curFonSound = "fon", null != s && null != s.autoAlignTools && js_Boot.__cast(s.autoAlignTools, Bool) ? this.autoAlignTools = !0 : this.autoAlignTools = !1, this.centerResize = !1, null != s && null != s.centerResize && js_Boot.__cast(s.centerResize, Bool) && (this.centerResize = !0), null != s && null != s.isSequentToolsShow && js_Boot.__cast(s.isSequentToolsShow, Bool) ? this.isSequentToolsShow = !0 : this.isSequentToolsShow = !1, null != s.BGScaleAlign) {
                for (var a = s.BGScaleAlign, r = 0, o = a.length; r < o;) {
                    var d = r++;
                    a[d] = a[d].toLowerCase().charAt(0)
                }
                this.bgScaleAlign = a
            } else this.bgScaleAlign = null;
            null != s && null != s.isSequentToolsShow ? this.offsetToolsXOnSides = s.offsetToolsXOnSides : this.offsetToolsXOnSides = 0, null != s && null != s.cheatingMode && js_Boot.__cast(s.cheatingMode, Bool) && (this.cheatingMode = !0);
            var _ = this.levels.physicElements.slice();
            this.levels.initLevel(e);
            for (var h = 0, p = this.levels.physicElements; h < p.length;) {
                var c = p[h];
                ++h, c.gotoInitFrame()
            }
            null != this.bg && null != this.bg.parent && this.bg.parent.removeChild(this.bg), this.bg = new MovieClipExt(null), this.addChildAt(this.bg, 0);
            var Q = this.levels.data.levels[e].bg.i;
            if (Q.length > 0)
                for (var U = 0, m = Q.length; U < m;) {
                    var u = U++,
                        F = "img/backgrounds/" + Q[u]; - 1 == F.indexOf(".jpg") && -1 == F.indexOf(".png") && (F += ".png");
                    var N = new openfl_display_Bitmap(openfl_Assets.getBitmapData(F), 1, !0),
                        S = new openfl_display_Sprite;
                    S.addChild(N), this.bg.framesList[u] = S
                } else {
                    var W = new openfl_display_Sprite;
                    W.get_graphics().beginFill(0, 1), W.get_graphics().drawRect(0, 0, 100, 100), W.set_visible(!1), W.set_width(Config.baseSWidth), W.set_height(Config.baseSHeight), this.bg.framesList[0] = W
                }
            if (this.bg.totalFrames = Q.length, this.bg.labels = [], this.bg.sounds = [], this.bg.gotoAndStop(0), null != this.levels.data.levels[e].bg.x ? (this.bg.set_x(this.levels.data.levels[e].bg.x), this.bg.set_y(this.levels.data.levels[e].bg.y)) : (this.bg.set_x(0), this.bg.set_y(0)), this.bg.set_name(this.levels.data.levels[e].bg.n), -1 == HxOverrides.indexOf(this.levels.physicElements, this.bg, 0) && this.levels.physicElements.push(this.bg), null != s.previesFrames && s.previesFrames)
                for (var B = 0; B < _.length;) {
                    var Z = _[B];
                    if (++B, "UI" != Z.layerName && "" != Z.get_name()) {
                        var D = this.getElementByName(Z.get_name());
                        null != D && D.copyStateFrom(Z)
                    }
                }
            null != s.resizeByElement ? this.resizeByElement = this.getElementByName(s.resizeByElement) : this.resizeByElement = null, null != this.resizeByElement && this.resizeByElement.set_visible(!1), null != s.resizeSquareSize ? this.resizeSquareSize = s.resizeSquareSize : this.resizeSquareSize = -1, this.levelsTextFields = [];
            for (var V = 0, f = !1; !f;) {
                f = 0 != V;
                var R = this.getElementsByLayerName("TextLayer" + V);
                if (R.length > 0) {
                    var T = new LevelsTextField(R);
                    this.levelsTextFields[V] = T, f = !1
                }
                V++
            }
            for (var J = this.getElementsByLayerName("Simple_Nums"), g = 0; g < J.length;) {
                var b = J[g];
                ++g;
                new LevelsTextField([b])
            }
            for (null != s.isAssemblingLevel && s.isAssemblingLevel && (this.isAssembleMode = !0, this.assembler = new Assembler(s.assembleData)), null != s.isFightingLevel && s.isFightingLevel && (this.isFightingMode = !0, this.fightingMode = new FightingMode(s.fightingData)), null != s.isFightTable && s.isFightTable && (this.isFightTable = !0, this.fightTable = new FightTable(s.fightLevel)), this.isFightingMode || this.isFightTable || (FightTable.curFight = 0); this.toolsArr.length > 0;) this.toolsArr.pop();
            this.toolsMap = new haxe_ds_StringMap, this.toolsConfig = new haxe_ds_StringMap, this.totalInSequent = 0, this.toolsArr = this.getElementsByNamePrefix("tool");
            for (var E = 0; E < this.toolsArr.length;) - 1 == this.toolsArr[E].get_name().indexOf("_shaddow") ? E++ : HxOverrides.remove(this.toolsArr, this.toolsArr[E]);
            for (var v = 2, k = 0, M = this.toolsArr; k < M.length;) {
                var y = M[k];
                ++k;
                var x = y.get_name();
                this.toolsMap.set(x, y);
                var w = Reflect.field(s.tools, y.get_name());
                "string" == typeof w.target && (w.target = [w.target]), "string" == typeof w.addonTargets && (w.addonTargets = [w.addonTargets]), "string" == typeof w.label && (w.label = [w.label]), null == w.sequent && (w.sequent = !1), null == w.isInitActive && (w.isInitActive = !0), Object.prototype.hasOwnProperty.call(w, "sequenceIndex") || ("tool1" == y.get_name() ? (w.sequenceIndex = [1], v--) : w.sequenceIndex = [v]), v++;
                var G, H = w;
                if (H.isAnimFrames = !1, H.curFrameIndex = 1, "CHANGE_FRAME" == H.action && (G = this.getElementByName(H.target[0]), this.getElementByName(H.target[0]).hasLabel("state1_1") && (H.isAnimFrames = !0, this.getElementByName(H.target[0]).playLabel("state1_1", $bind(this, this.onChangeToolAnimEnd))), !H.isAnimFrames)) {
                    var C = G.getFrameLabels(0);
                    if (null != C && -1 != HxOverrides.indexOf(C, "type1", 0)) {
                        H.isFramesRange = !0, H.framesRangeKeyFrame = -1;
                        for (var Y = 0; Y < _.length;) {
                            var O = _[Y];
                            ++Y, O.get_name() == G.get_name() && (H.framesRangeKeyFrame = Math.floor(O.get_curFrame()) + 1)
                        }
                        for (var X, z = -1, I = -1, j = 0, L = G.totalFrames; j < L;) {
                            var A = j++;
                            null != (X = G.getFrameLabels(A)) && X.length > 0 && -1 != HxOverrides.indexOf(X, "type" + H.framesRangeKeyFrame, 0) && (z = A), null != X && X.length > 0 && -1 != HxOverrides.indexOf(X, "type" + (H.framesRangeKeyFrame + 1), 0) && (I = A - 1)
                        } - 1 == I && (I = G.totalFrames - 1), H.framesRange = [z, I], G.gotoAndStop(z)
                    }
                }
                null != H.initActions && (H._initActions = new ToolActions(H.initActions)), null != H.endActions && (H._endActions = new ToolActions(H.endActions));
                var P = y.get_name();
                if (this.toolsConfig.set(P, H), "OBJECTS_REMOVE" == H.action && null != H.isReverse && H.isReverse) {
                    this.objectsToRemove = this.getElementsByNamePrefix_(H.target[0]);
                    for (var $ = 0, K = this.objectsToRemove; $ < K.length;) {
                        var q = K[$];
                        ++$, q.gotoAndStop(1)
                    }
                }
                Object.prototype.hasOwnProperty.call(H, "sequenceIndex") ? this.totalInSequent += H.sequenceIndex.length : this.totalInSequent++
            }
            this.currentSequent = 1, this.numUsedTools = 0, this.initToolsY = new haxe_ds_ObjectMap, this.initToolsX = new haxe_ds_ObjectMap, this.initToolsPosIsLeft = new haxe_ds_ObjectMap;
            var ee = 1 / 0,
                te = this.getElementsByLayerName("UI");
            te = te.concat(this.getElementsByFolderName("UI"));
            for (var ne = 0; ne < te.length;) {
                var le = te[ne];
                ++ne;
                var ie = le.getBounds(le.parent);
                ie.get_top() < ee && (ee = ie.get_top());
                var se = le.get_y();
                this.initToolsY.set(le, se);
                var ae = le.get_x();
                this.initToolsX.set(le, ae);
                var re = le.get_x() < Config.baseSWidth / 2;
                this.initToolsPosIsLeft.set(le, re)
            }
            if (this.initToolsMostTop = ee, this.isSequentToolsShow)
                for (var oe = 0, de = this.toolsArr; oe < de.length;) {
                    var _e = de[oe];
                    ++oe, _e.set_visible(!1)
                }
            for (var he = this.getElementsByNamePostfix("_hidden"), pe = 0; pe < he.length;) {
                var ce = he[pe];
                ++pe, ce.set_visible(!1)
            }
            if (this.toolsScrollBtnUP = this.toolsScrollBtnDown = null, null != this.scrollToolsArr)
                for (; this.scrollToolsArr.length > 0;) this.scrollToolsArr.pop();
            if (null != this.getElementByName("toolsScrollBtnUP") || null != this.getElementByName("toolsScrollBtnDown")) {
                this.toolsScrollBtnUP = this.getElementByName("toolsScrollBtnUP"), this.toolsScrollBtnDown = this.getElementByName("toolsScrollBtnDown"), null == this.scrollToolsArr && (this.scrollToolsArr = []), this.curScrollToolsIDX = 0;
                for (var Qe = 0, Ue = this.toolsArr; Qe < Ue.length;) {
                    var me = Ue[Qe];
                    ++Qe, this.scrollToolsArr.push(me)
                }
                this.scrollToolsArr.sort(function(e, t) {
                    return Std.parseInt(StringTools.replace(e.get_name(), "tool", "")) - Std.parseInt(StringTools.replace(t.get_name(), "tool", "")) < 0 ? -1 : 1
                });
                for (var ue = 0, Fe = this.scrollToolsArr; ue < Fe.length;) {
                    var Ne = Fe[ue];
                    ++ue, Ne.set_visible(!1)
                }
                this.scrollToolsArr[0].set_visible(!0)
            }
            this.playBtn = this.getElementByName("playBtn"), this.soundBtn = this.getElementByName("soundBtn"), this.nextBtn = this.getElementByName("nextBtn"), null == this.nextBtn && (this.nextBtn = this.getElementByName("nextBtnSelection")), this.restartBtn = this.getElementByName("restartBtn"), null != this.nextBtn && this.nextBtn.set_visible(!1), null != this.restartBtn && this.restartBtn.set_visible(!1), null != this.nextBtn && 0 == this.toolsArr.length && this.nextBtn.set_visible(!0), null != this.soundBtn && this.soundBtn.gotoAndStop(this.main.sounds.muted ? 1 : 0), motion_Actuate.stop(this.blinkTimer, null, !1, !1), null != this.blinkTimer && motion_Actuate.unload(this.blinkTimer), this.blinkTimer = null, null != this.getElementByName("blink") && (this.blinkTimer = motion_Actuate.timer(this.minTimeToBlink + Math.random() * (this.maxTimeToBlink - this.minTimeToBlink)).onComplete($bind(this, this.blink))), this.curMaskBmd = null, this.curMaskBm = null, this.curBrushBmd = null, this.curBrushObj = null, this.draggingObject = null, this.isDrawingMask = !1, this.isAutoMask = !1, this.isAutoMaskAction = !1, this.isHitHizone = !1, this.isSequentToolClicked = !1, this.isErasingMask = !1, this.isDragging = !1, this.drawEraseTutor = this.getElementByName("drawEraseTutor_hidden"), this.toolsHighlighter = this.getElementByName("toolhighlight_hidden"), this.toolsHighlighterAlignTarget = null, this.isObjectRemoving = !1, this.isAnimation = !1;
            for (var Se = this.getElementsByLayerName("RandPlay"); this.randAnimElements.length > 0;) this.randAnimElements.pop();
            for (var We = 0; We < Se.length;) {
                var Be = Se[We];
                ++We, this.randAnimElements.push({
                    object: Be,
                    delayToPlay: Std.random(15e3)
                })
            }
            var Ze = this.getElementsByLayerName("Animate");
            Ze = Ze.concat(this.getElementsByFolderName("Animate"));
            for (var De = 0; De < Ze.length;) {
                var Ve = Ze[De];
                ++De, Ve.play()
            }
            Ze = (Ze = this.getElementsByLayerName("RandFrameAnimate")).concat(this.getElementsByFolderName("RandFrameAnimate"));
            for (var fe = 0; fe < Ze.length;) {
                var Re = Ze[fe];
                ++fe, Re.gotoAndStop(Std.random(Re.totalFrames)), Re.play()
            }
            for (var Te, Je, ge = 0, be = this.levels.physicElements; ge < be.length;) {
                var Ee = be[ge];
                ++ge, Ee.hasLabel("preAnimRandFrame") ? (Ee.playLabel("preAnimRandFrame"), Ee.set_curFrame(Ee.curStartFrame + Math.random() * (Ee.curEndFrame - Ee.curStartFrame))) : Ee.hasLabel("preAnim") && Ee.playLabel("preAnim")
            }
            for (this.addonPanelsOffsetX = 0; this.selectionBtns.length > 0;) this.selectionBtns.pop();
            if (this.isSelectionLevel) {
                this.selectionBtns = this.getElementsByNamePrefix("level_btn");
                for (var ve = [], ke = 0, Me = this.selectionBtns; ke < Me.length;) {
                    var ye = Me[ke];
                    ++ke;
                    var xe = Std.parseInt(StringTools.replace(ye.get_name(), "level_btn", ""));
                    ve.push(xe)
                }
                ve.sort($bind(this, this.intArrSort));
                for (var we = 0, Ge = this.selectionBtns; we < Ge.length;) {
                    var He = Ge[we];
                    ++we;
                    var Ce, Ye = Std.parseInt(StringTools.replace(He.get_name(), "level_btn", ""));
                    Ce = Ye == ve[0] || -1 != (Te = this, void 0, Je = ve[HxOverrides.indexOf(ve, Ye, 0) - 1], HxOverrides.indexOf(Te.passedLevels, Je, 0)), He.gotoAndStop(Ce ? 0 : 1)
                }
            }
            this.prepareTool();
            var Oe = null; //gradle more
            if (this.gameLogo = this.getElementByName("gameLogo"), null != this.gameLogo && (this.maxLogoDx = Config.baseSWidth / 2 - this.gameLogo.get_x()), null != this.gameLogo && (this.gameLogoInitX = this.gameLogo.get_x()), null != this.gameLogo && (this.gameLogoInitY = this.gameLogo.get_y()), this.pauseFill = null, this.toolsApearAlignYTarget = null, this.isToolsApearDelay = !1, null != s && null != s.toolsApearAlignYTarget && (this.toolsApearAlignYTarget = this.getElementByName(s.toolsApearAlignYTarget)), this.toolsApearKeepTopOffset = null != s && null != s.toolsApearKeepTopOffset && js_Boot.__cast(s.toolsApearKeepTopOffset, Bool), this.toolsApearKeepTopOffset && null != this.toolsApearAlignYTarget)
                if (null != this.toolsMap && function(e) {
                        var t = s.toolsApearAlignYTarget;
                        return e.toolsMap.exists(t)
                    }(this) && null != this.initToolsY) {
                    var Xe, ze = s.toolsApearAlignYTarget;
                    Xe = this.toolsMap.get(ze), this.toolsApearTopOffset = this.initToolsY.h[Xe.__id__]
                } else this.toolsApearTopOffset = this.toolsApearAlignYTarget.get_y();
            else if (this.toolsApearKeepTopOffset)
                if (null != this.toolsMap && null != this.initToolsY && function(e) {
                        var t = e.toolsMap.get("tool1");
                        return null != e.initToolsY.h.__keys__[t.__id__]
                    }(this)) {
                    var Ie = this.toolsMap.get("tool1");
                    this.toolsApearTopOffset = this.initToolsY.h[Ie.__id__]
                } else this.toolsApearTopOffset = 0;
            if (this.main.resize(null), null != s && null != s.animateToolsApear && js_Boot.__cast(s.animateToolsApear, Bool))
                if (null != s && null != s.toolsApearDelay) {
                    for (var je = 0; je < te.length;) {
                        var Le = te[je];
                        ++je, Le.set_x(-1e5)
                    }
                    this.isToolsApearDelay = !0, motion_Actuate.timer(s.toolsApearDelay).onComplete($bind(this, this.animateToolsApear))
                } else this.animateToolsApear();
            this.externalLinksBtns = this.getElementsByFolderName("ClickBtns"), this.finishScreenBtns = this.getElementsByFolderName("FinishScreenBtns");
            for (var Ae = 0, Pe = this.finishScreenBtns; Ae < Pe.length;) {
                var $e = Pe[Ae];
                ++Ae, $e.set_visible(!1)
            }
            for (var Ke = 0, qe = this.externalLinksBtns; Ke < qe.length;) {
                var et = qe[Ke];
                ++Ke, -1 != et.get_name().indexOf("_multi") && et.gotoAndStop(Std.random(et.totalFrames))
            }
            for (var tt = 0, nt = this.finishScreenBtns; tt < nt.length;) {
                var lt = nt[tt];
                ++tt, -1 != lt.get_name().indexOf("_multi") && lt.gotoAndStop(Std.random(lt.totalFrames))
            }
            if (this.actionBtns = [], null != s.actionBtns)
                for (var it = Reflect.fields(s.actionBtns), st = 0; st < it.length;) {
                    var at = it[st];
                    ++st, null != this.getElementByNameInLayer(at, "ActionBtn") ? this.actionBtns.push(this.getElementByNameInLayer(at, "ActionBtn")) : this.actionBtns.push(this.getElementByName(at))
                }
            for (var rt = this.getElementsByLayerName("AndroidCloseWindow"), ot = 0; ot < rt.length;) {
                var dt = rt[ot];
                ++ot, dt.set_visible(!1)
            }
            if (this.links = new haxe_ds_StringMap, Object.prototype.hasOwnProperty.call(s, "links"))
                for (var _t = s.links, ht = Reflect.fields(_t), pt = 0; pt < ht.length;) {
                    var ct = ht[pt];
                    ++pt;
                    var Qt = Reflect.field(_t, ct);
                    this.links.set(ct, Qt)
                }
            if (this.cheatingMode && (this.cheatingModeHelper = new CheatingModeHelper(s.cheatingModeData)), this.actionBtnsActions = new haxe_ds_StringMap, Object.prototype.hasOwnProperty.call(s, "actionBtns"))
                for (var Ut = s.actionBtns, mt = Reflect.fields(Ut), ut = 0; ut < mt.length;) {
                    var Ft = mt[ut];
                    ++ut;
                    var Nt = Reflect.field(Ut, Ft);
                    this.actionBtnsActions.set(Ft, Nt)
                }
            if (null != s.FinalProgressBars)
                for (var St = s.FinalProgressBars, Wt = 0, Bt = St.length; Wt < Bt;) {
                    var Zt = Wt++,
                        Dt = new FinalProgressBar(St[Zt]);
                    this.gameModes.push(Dt)
                }
            if (null != s.dialogWindowses && s.dialogWindowses) {
                var Vt = new DialogsWindowses(s.dialogWindowses);
                this.gameModes.push(Vt)
            }
            if (null != s && null != s.initAction) {
                var ft = s.initAction;
                new ToolActions(ft).start()
            }
            if (null != s && null != s.completeAction ? this.levelCompleteActions = s.completeAction : this.levelCompleteActions = null, null != s && null != s.putAssemblerScores && s.putAssemblerScores) {
                motion_Actuate.update(function(e) {
                    null != n.levelsTextFields && null != n.levelsTextFields[1] && n.levelsTextFields[1].set_text(Math.floor(e) + "")
                }, 1, [0], [Assembler.curTime]).ease(motion_easing_Linear.get_easeNone()), this.levelsTextFields[1].set_text(Assembler.curTime + ""), this.levelsTextFields[2].set_text(Assembler.get_bestTime() + "")
            }
            if (this.pauseWindow = null, this.paused = !1, this.pauseFill = null, null != this.getElementByName("pauseBtn")) {
                this.pauseBtns = this.getElementsByName("pauseBtn"), this.pauseWindow = this.getElementsByFolderName("PauseWindow");
                for (var Rt = 0, Tt = this.pauseWindow; Rt < Tt.length;) {
                    var Jt = Tt[Rt];
                    ++Rt, Jt.set_visible(!1), "pauseFill" == Jt.get_name() && (this.pauseFill = Jt, this.pauseFill.set_x(-this.levels.get_x() - 1 / this.levels.get_scaleX() * 10), this.pauseFill.set_y(-this.levels.get_y() - 1 / this.levels.get_scaleY() * 10), this.pauseFill.set_width((this.main.sWidth + 20) * (1 / this.levels.get_scaleX())), this.pauseFill.set_height((this.main.sHeight + 20) * (1 / this.levels.get_scaleY())))
                }
            }
            if (-1 != this.lastWinner) {
                var gt = this.getElementsByFolderName("Winner" + (3 - this.lastWinner));
                if (null != gt)
                    for (var bt = 0; bt < gt.length;) {
                        var Et = gt[bt];
                        ++bt, Et.set_visible(!1)
                    }
            }
            if (this.lastWinner = -1, this.deskHelper.init(s), new EReg("iPad|iPhone|iPod", "i").match(window.navigator.userAgent) && !window.MSStream && null != this.getElementByName("screenShotBtn") && this.getElementByName("screenShotBtn").set_visible(!1), null != s.PuzzleMode && s.PuzzleMode) {
                var vt = new PuzzleMode(s.PuzzleModeData);
                this.gameModes.push(vt)
            }
            if (null != s.isGameMode && s.isGameMode) {
                var kt = new Game(s.gameData);
                this.gameModes.push(kt)
            }
            if (null != s.isHiddenObjectSimpleMode && s.isHiddenObjectSimpleMode) {
                var Mt = new HiddenObjectSimpleMode(s.hiddenObjectSimpleConfig);
                this.gameModes.push(Mt)
            }
            if (null != s.isMathTestMode && s.isMathTestMode) {
                var yt = new MathTestMode(s.MathTestConfig);
                this.gameModes.push(yt)
            } - 1 == HxOverrides.indexOf(this.openedLevels, this.curLevel, 0) && this.openedLevels.push(this.curLevel), 0 == this.curLevel && gradle.event('SCREEN_HOME')
        },
        intArrSort: function(e, t) {
            return e == t ? 0 : e - t < 0 ? -1 : 1
        },
        blink: function() {
            this.getElementByName("blink").gotoAndStop(0), this.getElementByName("blink").playLabel("blink"), this.blinkTimer = motion_Actuate.timer(this.minTimeToBlink + Math.random() * (this.maxTimeToBlink - this.minTimeToBlink)).onComplete($bind(this, this.blink))
        },
        getTargets: function(e) {
            var t = e.split(":");
            return t.length > 1 && ("folder" == t[0] || "layer" == t[0]) ? "layer" == t[0] ? this.getElementsByLayerName(t[1]) : "folder" == t[0] ? this.getElementsByFolderName(t[1]) : null : this.getElementsByName(e)
        },
        getElementByName: function(e) {
            for (var t = 0, n = this.levels.physicElements; t < n.length;) {
                var l = n[t];
                if (++t, l.get_name() == e) return l
            }
            return null
        },
        getElementByNameInFolder: function(e, t) {
            for (var n = this.getElementsByFolderName(t), l = 0; l < n.length;) {
                var i = n[l];
                if (++l, i.get_name() == e) return i
            }
            return null
        },
        getElementsByName: function(e) {
            for (var t = [], n = 0, l = this.levels.physicElements; n < l.length;) {
                var i = l[n];
                ++n, i.get_name() == e && t.push(i)
            }
            return t
        },
        getElementByNameInLayer: function(e, t) {
            for (var n = this.getElementsByLayerName(t), l = 0; l < n.length;) {
                var i = n[l];
                if (++l, i.get_name() == e) return i
            }
            return null
        },
        getElementsByNamePrefix: function(e) {
            for (var t = [], n = new EReg(e + "([0-9])+", "i"), l = 0, i = this.levels.physicElements; l < i.length;) {
                var s = i[l];
                ++l, n.match(s.get_name()) && t.push(s)
            }
            return t
        },
        getElementsByNamePrefix_: function(e) {
            for (var t = [], n = new EReg(e + "_(.)+", "i"), l = 0, i = this.levels.physicElements; l < i.length;) {
                var s = i[l];
                ++l, n.match(s.get_name()) && t.push(s)
            }
            return t
        },
        getElementsByNamePostfix: function(e) {
            for (var t = [], n = new EReg(".+" + e, "i"), l = 0, i = this.levels.physicElements; l < i.length;) {
                var s = i[l];
                ++l, n.match(s.get_name()) && t.push(s)
            }
            return t
        },
        getElementsByLayerName: function(e) {
            for (var t = [], n = 0, l = this.levels.physicElements; n < l.length;) {
                var i = l[n];
                ++n, i.layerName == e && t.push(i)
            }
            return t
        },
        getElementsByFolderName: function(e) {
            for (var t = [], n = 0, l = this.levels.physicElements; n < l.length;) {
                var i = l[n];
                ++n, i.groupName == e && t.push(i)
            }
            return t
        },
        animateToolsApear: function() {
            if (this.isToolsApearDelay = !1, this.isSequentToolsShow)
                for (var e = 0, t = this.toolsArr; e < t.length;) {
                    var n, l = t[e];
                    ++e;
                    var i = l.get_name();
                    n = this.toolsConfig.get(i), -1 != HxOverrides.indexOf(n.sequenceIndex, this.currentSequent, 0) ? this.animateSequentShowToolApear(l) : l.set_visible(!1)
                } else
                    for (var s = this.getElementsByLayerName("UI"), a = 0, r = 0, o = !1, d = 0; d < s.length;) {
                        var _ = s[d];
                        if (++d, -1 == _.get_name().indexOf("no_apear")) {
                            var h = _.get_x();
                            if (_.get_x() < Config.baseSWidth / 2) {
                                var p = _;
                                p.set_x(p.get_x() - 200), a += .03, o = !0
                            }
                            if (_.get_x() > Config.baseSWidth / 2) {
                                r += .03;
                                var c = _;
                                c.set_x(c.get_x() + 200), o = !1
                            }
                            motion_Actuate.tween(_, .4, {
                                x: h
                            }).ease(motion_easing_Back.get_easeOut()).delay(o ? a : r)
                        }
                    }
        },
        resetMCForcedFrame: function(e, t) {
            null == t && (t = !1), t ? motion_Actuate.timer(.4).onComplete($bind(this, this.resetMCForcedFrame), [e]) : e.set_forcedRenderFrame(-1)
        },
        animateSequentShowToolApear: function(e) {
            e.set_visible(!0);
            var t = e.getBounds(e.parent),
                n = -Desk.get_leftLevels() + (e.get_x() - t.x);
            e.set_x(n - Math.max(200, Math.abs(t.width)));
            var l = this.getElementByName(e.get_name() + "_shaddow");
            e.set_forcedRenderFrame(0), motion_Actuate.tween(e, .4, {
                x: n
            }).ease(motion_easing_Back.get_easeOut()).onComplete($bind(this, this.resetMCForcedFrame), [e]), null != l && (l.set_x(e.get_x()), l.set_y(e.get_y()), l.set_forcedRenderFrame(0), motion_Actuate.tween(l, .4, {
                x: n
            }).ease(motion_easing_Back.get_easeOut()).onComplete($bind(this, this.resetMCForcedFrame), [l]))
        },
        alignBG: function() {
            if (null != this.bgScaleAlign)
                for (var e = 0, t = this.bgScaleAlign; e < t.length;) {
                    var n = t[e];
                    ++e, "t" == n ? this.bg.set_y(0) : "b" == n ? this.bg.set_y(this.main.sHeight - this.bg.get_height()) : "l" == n ? this.bg.set_x(0) : "r" == n && this.bg.set_x(this.main.sWidth - this.bg.get_width())
                }
        },
        onResize: function(e) {
            if (null == e && (e = !1), null != this.resizeByElement) {
                this.levels.set_scaleX(this.levels.set_scaleY(1));
                var t = this.resizeByElement.getBounds(this.resizeByElement.parent),
                    n = Config.baseSHeight / t.height,
                    l = this.main.sWidth / t.width,
                    i = this.main.sHeight / t.height;
                n = i * t.width < this.main.sWidth ? i : l, this.levels.set_scaleX(this.levels.set_scaleY(n));
                var s = this.main.sWidth / n,
                    a = this.main.sHeight / n;
                this.levels.set_x(-(t.x + t.width / 2) * n + s / 2 * n), this.levels.set_y(-(t.y + t.height / 2) * n + a / 2 * n), null != this.bg && (this.bg.set_scaleX(this.bg.set_scaleY(this.main.sHeight / Config.baseSHeight)), this.bg.get_width() < this.main.sWidth && this.bg.set_width(this.main.sWidth), this.bg.set_scaleY(this.bg.get_scaleX()), this.bg.set_x(this.main.sWidth / 2 - this.bg.get_width() / 2), this.alignBG())
            } else if (-1 != this.resizeSquareSize) {
                var r;
                r = null != this.getElementByName("topBoard") ? this.getElementByName("topBoard").get_height() / this.getElementByName("topBoard").get_scaleY() : 0;
                var o, d, _, h = this.main.sWidth > this.main.sHeight;
                o = this.resizeSquareSize + (h ? 2 * r : 0), d = this.resizeSquareSize + (h ? 0 : 2 * r), _ = this.main.sWidth / o < this.main.sHeight / d ? this.main.sWidth / o : this.main.sHeight / d, this.levels.set_scaleX(this.levels.set_scaleY(_)), this.levels.set_y(this.main.sHeight / 2 - Config.baseSHeight * this.levels.get_scaleY() / 2), this.levels.set_x(this.main.sWidth / 2 - Config.baseSWidth * this.levels.get_scaleX() / 2), null != this.bg && (this.bg.set_scaleX(this.bg.set_scaleY(this.levels.get_scaleX())), this.bg.set_x(this.main.sWidth / 2 - this.bg.get_width() / 2), this.bg.set_y(this.main.sHeight / 2 - this.bg.get_height() / 2), this.alignBG())
            } else {
                this.levels.set_scaleX(this.levels.set_scaleY(1));
                this.main.sWidth / this.main.sHeight < .8 && this.levels.set_scaleX(this.levels.set_scaleY(this.main.sWidth / this.main.sHeight / .8)), this.levels.set_y(this.centerResize ? this.main.sHeight / 2 - Config.baseSHeight * this.levels.get_scaleY() / 2 : this.main.sHeight - Config.baseSHeight * this.levels.get_scaleY()), this.levels.set_x(this.main.sWidth / 2 - Config.baseSWidth * this.levels.get_scaleY() / 2), null != this.bg && (this.bg.set_scaleX(this.bg.set_scaleY(1)), this.bg.get_width() < this.main.sWidth && this.bg.set_width(this.main.sWidth), this.bg.set_scaleY(this.bg.get_scaleX()), this.bg.set_x(this.main.sWidth / 2 - this.bg.get_width() / 2), this.alignBG())
            }
            if (e) {
                var p = this.main.sHeight / Config.baseSHeight;
                this.levels.set_scaleX(this.levels.set_scaleY(1)), null == this.resizeByElement && (this.levels.set_y(this.main.sHeight - 1 * Config.baseSHeight), this.levels.set_x(this.main.sWidth / 2 - 1 * Config.baseSWidth / 2), null != this.bg && (this.bg.set_scaleX(this.bg.set_scaleY(p)), this.bg.get_width() < this.main.sWidth && this.bg.set_width(this.main.sWidth), this.bg.set_scaleY(this.bg.get_scaleX()), this.bg.set_x(this.main.sWidth / 2 - this.bg.get_width() / 2), this.alignBG()))
            } else if (this.levels.get_scaleY() < .9) return void this.main.config.initSize(!1, this.levels.get_scaleY());
            var c;
            if (c = 1 == this.levels.get_scaleY() ? Config.baseSHeight / this.main.sHeight : this.levels.get_scaleY(), this.autoAlignTools && !this.isToolsApearDelay)
                if (this.isSequentToolsShow)
                    for (var Q = 0, U = this.toolsArr; Q < U.length;) {
                        var m = U[Q];
                        ++Q, motion_Actuate.stop(m, null, !1, !1);
                        var u = m.getBounds(m.parent);
                        m.set_x(-Desk.get_leftLevels() + (m.get_x() - u.x)), null == this.toolsApearAlignYTarget ? this.toolsApearKeepTopOffset ? m.set_y(-Desk.get_topLevels() + this.toolsApearTopOffset) : m.set_y(-Desk.get_topLevels() + Desk.get_sHeightLevels() / 2) : this.toolsApearKeepTopOffset ? m.set_y(-Desk.get_topLevels() + this.toolsApearTopOffset) : m.set_y(this.toolsApearAlignYTarget.get_y());
                        var F = this.getElementByName(m.get_name() + "_shaddow");
                        null != F && (F.set_x(m.get_x()), F.set_y(m.get_y()))
                    } else {
                        for (var N = 1 / 0, S = -1 / 0, W = 1 / 0, B = this.getElementsByLayerName("UI"), Z = 0; Z < B.length;) {
                            var D = B[Z];
                            ++Z, motion_Actuate.stop(D, null, !1, !1), D.set_x(this.initToolsX.h[D.__id__]);
                            var V = D.getBounds(D.parent);
                            V.get_left() < N && (N = V.get_left()), V.get_right() > S && (S = V.get_right()), V.get_top() < W && (W = V.get_top())
                        }
                        N += this.offsetToolsXOnSides, S -= this.offsetToolsXOnSides;
                        for (var f = this.main.sWidth / this.levels.get_scaleX() / 2 - (Config.baseSWidth / 2 - N), R = this.main.sWidth / this.levels.get_scaleX() / 2 - (S - Config.baseSWidth / 2), T = -this.levels.get_y() / this.levels.get_scaleY() - this.initToolsMostTop, J = 0; J < B.length;) {
                            var g = B[J];
                            ++J, this.initToolsPosIsLeft.h[g.__id__] && g.set_x(g.get_x() - f - this.addonPanelsOffsetX), this.initToolsPosIsLeft.h[g.__id__] || g.set_x(g.get_x() + R + this.addonPanelsOffsetX), g.set_y(Math.max(this.initToolsY.h[g.__id__] + T, this.initToolsY.h[g.__id__] + 1500 * (c - 1)))
                        }
                    }
            if (null != this.toolsHighlighterAlignTarget && null != this.toolsHighlighter && (this.toolsHighlighter.set_x(this.toolsHighlighterAlignTarget.get_x()), this.toolsHighlighter.set_y(this.toolsHighlighterAlignTarget.get_y())), null != this.nextBtn && (this.nextBtn.set_x(Config.baseSWidth / 2), this.nextBtn.set_y(-this.levels.get_y() / this.levels.get_scaleY() + this.main.sHeight / this.levels.get_scaleY() - this.nextBtn.get_height() / 2 - 10)), null != this.pauseFill && (this.pauseFill.set_x(-this.levels.get_x() - 1 / this.levels.get_scaleX() * 10), this.pauseFill.set_y(-this.levels.get_y() - 1 / this.levels.get_scaleY() * 10), this.pauseFill.set_width((this.main.sWidth + 20) * (1 / this.levels.get_scaleX())), this.pauseFill.set_height((this.main.sHeight + 20) * (1 / this.levels.get_scaleY()))), null != this.moreGamesBtn && (this.moreGamesBtn.set_x(Config.baseSWidth / 2 - this.moreGamesBtn.get_width() / 2), this.moreGamesBtn.set_y(-this.levels.get_y() / this.levels.get_scaleY() + this.main.sHeight / this.levels.get_scaleY() - this.moreGamesBtn.get_height() - 5)), null != this.gameLogo && (this.gameLogo.set_scaleX(this.gameLogo.set_scaleY(1)), 1 != this.levels.get_scaleX() && this.gameLogo.set_scaleX(this.gameLogo.set_scaleY(1 / this.levels.get_scaleX() * .9)), this.gameLogo.set_x(this.gameLogoInitX), this.gameLogo.set_y(this.gameLogoInitY), this.main.sWidth / this.main.sHeight < 1.2)) {
                var b = this.gameLogo;
                b.set_x(b.get_x() + this.maxLogoDx * Math.min(1, 2 * (1.2 - this.main.sWidth / this.main.sHeight)));
                var E = this.gameLogo;
                E.set_y(E.get_y() + (-this.levels.get_y() / this.levels.get_scaleY() - this.gameLogo.getBounds(this.levels).get_top()))
            }
            null != this.cheatingModeHelper && this.cheatingModeHelper.onResize(), null != this.fightingMode && this.fightingMode.onResize(), null != this.deskHelper && this.deskHelper.onResize();
            var v = this.getElementsByName("topHalfCentre");
            if (this.main.sWidth < this.main.sHeight)
                for (var k = 0; k < v.length;) {
                    var M = v[k];
                    ++k, M.set_y(-this.levels.get_y() / this.levels.get_scaleY() + this.main.sHeight / this.levels.get_scaleY() / 2 / 2), this.levels.get_y() / this.levels.get_scaleY() + M.get_height() / 2 / this.levels.get_scaleY() < 0 && M.set_y(this.levels.get_y() / this.levels.get_scaleY() + M.get_height() / 2 / this.levels.get_scaleY())
                } else
                    for (var y = 0; y < v.length;) {
                        var x = v[y];
                        ++y, x.set_y(this.levels.get_y() / this.levels.get_scaleY() + x.get_height() / 2 / this.levels.get_scaleY())
                    }
            for (var w = 0, G = this.gameModes; w < G.length;) {
                var H = G[w];
                ++w, H.onResize()
            }
        },
        restartLevel: function() {
            this.startNewGame(this.curLevel)
        },
        nextLevel: function() {
            this.startNewGame(this.curLevel + 1)
        },
        animateToolClick: function(e) {
            motion_Actuate.stop(e, null, !0, !0);
            var t = this.getElementByName(e.get_name() + "_shaddow"),
                n = 1.3 * e.get_scaleX(),
                l = 1.3 * e.get_scaleY(),
                i = [e];
            null != t && i.push(t), e.set_forcedRenderFrame(0);
            for (var s = 0, a = i.length; s < a;) {
                var r = s++;
                motion_Actuate.tween(i[r], .17, {
                    scaleX: n,
                    scaleY: l
                }).ease(motion_easing_Back.get_easeIn()).repeat(1).reflect(!0).onComplete($bind(this, this.onToolClickAnimEnd), [{
                    target: i[r],
                    scaleX: i[r].get_scaleX(),
                    scaleY: i[r].get_scaleY()
                }])
            }
            null != this.toolsHighlighter && (this.toolsHighlighter.set_visible(!0), this.toolsHighlighter.get_x() == e.get_x() && this.toolsHighlighter.get_y() == e.get_y() && this.toolsHighlighterAlignTarget == e || (this.toolsHighlighterAlignTarget = e, this.toolsHighlighter.set_x(e.get_x()), this.toolsHighlighter.set_y(e.get_y()), this.toolsHighlighter.set_scaleX(.01), this.toolsHighlighter.set_scaleX(.01), motion_Actuate.tween(this.toolsHighlighter, .3, {
                scaleX: 1,
                scaleY: 1
            }).ease(motion_easing_Back.get_easeOut()), null != this.toolsHighlighter.parent && this.toolsHighlighter.parent.removeChild(this.toolsHighlighter), this.levels.addChildAt(this.toolsHighlighter, this.levels.getChildIndex(e)))), this.main.playSpriteSound("BtnSound")
        },
        onToolClickAnimEnd: function(e) {
            var t;
            js_Boot.__instanceof(e.target, MovieClipExt) && js_Boot.__cast(e.target, MovieClipExt).set_forcedRenderFrame(-1), e.target.set_scaleX(e.scaleX), e.target.set_scaleY(e.scaleY);
            var n = e.target.get_name(),
                l = null != (t = this.toolsConfig.get(n)) && !t.sequent;
            this.isSequentToolsShow && !l && (e.target.set_visible(!1), this.toolsHighlighterAlignTarget == e.target && (this.toolsHighlighterAlignTarget = null, null != this.toolsHighlighter && this.toolsHighlighter.set_visible(!1)))
        },
        onBtnAnimEndFun: null,
        isBtnClickAnim: null,
        animateBtnClick: function(e, t, n) {
            if (null == n && (n = !1), !this.isBtnClickAnim) {
                this.isBtnClickAnim = !0, this.onBtnAnimEndFun = t, motion_Actuate.stop(e, null, !0, !0);
                var l = 1.25 * e.get_scaleX(),
                    i = 1.1 * e.get_scaleY();
                motion_Actuate.tween(e, .2, {
                    scaleX: l,
                    scaleY: i
                }).ease(Desk.customBackEaseIn).repeat(1).reflect(!0).onComplete($bind(this, this.onBtnClickAnimEnd), [{
                    target: e,
                    scaleX: e.get_scaleX(),
                    scaleY: e.get_scaleY()
                }]), this.main.sounds.hasSpriteName("BtnSound"), n || this.main.playSpriteSound("BtnSound")
            }
        },
        onBtnClickAnimEnd: function(e) {
            this.isBtnClickAnim = !1, e.target.set_scaleX(e.scaleX), e.target.set_scaleY(e.scaleY), null != this.onBtnAnimEndFun && this.onBtnAnimEndFun(), this.onBtnAnimEndFun = null
        },
        wasHideAllTutors: null,
        prepareTool: function(e) {
            null == e && (e = !1), this.wasHideAllTutors = e, this.isBlockedAction = !1;
            for (var t, n, l = 0, i = this.toolsArr; l < i.length;) {
                var s, a = i[l];
                ++l;
                var r = a.get_name();
                s = this.toolsConfig.get(r), e || -1 == HxOverrides.indexOf(s.sequenceIndex, this.currentSequent, 0) ? a.hasLabel("tutor1") && -1 == a.curLabel.indexOf("tutor2") && 1 != a.get_curFrame() && !(t = this, void 0, n = a.get_name(), t.toolsConfig.get(n)).sequent && a.gotoAndStop(0) : (null != s.isBlockedAction && js_Boot.__cast(s.isBlockedAction, Bool) && (this.isBlockedAction = !0), s.isInitActive ? (null != s._initActions && s._initActions.start(), a.hasLabel("tutor1") && a.playLabel("tutor1")) : null != s._initActions && s._initActions.start(), this.isSequentToolsShow && this.animateSequentShowToolApear(a))
            }
        },
        activateCurrentTool: function() {
            for (var e = 0, t = this.toolsArr; e < t.length;) {
                var n, l = t[e];
                ++e;
                var i = l.get_name();
                n = this.toolsConfig.get(i), this.wasHideAllTutors || -1 == HxOverrides.indexOf(n.sequenceIndex, this.currentSequent, 0) || (null != n.isBlockedAction && js_Boot.__cast(n.isBlockedAction, Bool) && (this.isBlockedAction = !0), l.hasLabel("tutor1") && l.playLabel("tutor1"))
            }
        },
        completeTools: function() {
            this.numUsedTools >= this.totalInSequent || (this.numUsedTools = 8888888, this.changeToNextTool(!0))
        },
        nextTool: function() {
            this.changeToNextTool()
        },
        animationToolClick: function(e) {
            var t, n = e.get_name();
            (t = this.toolsConfig.get(n), this.main.isKeyDown(17) || -1 != HxOverrides.indexOf(t.sequenceIndex, this.currentSequent, 0)) && (this.animateToolClick(e), this.isAnimation = !0, this.getElementByName(t.target[0]).set_visible(!0), this.getElementByName(t.target[0]).gotoAndStop(0), this.getElementByName(t.target[0]).playWithCallBack($bind(this, this.onAnimEnd)), null != t.mainAction && new ToolActions(t.mainAction).start())
        },
        onAnimEnd: function(e) {
            e.set_visible(!1), this.isAnimation = !1, this.changeToNextTool()
        },
        animateBtnApear: function(e) {
            e.set_scaleX(e.set_scaleY(.01)), motion_Actuate.tween(e, .3, {
                scaleX: 1,
                scaleY: 1
            }).ease(motion_easing_Back.get_easeOut())
        },
        changeFrameToolClick: function(e) {
            var t, n, l = e.get_name();
            t = this.toolsConfig.get(l);
            var i, s = e.get_name();
            if (i = null != (n = this.toolsConfig.get(s)).addonTargets ? this.getTargets(n.addonTargets[0]) : null, t.isAnimFrames) {
                if (t.curFrameIndex++, this.getElementByName(t.target[0]).hasLabel("state" + t.curFrameIndex + "_1") || (t.curFrameIndex = 1), this.getElementByName(t.target[0]).playLabel("state" + t.curFrameIndex + "_1", $bind(this, this.onChangeToolAnimEnd)), null != i)
                    for (var a = 0; a < i.length;) {
                        var r = i[a];
                        ++a, r.playLabel("state" + t.curFrameIndex + "_1", $bind(this, this.onChangeToolAnimEnd))
                    }
            } else if (t.isFramesRange) {
                var o = this.getElementByName(t.target[0]);
                if (o.nextFrame(), null != i)
                    for (var d = 0; d < i.length;) {
                        var _ = i[d];
                        ++d, _.nextFrame()
                    }
                if ((Math.floor(o.get_curFrame()) > t.framesRange[1] || Math.floor(o.get_curFrame()) < t.framesRange[0]) && (o.gotoAndStop(t.framesRange[0]), null != i))
                    for (var h = 0; h < i.length;) {
                        var p = i[h];
                        ++h, p.gotoAndStop(t.framesRange[0])
                    }
            } else if (this.getElementByName(t.target[0]).nextFrame(), null != i)
                for (var c = 0; c < i.length;) {
                    var Q = i[c];
                    ++c, Q.nextFrame()
                }(1 != e.get_curFrame() && -1 == e.curLabel.indexOf("tutor2") && this.numUsedTools++, e.hasLabel("tutor2_1") && -1 == e.curLabel.indexOf("tutor2") && 1 != e.get_curFrame() ? e.playLabel("tutor2_1", function(t) {
                    e.playLabel("tutor2_2")
                }) : e.gotoAndStop(1), this.animateToolClick(e), this.numUsedTools >= this.totalInSequent && null != this.nextBtn && (this.nextBtn.get_visible() || this.animateBtnApear(this.nextBtn), this.nextBtn.set_visible(!0)), null != t.mainAction) && new ToolActions(t.mainAction).start()
        },
        onChangeToolAnimEnd: function(e) {
            1 == Std.parseInt(e.curLabel.split("_")[e.curLabel.split("_").length - 1]) && e.playLabel(e.curLabel.split("_")[0] + "_2")
        },
        actionToolClick: function(e) {
            var t, n = e.get_name();
            (t = this.toolsConfig.get(n)).sequent && !this.main.isKeyDown(17) && -1 == HxOverrides.indexOf(t.sequenceIndex, this.currentSequent, 0) || (null != t.scaleData && this.scaleObjects(t), this.animateToolClick(e), new ToolActions(t.mainAction).start())
        },
        tryPlayToolMainAction: function(e) {
            null != e.mainAction && new ToolActions(e.mainAction).start()
        },
        objectsRemoveToolClick: function(e) {
            var t, n = e.get_name();
            t = this.toolsConfig.get(n), (this.main.isKeyDown(17) || -1 != HxOverrides.indexOf(t.sequenceIndex, this.currentSequent, 0)) && (this.tryPlayToolMainAction(t), this.animateToolClick(e), this.isObjectRemoving = !0, this.isObjectRemovingReverse = null != t.isReverse && t.isReverse, this.objectsToRemove = this.getElementsByNamePrefix_(t.target[0]), this.objectsToRemove = this.objectsToRemove.concat(this.getTargets(t.target[0])), null != t.scaleData && this.scaleObjects(t), null != t.hasTutor && t.hasTutor || (this.removeTutorObject = null, null != t.tutorName && (this.removeTutor = this.getElementByName(t.tutorName))), Object.prototype.hasOwnProperty.call(t, "removeSound") ? this.objectsRemoveSound = t.removeSound : this.objectsRemoveSound = null, this.showRemoveTutor())
        },
        scaleObjects: function(e) {
            for (var t = this.getElementsByFolderName(e.scaleData.scalePrefixName); this.scaledObjectsInits.length > 0;) this.scaledObjectsInits.pop();
            for (var n = 0; n < t.length;) {
                var l = t[n];
                ++n, this.scaledObjectsInits.push({
                    object: l,
                    x: l.get_x(),
                    y: l.get_y(),
                    sx: l.get_scaleX(),
                    sy: l.get_scaleY()
                }), this.hm.copyFrom(l.get_transform().get_matrix()), this.hm.translate(-e.scaleData.x, -e.scaleData.y), this.hm.scale(e.scaleData.scale, e.scaleData.scale), this.hm.translate(e.scaleData.x, e.scaleData.y), l.get_transform().set_matrix(this.hm.clone());
                var i = l.get_x(),
                    s = l.get_y(),
                    a = l.get_scaleX(),
                    r = l.get_scaleY();
                l.set_x(this.scaledObjectsInits[this.scaledObjectsInits.length - 1].x), l.set_y(this.scaledObjectsInits[this.scaledObjectsInits.length - 1].y), l.set_scaleX(this.scaledObjectsInits[this.scaledObjectsInits.length - 1].sx), l.set_scaleY(this.scaledObjectsInits[this.scaledObjectsInits.length - 1].sy), motion_Actuate.tween(l, .4, {
                    x: i,
                    y: s,
                    scaleX: a,
                    scaleY: r
                })
            }
        },
        showRemoveTutor: function() {
            if (null != this.removeTutor) {
                if (null == this.removeTutorObject || -1 == HxOverrides.indexOf(this.objectsToRemove, this.removeTutorObject, 0)) {
                    this.removeTutorObject = this.objectsToRemove[Std.random(this.objectsToRemove.length)];
                    var e = this.removeTutorObject.getBounds(this.levels);
                    this.removeTutor.isPlaying || this.removeTutor.play(), this.removeTutor.set_visible(!0), this.removeTutor.set_x(e.x + e.width / 2), this.removeTutor.set_y(e.y + e.height / 2)
                }
            } else {
                for (var t = 0, n = this.objectsToRemove; t < n.length;) {
                    var l = n[t];
                    if (++t, l.isPlaying) return
                }
                var i = this.objectsToRemove[Std.random(this.objectsToRemove.length)];
                i.playLabel("tutor1"), i.parent.setChildIndex(i, i.parent.get_numChildren() - 1)
            }
        },
        isRemoveObjectsClick: function() {
            if (!this.isBlockedAction) {
                for (var e = !1, t = 0, n = this.objectsToRemove; t < n.length;) {
                    var l = n[t];
                    if (++t, this.hitsMouse(l, !0, this.main.isMobileBrowser ? 3 : 1)) {
                        e = !0, HxOverrides.remove(this.objectsToRemove, l), this.isObjectRemovingReverse ? l.gotoAndStop(0) : (this.removeFromScaled(l), l.set_visible(!1)), this.objectsToRemove.length > 0 ? this.showRemoveTutor() : (this.isObjectRemoving = !1, this.removeTutorObject = null, null != this.removeTutor && this.removeTutor.set_visible(!1), this.removeTutor = null, this.changeToNextTool());
                        break
                    }
                }
                e && this.playSoundData(this.objectsRemoveSound)
            }
        },
        removeFromScaled: function(e) {
            for (var t = 0, n = this.scaledObjectsInits; t < n.length;) {
                var l = n[t];
                if (++t, l.object == e) {
                    HxOverrides.remove(this.scaledObjectsInits, l);
                    break
                }
            }
        },
        hitHitzoneToolClick: function(e) {
            var t, n = e.get_name();
            t = this.toolsConfig.get(n), (this.main.isKeyDown(17) || -1 != HxOverrides.indexOf(t.sequenceIndex, this.currentSequent, 0)) && (null != t.scaleData && this.scaleObjects(t), null != t.progressBar && (this.currentProgressBar = new ProgressBarData(t)), this.tryPlayToolMainAction(t), this.draggingObject = this.getElementByName(t.dragingObject), this.draggingObject.totalFrames > 1 && this.draggingObject.play(), Object.prototype.hasOwnProperty.call(t, "dragSound") ? this.dragSound = t.dragSound : this.dragSound = null, this.curHitZone = this.getElementByName(t.target[0]), null == t.noHitTutor ? this.curHitTutor = null : this.curHitTutor = this.getElementByName(t.noHitTutor), null != this.curHitTutor && (this.curHitTutor.play(), this.curHitTutor.isLoop = !0), this.curHitCounter = 1e3 * t.hitCounter, this.initHitCounter = this.curHitCounter, this.isHitHizone = !0, Object.prototype.hasOwnProperty.call(t, "dragSound") ? this.dragSound = t.dragSound : this.dragSound = null)
        },
        updateHitHizone: function(e) {
            if (!this.isBlockedAction) {
                this.draggingObject.set_visible(this.main.isMouseDown);
                var t = this.getMouseCoordsInLevels();
                if (this.draggingObject.set_x(t.x), this.draggingObject.set_y(t.y), null != this.curHitTutor && this.curHitTutor.set_visible(!1), null != this.curHitZone && this.hitsMouse(this.curHitZone) && this.main.isMouseDown) {
                    if (this.curHitCounter -= e, this.playSoundData(this.dragSound, !0), null != this.currentProgressBar && this.currentProgressBar.setProgress(-1 * (Math.max(this.curHitCounter, 0) - this.initHitCounter) / this.initHitCounter * 100), this.curHitCounter <= 0) {
                        var n = this.getCurrentToolConfig();
                        null != n && null != n.completeAction ? (this.isHitHizone = !1, new ToolActions(n.completeAction).start()) : (this.isHitHizone = !1, this.changeToNextTool())
                    }
                } else null != this.curHitZone && null != this.curHitTutor && (this.curHitTutor.set_visible(!0), this.stopSoundData(this.dragSound))
            }
        },
        getCurrentToolConfig: function() {
            for (var e, t, n = null, l = 0, i = this.toolsArr; l < i.length;) {
                var s = i[l];
                if (++l, -1 != (t = void 0, t = function(e) {
                        var t = s.get_name();
                        return e.toolsConfig.get(t)
                    }(e = this).sequenceIndex, HxOverrides.indexOf(t, e.currentSequent, 0))) {
                    var a = s.get_name();
                    n = this.toolsConfig.get(a);
                    break
                }
            }
            return n
        },
        hideLastMask: function() {
            null != this.curMaskBm && null != this.curMaskBm.bitmapData && this.curMaskBm.set_bitmapData(new openfl_display_BitmapData(this.curMaskBm.bitmapData.width, this.curMaskBm.bitmapData.height, !0, 0))
        },
        getElementBitmapBatch: function(e) {
            return js_Boot.__cast(e.getChildAt(0), openfl_display_Sprite).getChildAt(0)
        },
        getElementBitmapData: function(e) {
            var t = this.getElementBitmapBatch(e);
            return t.batch.getBitmapData(t.imName)
        },
        getToolMask: function(e, t, n) {
            null == n && (n = !1);
            var l = this.getElementByName(e);
            l.gotoAndStop(t - 1);
            var i = new openfl_display_Bitmap(this.getElementBitmapData(l), 1, !0);
            return this.hm.copyFrom(i.get_transform().get_matrix()), this.hm.concat(l.get_transform().get_matrix()), i.get_transform().set_matrix(this.hm.clone()), this.levels.addChildAt(i, this.levels.getChildIndex(l)), this.curMaskBmd = i.bitmapData.clone(), this.curMaskBm = i, n && i.set_bitmapData(new openfl_display_BitmapData(i.bitmapData.width, i.bitmapData.height, !0, 0)), i
        },
        prepareBrush: function(e) {
            this.curBrushObj = this.getElementByName(e), this.curBrushBmd = this.getElementBitmapData(this.curBrushObj)
        },
        maskDrawEraseToolClick: function(e, t) {
            var n, l = e.get_name();
            if (n = this.toolsConfig.get(l), this.main.isKeyDown(17) || -1 != HxOverrides.indexOf(n.sequenceIndex, this.currentSequent, 0)) {
                if (null != n.scaleData && this.scaleObjects(n), this.tryPlayToolMainAction(n), this.isDrawingMask = t, this.isErasingMask = !t, this.isAutoMask = null != n.isAutoMask && n.isAutoMask, this.isAutoMaskAction = !1, this.timeToDrawEraseTutor = this.initTimeToDrawEraseTutor, this.animateToolClick(e), this.isDrawingMask || "PREVIOUS" != n.target[HxOverrides.indexOf(n.sequenceIndex, this.currentSequent, 0)]) this.getToolMask(n.target[HxOverrides.indexOf(n.sequenceIndex, this.currentSequent, 0)], n.maskIndex, t);
                this.prepareBrush(n.brushObject), this.isAutoMask && this.curBrushObj.set_x(this.curBrushObj.set_y(-1e3)), this.draggingObject = this.getElementByName(n.dragingObject), this.draggingObject.totalFrames > 1 && this.draggingObject.play(), Object.prototype.hasOwnProperty.call(n, "dragSound") ? this.dragSound = n.dragSound : this.dragSound = null
            }
        },
        updateDrawEraseMask: function() {
            if (!this.isBlockedAction) {
                this.draggingObject.set_visible(!0);
                var e = this.getMouseCoordsInLevels();
                this.draggingObject.set_x(e.x), this.draggingObject.set_y(e.y), this.curBrushObj.set_x(this.hp.x), this.curBrushObj.set_y(this.hp.y), this.drawEraseMask(this.isDrawingMask)
            }
        },
        makeAutoMask: function() {
            if (!this.isAutoMaskAction) {
                this.isAutoMaskAction = !0, this.curBrushObj.set_x(this.curMaskBm.get_x() - 3), this.curBrushObj.set_y(this.curMaskBm.get_y() - 3);
                if (motion_Actuate.tween(this.curBrushObj, 2.5, {
                        y: this.curBrushObj.get_y() + this.curMaskBm.get_height() + 10
                    }).onComplete($bind(this, this.endMaskTool)).ease(motion_easing_Sine.get_easeOut()), null != this.draggingObject) {
                    this.draggingObject.set_visible(!0);
                    var e = .1 * this.curMaskBm.get_width();
                    this.draggingObject.set_x(this.curMaskBm.get_x() + e / 2), this.draggingObject.set_y(this.curBrushObj.get_y());
                    motion_Actuate.tween(this.draggingObject, 2.5, {
                        y: this.draggingObject.get_y() + this.curMaskBm.get_height() + 10
                    }).ease(motion_easing_Sine.get_easeOut()), motion_Actuate.tween(this.draggingObject, 2.5 / 6, {
                        x: this.draggingObject.get_x() + this.curMaskBm.get_width() - e
                    }, !1).reflect().repeat(5).ease(motion_easing_Sine.get_easeInOut())
                }
            }
        },
        endMaskTool: function() {
            this.isDrawingMask = !1, this.isErasingMask = !1, this.isAutoMask = !1, this.isAutoMaskAction = !1, this.changeToNextTool(), null != this.draggingObject && this.draggingObject.set_visible(!1)
        },
        drawEraseMask: function(e) {
            var t = js_Boot.__cast(this.curBrushObj.getChildAt(0), openfl_display_Sprite).getChildAt(0).get_x(),
                n = js_Boot.__cast(this.curBrushObj.getChildAt(0), openfl_display_Sprite).getChildAt(0).get_y(),
                l = this.curBrushObj.get_x() - this.curMaskBm.get_x() + t,
                i = this.curBrushObj.get_y() - this.curMaskBm.get_y() + n,
                s = this.curMaskBm.bitmapData;
            this.curMaskBm.bitmapData.lock();
            var a = Math.floor(l),
                r = Math.floor(i),
                o = this.curBrushBmd.width,
                d = this.curBrushBmd.height;
            if (e)
                for (var _ = 0; _ < o;)
                    for (var h = _++, p = 0; p < d;) {
                        var c = p++;
                        0 != this.curBrushBmd.getPixel32(h, c) && s.setPixel32(a + h, r + c, this.curMaskBmd.getPixel32(a + h, r + c))
                    } else
                        for (var Q = 0; Q < o;)
                            for (var U = Q++, m = 0; m < d;) {
                                var u = m++;
                                0 != this.curBrushBmd.getPixel32(U, u) && s.setPixel32(a + U, r + u, 0)
                            }
            this.curMaskBm.bitmapData.unlock(), this.curMaskBm.smoothing = !0
        },
        checkMaskUndonePos: function(e) {
            var t = this.curMaskBmd.width,
                n = this.curMaskBmd.height,
                l = this.curMaskBmd,
                i = this.curMaskBm.bitmapData,
                s = [];
            if (e)
                for (var a, r, o = 0; o < t;)
                    for (var d = o++, _ = 0; _ < n;) {
                        var h = _++;
                        a = l.getPixel32(d, h), r = i.getPixel32(d, h), 0 != (a >> 24 & 255) && a != r && Math.abs((a >> 24 & 255) - (r >> 24 & 255)) > 10 && (s.push(d), s.push(h))
                    } else
                        for (var p = 0; p < t;)
                            for (var c = p++, Q = 0; Q < n;) {
                                var U = Q++;
                                0 != i.getPixel32(c, U) && (s.push(c), s.push(U))
                            }
            if (s.length < 50) {
                if (e) {
                    var m = this.curMaskBm.bitmapData;
                    this.curMaskBm.set_bitmapData(this.curMaskBmd.clone()), m.dispose()
                } else {
                    var u = this.curMaskBm.bitmapData;
                    this.curMaskBm.set_bitmapData(new openfl_display_BitmapData(u.width, u.height, !0, 0)), u.dispose()
                }
                return this.curMaskBm.smoothing = !0, null
            }
            if (0 == s.length) return null;
            var F = Std.random(s.length / 2 | 0);
            return this.hp.x = s[2 * F] + this.curMaskBm.get_x(), this.hp.y = s[2 * F + 1] + this.curMaskBm.get_y(), this.hp
        },
        getMouseCoordsInLevels: function() {
            return this.hp.x = this.main.get_mouseX(), this.hp.y = this.main.get_mouseY(), this.hm.copyFrom(this.levels.get_transform().get_matrix()), this.hm.concat(this.get_transform().get_matrix()), this.hm.invert(), this.hp = this.hm.transformPoint(this.hp), this.hp
        },
        toolClick: function(e) {
            if (!(this.isDrawingMask || this.isErasingMask || this.isAnimation || this.isObjectRemoving || this.isHitHizone || this.isSequentToolClicked)) {
                var t;
                this.prepareTool(!0);
                var n = e.get_name();
                if (t = this.toolsConfig.get(n), e.hasLabel("tutor1") && t.sequent && e.gotoAndStop(0), t.sequent && -1 != HxOverrides.indexOf(t.sequenceIndex, this.currentSequent, 0) && (this.isSequentToolClicked = !0), "CHANGE_FRAME" == t.action) this.changeFrameToolClick(e);
                else if ("MASK_DRAW" == t.action) this.maskDrawEraseToolClick(e, !0);
                else if ("MASK_ERASE" == t.action) this.maskDrawEraseToolClick(e, !1);
                else if ("OBJECTS_REMOVE" == t.action) this.objectsRemoveToolClick(e);
                else if ("ANIMATION" == t.action) this.animationToolClick(e);
                else if ("ACTION" == t.action) this.actionToolClick(e);
                else if ("HIT_HITZONE" == t.action) this.hitHitzoneToolClick(e);
                else if ("HIT_HITZONE_ANIMATION" == t.action) {
                    var l = !0;
                    this.main.isKeyDown(17) || -1 != HxOverrides.indexOf(t.sequenceIndex, this.currentSequent, 0) || (l = !1), l && (this.tryPlayToolMainAction(t), this.animateToolClick(e), this.isToolActive = !0, this.activeTool = new tools_HitHitzoneAnimation(t))
                }
            }
        },
        fonSoundStarted: null,
        playClick: function() {
            this.nextLevel(), this.fonSoundStarted || "fon" != this.curFonSound ? "" != this.curFonSound && !this.fonSoundStarted && this.main.sounds.canPlaySound && (this.main.playSpriteMusicE(this.curFonSound, !0), this.fonSoundStarted = !0) : (this.main.playSpriteMusicE("fon", !0), this.fonSoundStarted = !0)
        },
        restartClick: function() {
            this.startNewGame(0)
        },
        showFinishScreenBtns: function() {
            for (var e = 0, t = this.finishScreenBtns; e < t.length;) {
                var n = t[e];
                ++e, n.set_scaleX(n.set_scaleY(.001)), n.set_visible(!0), motion_Actuate.timer(.35).onComplete($bind(this, this.animateBtnApear), [n])
            }
            this.fireIsActive || this.fireIsActive || this.showFireWork()
        },
        showFireWork: function() {
            if (this.fireIsActive = !0, !this.main.fullStop) {
                this.fireWorkLayer.parent != this.main && this.main.addChild(this.fireWorkLayer);
                var e = new firework_Firework(this.fireWorkLayer, 100 + Math.random() * (this.main.sWidth - 200), 100 + Math.random() * (this.main.sHeight - 200));
                this.fireWorks.push(e)
            }
            this.fireWorkTimer = motion_Actuate.timer(this.fireWorkInterval).onComplete($bind(this, this.showFireWork))
        },
        nextClick: function() {
            var e = this,
                t = null != this.nextBtn && "nextBtnSelection" == this.nextBtn.get_name();
            if (this.passedLevels.push(this.curLevel), this.curLevel != this.main.lastLevel) - 1 != this.nextBtnClickLevel ? this.startNewGame(this.nextBtnClickLevel) : t ? this.startNewGame(0, !0) : this.nextLevel();
            else {
                if (this.showFinishScreenBtns(), null != this.nextBtn) {
                    if (motion_Actuate.tween(this.nextBtn, .2, {
                            alpha: .001
                        }).delay(.3).onComplete(function() {
                            e.nextBtn.set_visible(!1)
                        }), null != this.restartBtn) {
                        this.deskHelper.onFinishScreen(), this.restartBtn.set_scaleX(this.restartBtn.set_scaleY(.001)), this.restartBtn.set_visible(!0), motion_Actuate.timer(.35).onComplete($bind(this, this.animateBtnApear), [this.restartBtn]);
                        var n = this.getElementsByLayerName("UI");
                        this.addonPanelsOffsetX = 200;
                        for (var l = 0; l < n.length;) {
                            var i = n[l];
                            ++l, motion_Actuate.tween(i, .4, {
                                x: i.get_x() + (i.get_x() < Config.baseSWidth / 2 ? -this.addonPanelsOffsetX : this.addonPanelsOffsetX)
                            }).ease(motion_easing_Back.get_easeOut())
                        }
                    }
                    null != this.toolsHighlighter && (this.toolsHighlighter.set_visible(!1), this.toolsHighlighterAlignTarget = null)
                }
                this.isBusy = !1
            }
        },
        soundClick: function() {
            this.main.sounds.muted ? this.main.unMute() : this.main.mute(), this.updateSoundBtn()
        },
        updateSoundBtn: function() {
            null != this.soundBtn && this.soundBtn.gotoAndStop(this.main.sounds.muted ? 1 : 0)
        },
        hitsMouse: function(e, t, n) {
            if (null == n && (n = 1), null == t && (t = !1), this.hp.x = openfl_Lib.current.stage.get_mouseX(), this.hp.y = openfl_Lib.current.stage.get_mouseY(), !t || 0 == e.get_curFrame()) return e.getBounds(openfl_Lib.current.stage).contains(this.hp.x, this.hp.y);
            e.addChild(e.framesList[0]);
            var l = e.framesList[0].getBounds(openfl_Lib.current.stage);
            if (1 != n) {
                var i = l.width,
                    s = l.height;
                l.width *= n, l.height *= n, l.x -= (l.width - i) / 2, l.y -= (l.height - s) / 2
            }
            var a = l.contains(this.hp.x, this.hp.y);
            return e.removeChildAt(e.get_numChildren() - 1), a
        },
        changeToNextTool: function(e) {
            null == e && (e = !1), null != this.dragSound && this.stopSoundData(this.dragSound), this.dragSound = null, this.isSequentToolClicked = !1;
            var t = this.getCurrentToolConfig();
            if (null != t && null != t._endActions && t._endActions.start(), null != this.scaledObjectsInits && this.scaledObjectsInits.length > 0 && (null != t || null == t.scaleData || null == t.scaleData.scaleBack || js_Boot.__cast(t.scaleData.scaleBack, Bool))) {
                for (var n = 0, l = this.scaledObjectsInits; n < l.length;) {
                    var i = l[n];
                    ++n, motion_Actuate.tween(i.object, .4, {
                        x: i.x,
                        y: i.y,
                        scaleX: i.sx,
                        scaleY: i.sy
                    })
                }
                for (; this.scaledObjectsInits.length > 0;) this.scaledObjectsInits.pop()
            }(this.curHitZone = null, null != this.currentProgressBar && this.currentProgressBar.onEnd(), this.currentProgressBar = null, this.currentSequent++, this.numUsedTools++, this.numUsedTools >= this.totalInSequent) && (null != this.nextBtn && (this.nextBtn.set_visible(!0), this.animateBtnApear(this.nextBtn)), null != this.levelCompleteActions && new ToolActions(this.levelCompleteActions).start());
            if (this.prepareTool(), null != this.drawEraseTutor && this.drawEraseTutor.set_visible(!1), e || null == this.toolsHighlighter || (this.toolsHighlighter.set_visible(!1), this.toolsHighlighterAlignTarget = null), this.numUsedTools < this.totalInSequent && t.sequent && (null != this.toolsScrollBtnUP || null != this.toolsScrollBtnDown)) this.scrollTools(1, !0);
            else if (this.numUsedTools >= this.totalInSequent && null != t && t.sequent && (null != this.toolsScrollBtnUP || null != this.toolsScrollBtnDown))
                for (var s = 0, a = this.scrollToolsArr.length; s < a;) {
                    var r = s++;
                    this.scrollToolsArr[r].set_visible(!1)
                }
        },
        showDrawEraseTutor: function() {
            if (!this.isBlockedAction && null != this.drawEraseTutor && !this.drawEraseTutor.get_visible()) {
                var e = this.checkMaskUndonePos(this.isDrawingMask);
                null != e && (this.drawEraseTutor.set_visible(!0), this.drawEraseTutor.gotoAndStop(0), this.drawEraseTutor.play(), this.drawEraseTutor.set_x(e.x), this.drawEraseTutor.set_y(e.y))
            }
        },
        onClick: function(e) {
            if (!Main.current.fullStop) {
                if (null != this.externalLinksBtns)
                    for (var t = 0, n = this.externalLinksBtns; t < n.length;) {
                        var l = n[t];
                        if (++t, (null == this.closeGameBtn || !this.closeGameBtn.get_visible() || "AndroidCloseWindow" == l.layerName) && l.get_visible() && 0 != l.get_alpha() && l.getBounds(openfl_Lib.current.stage).contains(openfl_Lib.current.get_mouseX(), openfl_Lib.current.get_mouseY())) {
                            var i = null,
                                s = l.get_name(),
                                a = ""; - 1 != s.indexOf("_multi") && (s = StringTools.replace(s, "_multi", ""), a = "_" + (Math.floor(l.get_curFrame()) + 1)), null != (i = this.links.exists(s + a) ? this.links.get(s + a) : null) && "chartboost:more_games" == i || null != i && "gpg:ShowScoreboard" == i || null != i && "gpg:ShowAchievments" == i || null != i && "iap:remove_ads" == i || null != i && "RewardedVideo" == i || null != i && Config.openLink(i)
                        }
                    }
                if (null != this.finishScreenBtns)
                    for (var r = 0, o = this.finishScreenBtns; r < o.length;) {
                        var d = o[r];
                        if (++r, (null == this.closeGameBtn || !this.closeGameBtn.get_visible() || "AndroidCloseWindow" == d.layerName) && d.get_visible() && 0 != d.get_alpha() && d.getBounds(openfl_Lib.current.stage).contains(openfl_Lib.current.get_mouseX(), openfl_Lib.current.get_mouseY())) {
                            var _ = null,
                                h = d.get_name(),
                                p = ""; - 1 != h.indexOf("_multi") && (h = StringTools.replace(h, "_multi", ""), p = "_" + (Math.floor(d.get_curFrame()) + 1)), null != (_ = this.links.exists(h + p) ? this.links.get(h + p) : null) && "chartboost:more_games" == _ || null != _ && "gpg:ShowScoreboard" == _ || null != _ && "gpg:ShowAchievments" == _ || null != _ && "iap:remove_ads" == _ || null != _ && "RewardedVideo" == _ || null != _ && Config.openLink(_)
                        }
                    }
            }
        },
        showPauseWindow: function(e) {
            if (null == e && (e = !1), (null != this.pauseWindow && 0 != this.pauseWindow.length || e) && (this.paused = !0, motion_Actuate.pauseAll(), null != this.pauseWindow))
                for (var t = 0, n = this.pauseWindow; t < n.length;) {
                    var l = n[t];
                    if (++t, l.set_visible(!0), "pauseFill" == l.get_name()) l.set_alpha(.01), motion_Actuate.tween(l, .4, {
                        alpha: 1
                    }).ease(motion_easing_Linear.get_easeNone());
                    else {
                        var i = l.get_y(),
                            s = l;
                        s.set_y(s.get_y() + 700), motion_Actuate.tween(l, .4, {
                            y: i
                        }).ease(motion_easing_Back.get_easeOut())
                    }
                }
        },
        resume: function(e) {
            null == e && (e = !1);
            var t = this;
            if (null != this.pauseWindow && 0 != this.pauseWindow.length || e) {
                if (null != this.pauseWindow)
                    for (var n = 0, l = this.pauseWindow; n < l.length;) {
                        var i = l[n];
                        if (++n, "pauseFill" == i.get_name()) motion_Actuate.tween(i, .4, {
                            alpha: .01
                        }).ease(motion_easing_Linear.get_easeNone()).onComplete(function(e) {
                            e.set_visible(!1)
                        }, [i]);
                        else {
                            var s = i.get_y();
                            motion_Actuate.tween(i, .3, {
                                y: i.get_y() + 700
                            }).ease(motion_easing_Back.get_easeIn()).onComplete(function(e, t) {
                                e.set_visible(!1), e.set_y(t)
                            }, [i, s])
                        }
                    }
                e ? (this.paused = !1, motion_Actuate.resumeAll()) : motion_Actuate.timer(.4).onComplete(function() {
                    t.paused = !1, motion_Actuate.resumeAll()
                })
            }
        },
        curSoundData: null,
        playSoundData: function(e, t) {
            null == t && (t = !1), null != e && (t && e == this.curSoundData || (this.curSoundData = e, null != e.delay ? motion_Actuate.timer(e.delay).onComplete($bind(this, this.playDelaySoundData), [e]) : this.main.playSpriteSound(e.name, !!Object.prototype.hasOwnProperty.call(e, "loop") && e.loop)))
        },
        playDelaySoundData: function(e) {
            this.main.playSpriteSound(e.name, !!Object.prototype.hasOwnProperty.call(e, "loop") && e.loop)
        },
        stopSoundData: function(e) {
            null != e && (this.curSoundData = null, this.main.stopSpriteSound(e.name, !!Object.prototype.hasOwnProperty.call(e, "loop") && e.loop))
        },
        trySelectionBtnsClick: function() {
            for (var e = this, t = 0, n = this.selectionBtns; t < n.length;) {
                var l = n[t];
                if (++t, 0 == l.get_curFrame() && this.hitsMouse(l)) {
                    var i = function(t) {
                        return function() {
                            e.startNewGame(t[0])
                        }
                    }([Std.parseInt(StringTools.replace(l.get_name(), "level_btn", ""))]);
                    return this.animateBtnClick(l, i), !0
                }
            }
            return !1
        },
        scrollToolsUpFunction: function() {
            this.scrollTools(-1)
        },
        scrollToolsDownFunction: function() {
            this.scrollTools(1)
        },
        scrollTools: function(e, t) {
            null == t && (t = !1), this.curScrollToolsIDX += e, this.curScrollToolsIDX < 0 && (this.curScrollToolsIDX = this.scrollToolsArr.length - 1), this.curScrollToolsIDX >= this.scrollToolsArr.length && (this.curScrollToolsIDX = 0);
            for (var n = 0, l = this.scrollToolsArr.length; n < l;) {
                var i = n++;
                this.scrollToolsArr[i].set_visible(i == this.curScrollToolsIDX)
            }
            null != this.toolsHighlighter && this.toolsHighlighter.get_visible() && (this.toolsHighlighter.set_visible(!1), this.toolsHighlighterAlignTarget = null, this.toolsHighlighter.parent.setChildIndex(this.toolsHighlighter, this.scrollToolsArr[this.curScrollToolsIDX].parent.getChildIndex(this.scrollToolsArr[this.curScrollToolsIDX])))
        },
        saveScreenShot: function() {
            var e, t = Math.floor(this.main.sHeight);
            Math.floor(-1 * t);
            e = Math.floor(this.main.sWidth);
            var n = new openfl_display_BitmapData(e, t),
                l = new openfl_geom_Matrix;
            l.scale(1 / this.main.get_scaleX(), 1 / this.main.get_scaleY()), l.translate(e / 2 - this.main.sWidth / 2, 0), n.draw(openfl_Lib.current.stage, l);
            var i = lime_graphics_Image.fromBitmapData(n);
            lime_graphics_utils_ImageCanvasUtil.convertToCanvas(i);
            var s = window.document.createElement("a");
            s.innerHTML = "download image", window.document.body.appendChild(s), s.style.position = "absolute", s.style.top = "0px";
            var a = new EReg("iPad|iPhone|iPod", "i").match(window.navigator.userAgent) && !window.MSStream;
            s.addEventListener("click", function(e) {
                a ? window.open(i.buffer.get_src().toDataURL(), "_blank") : (s.href = i.buffer.get_src().toDataURL(), s.download = "screenshot.png")
            }, !1), s.click(), window.document.body.removeChild(s)
        },
        wasMDown: null,
        update: function(e) {
            var t = this;
            if (this.currentlyInitedLevel && (this.currentlyInitedLevel = !1, e > 16.666666666666668 && (e = Math.floor(16.666666666666668))), this.paused) {
                if (null != this.pauseWindow)
                    for (var n = 0, l = this.pauseWindow; n < l.length;) {
                        var i = l[n];
                        ++n, i.update(e)
                    }
                if (!this.wasMDown && this.main.isMouseDown) {
                    if (null != this.soundBtn && this.hitsMouse(this.soundBtn)) return this.animateBtnClick(this.soundBtn, $bind(this, this.soundClick)), void(this.wasMDown = this.main.isMouseDown);
                    if (null != this.pauseWindow)
                        for (var s = 0, a = this.pauseWindow; s < a.length;) {
                            var r = a[s];
                            if (++s, "resumeBtn" == r.get_name() && r.get_visible() && this.hitsMouse(r)) return this.animateBtnClick(r, function() {
                                t.resume()
                            }), void(this.wasMDown = this.main.isMouseDown);
                            if ("pauseRestartBtn" == r.get_name() && r.get_visible() && this.hitsMouse(r)) return this.animateBtnClick(r, $bind(this, this.restartClick)), void(this.wasMDown = this.main.isMouseDown);
                            if ("pauseRestartLevelBtn" == r.get_name() && r.get_visible() && this.hitsMouse(r)) return this.animateBtnClick(r, $bind(this, this.restartLevel)), void(this.wasMDown = this.main.isMouseDown)
                        }
                    null != this.pauseClickFunction && this.pauseClickFunction()
                }
                this.wasMDown = this.main.isMouseDown
            } else {
                this.levels.update(e), this.deskHelper.update(e);
                for (var o = 0, d = this.randAnimElements; o < d.length;) {
                    var _ = d[o];
                    ++o, _.delayToPlay -= e, _.delayToPlay <= 0 && (_.object.gotoAndStop(0), _.object.play(), _.object.isLoop = !1, _.object.curEndFrame = _.object.totalFrames - 1, _.delayToPlay = 5e3 + Std.random(15e3))
                }
                if (this.main.paused || this.isBusy) this.wasMDown = this.main.isMouseDown;
                else {
                    if (!this.wasMDown && this.main.isMouseDown) {
                        if (this.deskHelper.mDown()) return void(this.wasMDown = this.main.isMouseDown);
                        for (var h = 0, p = this.pauseBtns; h < p.length;) {
                            var c = p[h];
                            if (++h, null != c && c.get_visible() && this.hitsMouse(c)) return this.animateBtnClick(c, function() {
                                t.showPauseWindow()
                            }), void(this.wasMDown = this.main.isMouseDown)
                        }
                        for (var Q = 0, U = this.actionBtns; Q < U.length;) {
                            var m = [U[Q]];
                            if (++Q, m[0].get_visible() && 0 != m[0].get_alpha() && this.hitsMouse(m[0])) {
                                var u = function(e) {
                                    return function() {
                                        var n, l;
                                        if (l = e[0].get_name(), t.actionBtnsActions.exists(l)) {
                                            var i = e[0].get_name();
                                            n = t.actionBtnsActions.get(i)
                                        } else n = null;
                                        null != n && new ToolActions(n).start()
                                    }
                                }(m);
                                return this.animateBtnClick(m[0], u), void(this.wasMDown = this.main.isMouseDown)
                            }
                        }
                        if (this.isSelectionLevel && this.trySelectionBtnsClick() && (this.wasMDown = this.main.isMouseDown), null != this.playBtn && this.hitsMouse(this.playBtn) && !this.isBtnClickAnim) return this.isBusy = !0, void this.animateBtnClick(this.playBtn, $bind(this, this.playClick));
                        if (null != this.restartBtn && this.restartBtn.get_visible() && this.hitsMouse(this.restartBtn)) return this.isBusy = !0, void this.animateBtnClick(this.restartBtn, $bind(this, this.restartClick));
                        if (null != this.nextBtn && this.nextBtn.get_visible() && this.nextBtn.get_alpha() >= .5 && this.hitsMouse(this.nextBtn)) return this.isBusy = !0, void this.animateBtnClick(this.nextBtn, $bind(this, this.nextClick));
                        if (null != this.soundBtn && this.hitsMouse(this.soundBtn) && this.soundBtn.get_visible() && this.soundBtn.get_alpha() > .5) return this.animateBtnClick(this.soundBtn, $bind(this, this.soundClick)), void(this.wasMDown = this.main.isMouseDown);
                        if (null != this.toolsScrollBtnUP && this.toolsScrollBtnUP.get_alpha() > 0 && this.hitsMouse(this.toolsScrollBtnUP)) return this.animateBtnClick(this.toolsScrollBtnUP, $bind(this, this.scrollToolsUpFunction)), void(this.wasMDown = this.main.isMouseDown);
                        if (null != this.toolsScrollBtnDown && this.toolsScrollBtnDown.get_alpha() > 0 && this.hitsMouse(this.toolsScrollBtnDown)) return this.animateBtnClick(this.toolsScrollBtnDown, $bind(this, this.scrollToolsDownFunction)), void(this.wasMDown = this.main.isMouseDown);
                        null != this.moreGamesBtn && this.moreGamesBtn.get_visible() && this.moreGamesBtn.getBounds(openfl_Lib.current.stage).contains(openfl_Lib.current.get_mouseX(), openfl_Lib.current.get_mouseY()) && gradle.more()
                    }
                    if (this.wasMDown && !this.main.isMouseDown) {
                        if (this.deskHelper.mUp()) return void(this.wasMDown = this.main.isMouseDown);
                        for (var F = 0, N = this.toolsArr; F < N.length;) {
                            var S = N[F];
                            ++F, S.get_visible() && this.hitsMouse(S, !0) && this.toolClick(S)
                        }
                        if (this.isDragging)
                            if ((this.isDrawingMask || this.isErasingMask) && !this.isAutoMask) null == this.checkMaskUndonePos(this.isDrawingMask) && (this.isDrawingMask = !1, this.isErasingMask = !1, this.changeToNextTool());
                        this.isDragging = !1, this.isAutoMask || this.stopSoundData(this.dragSound), null != this.drawEraseTutor && this.drawEraseTutor.set_visible(!1), this.timeToDrawEraseTutor = this.initTimeToDrawEraseTutor
                    }!this.wasMDown && this.main.isMouseDown && (this.isAutoMask && this.curMaskBm.hitTestPoint(this.main.stage.get_mouseX(), this.main.stage.get_mouseY(), !1) && !this.isAutoMaskAction && (this.makeAutoMask(), null != this.dragSound && this.playSoundData(this.dragSound)), !this.isDrawingMask && !this.isErasingMask || this.isDragging || (this.isDragging = !0, this.isAutoMask || this.playSoundData(this.dragSound), this.drawEraseTutor.get_visible() && this.drawEraseTutor.set_visible(!1)), this.isObjectRemoving && this.isRemoveObjectsClick()), this.isAutoMaskAction && this.drawEraseMask(this.isDrawingMask), null != this.draggingObject && this.draggingObject.get_visible() && !this.isAutoMaskAction && this.draggingObject.set_visible(!1), this.isDragging || !this.isDrawingMask && !this.isErasingMask || (this.timeToDrawEraseTutor -= e, this.timeToDrawEraseTutor <= 0 && this.showDrawEraseTutor()), (this.isDrawingMask || this.isErasingMask) && this.isDragging && !this.isAutoMask && this.updateDrawEraseMask(), this.isHitHizone && this.updateHitHizone(e), this.cheatingMode && (!this.wasMDown && this.main.isMouseDown ? this.cheatingModeHelper.onMDown() : this.wasMDown && !this.main.isMouseDown && this.cheatingModeHelper.onMUp(), this.cheatingModeHelper.update(e)), this.isAssembleMode && (this.assembler.completed || this.wasMDown || !this.main.isMouseDown ? this.assembler.completed || !this.wasMDown || this.main.isMouseDown || this.assembler.onMUp() : this.assembler.onMDown(), this.assembler.completed || this.assembler.update(e), this.assembler.completed && (this.isAssembleMode = !1, this.assembler.destroy(), this.assembler = null, this.changeToNextTool()));
                    for (var W = 0, B = this.gameModes; W < B.length;) {
                        var Z = B[W];
                        if (++W, Z.completed || this.wasMDown || !this.main.isMouseDown ? Z.completed || !this.wasMDown || this.main.isMouseDown || Z.onMUp() : Z.onMDown(), Z.completed || Z.update(e), Z.completed) {
                            this.changeToNextTool(), Z.destroy(), HxOverrides.remove(this.gameModes, Z);
                            break
                        }
                    }
                    this.isFightingMode && (this.fightingMode.completed || this.wasMDown || !this.main.isMouseDown ? this.fightingMode.completed || !this.wasMDown || this.main.isMouseDown || this.fightingMode.onMUp() : this.fightingMode.onMDown(), this.fightingMode.completed || this.fightingMode.update(e), this.fightingMode.completed && (this.isFightingMode = !1, this.fightingMode.destroy(), this.fightingMode = null, this.changeToNextTool())), this.isFightTable && (this.fightTable.completed || this.wasMDown || !this.main.isMouseDown ? this.fightTable.completed || !this.wasMDown || this.main.isMouseDown || this.fightTable.onMUp() : this.fightTable.onMDown(), this.fightTable.completed || this.fightTable.update(e), this.fightTable.completed && (this.isFightTable = !1, this.fightTable.destroy(), this.fightTable = null, this.changeToNextTool())), this.isToolActive && (this.activeTool.toolCompleted || this.wasMDown || !this.main.isMouseDown ? this.activeTool.toolCompleted || !this.wasMDown || this.main.isMouseDown || this.activeTool.onMUp() : this.activeTool.onMDown(), this.activeTool.toolCompleted || this.activeTool.update(e), this.activeTool.toolCompleted && (this.isToolActive = !1, this.activeTool.destroy(), this.changeToNextTool()));
                    for (var D = 0, V = this.fireWorks; D < V.length;) {
                        var f = V[D];
                        ++D, f.update()
                    }
                    for (var R = 0; R < this.fireWorks.length;) this.fireWorks[R].destroied ? HxOverrides.remove(this.fireWorks, this.fireWorks[R]) : R++;
                    this.wasMDown = this.main.isMouseDown
                }
            }
        },
        __class__: Desk
    });
    var DeskHelper = function() {
        this.hm = new openfl_geom_Matrix, this.centerYElsInitY = [], this.centerYEls = [], this.keepOffsetEls = [], this.bgAlignedElementsInitMatrixes = [], this.bgAlignedElements = [], this.initBGY = 0, this.initBGX = 0, this.fightBtnData = null, this.fightBtn = null, this.setToActivate = null, this.toAnimateStars = [], this.setupsMCs = null, this.setsForStarsData = null, this.isUIHideMode = !1, this.desk = Desk.current, this.main = Main.current
    };
    $hxClasses.DeskHelper = DeskHelper, DeskHelper.__name__ = ["DeskHelper"], DeskHelper.prototype = {
        desk: null,
        main: null,
        eyeBtn: null,
        eyeElementsHidded: null,
        isUIHideMode: null,
        setsForStarsData: null,
        setupsMCs: null,
        toAnimateStars: null,
        setToActivate: null,
        fightBtn: null,
        fightBtnData: null,
        initBGX: null,
        initBGY: null,
        bgAlignedElements: null,
        bgAlignedElementsInitMatrixes: null,
        keepOffsetEls: null,
        centerYEls: null,
        centerYElsInitY: null,
        hm: null,
        spinnerMode: null,
        init: function(e) {
            for (null != this.spinnerMode && this.spinnerMode.destroy(), this.spinnerMode = null, this.eyeElementsHidded = null, this.eyeBtn = this.desk.getElementByName("eyeBtn"), null != this.eyeBtn && this.eyeBtn.set_visible(!1), this.fightBtn = null, this.fightBtnData = null; this.toAnimateStars.length > 0;) this.toAnimateStars.pop();
            if (this.setToActivate = null, this.setupsMCs = null, this.setsForStarsData = null, null != e && null != e.setsForStars) {
                this.setsForStarsData = e.setsForStars, this.setupsMCs = this.desk.getElementsByFolderName("SetupsData");
                for (var t = 0, n = this.setupsMCs; t < n.length;) {
                    var l = n[t];
                    ++t, l.set_visible(!1)
                }
            }
            this.fightBtn = this.desk.getElementByName("fightBtn"), null != e && null != e.fightBtnData && null != e.fightBtnData && (this.fightBtnData = e.fightBtnData), null != e && null != e.isSpinnMode && e.isSpinnMode && (this.spinnerMode = new SpinnerMode), this.initBGX = this.desk.levels.data.levels[this.desk.curLevel].bg.x, this.initBGY = this.desk.levels.data.levels[this.desk.curLevel].bg.y, this.bgAlignedElements = [], this.bgAlignedElementsInitMatrixes = [];
            for (var i = this.desk.getElementsByLayerName("BgAligned"), s = this.desk.getElementsByFolderName("BgAligned"), a = 0; a < i.length;) {
                var r = i[a];
                ++a, -1 == HxOverrides.indexOf(this.bgAlignedElements, r, 0) && (this.bgAlignedElements.push(r), this.bgAlignedElementsInitMatrixes.push(r.get_transform().get_matrix().clone()))
            }
            for (var o = 0; o < s.length;) {
                var d = s[o];
                ++o, -1 == HxOverrides.indexOf(this.bgAlignedElements, d, 0) && (this.bgAlignedElements.push(d), this.bgAlignedElementsInitMatrixes.push(d.get_transform().get_matrix().clone()))
            }
            this.alignBGsElements(), this.centerYElsInitY = [], this.centerYEls = this.desk.getElementsByFolderName("CenterY");
            for (var _ = 0, h = this.centerYEls; _ < h.length;) {
                var p = h[_];
                ++_, this.centerYElsInitY.push(p.get_y())
            }
            this.alignCenterYElsElements();
            for (var c = [], Q = [], U = 0, m = this.desk.levels.physicElements; U < m.length;) {
                var u = m[U];
                ++U, 0 == u.groupName.toLowerCase().indexOf("offset_") && -1 == HxOverrides.indexOf(c, u.groupName, 0) && c.push(u.groupName), 0 == u.layerName.toLowerCase().indexOf("offset_") && -1 == HxOverrides.indexOf(Q, u.layerName, 0) && Q.push(u.layerName)
            }
            for (; this.keepOffsetEls.length > 0;) this.keepOffsetEls.pop();
            this.collectOffsetEls(this.keepOffsetEls, c, !0), this.collectOffsetEls(this.keepOffsetEls, Q, !1), this.onResize()
        },
        collectOffsetEls: function(e, t, n) {
            for (var l = ["t", "l", "r", "b"], i = 0; i < t.length;) {
                for (var s = t[i], a = !1, r = 0; r < l.length;) {
                    var o = l[r];
                    if (++r, 0 == s.toLowerCase().indexOf("offset_" + o)) {
                        a = !0;
                        break
                    }
                }
                a ? i++ : HxOverrides.remove(t, s)
            }
            for (var d = 0; d < t.length;) {
                var _, h = t[d];
                ++d, _ = n ? this.desk.getElementsByFolderName(h) : this.desk.getElementsByLayerName(h);
                for (var p = h.toLowerCase().split("_").slice(1), c = 0; c < _.length;) {
                    var Q = _[c];
                    ++c;
                    for (var U = !1, m = 0; m < e.length;) {
                        var u = e[m];
                        if (++m, u.el == Q) {
                            U = !0;
                            break
                        }
                    }
                    U || e.push({
                        el: Q,
                        x: Q.get_x(),
                        y: Q.get_y(),
                        aligns: p
                    })
                }
            }
        },
        onResize: function() {
            this.alignBGsElements(), this.alignCenterYElsElements(), null != this.spinnerMode && this.spinnerMode.onResize();
            for (var e = 0, t = this.keepOffsetEls; e < t.length;) {
                var n = t[e];
                ++e, this.alignElement(n)
            }
        },
        alignElement: function(e) {
            for (var t = e.el, n = 0, l = e.aligns; n < l.length;) {
                var i = l[n];
                ++n, "t" == i && t.set_y(-Desk.get_topLevels() + e.y), "b" == i && t.set_y(-Desk.get_topLevels() + Desk.get_sHeightLevels() - (Config.baseSHeight - e.y)), "l" == i && t.set_x(-Desk.get_leftLevels() + e.x), "r" == i && t.set_x(-Desk.get_leftLevels() + Desk.get_sWidthLevels() - (Config.baseSWidth - e.x))
            }
        },
        alignCenterYElsElements: function() {
            for (var e = 0, t = this.centerYEls.length; e < t;) {
                var n = e++,
                    l = this.centerYEls[n];
                l.set_y(this.centerYElsInitY[n]);
                var i = l;
                i.set_y(i.get_y() - this.desk.levels.get_y() / this.desk.levels.get_scaleY() / 2)
            }
        },
        alignBGsElements: function() {
            for (var e = 0, t = this.bgAlignedElements.length; e < t;) {
                var n = e++,
                    l = this.bgAlignedElements[n],
                    i = this.bgAlignedElementsInitMatrixes[n],
                    s = l.get_transform().get_matrix();
                s.copyFrom(i), isNaN(this.initBGX) || isNaN(this.initBGY) || s.translate(-this.initBGX, -this.initBGY), null != this.desk.bg && s.concat(this.desk.bg.get_transform().get_matrix()), this.hm.copyFrom(this.desk.levels.get_transform().get_matrix()), this.hm.invert(), s.concat(this.hm), l.get_transform().set_matrix(s)
            }
        },
        activateSetups: function() {
            if (null != this.setsForStarsData) {
                var e = [];
                null != LocalSaves.getVar("setupsData") && (e = LocalSaves.getVar("setupsData"));
                for (var t = 0, n = this.setupsMCs; t < n.length;) {
                    var l = n[t];
                    ++t, l.set_alpha(.001), motion_Actuate.tween(l, .3, {
                        alpha: 1
                    }).ease(motion_easing_Linear.get_easeNone()), l.set_visible(!0)
                }
                var i, s = 1,
                    a = this.desk.getElementByName(Std.string(this.setsForStarsData[0].name) + "");
                i = function(e) {
                    var t;
                    t = js_Boot.__cast(e.setsForStarsData[0].indexes, Array);
                    var n = Math.floor(a.get_curFrame());
                    return HxOverrides.indexOf(t, n, 0)
                }(this);
                for (var r = 1, o = this.setsForStarsData.length; r < o;) {
                    var d = r++,
                        _ = this.desk.getElementByName(Std.string(this.setsForStarsData[d].name) + "");
                    (function(e) {
                        var t;
                        t = js_Boot.__cast(e.setsForStarsData[d].indexes, Array);
                        var n = Math.floor(_.get_curFrame());
                        return HxOverrides.indexOf(t, n, 0)
                    })(this) == i && s++
                }
                for (var h = 0; h < e.length;) {
                    var p = e[h];
                    ++h, this.desk.getElementByNameInFolder("dressIcon" + (p + 1), "SetupsData").hasLabel("animateShow") ? this.desk.getElementByNameInFolder("dressIcon" + (p + 1), "SetupsData").gotoAndStopLabel("animateShow") : this.desk.getElementByNameInFolder("dressIcon" + (p + 1), "SetupsData").gotoAndStop(1)
                }
                var c = !1;
                s > this.setsForStarsData.length - 1 && -1 == HxOverrides.indexOf(e, i, 0) && (e.push(i), c = !0), c && (this.setToActivate = this.desk.getElementByNameInFolder("dressIcon" + (i + 1), "SetupsData"));
                for (var Q = 0; Q < s;) {
                    var U = Q++;
                    this.toAnimateStars.push(this.desk.getElementByNameInFolder("star" + (U + 1), "SetupsData"))
                }
                this.animateSetsElsApear();
                LocalSaves.setVar("setupsData", e)
            }
        },
        animateSetsElsApear: function(e) {
            var t;
            null != e && e.stop(), null != (t = this.toAnimateStars.length > 0 ? this.toAnimateStars.shift() : this.setToActivate) && (t == this.setToActivate && (this.setToActivate = null), t.hasLabel("animateShow") ? t.playLabel("animateShow", $bind(this, this.animateSetsElsApear)) : (t.gotoAndStop(1), this.animateSetsElsApear()))
        },
        onFinishScreen: function() {
            null != this.eyeBtn && (this.eyeBtn.set_scaleX(this.eyeBtn.set_scaleY(.001)), this.eyeBtn.set_visible(!0), motion_Actuate.timer(.35).onComplete($bind($_ = this.desk, $_.animateBtnApear), [this.eyeBtn]), this.activateSetups())
        },
        eyeBtnClick: function() {
            this.isUIHideMode = !0, this.eyeElementsHidded = [];
            for (var e = this.desk.getElementsByLayerName("NavigationUI"), t = 0; t < e.length;) {
                var n = e[t];
                ++t, n.get_visible() && (n.set_visible(!1), this.eyeElementsHidded.push(n))
            }
            e = this.desk.getElementsByFolderName("SetupsData");
            for (var l = 0; l < e.length;) {
                var i = e[l];
                ++l, i.get_visible() && (i.set_visible(!1), this.eyeElementsHidded.push(i))
            }
            if (null != this.desk.soundBtn && -1 == HxOverrides.indexOf(this.eyeElementsHidded, this.desk.soundBtn, 0) && this.desk.soundBtn.get_visible() && (this.eyeElementsHidded.push(this.desk.soundBtn), this.desk.soundBtn.set_visible(!1)), null != this.desk.restartBtn && -1 == HxOverrides.indexOf(this.eyeElementsHidded, this.desk.restartBtn, 0) && this.desk.restartBtn.get_visible() && (this.eyeElementsHidded.push(this.desk.restartBtn), this.desk.restartBtn.set_visible(!1)), null != this.desk.pauseBtns && this.desk.pauseBtns.length > 0)
                for (var s = 0, a = this.desk.pauseBtns; s < a.length;) {
                    var r = a[s];
                    ++s, null != r && -1 == HxOverrides.indexOf(this.eyeElementsHidded, r, 0) && r.get_visible() && (this.eyeElementsHidded.push(r), r.set_visible(!1))
                }
        },
        mDown: function() {
            if (null != this.spinnerMode && this.spinnerMode.onMDown(), this.isUIHideMode) {
                for (var e = 0, t = this.eyeElementsHidded; e < t.length;) {
                    var n = t[e];
                    ++e, n.set_visible(!0)
                }
                return this.eyeElementsHidded = null, this.isUIHideMode = !1, !0
            }
            return null != this.eyeBtn && this.eyeBtn.get_visible() && this.eyeBtn.get_alpha() > 0 && this.desk.hitsMouse(this.eyeBtn) ? (this.desk.animateBtnClick(this.eyeBtn, $bind(this, this.eyeBtnClick)), !0) : (null != this.fightBtn && 1 == this.fightBtn.get_alpha() && this.desk.hitsMouse(this.fightBtn) && this.desk.animateBtnClick(this.fightBtn, $bind(this, this.fightBtnClick)), !1)
        },
        fightBtnClick: function() {
            var e;
            Assembler.curTime = 0, e = -1 == this.desk.nextBtnClickLevel ? this.fightBtnData.defaultAssemblerLevel : this.desk.nextBtnClickLevel, Assembler.lastAssemblerLevel = e, Assembler.lastAssemblerSeqIndex = Reflect.field(this.fightBtnData.levelRobotIndex, "level" + e), this.desk.startNewGame(this.fightBtnData.openLevel)
        },
        mUp: function() {
            return null != this.spinnerMode && this.spinnerMode.onMUp(), !1
        },
        update: function(e) {
            if (null != this.spinnerMode && this.spinnerMode.update(e), null != this.fightBtn) {
                var t;
                t = -1 == this.desk.nextBtnClickLevel ? this.fightBtnData.defaultAssemblerLevel : this.desk.nextBtnClickLevel;
                var n = Reflect.field(this.fightBtnData.levelRobotIndex, "level" + t);
                this.fightBtn.set_alpha(-1 == (l = Assembler.get_assembledRobots(), HxOverrides.indexOf(l, n, 0)) ? .5 : 1)
            }
            var l
        },
        __class__: DeskHelper
    };
    var DialogsWindowses = function(e) {
        this.curActiveDialog = null, this.dialogWindowsesDatas = [], BaseGameMode.call(this), this.data = e, DialogsWindowses.current = this;
        for (var t = 0; t < e.length;) {
            var n = e[t];
            ++t, this.prepareDialog(n)
        }
    };
    $hxClasses.DialogsWindowses = DialogsWindowses, DialogsWindowses.__name__ = ["DialogsWindowses"], DialogsWindowses.showDialogWindow = function(e, t) {
        null != DialogsWindowses.current && DialogsWindowses.current.activateDialog(e, t)
    }, DialogsWindowses.__super__ = BaseGameMode, DialogsWindowses.prototype = $extend(BaseGameMode.prototype, {
        data: null,
        dialogWindowsesDatas: null,
        curActiveDialog: null,
        activateDialog: function(e, t) {
            for (var n = 0, l = this.dialogWindowsesDatas; n < l.length;) {
                var i = l[n];
                if (++n, i.name == e) {
                    this.curActiveDialog = i;
                    break
                }
            }
            for (var s = 0, a = this.curActiveDialog.els; s < a.length;) {
                var r = a[s];
                ++s, r.set_visible(!0)
            }
            this.curActiveDialog.curDialogIndex = 1, this.curActiveDialog.callBack = t;
            for (var o = 0, d = this.curActiveDialog.dialogMCs; o < d.length;) {
                var _ = d[o];
                ++o, _.playLabel("dialog1", $bind(this, this.onDialogPlayEnd))
            }
            null != this.curActiveDialog.closeBtn && this.curActiveDialog.closeBtn.set_visible(!1)
        },
        onDialogPlayEnd: function(e) {
            this.curActiveDialog.curDialogIndex >= this.curActiveDialog.numDialogs && (null != this.curActiveDialog.closeBtn ? (this.curActiveDialog.closeBtn.set_visible(!0), this.curActiveDialog.skipBtn.set_visible(!1)) : this.dialogCloseClick())
        },
        dialogSkipClick: function() {
            if (null != this.curActiveDialog)
                if (this.curActiveDialog.curDialogIndex < this.curActiveDialog.numDialogs) {
                    this.curActiveDialog.curDialogIndex++;
                    for (var e = 0, t = this.curActiveDialog.dialogMCs; e < t.length;) {
                        var n = t[e];
                        ++e, n.playLabel("dialog" + this.curActiveDialog.curDialogIndex, $bind(this, this.onDialogPlayEnd))
                    }
                } else {
                    for (var l = 0, i = this.curActiveDialog.dialogMCs; l < i.length;) {
                        var s = i[l];
                        ++l, s.gotoAndStopLabel("dialog" + this.curActiveDialog.curDialogIndex)
                    }
                    null != this.curActiveDialog.closeBtn ? (this.curActiveDialog.closeBtn.set_visible(!0), this.curActiveDialog.skipBtn.set_visible(!1)) : this.dialogCloseClick()
                }
        },
        dialogCloseClick: function() {
            if (null != this.curActiveDialog) {
                for (var e = 0, t = this.curActiveDialog.els; e < t.length;) {
                    var n = t[e];
                    ++e, n.set_visible(!1)
                }
                this.curActiveDialog.curDialogIndex = 1, this.curActiveDialog.showNextBtnOnEnd && null != Desk.current.nextBtn && Desk.current.changeToNextTool(), null != this.curActiveDialog.callBack && (this.curActiveDialog.callBack(), this.curActiveDialog.callBack = null), this.curActiveDialog = null
            }
        },
        prepareDialog: function(e) {
            for (var t = this.desk.getElementsByFolderName(e.folderName), n = null, l = null, i = [], s = 0; s < t.length;) {
                var a = t[s];
                ++s, a.set_visible(!1), "dialogSkipBtn" == a.get_name() ? n = a : "dialogCloseBtn" == a.get_name() ? l = a : a.hasLabel("dialog1") && i.push(a)
            }
            for (var r = 0, o = 0; o < i.length;) {
                var d = i[o];
                ++o;
                for (var _ = 1; d.hasLabel("dialog" + _);) _++;
                r < --_ && (r = _)
            }
            null != e.showNextBtnOnEnd && e.showNextBtnOnEnd && null != Desk.current.nextBtn && Desk.current.nextBtn.set_visible(!1), this.dialogWindowsesDatas.push({
                name: e.folderName,
                showNextBtnOnEnd: null != e.showNextBtnOnEnd && e.showNextBtnOnEnd,
                skipBtn: n,
                callBack: null,
                closeBtn: l,
                isActive: !1,
                els: t,
                numDialogs: r,
                curDialogIndex: 0,
                dialogMCs: i
            })
        },
        onMDown: function() {
            BaseGameMode.prototype.onMDown.call(this), null != this.curActiveDialog && (this.curActiveDialog.skipBtn.get_visible() && this.desk.hitsMouse(this.curActiveDialog.skipBtn) ? this.desk.animateBtnClick(this.curActiveDialog.skipBtn, $bind(this, this.dialogSkipClick)) : null != this.curActiveDialog.closeBtn && this.curActiveDialog.closeBtn.get_visible() && this.desk.hitsMouse(this.curActiveDialog.closeBtn) && this.desk.animateBtnClick(this.curActiveDialog.closeBtn, $bind(this, this.dialogCloseClick)))
        },
        destroy: function() {
            DialogsWindowses.current = null, BaseGameMode.prototype.destroy.call(this)
        },
        __class__: DialogsWindowses
    });
    var Domino = function(e) {
        this.putDominoesGap = 2, this.highlighted = !1, this.opened = !1, this.valFrame = 0, this.canPlay = !1, this.hm = new openfl_geom_Matrix, this.hp = new openfl_geom_Point, this.hr = new openfl_geom_Rectangle, this.doubleBounds = new openfl_geom_Rectangle, this.val2Bounds = new openfl_geom_Rectangle, this.val1Bounds = new openfl_geom_Rectangle, this.direction = 0, openfl_display_Sprite.call(this), this.vals = e, this.baseEl = Game.current.dominoBase.clone(!0), this.baseEl.set_x(-this.baseEl.get_width() / 2), this.baseEl.set_y(-this.baseEl.get_height() / 2), this.addChild(this.baseEl);
        for (var t = 0, n = 0, l = Game.current.dominoStockData.length; n < l;) {
            var i = n++;
            if (Game.current.dominoStockData[i][0] == e[0] && Game.current.dominoStockData[i][1] == e[1]) {
                t = i;
                break
            }
        }
        this.valFrame = t, this.baseEl.gotoAndStop(0), this.baseElBounds = this.baseEl.getBounds(this), this.val1Bounds.setTo(0, 0, this.baseElBounds.width, this.baseElBounds.height / 2), this.val2Bounds.setTo(0, this.baseElBounds.height / 2, this.baseElBounds.width, this.baseElBounds.height / 2), this.doubleBounds.setTo(0, 0, this.baseElBounds.width, this.baseElBounds.height)
    };
    $hxClasses.Domino = Domino, Domino.__name__ = ["Domino"], Domino.__super__ = openfl_display_Sprite, Domino.prototype = $extend(openfl_display_Sprite.prototype, {
        baseEl: null,
        vals: null,
        get_isDouble: function() {
            return this.vals[0] == this.vals[1]
        },
        get_val1: function() {
            return this.vals[0]
        },
        get_val2: function() {
            return this.vals[1]
        },
        get_score: function() {
            return this.vals[0] + this.vals[1]
        },
        direction: null,
        val1Bounds: null,
        val2Bounds: null,
        doubleBounds: null,
        hr: null,
        baseElBounds: null,
        hp: null,
        hm: null,
        canPlay: null,
        valFrame: null,
        opened: null,
        set_opened: function(e) {
            return this.opened == e ? e : (this.opened = e, this.opened)
        },
        highlighted: null,
        set_highlighted: function(e) {
            return e == this.highlighted ? e : (this.highlighted = e, e)
        },
        set_direction: function(e) {
            return this.direction = e, this.set_rotation(90 * this.direction), this.baseElBounds = this.baseEl.getBounds(this), this.baseElBounds.width = Math.abs(this.baseElBounds.width), this.baseElBounds.height = Math.abs(this.baseElBounds.height), this.direction
        },
        open: function(e) {
            null == e && (e = !1), this.set_opened(!0), e ? Actuate.update($bind(this, this.dominoOpenAnimUpdate), GameConfig.dominoOpenTime * GameConfig.gameSpeedCoef / 2, [-1], [1], !0, GameConfig.actuateWithCompID).onComplete($bind(this, this.dominoOpenEnd)).ease(motion_easing_Quad.get_easeInOut()) : this.baseEl.gotoAndStop(this.valFrame)
        },
        dominoOpenAnimUpdate: function(e) {
            e > 0 && 0 == this.baseEl.get_curFrame() && this.baseEl.gotoAndStop(this.valFrame);
            var t = this.baseEl.get_transform().get_matrix();
            t.identity(), t.translate(-Domino.dominoSizeX / 2, -Domino.dominoSizeY / 2), t.scale(Math.abs(e), 1), t.b = .2 * Math.cos(Math.abs(e) * (Math.PI / 2)), this.baseEl.get_transform().set_matrix(t)
        },
        dominoOpenEnd: function() {
            var e = this.baseEl.get_transform().get_matrix();
            e.identity(), this.baseEl.get_transform().set_matrix(e), this.baseEl.gotoAndStop(this.valFrame), this.baseEl.set_x(-this.baseEl.get_width() / 2), this.baseEl.set_y(-this.baseEl.get_height() / 2)
        },
        getValBounds: function(e, t) {
            null == t && (t = !1);
            var n = this.get_scaleX(),
                l = this.get_scaleY();
            return this.set_scaleX(this.set_scaleY(1)), this.hm.identity(), this.hm.copyFrom(this.baseEl.get_transform().get_matrix()), this.hm.concat(this.get_transform().get_matrix()), this.hr.copyFrom(this.get_isDouble() && !t ? this.doubleBounds : e == this.get_val1() ? this.val1Bounds : this.val2Bounds), this.transformBounds(this.hr, this.hm), this.set_scaleX(n), this.set_scaleY(l), this.hr
        },
        getPoint: function(e, t, n, l) {
            null == l && (l = !1), null == n && (n = !1);
            var i = this.getValBounds(e, l);
            switch (t) {
                case 0:
                    this.hp.x = i.x + i.width / 2, this.hp.y = i.y + (n ? i.height : 0);
                    break;
                case 2:
                    this.hp.x = i.x + i.width / 2, this.hp.y = i.y + (n ? 0 : i.height);
                    break;
                case 1:
                    this.hp.x = i.x + (n ? 0 : i.width), this.hp.y = i.y + i.height / 2;
                    break;
                case 3:
                    this.hp.x = i.x + (n ? i.width : 0), this.hp.y = i.y + i.height / 2
            }
            return this.hp
        },
        drawBounds: function(e) {
            var t = e.get_graphics(),
                n = this.getValBounds(this.get_val1());
            t.lineStyle(2, 16711680, .5), t.drawRect(n.x, n.y, n.width, n.height);
            var l = this.getValBounds(this.get_val2());
            t.lineStyle(2, 65280, .5), t.drawRect(l.x, l.y, l.width, l.height)
        },
        putAfter: function(e, t, n, l, i, s) {
            if (null == s && (s = !1), null == i && (i = !1), null == l && (l = !1), e != this) {
                s || (this.get_isDouble() && !i ? l ? this.set_direction(3 == n || 1 == n ? 1 : 0) : this.set_direction(0 == n || 2 == n ? 1 : 0) : t == this.get_val1() ? this.set_direction(function(e) {
                    var t;
                    switch (n) {
                        case 0:
                            t = 2;
                            break;
                        case 2:
                            t = 0;
                            break;
                        case 1:
                            t = 3;
                            break;
                        case 3:
                            t = 1;
                            break;
                        default:
                            t = 0
                    }
                    return t
                }()) : this.set_direction(function(e) {
                    var t;
                    switch (n) {
                        case 0:
                            t = 0;
                            break;
                        case 2:
                            t = 2;
                            break;
                        case 1:
                            t = 1;
                            break;
                        case 3:
                            t = 3;
                            break;
                        default:
                            t = 0
                    }
                    return t
                }()));
                var a = e.getPoint(t, n);
                if (i && e.get_isDouble())
                    if ((0 == e.direction || 2 == e.direction) != (0 == this.direction || 2 == this.direction)) switch (this.hm.identity(), this.hm.copyFrom(e.baseEl.get_transform().get_matrix()), this.hm.concat(e.get_transform().get_matrix()), this.hr.copyFrom(e.val2Bounds), this.transformBounds(this.hr, this.hm), n) {
                        case 0:
                            a.x = this.hr.x + this.hr.width / 2, a.y = this.hr.y;
                            break;
                        case 2:
                            a.x = this.hr.x + this.hr.width / 2, a.y = this.hr.get_bottom();
                            break;
                        case 1:
                            a.x = this.hr.get_right(), a.y = this.hr.y + this.hr.height / 2;
                            break;
                        case 3:
                            a.x = this.hr.x, a.y = this.hr.y + this.hr.height / 2
                    }
                var r, o, d = this.getPoint(t, n, !0);
                r = 3 == n ? this.putDominoesGap : 1 == n ? -this.putDominoesGap : 0, o = 0 == n ? this.putDominoesGap : 2 == n ? -this.putDominoesGap : 0;
                this.set_x(this.get_x() + (a.x - d.x - r));
                this.set_y(this.get_y() + (a.y - d.y - o))
            }
        },
        putDominoesGap: null,
        transformBounds: function(e, t) {
            var n = t.a * e.x + t.c * e.y,
                l = n,
                i = t.b * e.x + t.d * e.y,
                s = i,
                a = t.a * (e.x + e.width) + t.c * e.y,
                r = t.b * (e.x + e.width) + t.d * e.y;
            a < n && (n = a), r < i && (i = r), a > l && (l = a), r > s && (s = r), a = t.a * (e.x + e.width) + t.c * (e.y + e.height), r = t.b * (e.x + e.width) + t.d * (e.y + e.height), a < n && (n = a), r < i && (i = r), a > l && (l = a), r > s && (s = r), a = t.a * e.x + t.c * (e.y + e.height), r = t.b * e.x + t.d * (e.y + e.height), a < n && (n = a), r < i && (i = r), a > l && (l = a), r > s && (s = r), e.setTo(n + t.tx, i + t.ty, l - n, s - i)
        },
        anotherSideVal: function(e) {
            return e == this.get_val1() ? this.get_val2() : this.get_val1()
        },
        sendOnTop: function(e) {
            null == e && (e = !0), null != this.parent && this.parent.setChildIndex(this, this.parent.get_numChildren() - 1), e && this.set_scaleX(this.set_scaleY(1))
        },
        changeParent: function(e) {
            var t = this.get_transform().get_matrix();
            null != this.parent && t.concat(this.parent.get_transform().get_matrix());
            var n = e.get_transform().get_matrix().clone();
            n.invert(), t.concat(n), this.get_transform().set_matrix(t), e.addChild(this)
        },
        __class__: Domino,
        __properties__: $extend(openfl_display_Sprite.prototype.__properties__, {
            set_highlighted: "set_highlighted",
            set_opened: "set_opened",
            set_direction: "set_direction",
            get_score: "get_score",
            get_val2: "get_val2",
            get_val1: "get_val1",
            get_isDouble: "get_isDouble"
        })
    });
    var DominoStack = function() {
        this.dominoVals = [], this.dominoArr = []
    };
    $hxClasses.DominoStack = DominoStack, DominoStack.__name__ = ["DominoStack"], DominoStack.prototype = {
        dominoArr: null,
        dominoVals: null,
        get_length: function() {
            return this.dominoArr.length
        },
        get_curVal: function() {
            if (0 == this.dominoVals.length) return -1;
            var e = this.dominoArr[this.dominoArr.length - 1];
            return e.get_val1() == this.dominoVals[this.dominoVals.length - 1] ? e.get_val2() : e.get_val1()
        },
        previousDomino: function(e) {
            return HxOverrides.indexOf(this.dominoArr, e, 0) < 1 ? null : this.dominoArr[HxOverrides.indexOf(this.dominoArr, e, 0) - 1]
        },
        valWithDomino: function(e) {
            return this.valAt(HxOverrides.indexOf(this.dominoArr, e, 0))
        },
        hasDomino: function(e) {
            return -1 != HxOverrides.indexOf(this.dominoArr, e, 0)
        },
        indexOfDomino: function(e) {
            return HxOverrides.indexOf(this.dominoArr, e, 0)
        },
        add: function(e, t) {
            this.dominoArr.push(e), this.dominoVals.push(t)
        },
        dominoAt: function(e) {
            return this.dominoArr[e]
        },
        lastDomino: function() {
            return 0 == this.get_length() ? null : this.dominoAt(this.get_length() - 1)
        },
        valAt: function(e) {
            return this.dominoVals[e]
        },
        clear: function() {
            for (; this.dominoArr.length > 0;) this.dominoArr.pop();
            for (; this.dominoVals.length > 0;) this.dominoVals.pop()
        },
        __class__: DominoStack,
        __properties__: {
            get_curVal: "get_curVal",
            get_length: "get_length"
        }
    };
    var DrawDomino = function(e) {
        null == e && (e = !1), DominoModeBase.call(this), DominoModeBase.current = this, DominoModeBase.playToScore = 100, this.modeName = "DrawDominoes", this.modeIDX = 0, this.boardZone.width = Desk.get_sWidthLevels(), this.boardZone.height = Desk.get_sHeightLevels(), this.init(e)
    };
    $hxClasses.DrawDomino = DrawDomino, DrawDomino.__name__ = ["DrawDomino"], DrawDomino.__super__ = DominoModeBase, DrawDomino.prototype = $extend(DominoModeBase.prototype, {
        init: function(e) {
            if (null == e && (e = !1), DominoModeBase.prototype.init.call(this), this.leftStack = new DominoStack, this.rightStack = new DominoStack, e) this.loadSave();
            else {
                this.numPlayers = DominoModeBase.playersTypes.length;
                for (var t = 0, n = DominoModeBase.playersTypes.length; t < n;) {
                    var l = t++;
                    this.players.push("computer" == DominoModeBase.playersTypes[l] ? new DrawDominoAI(this) : new HumanPlayer(this))
                }
                this.deal(), this.changeTurnNextFrame = !0
            }
        },
        deal: function() {
            this.simpleDeal()
        },
        updatePoses: function(e) {
            null == e && (e = !0), e && this.rememberDominoTransforms(), this.updateHandsPoses();
            this.get_isPortraitMode() ? this.boardZone.width = Desk.get_sWidthLevels() : this.boardZone.width = this.p2HRect.x - this.p1HandRect.get_right(), this.get_isPortraitMode() ? this.boardZone.height = this.p1HandRect.y - this.p2HandRect.get_bottom() : this.boardZone.height = Desk.get_sHeightLevels(), this.get_isPortraitMode() ? this.boardZone.x = (Desk.get_sWidthLevels() - .9 * this.boardZone.width) / 2 : this.boardZone.x = this.p1HandRect.width + (this.boardZone.width - .9 * this.boardZone.width) / 2, this.get_isPortraitMode() ? this.boardZone.y = this.p2HandRect.get_bottom() - -Desk.get_topLevels() + (this.boardZone.height - .9 * this.boardZone.height) / 2 : this.boardZone.y = (this.boardZone.height - .9 * this.boardZone.height) / 2, this.boardZone.x -= Desk.get_leftLevels(), this.boardZone.y -= Desk.get_topLevels(), this.boardZone.width *= .9, this.boardZone.height *= .9, this.pileDominoesCont.set_x(-Desk.get_leftLevels() + Desk.get_sWidthLevels() / 2);
            var t, n = this.leftStack.dominoAt(0),
                l = n;
            null != n && (n.set_x(0), n.set_y(0), n.set_direction(n.get_isDouble() ? 0 : this.leftStack.valAt(0) == n.get_val1() ? 1 : 3)), t = null == n ? 0 : Math.max(n.get_height(), n.get_width());
            for (var i, s = Math.round(this.boardZone.width * this.desk.levels.get_scaleX() / (.74 * t)), a = [1, 0, 3, 0], r = [3, 2, 1, 2], o = 0, d = 0, _ = 0, h = 0, p = s / 2 * -t, c = t * (s / 2), Q = new haxe_ds_ObjectMap, U = 1, m = this.pileList.length; U < m;) {
                var u, F = U++,
                    N = this.pileList[F],
                    S = !1;
                if (this.rightStack.hasDomino(N)) {
                    u = this.rightStack, i = a[o];
                    var W = n.getBounds(n.parent);
                    if ((3 == i && W.x <= p || 1 == i && W.get_right() >= c || _ >= 2) && (++o >= a.length && (o = 0), i = a[o], _ = 0, S = !0), S) {
                        var B = u.previousDomino(N);
                        if (null != B && B.get_isDouble()) {
                            var Z = u.previousDomino(B);
                            null != Z && (B.putAfter(Z, u.valWithDomino(B), this.isVertDir(Q.h[B.__id__]) && _ < 2 ? Q.h[B.__id__] : i, !0), 0 != i && 2 != i || _++)
                        }
                    }
                    N.putAfter(n, u.valWithDomino(N), i, S), Q.set(N, i), 0 != i && 2 != i || _++, 0, n = N
                } else {
                    u = this.leftStack, i = r[d];
                    var D = l.getBounds(l.parent);
                    if ((3 == i && D.x <= p || 1 == i && D.get_right() >= c || h >= 2) && (++d >= r.length && (d = 0), i = r[d], h = 0, S = !0), S) {
                        var V = u.previousDomino(N);
                        if (null != V && V.get_isDouble()) {
                            var f = u.previousDomino(V);
                            null != f && (V.putAfter(f, u.valWithDomino(V), this.isVertDir(Q.h[V.__id__]) && h < 2 ? Q.h[V.__id__] : i, !0), 0 != i && 2 != i || h++)
                        }
                    }
                    N.putAfter(l, u.valWithDomino(N), i, S), Q.set(N, i), 0 != i && 2 != i || h++, 0, l = N
                }
            }
            for (var R = 0, T = this.pileDominoesCont.get_numChildren(); R < T;) {
                var J = R++;
                this.pileDominoesCont.getChildAt(J).set_scaleX(this.pileDominoesCont.getChildAt(J).set_scaleY(1))
            }
            this.pileDominoesCont.set_x(0), this.pileDominoesCont.set_y(0), this.pileDominoesCont.set_scaleX(1), this.pileDominoesCont.set_scaleY(1);
            var g = this.pileDominoesCont.getBounds(this.pileDominoesCont.parent),
                b = Math.min(1, Math.min(this.boardZone.width / g.width, this.boardZone.height / g.height));
            this.pileDominoesCont.set_scaleX(this.pileDominoesCont.set_scaleY(b)), g = this.pileDominoesCont.getBounds(this.pileDominoesCont.parent), this.pileDominoesCont.set_x(this.boardZone.x + this.boardZone.width / 2 - g.width / 2 - g.x), this.pileDominoesCont.set_y(this.boardZone.y + this.boardZone.height / 2 - g.height / 2 - g.y);
            e && this.playDominoRecordedAnim();
            for (var E = 0, v = this.deck; E < v.length;) {
                var k = v[E];
                ++E, -1 == HxOverrides.indexOf(this.pileList, k, 0) && -1 == HxOverrides.indexOf(this.players[0].hand, k, 0) && HxOverrides.indexOf(this.players[1].hand, k, 0)
            }
        },
        selectTurnPlayer: function() {
            if (0 != DominoModeBase.curRound && DominoModeBase.lastWinner > -1) return DominoModeBase.lastWinner;
            var e = 0,
                t = 0;
            if (0 == DominoModeBase.curRound)
                for (var n = 0, l = this.players.length; n < l;)
                    for (var i = n++, s = 0, a = this.players[i].hand; s < a.length;) {
                        var r = a[s];
                        ++s, r.get_isDouble() && r.get_val1() > e && (e = r.get_val1(), t = i)
                    }
            if (0 == e) {
                for (var o = 0, d = 0, _ = this.players.length; d < _;)
                    for (var h = d++, p = 0, c = this.players[h].hand; p < c.length;) {
                        var Q = c[p];
                        ++p, Q.get_val1() + Q.get_val2() > o && (o = Q.get_val1() + Q.get_val2(), t = h)
                    }
                return t
            }
            return t
        },
        __class__: DrawDomino
    });
    var DrawDominoAI = function(e) {
        Player.call(this, e)
    };
    $hxClasses.DrawDominoAI = DrawDominoAI, DrawDominoAI.__name__ = ["DrawDominoAI"], DrawDominoAI.__super__ = Player, DrawDominoAI.prototype = $extend(Player.prototype, {
        play: function() {
            var e = this.dominoMode.getAllPlays(this.hand),
                t = e.length > 0;
            if (0 == e.length && this.dominoMode.canDraw()) return this.dominoMode.boneyardIsActive ? (this.draw(), !1) : (this.dominoMode.showBoneyard(), GameConfig.timerWithComp(GameConfig.boneyardShowTime * GameConfig.gameSpeedCoef, $bind(this, this.draw), null, null), !1);
            if ((0 != e.length || !this.dominoMode.canDraw()) && this.dominoMode.boneyardIsActive) return this.dominoMode.hideBoneyard(), GameConfig.timerWithComp(GameConfig.boneyardShowTime * GameConfig.gameSpeedCoef, $bind(this, this.play), null, null), !1;
            if (t) {
                var n = AIHelper.getBestMove(this);
                return this.dominoMode.playPlay(this, n), n.domino.open(!0), !0
            }
            return this.dominoMode.showPass(), !1
        },
        draw: function(e) {
            if (this.dominoMode.canDraw()) {
                var t = Player.prototype.draw.call(this);
                return this.dominoMode.updatePoses(), GameConfig.timerWithComp(GameConfig.afterDrawDelay * GameConfig.gameSpeedCoef, $bind(this, this.play), null, null), t.sendOnTop(), t
            }
            return null
        },
        __class__: DrawDominoAI
    });
    var EReg = function(e, t) {
        t = t.split("u").join(""), this.r = new RegExp(e, t)
    };
    $hxClasses.EReg = EReg, EReg.__name__ = ["EReg"], EReg.prototype = {
        r: null,
        match: function(e) {
            return this.r.global && (this.r.lastIndex = 0), this.r.m = this.r.exec(e), this.r.s = e, null != this.r.m
        },
        matched: function(e) {
            if (null != this.r.m && e >= 0 && e < this.r.m.length) return this.r.m[e];
            throw new js__$Boot_HaxeError("EReg::matched")
        },
        matchedPos: function() {
            if (null == this.r.m) throw new js__$Boot_HaxeError("No string matched");
            return {
                pos: this.r.m.index,
                len: this.r.m[0].length
            }
        },
        matchSub: function(e, t, n) {
            if (null == n && (n = -1), this.r.global) {
                this.r.lastIndex = t, this.r.m = this.r.exec(n < 0 ? e : HxOverrides.substr(e, 0, t + n));
                var l = null != this.r.m;
                return l && (this.r.s = e), l
            }
            var i = this.match(n < 0 ? HxOverrides.substr(e, t, null) : HxOverrides.substr(e, t, n));
            return i && (this.r.s = e, this.r.m.index += t), i
        },
        replace: function(e, t) {
            return e.replace(this.r, t)
        },
        __class__: EReg
    };
    
	var FightTable = function(e) {
        var t;
        this.actuators = [], this.tableBG = null, this.frame = null, this.tables = [], this.completed = !1, this.desk = Desk.current, t = -1 == Assembler.lastAssemblerSeqIndex ? 1 : Assembler.lastAssemblerSeqIndex;
        for (var n, l = TJSON.parse(this.desk.levels.data.levels[e].levelSetup).fightingData, i = 1; null != (n = this.desk.getElementByName("table" + i));) {
            i++;
            var s = Std.parseInt(StringTools.replace(n.get_name(), "table", ""));
            this.tables[s - 1] = n
        }
        for (var a = 0, r = this.tables.length; a < r;) {
            var o = a++;
            n = this.tables[o];
            l.botsData[o].robotIndex[t - 1], 1 != t ? n.hasLabel("anim1") ? n.playLabel("anim1") : n.gotoAndStop(1) : n.hasLabel("anim") && n.playLabel("anim"), 0 != l.botsData[o].atrIndex && this.updateRobotImages(n, l.botsData[o].atrIndex)
        }
        if (this.frame = this.desk.getElementByName("tableFrame"), 1 == t ? this.frame.hasLabel("anim") && this.frame.playLabel("anim") : this.frame.hasLabel("anim1") ? this.frame.playLabel("anim1") : this.frame.gotoAndStop(1), 0 != l.humanData.atrIndex && this.updateRobotImages(this.frame, l.humanData.atrIndex), 0 == FightTable.curFight) {
            for (var d = Main.current.sWidth / this.desk.levels.get_scaleX() / 2 - this.tables[this.tables.length - 1].get_x() - this.desk.levels.get_x(), _ = Main.current.sHeight / this.desk.levels.get_scaleY() / 2 - this.tables[this.tables.length - 1].get_y() - this.desk.levels.get_y(), h = 0, p = this.tables; h < p.length;) {
                var c = p[h];
                ++h;
                var Q = c;
                Q.set_x(Q.get_x() + d);
                var U = c;
                U.set_y(U.get_y() + _)
            }
            this.frame.set_x(this.tables[this.tables.length - 1].get_x()), this.frame.set_y(this.tables[this.tables.length - 1].get_y()), this.moveTables(this.tables.length - 1, -1, $bind(this, this.onTablesArrived))
        } else {
            for (var m = Main.current.sWidth / this.desk.levels.get_scaleX() / 2 - this.tables[FightTable.curFight - 1].get_x() - this.desk.levels.get_x(), u = Main.current.sHeight / this.desk.levels.get_scaleY() / 2 - this.tables[FightTable.curFight - 1].get_y() - this.desk.levels.get_y(), F = 0, N = this.tables; F < N.length;) {
                var S = N[F];
                ++F;
                var W = S;
                W.set_x(W.get_x() + m);
                var B = S;
                B.set_y(B.get_y() + u)
            }
            this.frame.set_x(this.tables[FightTable.curFight - 1].get_x()), this.frame.set_y(this.tables[FightTable.curFight - 1].get_y()), this.moveTables(FightTable.curFight - 1, FightTable.curFight, $bind(this, this.onTablesArrived))
        }
        this.tableElements = this.desk.getElementsByFolderName("Table"), this.desk.getElementByName("action0").set_visible(!1), this.desk.getElementByName("vsLabel").set_visible(!1)
    };
    $hxClasses.FightTable = FightTable, FightTable.__name__ = ["FightTable"], FightTable.prototype = {
        completed: null,
        tables: null,
        frame: null,
        tableElements: null,
        tableBG: null,
        desk: null,
        actuators: null,
        onTablesArrived: function() {
            var e = this.desk.getElementByName("action0");
            e.set_visible(!0), this.desk.animateBtnApear(e);
            var t = this.desk.getElementByName("vsLabel");
            t.set_visible(!0), t.playWithCallBack($bind(this, this.stopMcOnEnd))
        },
        stopMcOnEnd: function(e) {
            e.stop()
        },
        moveTables: function(e, t, n) {
            if (null == t && (t = -1), e <= 0 && -1 == t || e == t) null != n && n();
            else {
                -1 == t ? e-- : e += e > t ? -1 : 1;
                var l, i = Main.current.sWidth / this.desk.levels.get_scaleX() / 2 - this.tables[e].get_x() - this.desk.levels.get_x(),
                    s = Main.current.sHeight / this.desk.levels.get_scaleY() / 2 - this.tables[e].get_y() - this.desk.levels.get_y();
                l = 0 == FightTable.curFight ? .3 : 1;
                for (var a = null, r = 0, o = this.tables; r < o.length;) {
                    var d = o[r];
                    ++r, a = motion_Actuate.tween(d, .4 * l, {
                        x: d.get_x() + i,
                        y: d.get_y() + s
                    }).ease(motion_easing_Linear.get_easeNone()), this.actuators.push(a)
                }
                this.actuators.push(motion_Actuate.tween(this.frame, .4 * l, {
                    x: this.tables[e].get_x() + i,
                    y: this.tables[e].get_y() + s
                }, !1).ease(motion_easing_Linear.get_easeNone())), null != a && a.onComplete($bind(this, this.moveTables), [e, t, n])
            }
        },
        updateRobotImages: function(e, t) {
            null == t && (t = -1), -1 != t || FightTable.curFight;
            for (var n = 0, l = e.framesList.length; n < l;)
                for (var i = n++, s = e.framesList[i], a = 0, r = s.get_numChildren(); a < r;) {
                    var o, d, _ = a++;
                    if (null != (o = Std.is(s.getChildAt(_), BitmapBatch) ? s.getChildAt(_) : null))(d = o.imName.split("__")[0] + (t > 0 ? "__" + t : "")) != o.imName && -1 != o.batch.getImgId(d) && o.changeImName(d)
                }
        },
        destroy: function() {
            for (var e = 0, t = this.actuators; e < t.length;) {
                var n = t[e];
                ++e, motion_Actuate.stop(n, null, !1, !1)
            }
            this.tables = null, this.frame = null, this.tableElements = null, this.tableBG = null, this.desk = null, this.actuators = null
        },
        onMDown: function() {},
        onMUp: function() {},
        update: function(e) {},
        __class__: FightTable
    };
    var FightingMode = function(e) {
        this.elementsInitY = new haxe_ds_ObjectMap, this.onePlayerLose = !1, this.curFight = 0, this.robots = [], this.quake = null, this.started = !1, this.completed = !1, this.initRobotsTransfoms = new haxe_ds_ObjectMap, FightingMode.current = this, this.fightingData = e, this.main = Main.current, this.desk = Desk.current, this.curFight = FightTable.curFight;
        for (var t = 0, n = e.robotsNames; t < n.length;) {
            var l = n[t];
            ++t;
            var i = this.desk.getElementByName(l),
                s = this.desk.getElementByName(l).get_transform().get_matrix().clone();
            this.initRobotsTransfoms.set(i, s)
        }
        this.numRounds = e.numRounds, Assembler.isTwoPlayersFightMode && (this.numRounds = 3), this.curRound = 0, openfl_Lib.current.stage.addEventListener("keyDown", $bind(this, this.onKeyboard)), this.quake = this.desk.getElementByName("quake"), null != this.quake && this.quake.set_visible(!1), this.nextBtn = this.desk.getElementByName("action0"), this.winBtns = this.desk.getElementsByLayerName("WinBtns"), -1 == Assembler.lastAssemblerSeqIndex || Assembler.lastAssemblerSeqIndex;
        for (var a = 0, r = e.robotsNames; a < r.length;) {
            var o = r[a];
            ++a, this.desk.getElementByName(o).set_visible(!1)
        }
        var d = [];
        d = (d = (d = (d = d.concat(this.desk.getElementsByFolderName("1PBtns"))).concat(this.desk.getElementsByFolderName("2PBtns"))).concat(this.desk.getElementsByLayerName("Progresses1P"))).concat(this.desk.getElementsByLayerName("Progresses2P"));
        for (var _ = 0; _ < d.length;) {
            var h = d[_];
            ++_;
            var p = h.get_y();
            this.elementsInitY.set(h, p)
        }
        this.startRound()
    };
    $hxClasses.FightingMode = FightingMode, FightingMode.__name__ = ["FightingMode"], FightingMode.__properties__ = {
        set_numWins: "set_numWins",
        get_numWins: "get_numWins"
    }, FightingMode.get_numWins = function() {
        return -1 == FightingMode._numWins && (null != LocalSaves.getVar("numWins") ? FightingMode._numWins = LocalSaves.getVar("numWins") : FightingMode._numWins = 0), FightingMode._numWins
    }, FightingMode.set_numWins = function(e) {
        return FightingMode._numWins != e && (FightingMode._numWins = e, LocalSaves.setVar("numWins", FightingMode._numWins)), FightingMode._numWins
    }, FightingMode.prototype = {
        fightingData: null,
        initRobotsTransfoms: null,
        main: null,
        desk: null,
        completed: null,
        started: null,
        quake: null,
        robot1: null,
        robot2: null,
        robots: null,
        informs: null,
        numRounds: null,
        curRound: null,
        curFight: null,
        nextBtn: null,
        winBtns: null,
        onePlayerLose: null,
        elementsInitY: null,
        onResize: function() {},
        startRound: function() {
            var e = this;
            this.informs = this.desk.getElementsByLayerName("Informs");
            for (var t = 0, n = this.informs; t < n.length;) {
                var l = n[t];
                ++t, l.set_visible(!1)
            }
            var i = this.desk.getElementByNameInLayer("FightInform", "Informs");
            null != i ? (i.set_visible(!0), i.gotoAndPlay(0, function(t) {
                e.started = !0
            }), i.curEndFrame = i.totalFrames - 1) : this.started = !0;
            var s = this.desk.getElementByNameInLayer("BattleInform" + (Assembler.isTwoPlayersFightMode ? "" : this.curFight + 1 + ""), "Informs");
            null != s && (s.hasLabel("iddle") && s.playLabel("iddle"), s.set_visible(!0));
            var a = this.desk.getElementByName("action0");
            null != a && (a.set_visible(!1), -1 != HxOverrides.indexOf(this.desk.actionBtns, a, 0) && HxOverrides.remove(this.desk.actionBtns, a));
            for (var r = 0, o = this.winBtns; r < o.length;) {
                var d = o[r];
                ++r, d.set_visible(!1)
            }
            var _ = this.desk.getElementByNameInLayer("criticalHitInform", "Informs");
            null != _ && _.set_visible(!1);
            var h, p, c = this.desk.getElementByNameInLayer("RoundInform", "Informs");
            if (null != c && (c.hasLabel("round" + (this.curRound + 1)) && c.playLabel("round" + (this.curRound + 1)), c.set_visible(!0)), 0 == this.curRound) {
                null != this.robot1 && this.robot1.destroy(), null != this.robot2 && this.robot2.destroy(), this.robot1 = this.robot2 = null;
                var Q;
                Q = -1 == Assembler.lastAssemblerSeqIndex ? 1 : Assembler.lastAssemblerSeqIndex;
                var U = 0;
                U = Assembler.isTwoPlayersFightMode ? this.fightingData.humanData.robotIndex[0] == Q ? this.fightingData.humanData.robotIndex[1] : this.fightingData.humanData.robotIndex[0] : this.fightingData.botsData[this.curFight].robotIndex[Q - 1];
                for (var m = this.fightingData.robotsNames[Q - 1], u = this.fightingData.robotsNames[U - 1], F = 0, N = this.fightingData.robotsNames; F < N.length;) {
                    var S = N[F];
                    ++F, this.desk.getElementByName(S).get_transform().set_matrix((h = this, void 0, p = h.desk.getElementByName(S), h.initRobotsTransfoms.h[p.__id__]).clone()), S != m && S != u ? this.desk.getElementByName(S).set_visible(!1) : this.desk.getElementByName(S).set_visible(!0)
                }
                var W = this.concatWeaponsDatas(this.getWeaponDataFromDefault(this.fightingData.humanData.mainWeaponsData), this.fightingData.humanData.weaponsData),
                    B = null;
                B = Assembler.isTwoPlayersFightMode ? this.concatWeaponsDatas(this.getWeaponDataFromDefault(this.fightingData.humanData.mainWeaponsData), this.fightingData.humanData.weaponsData) : this.concatWeaponsDatas(this.getWeaponDataFromDefault(this.fightingData.botsData[this.curFight].mainWeaponsData), this.fightingData.botsData[this.curFight].weaponsData);
                for (var Z = 0, D = W.length; Z < D;) {
                    var V = Z++;
                    W[V].key = this.fightingData.humanData.keysPlayer1[V]
                }
                for (var f = 0, R = B.length; f < R;) {
                    var T = f++;
                    B[T].key = this.fightingData.humanData.keysPlayer2[T]
                }
                this.robot1 = new Robot(this.desk.getElementByName(m), null, W, 0, !1), this.robot2 = new Robot(this.desk.getElementByName(u), null, B, 1, !1), this.robot1.robot.get_transform().set_matrix(function(e) {
                    var t = e.desk.getElementByName("robot1");
                    return e.initRobotsTransfoms.h[t.__id__]
                }(this).clone()), this.robot2.robot.get_transform().set_matrix(function(e) {
                    var t = e.desk.getElementByName("robot2");
                    return e.initRobotsTransfoms.h[t.__id__]
                }(this).clone())
            }
            for (this.robot1.init(this.fightingData.humanData.lifes, null == this.fightingData.humanData.criticalHitProb ? 0 : this.fightingData.humanData.criticalHitProb), Assembler.isTwoPlayersFightMode ? this.robot2.init(this.fightingData.humanData.lifes, null == this.fightingData.humanData.criticalHitProb ? 0 : this.fightingData.humanData.criticalHitProb) : this.robot2.init(this.fightingData.botsData[this.curFight].lifes, null == this.fightingData.botsData[this.curFight].criticalHitProb ? 0 : this.fightingData.botsData[this.curFight].criticalHitProb), this.robot1.enemy = this.robot2, this.robot2.enemy = this.robot1; this.robots.length > 0;) this.robots.pop();
            this.robots.push(this.robot1), this.robots.push(this.robot2), Object.prototype.hasOwnProperty.call(this.fightingData.humanData, "atrIndex") && Reflect.field(this.fightingData.humanData, "atrIndex") >= 0 && this.updateRobotImages(this.robot1.robot, Reflect.field(this.fightingData.humanData, "atrIndex")), Object.prototype.hasOwnProperty.call(this.fightingData.botsData[this.curFight], "atrIndex") && Reflect.field(this.fightingData.botsData[this.curFight], "atrIndex") >= 0 && this.updateRobotImages(this.robot2.robot, Reflect.field(this.fightingData.botsData[this.curFight], "atrIndex"))
        },
        getWeaponDataFromDefault: function(e) {
            for (var t = 0, n = this.fightingData.robots; t < n.length;) {
                var l = n[t];
                if (++t, l.target == e) return l.weaponsData
            }
            return null
        },
        concatWeaponsDatas: function(e, t) {
            for (var n = [], l = 0, i = e.length; l < i;) {
                var s = l++,
                    a = this.concatWeaponsData(e[s], t[s]);
                n.push(a)
            }
            return n
        },
        concatWeaponsData: function(e, t) {
            for (var n = {}, l = Reflect.fields(e), i = 0; i < l.length;) {
                var s = l[i];
                ++i, Reflect.setField(n, s, Reflect.field(e, s))
            }
            if (null == t) return n;
            l = Reflect.fields(t);
            for (var a = 0; a < l.length;) {
                var r = l[a];
                ++a, null != Reflect.field(t, r) && Reflect.setField(n, r, Reflect.field(t, r))
            }
            return n
        },
        updateRobotImages: function(e, t) {
            null == t && (t = -1), -1 != t || this.curFight;
            for (var n = 0, l = e.framesList.length; n < l;)
                for (var i = n++, s = e.framesList[i], a = 0, r = s.get_numChildren(); a < r;) {
                    var o, d, _ = a++;
                    if (null != (o = Std.is(s.getChildAt(_), BitmapBatch) ? s.getChildAt(_) : null))(d = o.imName.split("__")[0] + (t > 0 ? "__" + t : "")) != o.imName && -1 != o.batch.getImgId(d) && o.changeImName(d)
                }
        },
        onKeyboard: function(e) {
            if (null != this.desk)
                for (var t = 0, n = this.robots; t < n.length;) {
                    var l = n[t];
                    ++t, l.onKeyboard(e.keyCode)
                }
        },
        destroy: function() {
            for (this.fightingData = null, this.desk = null, this.initRobotsTransfoms = null, this.main = null, openfl_Lib.current.stage.removeEventListener("keyDown", $bind(this, this.onKeyboard)), this.quake = null, this.nextBtn = null, this.winBtns = null, this.robot1 = null, this.robot2 = null; null != this.robots && this.robots.length > 0;) this.robots.pop().destroy();
            this.robots = null, FightingMode.current = null, this.elementsInitY = null
        },
        onMDown: function() {
            if (null != this.desk) {
                for (var e = 0, t = this.robots; e < t.length;) {
                    var n = t[e];
                    ++e, n.mDown()
                }
                var l = Assembler.isTwoPlayersFightMode;
                null != this.nextBtn && this.nextBtn.get_visible() && this.desk.hitsMouse(this.nextBtn) && (l || this.curFight >= this.fightingData.numBatles || this.onePlayerLose, this.curFight < this.fightingData.numBatles && !l && !this.onePlayerLose ? this.desk.animateBtnClick(this.nextBtn, $bind(this, this.toFS)) : this.desk.animateBtnClick(this.nextBtn, $bind(this, this.toFS1)))
            }
        },
        toFS: function() {
            this.main.stopSpriteSound("RobotDance"), this.desk.init(5)
        },
        toFS1: function() {
            this.main.stopSpriteSound("RobotDance"), this.desk.init(4)
        },
        toNextRound: function() {
            this.main.stopSpriteSound("RobotDance"), this.startRound(), motion_Actuate.timer(.8).onComplete($bind(this, this.returnElementsY))
        },
        returnElementsY: function() {
            for (var e = this.elementsInitY.keys(); e.hasNext();) {
                var t = e.next();
                motion_Actuate.tween(t, .3, {
                    y: this.elementsInitY.h[t.__id__]
                }).ease(motion_easing_Back.get_easeOut())
            }
        },
        onMUp: function() {},
        shakeAnim: function() {
            this.shakeWorld(), this.showQuake()
        },
        shakeWorld: function() {
            null != this.desk && AnimationHelper.shake(this.desk)
        },
        showQuake: function() {
            null != this.quake && (this.quake.set_visible(!0), this.quake.set_alpha(.15), this.quake.set_scaleX(this.quake.set_scaleY(8)), motion_Actuate.tween(this.quake, .2, {
                scaleX: 15,
                scaleY: 15,
                alpha: 1e-4
            }).ease(motion_easing_Linear.get_easeNone()).onComplete($bind(this, this.onQuakeEnd)))
        },
        onQuakeEnd: function() {
            null != this.quake && this.quake.set_visible(!1)
        },
        update: function(e) {
            if (this.started)
                for (var t = 0, n = this.robots; t < n.length;) {
                    var l = n[t];
                    if (++t, l.update(e), l.isDead) {
                        var i;
                        i = l == this.robot1 ? this.robot2 : this.robot1;
                        var s = this.desk.getElementByNameInLayer("BattleInform" + (Assembler.isTwoPlayersFightMode ? "" : this.curFight + 1 + ""), "Informs");
                        null != s && s.hasLabel("hide") && s.playLabel("hide");
                        var a = Assembler.isTwoPlayersFightMode,
                            r = null;
                        if (null != (r = a ? this.robot1.isDead ? this.desk.getElementByNameInLayer("P2WinInform", "Informs") : this.desk.getElementByNameInLayer("P1WinInform", "Informs") : l.isBot ? this.desk.getElementByNameInLayer("WinInform", "Informs") : this.desk.getElementByNameInLayer("LoseInform", "Informs")) && (r.set_visible(!0), r.hasLabel("show") && r.playLabel("show")), this.curRound++, this.robot1 == l && this.robot2.numWins++, this.robot2 == l && this.robot1.numWins++, this.curRound > this.numRounds || this.numRounds / 2 < this.robot1.numWins || this.numRounds / 2 < this.robot2.numWins) {
                            if (a || (this.curFight++, FightTable.curFight++), !a && i.isBot && (this.onePlayerLose = !0), a || this.curFight >= this.fightingData.numBatles && !i.isBot) {
                                if (this.started = !1, !a && !i.isBot) {
                                    var o = FightingMode,
                                        d = o.get_numWins();
                                    o.set_numWins(d + 1), this.updateAchievments()
                                }
                            } else this.started = !1, this.robot1.reset(), this.robot2.reset();
                            this.robot1 != l ? this.robot1.animateWin() : this.robot2.animateWin(), !a && this.curFight < this.fightingData.numBatles && this.nextEnemy()
                        } else this.started = !1, motion_Actuate.timer(3).onComplete($bind(this, this.startRound))
                    }
                }
        },
        nextEnemy: function() {
            this.curRound = 0, this.robot1 = this.robot2 = null
        },
        updateAchievments: function() {},
        __class__: FightingMode
    };
    var Robot = function(e, t, n, l, i) {
        this.criticalHitProb = 0, this.numWins = 0, this.maxToActTime = 2e3, this.minToActTime = 500, this.nextActTime = 100, this.isBot = !1, this.isDead = !1, this.curActIndex = 0, this.lifes = 100, this.initLifes = 100, this.btns = [], this.destroied = !1, this.isShielded = !1, this.isActing = !1, this.curDeffence = 0, this.reloadTime = 0, this.isTwoPlayersMode = Assembler.isTwoPlayersFightMode, this.desk = Desk.current, this.robot = e, this.weaponsData = n, this.isInversedRobots = i, this.robotIndex = l, this.progressLifes = this.desk.getElementByName("progressLifes" + ((i ? 1 - l : l) + 1)), this.progressLifes.set_scaleX(1), null != this.progressLifes && (this.initProgressWidth = this.progressLifes.get_width(), this.progressLifesInitScaleX = this.progressLifes.get_scaleX()), this.isBot = !this.isTwoPlayersMode && 1 == l, i && !this.isTwoPlayersMode && (this.isBot = !this.isBot);
        for (var s, a = 1, r = !0; r && !this.isBot;) r = !1, this.isTwoPlayersMode ? null != (s = this.desk.getElementByNameInFolder("robot" + ((i ? 1 - l : l) + 1) + "_btn" + a, "2PBtns")) && s.set_visible(!0) : null != (s = this.desk.getElementByNameInFolder("robot1_btn" + a, "1PBtns")) && s.set_visible(!0), r = null != s, null != s && this.btns.push(s), a++;
        this.isBot || (this.actProgress = this.desk.getElementByNameInLayer(this.isTwoPlayersMode ? "actProgress" + ((i ? 1 - l : l) + 1) : "actProgress1", this.isTwoPlayersMode ? "Progresses2P" : "Progresses1P"), null != this.actProgress && (this.actProgress.set_visible(!0), this.progressActInitScaleX = this.actProgress.get_scaleX(), this.initActProgressWidth = this.actProgress.get_width()))
    };
    $hxClasses.Robot = Robot, Robot.__name__ = ["Robot"], Robot.prototype = {
        robot: null,
        weaponsData: null,
        reloadTime: null,
        curDeffence: null,
        curWeapon: null,
        enemy: null,
        isActing: null,
        isShielded: null,
        robotIndex: null,
        isInversedRobots: null,
        initReloadTime: null,
        destroied: null,
        get_canAct: function() {
            return this.reloadTime <= 0 && !this.isActing && !this.enemy.isActing && !this.isShielded
        },
        btns: null,
        desk: null,
        initLifes: null,
        lifes: null,
        curActIndex: null,
        progressLifes: null,
        progressLifesInitScaleX: null,
        initProgressWidth: null,
        actProgress: null,
        progressActInitScaleX: null,
        initActProgressWidth: null,
        isTwoPlayersMode: null,
        isDead: null,
        isBot: null,
        nextActTime: null,
        minToActTime: null,
        maxToActTime: null,
        numWins: null,
        criticalHitProb: null,
        hideElements: function(e, t) {
            if (null == t && (t = ""), null == e && (e = ""), "" != e)
                for (var n = this.desk.getElementsByFolderName(e), l = 0; l < n.length;) {
                    var i = n[l];
                    ++l, i.set_visible(!1)
                }
            if ("" != t)
                for (var s = this.desk.getElementsByLayerName(t), a = 0; a < s.length;) {
                    var r = s[a];
                    ++a, r.set_visible(!1)
                }
        },
        reset: function() {
            this.numWins = 0
        },
        init: function(e, t) {
            null == t && (t = 0), null == e && (e = 100), this.criticalHitProb = t;
            var n = this.robot.get_x(),
                l = this.robot;
            l.set_x(l.get_x() + (this.robot.get_x() < Config.baseSWidth / 2 ? -700 : 700)), motion_Actuate.tween(this.robot, .4, {
                x: n
            }).ease(motion_easing_Quad.get_easeOut()), this.reloadTime = 500, this.initReloadTime = this.reloadTime, this.robot.playLabel("idlle1"), this.isTwoPlayersMode && this.hideElements("1PBtns"), this.isTwoPlayersMode || this.hideElements("2PBtns"), this.isTwoPlayersMode && this.hideElements("", "Progresses1P"), this.isTwoPlayersMode || this.hideElements("", "Progresses2P"), this.isBot && (this.nextActTime = this.minToActTime + Math.random() * (this.maxToActTime - this.minToActTime)), this.initLifes = e, this.lifes = e, this.resetActing(), this.updateProgress(), this.updateActProgress(), this.isDead = !1, this.isShielded = !1
        },
        mDown: function() {
            for (var e = 1, t = 0, n = this.btns; t < n.length;) {
                var l = n[t];
                if (++t, this.desk.hitsMouse(l)) return void this.act(e);
                e++
            }
        },
        onKeyboard: function(e) {
            if (this.get_canAct())
                for (var t, n = String.fromCharCode(e), l = 0, i = (t = this.isInversedRobots ? this.enemy.weaponsData : this.weaponsData).length; l < i;) {
                    var s = l++;
                    if (t[s].key.length > 1 && Std.parseInt(t[s].key) == e || 1 == t[s].key.length && t[s].key.toUpperCase() == n.toUpperCase()) return void this.act(s + 1)
                }
        },
        heal: function(e) {
            this.lifes += e, this.lifes > this.initLifes && (this.lifes = this.initLifes), this.updateProgress()
        },
        act: function(e) {
            if (this.get_canAct() && (this.curActIndex = e, this.curWeapon = this.weaponsData[e - 1], this.isActing = this.curWeapon.blockActing, this.robot.playLabel("attack" + this.curActIndex, $bind(this, this.onAct1End)), this.curWeapon.reloadAfterAnim || (this.reloadTime = 1e3 * this.curWeapon.reload, this.initReloadTime = this.reloadTime), this.curWeapon.deffence > 0 ? this.curDeffence = this.curWeapon.deffence : this.curDeffence = 0, 0 != this.curDeffence && (this.isShielded = !0), this.curWeapon.deffence < 0 && this.heal(-this.curWeapon.deffence), this.desk.levels.getChildIndex(this.robot) < this.desk.levels.getChildIndex(this.enemy.robot) && this.desk.levels.swapChildren(this.robot, this.enemy.robot), null != this.curWeapon.sound))
                for (var t = 0, n = this.curWeapon.sound; t < n.length;) {
                    var l = n[t];
                    ++t, this.desk.playSoundData(l)
                }
        },
        onAct1End: function(e) {
            if (!this.destroied) {
                var t, n = this.curWeapon.attack > 0 && Math.random() < this.criticalHitProb;
                if (t = n ? 2 : 1, this.enemy.recieveDammage(this.curWeapon.attack * t, this.curActIndex), this.robot.hasLabel("attack" + this.curActIndex + "revers") ? this.robot.playLabel("attack" + this.curActIndex + "revers", $bind(this, this.onAttackAnimEnd)) : this.resetActing(), n) {
                    var l = this.desk.getElementByNameInLayer("criticalHitInform", "Informs");
                    null != l && (l.set_visible(!0), l.gotoAndPlay(0, function(e) {
                        e.set_visible(!1)
                    }), l.set_x(this.enemy.robot.get_x()))
                }
            }
        },
        onAttackAnimEnd: function(e) {
            this.destroied || (this.isActing = !1, this.resetActing())
        },
        resetActing: function() {
            this.destroied || (null != this.curWeapon && this.curWeapon.reloadAfterAnim && (this.reloadTime = 1e3 * this.curWeapon.reload, this.initReloadTime = this.reloadTime), this.isShielded = !1, this.curActIndex = -1, this.curWeapon = null, this.curDeffence = 0, this.robot.playLabel("idlle1"), this.isActing = !1)
        },
        recieveDammage: function(e, t) {
            null == t && (t = -1), this.destroied || (this.lifes -= e - this.curDeffence, this.lifes < 0 && (this.lifes = 0), -1 == t || this.isShielded || this.robot.hasLabel("dammage" + t) && this.robot.playLabel("dammage" + t, $bind(this, this.onDamageAnimEnd)), null != FightingMode.current && FightingMode.current.shakeAnim(), this.updateProgress())
        },
        onDamageAnimEnd: function(e) {
            this.destroied || (this.lifes > 0 ? this.robot.playLabel("idlle1") : (this.isDead = !0, this.isActing = !0, Main.current.playSpriteSound("BreakRobot"), this.robot.playLabel("dead")))
        },
        animateWin: function() {
            var e = this;
            this.robot.playLabel("idlle1");
            motion_Actuate.timer(3).onComplete(function(t) {
                t.playLabel("winner1", $bind(e, e.startWinner2))
            }, [this.robot]), this.isBot && !this.isTwoPlayersMode || motion_Actuate.timer(1).onComplete(function() {
                Main.current.playSpriteSound("RobotOhYeah")
            })
        },
        startWinner2: function(e) {
            Main.current.playSpriteSound("RobotDance", !0), e.playLabel("winner2");
            for (var t = Desk.current.getElementByName("action0"), n = Desk.current.getElementsByFolderName("1PBtns"), l = 0; l < n.length;) {
                var i = n[l];
                ++l, motion_Actuate.tween(i, .3, {
                    y: i.get_y() + 500
                })
            }
            n = Desk.current.getElementsByFolderName("2PBtns");
            for (var s = 0; s < n.length;) {
                var a = n[s];
                ++s, motion_Actuate.tween(a, .3, {
                    y: a.get_y() + 500
                })
            }
            n = Desk.current.getElementsByLayerName("Progresses2P");
            for (var r = 0; r < n.length;) {
                var o = n[r];
                ++r, motion_Actuate.tween(o, .3, {
                    y: o.get_y() + 500
                })
            }
            n = Desk.current.getElementsByLayerName("Progresses1P");
            for (var d = 0; d < n.length;) {
                var _ = n[d];
                ++d, motion_Actuate.tween(_, .3, {
                    y: _.get_y() + 500
                })
            }
            if (null != t) {
                t.set_visible(!0);
                var h = t.get_y(),
                    p = t;
                p.set_y(p.get_y() + 700), motion_Actuate.tween(t, .4, {
                    y: h
                }).ease(motion_easing_Back.get_easeOut())
            }
            for (var c = this.desk.getElementsByLayerName("WinBtns"), Q = 0; Q < c.length;) {
                var U = c[Q];
                ++Q, U.set_visible(!0), this.desk.animateBtnApear(U)
            }
        },
        updateProgress: function() {
            var e;
            e = 0 == this.lifes ? 1e-4 : this.lifes / this.initLifes * this.progressLifesInitScaleX, motion_Actuate.tween(this.progressLifes, .2, {
                scaleX: e
            }, !0).ease(motion_easing_Quad.get_easeOut())
        },
        updateActProgress: function() {
            var e;
            null != this.actProgress && (e = 0 == this.reloadTime ? this.progressActInitScaleX : (1 - this.reloadTime / this.initReloadTime) * this.progressActInitScaleX, this.actProgress.set_scaleX(e))
        },
        destroy: function() {
            this.destroied = !0, this.robot = null, this.weaponsData = null, this.curWeapon = null, this.enemy = null, this.btns = null, this.desk = null, this.progressLifes = null, this.actProgress = null
        },
        update: function(e) {
            this.reloadTime > 0 && (this.reloadTime -= e), this.reloadTime < 0 && (this.reloadTime = 0), this.updateActProgress(), this.isBot && this.get_canAct() && (this.nextActTime -= e, this.nextActTime <= 0 && (this.nextActTime = this.minToActTime + Math.random() * (this.maxToActTime - this.minToActTime), this.act(Std.random(4) + 1)))
        },
        __class__: Robot,
        __properties__: {
            get_canAct: "get_canAct"
        }
    };
    var FinalProgressBar = function(e) {
        if (this.isActivated = !1, this.interactivePerc = 1e-5, this.initBarHeight = 0, this.initBarMY = 0, this.barBM = null, this.perc = 0, BaseGameMode.call(this), Desk.current.curLevel != FinalProgressBar.curLevel) {
            for (; FinalProgressBar.curLevelProgresses.length > 0;) FinalProgressBar.curLevelProgresses.pop();
            FinalProgressBar.curLevel = Desk.current.curLevel
        }
        FinalProgressBar.curLevelProgresses.push(this), this.data = e;
        for (var t = this.getTargets(e.target), n = 0; n < t.length;) {
            var l = t[n];
            ++n, l.set_visible(!1), l.get_name() == e.barName && (this.bar = l)
        }
        if (1 == e.type) {
            e.values;
            for (var i = e.values.split(","), s = [], a = 0, r = i.length; a < r;) {
                var o = i[a++].split("-");
                s.push([Std.parseInt(StringTools.trim(o[0])), Std.parseInt(StringTools.trim(o[1]))])
            }
            var d, _, h = e.target + "_" + Desk.current.curLevel;
            _ = (d = FinalProgressBar.progressesResults.exists(h) ? FinalProgressBar.progressesResults.get(h).val.length : 0) >= s.length ? s[s.length - 1] : s[d];
            var p = Math.min(100, _[0] + Math.random() * (_[1] - _[0]));
            FinalProgressBar.progressesResults.exists(h) ? FinalProgressBar.progressesResults.get(h).val.push(p) : FinalProgressBar.progressesResults.set(h, {
                val: [p],
                type: e.type
            }), this.perc = p, this.bar.set_scaleX(1e-5)
        } else {
            for (var c = FinalProgressBar.progressesResults.keys(), Q = 0, U = 0; c.hasNext();) {
                var m = c.next();
                StringTools.endsWith(m, "_" + Desk.current.curLevel) && (U++, Q += FinalProgressBar.progressesResults.get(m).val[FinalProgressBar.progressesResults.get(m).val.length - 1])
            }
            this.perc = Q / U, this.initBarHeight = this.bar.get_height();
            var u = this.main.batch.getBitmapData(js_Boot.__cast(this.bar.framesList[0].getChildAt(0), BitmapBatch).imName);
            this.barBM = new openfl_display_Bitmap(u.clone(), 2, !0), this.barBM.set_x(this.bar.framesList[0].getChildAt(0).get_x()), this.barBM.set_y(this.bar.framesList[0].getChildAt(0).get_y()), this.initBarMY = this.barBM.get_y();
            for (var F = 0, N = this.bar.framesList[0].get_numChildren(); F < N;) {
                F++;
                this.bar.framesList[0].removeChildAt(0)
            }
            this.bar.framesList[0].addChild(this.barBM)
        }
        e.isInitActive && e.isInitActive && this.activate()
    };
    $hxClasses.FinalProgressBar = FinalProgressBar, FinalProgressBar.__name__ = ["FinalProgressBar"], FinalProgressBar.activateAllProgresses = function() {
        for (var e = 0, t = FinalProgressBar.curLevelProgresses; e < t.length;) {
            var n = t[e];
            ++e, n.activate()
        }
    }, FinalProgressBar.__super__ = BaseGameMode, FinalProgressBar.prototype = $extend(BaseGameMode.prototype, {
        data: null,
        perc: null,
        bar: null,
        barBM: null,
        initBarMY: null,
        initBarHeight: null,
        interactivePerc: null,
        isActivated: null,
        activate: function() {
            if (!this.isActivated) {
                this.isActivated = !0;
                for (var e = this.getTargets(this.data.target), t = null, n = 0; n < e.length;) {
                    var l = e[n];
                    ++n, l.set_visible(!0);
                    var i = l.get_alpha();
                    l.set_alpha(0), t = motion_Actuate.tween(l, .4, {
                        alpha: i
                    }).ease(motion_easing_Linear.get_easeNone())
                }
                2 == this.data.type && this.bar.set_visible(!1), t.onComplete($bind(this, this.continueActivating))
            }
        },
        continueActivating: function() {
            null != this.desk && (this.set_interactivePerc(1e-6), this.bar.set_visible(!0), motion_Actuate.tween(this, .7, {
                interactivePerc: this.perc
            }).ease(motion_easing_Quad.get_easeInOut()))
        },
        set_interactivePerc: function(e) {
            if (null == this.desk) return e;
            if (this.interactivePerc = e, 1 == this.data.type) this.bar.set_scaleX(e / 100);
            else {
                var t = e / 100 * this.barBM.bitmapData.height;
                this.barBM.set_scrollRect(new openfl_geom_Rectangle(0, this.barBM.bitmapData.height - t, this.barBM.bitmapData.width, t)), this.barBM.set_y(this.initBarMY + (this.barBM.bitmapData.height - t))
            }
            return e
        },
        getTargets: function(e) {
            if (null == this.desk) return [];
            var t = e.split(":");
            return t.length > 1 && ("folder" == t[0] || "layer" == t[0]) ? "layer" == t[0] ? this.desk.getElementsByLayerName(t[1]) : "folder" == t[0] ? this.desk.getElementsByFolderName(t[1]) : null : [this.desk.getElementByName(e)]
        },
        __class__: FinalProgressBar,
        __properties__: {
            set_interactivePerc: "set_interactivePerc"
        }
    });
    var FunctionsForLevels = function() {};
    $hxClasses.FunctionsForLevels = FunctionsForLevels, FunctionsForLevels.__name__ = ["FunctionsForLevels"], FunctionsForLevels.initMainMenu = function() {
        Desk.current.getElementByName("difficultyBtn").gotoAndStop(DominoModeBase.get_aiLevel());
        var e = Desk.current.getElementByName("startGameBtn"),
            t = Desk.current.getElementByName("continueGameBtn");
        FunctionsForLevels.btnsSprite = new openfl_display_Sprite, Desk.current.levels.addChildAt(FunctionsForLevels.btnsSprite, e.parent.getChildIndex(e));
        var n = e.getBounds(e.parent).union(t.getBounds(t.parent));
        FunctionsForLevels.btnsSprite.set_x(n.x + n.width / 2), FunctionsForLevels.btnsSprite.set_y(n.y + n.height / 2), FunctionsForLevels.btnsSprite.addChild(e), FunctionsForLevels.btnsSprite.addChild(t);
        var l = e;
        l.set_x(l.get_x() - FunctionsForLevels.btnsSprite.get_x());
        var i = e;
        i.set_y(i.get_y() - FunctionsForLevels.btnsSprite.get_y());
        var s = t;
        s.set_x(s.get_x() - FunctionsForLevels.btnsSprite.get_x());
        var a = t;
        a.set_y(a.get_y() - FunctionsForLevels.btnsSprite.get_y()), FunctionsForLevels.btnsSprite.set_visible(!1);
        for (var r = 0, o = FunctionsForLevels.btnsSprite.get_numChildren(); r < o;) {
            var d = r++;
            FunctionsForLevels.btnsSprite.getChildAt(d).set_visible(FunctionsForLevels.btnsSprite.get_visible())
        }
    }, FunctionsForLevels.gameModeBtnClick = function(e) {
        FunctionsForLevels.resetModesBtns(), FunctionsForLevels.curMode = e;
        var t = Desk.current.getElementByName("startGameBtn" + (e + 1));
        if (DominoModeBase.hasSaveForMode(e)) {
            FunctionsForLevels.btnsSprite.set_visible(!0), FunctionsForLevels.btnsSprite.set_x(t.get_x()), FunctionsForLevels.btnsSprite.set_y(t.get_y());
            for (var n = 0, l = FunctionsForLevels.btnsSprite.get_numChildren(); n < l;) {
                var i = n++;
                FunctionsForLevels.btnsSprite.getChildAt(i).set_visible(FunctionsForLevels.btnsSprite.get_visible())
            }
            t.set_visible(!1)
        } else DominoModeBase.curRound = 0, DominoModeBase.lastWinner = -1, DominoModeBase.playersScores = null, DominoModeBase.roundScores = null, Game.gameMode = e, Game.fromSave = !1, Desk.current.startNewGame(1)
    }, FunctionsForLevels.resetModesBtns = function() {
        for (var e = 1; e < 4;) {
            var t = e++,
                n = Desk.current.getElementByName("startGameBtn" + t);
            n.set_visible(!0), n.set_alpha(1)
        }
        FunctionsForLevels.btnsSprite.set_visible(!1);
        for (var l = 0, i = FunctionsForLevels.btnsSprite.get_numChildren(); l < i;) {
            var s = l++;
            FunctionsForLevels.btnsSprite.getChildAt(s).set_visible(FunctionsForLevels.btnsSprite.get_visible())
        }
    }, FunctionsForLevels.startGameBtn1Click = function() {
        FunctionsForLevels.gameModeBtnClick(0)
    }, FunctionsForLevels.startGameBtn2Click = function() {
        FunctionsForLevels.gameModeBtnClick(1)
    }, FunctionsForLevels.startGameBtn3Click = function() {
        FunctionsForLevels.gameModeBtnClick(2)
    }, FunctionsForLevels.difficultyClick = function() {
        var e = Desk.current.getElementByName("difficultyBtn"),
            t = DominoModeBase,
            n = t.get_aiLevel();
        t.set_aiLevel(n + 1), DominoModeBase.get_aiLevel() > 2 && DominoModeBase.set_aiLevel(0), e.gotoAndStop(DominoModeBase.get_aiLevel())
    }, FunctionsForLevels.newGameClick = function() {
        DominoModeBase.curRound = 0, DominoModeBase.lastWinner = -1, DominoModeBase.playersScores = null, DominoModeBase.roundScores = null, Game.gameMode = FunctionsForLevels.curMode, Game.fromSave = !1, Desk.current.startNewGame(1)
    }, FunctionsForLevels.loadGameClick = function() {
        Game.gameMode = FunctionsForLevels.curMode, Game.fromSave = !0, Desk.current.startNewGame(1)
    };
    var Game = function(e) {
        this.dominoStockData = [
            [-1, -1],
            [0, 0],
            [0, 1],
            [0, 2],
            [0, 3],
            [0, 4],
            [0, 5],
            [0, 6],
            [1, 1],
            [1, 2],
            [1, 3],
            [1, 4],
            [1, 5],
            [1, 6],
            [2, 2],
            [2, 3],
            [2, 4],
            [2, 5],
            [2, 6],
            [3, 3],
            [3, 4],
            [3, 5],
            [3, 6],
            [4, 4],
            [4, 5],
            [4, 6],
            [5, 5],
            [5, 6],
            [6, 6]
        ], this.deck = [], this.pileDominoesCont = new openfl_display_Sprite, this.dominoCont = new openfl_display_Sprite, this.gameFinished = !1, this.showHideAnimators = [], BaseGameMode.call(this), Game.current = this, this.data = e, this.main = Main.current, this.desk = Desk.current, this.fsEls = this.desk.getElementsByFolderName("FinishScreen");
        for (var t = 0, n = this.fsEls; t < n.length;) {
            var l = n[t];
            ++t, l.set_visible(!1), "fsMainMC" == l.get_name() ? this.fsMC = l : "nextBtnFs" == l.get_name() ? this.fsNextBtn = l : "fill" == l.get_name() && (this.fsFill = l)
        }
        for (var i = 2;;) {
            var s = this.desk.getElementByNameInFolder("DominoSet" + i, "DominoSets");
            if (null == s) break;
            s.set_visible(!1), i++
        }
        this.dominoBase = this.desk.getElementByNameInFolder("DominoSet1", "DominoSets"), this.dominoHighlighter1Base = this.desk.getElementByNameInFolder("dominoHighlighter1", "DominoHighlighters"), this.dominoHighlighter2Base = this.desk.getElementByNameInFolder("dominoHighlighter2", "DominoHighlighters"), this.dominoHighlighter3Base = this.desk.getElementByNameInFolder("dominoHighlighter3", "DominoHighlighters"), this.desk.levels.addChildAt(this.dominoCont, this.desk.levels.getChildIndex(this.dominoBase)), this.dominoCont.addChild(this.pileDominoesCont), this.clearElement(this.dominoBase), this.clearElement(this.dominoHighlighter1Base), this.clearElement(this.dominoHighlighter2Base), this.clearElement(this.dominoHighlighter3Base), this.createStock(), 0 == Game.gameMode ? this.dominoMode = new DrawDomino(Game.fromSave) : 1 == Game.gameMode ? this.dominoMode = new AllFivesDomino(Game.fromSave) : 2 == Game.gameMode && (this.dominoMode = new BlockDomino(Game.fromSave)), gradle.event('EVENT_LEVELSTART', {
            levelName: Game.getLevelName() + (Game.fromSave ? "_fromSave" : "")
        }), gradle.event('SCREEN_LEVEL'), Game.fromSave = !1 , this.onResize()
    };
    $hxClasses.Game = Game, Game.__name__ = ["Game"], Game.getLevelName = function(e) {
        return Game.current.dominoMode.getModeName(e)
    }, Game.__super__ = BaseGameMode, Game.prototype = $extend(BaseGameMode.prototype, {
        data: null,
        showHideAnimators: null,
        fsEls: null,
        fsMC: null,
        fsNextBtn: null,
        fsFill: null,
        gameFinished: null,
        dominoCont: null,
        pileDominoesCont: null,
        deck: null,
        dominoStockData: null,
        dominoBase: null,
        dominoHighlighter1Base: null,
        dominoHighlighter2Base: null,
        dominoHighlighter3Base: null,
        dominoMode: null,
        createStock: function() {
            for (var e = 0, t = this.dominoStockData.length - 1; e < t;) {
                var n = e++,
                    l = new Domino(this.dominoStockData[n + 1]);
                this.dominoCont.addChild(l), this.deck.push(l)
            }
            Domino.dominoSizeX = this.deck[0].get_width(), Domino.dominoSizeY = this.deck[0].get_height()
        },
        clearElement: function(e) {
            HxOverrides.remove(this.desk.levels.physicElements, e), null != e.parent && e.parent.removeChild(e)
        },
        onResize: function() {
            if (null != Game.current) {
                for (var e = 0, t = this.showHideAnimators; e < t.length;) {
                    var n = t[e];
                    ++e, n.onResize()
                }
                Actuate.stopByID(GameConfig.actuateNoCompID, null, !1, !1), Actuate.stopByID(GameConfig.actuateWithCompID, null, !0, !0);
                this.main.sWidth, this.main.sHeight;
                null != this.dominoMode && this.dominoMode.onResize()
            }
        },
        onMDown: function() {
            BaseGameMode.prototype.onMDown.call(this), this.dominoMode.onMDown()
        },
        onMUp: function() {
            BaseGameMode.prototype.onMUp.call(this), this.dominoMode.onMUp()
        },
        update: function(e) {
            BaseGameMode.prototype.update.call(this, e), this.gameFinished || this.dominoMode.update(e)
        },
        destroy: function() {
            this.dominoMode.destroy(), Game.current = null, this.main = null, this.desk = null
        },
        __class__: Game
    });
    var motion_easing_Sine = function() {};
    $hxClasses["motion.easing.Sine"] = motion_easing_Sine, motion_easing_Sine.__name__ = ["motion", "easing", "Sine"], motion_easing_Sine.__properties__ = {
        get_easeOut: "get_easeOut",
        get_easeInOut: "get_easeInOut",
        get_easeIn: "get_easeIn"
    }, motion_easing_Sine.get_easeIn = function() {
        return new motion_easing_SineEaseIn
    }, motion_easing_Sine.get_easeInOut = function() {
        return new motion_easing_SineEaseInOut
    }, motion_easing_Sine.get_easeOut = function() {
        return new motion_easing_SineEaseOut
    };
    var motion_easing_SineEaseOut = function() {};
    $hxClasses["motion.easing.SineEaseOut"] = motion_easing_SineEaseOut, motion_easing_SineEaseOut.__name__ = ["motion", "easing", "SineEaseOut"], motion_easing_SineEaseOut.__interfaces__ = [motion_easing_IEasing], motion_easing_SineEaseOut.prototype = {
        calculate: function(e) {
            return Math.sin(e * (Math.PI / 2))
        },
        __class__: motion_easing_SineEaseOut
    };
    var GameConfig = function() {};
    $hxClasses.GameConfig = GameConfig, GameConfig.__name__ = ["GameConfig"], GameConfig.timer = function(e, t, n) {
        return Actuate.timer(e, "TIMER").onComplete(t, n)
    }, GameConfig.timerWithComp = function(e, t, n, l) {
        return null == l && (l = !0), Actuate.timer(e, l ? GameConfig.actuateWithCompID : GameConfig.actuateNoCompID).onComplete(t, n)
    };
    var HartAnim = function(e) {
        this.animTime = .5, this.mc = e, this.initSx = e.get_scaleX(), this.initSy = e.get_scaleY(), e.set_visible(!1)
    };
    $hxClasses.HartAnim = HartAnim, HartAnim.__name__ = ["HartAnim"], HartAnim.prototype = {
        initSx: null,
        initSy: null,
        mc: null,
        animTime: null,
        start: function() {
            this.mc.set_visible(!0), this.mc.set_scaleX(this.initSx), this.mc.set_scaleY(this.initSy);
            for (var e = 0; e < 4;) {
                var t = e++,
                    n = 1.1 * (t + 1);
                motion_Actuate.tween(this.mc, this.animTime, {
                    scaleX: this.initSx * n,
                    scaleY: this.initSx * n
                }, !1).ease(motion_easing_Back.get_easeOut()).delay(this.animTime * t).onComplete(3 == t ? $bind(this, this.loopAnimStart) : null)
            }
        },
        loopAnimStart: function() {
            motion_Actuate.tween(this.mc, this.animTime, {
                scaleX: 1.1 * this.mc.get_scaleX(),
                scaleY: 1.1 * this.mc.get_scaleY()
            }).ease(motion_easing_Back.get_easeOut()).reflect().repeat(-1).reverse(!1)
        },
        stop: function() {
            this.mc.set_visible(!1), motion_Actuate.stop(this.mc, null, !1, !1)
        },
        destroy: function() {
            motion_Actuate.stop(this.mc, null, !1, !1), this.mc = null
        },
        __class__: HartAnim
    };
    var HartsAnim = function(e, t) {
        this.genDifY = 30, this.genDifX = 30, this.randGenTime = .4, this.generationTime = .4, this.isActive = !1, this.hartsPool = [], openfl_display_Sprite.call(this), this.batch = e, this.hartImName = t, this.sourceBmd = e.getBitmapData(t)
    };
    $hxClasses.HartsAnim = HartsAnim, HartsAnim.__name__ = ["HartsAnim"], HartsAnim.__super__ = openfl_display_Sprite, HartsAnim.prototype = $extend(openfl_display_Sprite.prototype, {
        batch: null,
        hartImName: null,
        sourceBmd: null,
        hartsPool: null,
        getHart: function() {
            if (this.hartsPool.length > 0) return this.hartsPool.pop();
            var e = new openfl_display_Sprite,
                t = new openfl_display_Bitmap(this.sourceBmd, 2, !0);
            return t.set_x(-t.get_width() / 2), t.set_y(-t.get_height() / 2), e.addChild(t), e
        },
        sendToPool: function(e) {
            null != e.parent && e.parent.removeChild(e), e.set_alpha(1), e.set_scaleX(e.set_scaleY(1)), e.set_visible(!0), e.set_x(e.set_y(0)), this.hartsPool.push(e)
        },
        isActive: null,
        generationTime: null,
        randGenTime: null,
        genDifX: null,
        genDifY: null,
        startAt: function(e, t) {
            null == t && (t = 0), null == e && (e = 0), this.isActive = !0, this.set_x(e), this.set_y(t), this.genHart()
        },
        start: function() {
            this.startAt(this.get_x(), this.get_y())
        },
        genHart: function() {
            if (this.isActive) {
                var e = this.getHart();
                this.addChild(e), e.set_x(this.genDifX * Math.random() * (Math.random() > .5 ? 1 : -1)), e.set_y(this.genDifY * Math.random() * (Math.random() > .5 ? 1 : -1));
                var t, n = new motion_MotionPath,
                    l = e.get_x(),
                    i = e.get_y();
                t = Math.random() > .5 ? 1 : -1;
                for (var s = 0; s < 5;) {
                    s++;
                    var a = e.get_x() + 22 * t,
                        r = i - 38;
                    n.bezier(l, r, a, r + 19), i -= 38, t *= -1
                }
                e.set_alpha(.05);
                motion_Actuate.tween(e, .2 * 2.3, {
                    alpha: 1e-5
                }).delay(2.3 - .2 * 2.3).ease(motion_easing_Quad.get_easeIn()), motion_Actuate.tween(e, .2 * 2.3, {
                    alpha: 1
                }, !1).ease(motion_easing_Quad.get_easeOut()), motion_Actuate.motionPath(e, 2.3, {
                    x: n.get_x(),
                    y: n.get_y()
                }).ease(motion_easing_Sine.get_easeIn()).onComplete($bind(this, this.onHartAnimEnd), [e]), motion_Actuate.timer(this.generationTime + Math.random() * this.randGenTime).onComplete($bind(this, this.genHart))
            }
        },
        onHartAnimEnd: function(e) {
            this.sendToPool(e)
        },
        stop: function() {
            this.isActive = !1;
            for (var e = 0, t = this.get_numChildren(); e < t;) {
                var n = e++;
                this.getChildAt(n).set_visible(!1)
            }
        },
        destroy: function() {
            for (this.isActive = !1; this.get_numChildren() > 0;) motion_Actuate.stop(this.removeChildAt(0), null, !0, !0);
            for (this.batch = null, this.sourceBmd = null; this.hartsPool.length > 0;) this.hartsPool.pop()
        },
        __class__: HartsAnim
    });
    var HiddenObjectSimpleMode = function(e) {
        this.finished = !1, this.btnsPosesInit = [], this.allEls = [], this.curIconsValsArr = [], this.cont = new openfl_display_Sprite, this.initNumIcons = 0, BaseGameMode.call(this), this.config = e, this.icons = this.desk.getElementsByName(e.iconName), this.icons.sort($bind(this, this.sortByX)), this.initIcons = this.icons.slice(), this.initNumIcons = this.icons.length, this.baseElForNewIconData = this.initIcons[this.initIcons.length - 1].mainData, this.targets = this.getTargets(e.hiddenObjectsTargets), null != e.generateIcons && e.generateIcons ? (ArrayTools.randomSort(this.targets), this.prepareIconGenerator()) : this.targets.sort($bind(this, this.sortByIdx));
        for (var t = this.icons[0].totalFrames, n = []; n.length < e.numToFind;)
            for (var l = 0; l < t;) {
                var i = l++;
                n.push(i + 1)
            }
        ArrayTools.randomSort(n), null != e.folder && (this.allEls = this.desk.getElementsByFolderName(e.folder));
        for (var s = 0, a = this.icons.length; s < a;) {
            var r = s++; - 1 == HxOverrides.indexOf(this.allEls, this.icons[r], 0) && this.allEls.push(this.icons[r])
        }
        this.desk.levels.addChild(this.cont), this.allEls.sort($bind(this, this.sortByChildIndex));
        for (var o = 0, d = this.allEls.length; o < d;) {
            var _ = o++;
            this.cont.addChild(this.allEls[_])
        }
        for (var h = 0, p = this.initIcons.length; h < p;) {
            var c = h++;
            null == this.btnsPosesInit[c] ? this.btnsPosesInit.push({
                x: this.initIcons[c].get_x(),
                y: this.initIcons[c].get_y()
            }) : this.btnsPosesInit[c].y = this.initIcons[c].get_y()
        }
        this.onResize();
        for (var Q = 0, U = e.numToFind; Q < U;) {
            var m = Q++;
            this.curIconsValsArr.push(n[m])
        }
        null != this.desk.nextBtn && this.desk.nextBtn.set_visible(!1), this.updateIcons()
    };
    $hxClasses.HiddenObjectSimpleMode = HiddenObjectSimpleMode, HiddenObjectSimpleMode.__name__ = ["HiddenObjectSimpleMode"], HiddenObjectSimpleMode.__super__ = BaseGameMode, HiddenObjectSimpleMode.prototype = $extend(BaseGameMode.prototype, {
        icons: null,
        initNumIcons: null,
        config: null,
        cont: null,
        curIconsValsArr: null,
        allEls: null,
        btnsPosesInit: null,
        initIcons: null,
        baseElForNewIconData: null,
        finished: null,
        targets: null,
        prepareIconGenerator: function() {},
        sortByIdx: function(e, t) {
            if ("" == e.get_name() && "" == t.get_name()) return Math.random() > .5 ? 1 : -1;
            for (var n = new EReg("[0-9]+", "i"), l = "", i = "", s = 0, a = e.get_name().length; s < a;) {
                var r = s++;
                n.match(e.get_name().charAt(r)) && (l += e.get_name().charAt(r))
            }
            for (var o = 0, d = t.get_name().length; o < d;) {
                var _ = o++;
                n.match(t.get_name().charAt(_)) && (i += t.get_name().charAt(_))
            }
            return "" == l ? 1 : "" == i ? -1 : Std.parseInt(l) - Std.parseInt(i) < 0 ? -1 : 1
        },
        getTargets: function(e) {
            var t = e.split(":");
            return t.length > 1 && ("folder" == t[0] || "layer" == t[0]) ? "layer" == t[0] ? this.desk.getElementsByLayerName(t[1]) : "folder" == t[0] ? this.desk.getElementsByFolderName(t[1]) : null : t.length > 1 && "prefix" == t[0] ? this.desk.getElementsByNamePrefix(t[1]) : [this.desk.getElementByName(e)]
        },
        updateIcons: function(e) {
            if (null == e && (e = -1), !this.finished) {
                var t = null; - 1 != e && (t = this.icons[e], HxOverrides.remove(this.icons, t), HxOverrides.remove(this.curIconsValsArr, this.curIconsValsArr[e]));
                for (var n = 0, l = this.icons.length; n < l;) {
                    var i = n++;
                    this.icons[i].gotoAndStop(this.curIconsValsArr[i] - 1)
                }
                if (-1 != e) {
                    for (var s = 0, a = this.icons.length; s < a;) {
                        var r = s++;
                        motion_Actuate.tween(this.icons[r], .3, {
                            x: this.btnsPosesInit[r].x,
                            y: this.btnsPosesInit[r].y
                        }).ease(motion_easing_Quad.get_easeInOut())
                    }
                    if (this.curIconsValsArr.length >= this.initNumIcons) {
                        var o = this.getNewIcon(this.curIconsValsArr[this.initNumIcons - 1] - 1);
                        o.set_alpha(.001);
                        var d = o.get_x(),
                            _ = o;
                        _.set_x(_.get_x() + 110), motion_Actuate.tween(o, .3, {
                            x: d,
                            alpha: 1
                        }).ease(motion_easing_Quad.get_easeInOut()), this.icons.push(o)
                    }
                    null != t && motion_Actuate.tween(t, .2, {
                        y: t.get_y() - 100,
                        alpha: 0
                    }).ease(motion_easing_Quad.get_easeIn())
                }
                0 == this.curIconsValsArr.length && (this.finished = !0, motion_Actuate.timer(.2).onComplete($bind(this, this.onFinish)))
            }
        },
        getNewIcon: function(e) {
            var t = Desk.current.levels.initElementsFromData([this.baseElForNewIconData])[0];
            return this.cont.addChild(t), t.gotoAndStop(e), t
        },
        onFinish: function() {
            for (var e = 0, t = this.allEls; e < t.length;) {
                var n = t[e];
                ++e, motion_Actuate.tween(n, .3, {
                    y: n.get_y() - 100,
                    alpha: 0
                }).ease(motion_easing_Linear.get_easeNone())
            }
            null != this.desk.nextBtn && (this.desk.nextBtn.set_visible(!0), this.desk.animateBtnApear(this.desk.nextBtn)), null != this.config.completeAction && new ToolActions(this.config.completeAction).start()
        },
        sortByX: function(e, t) {
            return e.get_x() - t.get_x() < 0 ? -1 : 1
        },
        sortByChildIndex: function(e, t) {
            return e.parent.getChildIndex(e) - e.parent.getChildIndex(t) < 0 ? -1 : 1
        },
        onResize: function() {
            if (BaseGameMode.prototype.onResize.call(this), null != this.config.keepOffset && this.config.keepOffset.length > 0)
                for (var e = 0, t = this.config.keepOffset; e < t.length;) {
                    var n = t[e];
                    ++e, this.setOffset(n)
                }
        },
        setOffset: function(e) {
            "top" == e.toLowerCase() && this.cont.set_y(-Desk.get_topLevels())
        },
        onMDown: function() {
            if (!this.finished) {
                BaseGameMode.prototype.onMDown.call(this);
                for (var e = [], t = 0, n = this.icons.length; t < n;) {
                    var l = t++;
                    e.push(this.targets[this.curIconsValsArr[l] - 1])
                }
                for (var i = 0, s = e.length; i < s;) {
                    var a = [i++];
                    if (e[a[0]].get_visible() && this.desk.hitsMouse(e[a[0]])) {
                        motion_Actuate.tween(e[a[0]], .3, {
                            alpha: 0
                        }, !1).ease(motion_easing_Linear.get_easeNone()).onComplete(function(t) {
                            return function() {
                                e[t[0]].set_visible(!1)
                            }
                        }(a)), this.updateIcons(a[0]);
                        break
                    }
                }
            }
        },
        __class__: HiddenObjectSimpleMode
    });
    var openfl_geom_Point = function(e, t) {
        null == t && (t = 0), null == e && (e = 0), this.x = e, this.y = t
    };
    $hxClasses["openfl.geom.Point"] = openfl_geom_Point, openfl_geom_Point.__name__ = ["openfl", "geom", "Point"], openfl_geom_Point.prototype = {
        x: null,
        y: null,
        clone: function() {
            return new openfl_geom_Point(this.x, this.y)
        },
        setTo: function(e, t) {
            this.x = e, this.y = t
        },
        __toLimeVector2: function() {
            return null == openfl_geom_Point.__limeVector2 && (openfl_geom_Point.__limeVector2 = new lime_math_Vector2), openfl_geom_Point.__limeVector2.setTo(this.x, this.y), openfl_geom_Point.__limeVector2
        },
        __class__: openfl_geom_Point
    };
    var HumanPlayer = function(e) {
        this.curPlays = [], this.stockHighlers = [], this.handHighlers = [], this.handShaders = [], this.selectedDominoInitPos = {
            x: 0,
            y: 0
        }, this.mdPoint = {
            x: 0,
            y: 0
        }, this.canDrag = !1, this.selectedDomino = null, Player.call(this, e);
        for (var t = 0; t < 28;) {
            t++;
            this.handShaders.push(Game.current.dominoHighlighter3Base.clone(!1))
        }
        this.handHighlers.push(Game.current.dominoHighlighter1Base.clone(!1));
        for (var n = 0; n < 4;) {
            n++;
            this.stockHighlers.push(Game.current.dominoHighlighter2Base.clone(!1))
        }
    };
    $hxClasses.HumanPlayer = HumanPlayer, HumanPlayer.__name__ = ["HumanPlayer"], HumanPlayer.__super__ = Player, HumanPlayer.prototype = $extend(Player.prototype, {
        selectedDomino: null,
        canDrag: null,
        mdPoint: null,
        selectedDominoInitPos: null,
        set_selectedDomino: function(e) {
            if (e == this.selectedDomino) return e;
            if (null != this.selectedDomino && this.selectedDomino.set_highlighted(!1), this.selectedDomino = e, null != this.selectedDomino && this.selectedDomino.set_highlighted(!0), this.dominoMode.isAllFivesMode)
                if (null == this.selectedDomino) this.dominoMode.setScoresAllfivesInform(null);
                else {
                    this.curPlays = this.dominoMode.getAllPlays(this.hand);
                    for (var t = [], n = 0, l = this.curPlays; n < l.length;) {
                        var i = l[n];
                        ++n, i.domino == this.selectedDomino && t.push(i)
                    }
                    this.dominoMode.setScoresAllfivesInform(0 != t.length ? t : null)
                }
            return this.setStockHighlers(), e
        },
        handShaders: null,
        handHighlers: null,
        stockHighlers: null,
        curPlays: null,
        play: function() {
            return this.curPlays = this.dominoMode.getAllPlays(this.hand), 0 == this.curPlays.length && !this.dominoMode.boneyardIsActive && this.dominoMode.canDraw() ? this.dominoMode.showBoneyard() : 0 == this.curPlays.length && this.dominoMode.canDraw() || !this.dominoMode.boneyardIsActive ? 0 != this.curPlays.length || this.dominoMode.canDraw() || this.dominoMode.showPass() : this.dominoMode.hideBoneyard($bind(this, this.play)), this.highlightMoves(), !1
        },
        highlightMoves: function() {
            this.dominoMode.get_currentPlayer() != this ? this.curPlays = [] : this.curPlays = this.dominoMode.getAllPlays(this.hand);
            for (var e = 0, t = this.hand; e < t.length;) {
                var n = t[e];
                ++e, n.canPlay = !1
            }
            for (var l = 0, i = this.curPlays; l < i.length;) {
                var s = i[l];
                ++l, s.domino.canPlay = !0
            }
            this.setHighlers(), this.setStockHighlers()
        },
        clearHighlers: function() {
            for (var e = 0, t = this.handShaders; e < t.length;) {
                var n = t[e];
                ++e, n.set_alpha(0)
            }
            for (var l = 0, i = this.handHighlers; l < i.length;) {
                var s = i[l];
                ++l, s.set_alpha(0)
            }
            for (var a = 0, r = this.stockHighlers; a < r.length;) {
                var o = r[a];
                ++a, o.set_alpha(0)
            }
        },
        onMDown: function() {
            for (var e = !1, t = 0, n = this.hand; t < n.length;) {
                var l = n[t];
                if (++t, this.dominoMode.boneyardIsActive) break;
                if (Desk.current.hitsMouse(l.baseEl) && this.dominoMode.canPlay(l)) {
                    this.selectedDomino == l && (Actuate.stop(l, null, !1, !1), l.set_x(this.selectedDominoInitPos.x), l.set_y(this.selectedDominoInitPos.y)), this.set_selectedDomino(l), e = !0, this.canDrag = !0, this.mdPoint.x = Desk.current.levels.get_mouseX(), this.mdPoint.y = Desk.current.levels.get_mouseY(), this.selectedDominoInitPos.x = this.selectedDomino.get_x(), this.selectedDominoInitPos.y = this.selectedDomino.get_y(), this.selectedDomino.sendOnTop(!1);
                    break
                }
                Desk.current.hitsMouse(l.baseEl) && (e = !0)
            }
            if (this.dominoMode.boneyardIsActive && 0 == this.dominoMode.getAllPlays(this.hand).length)
                for (var i = 0, s = this.dominoMode.boneyard; i < s.length;) {
                    var a = s[i];
                    if (++i, Desk.current.hitsMouse(a.baseEl)) {
                        this.draw(a);
                        break
                    }
                }!e && this.dominoMode.boardZone.contains(Desk.current.levels.get_mouseX(), Desk.current.levels.get_mouseY()) && this.playSelectedDomino(!0)
        },
        onMUp: function() {
            if (this.canDrag = !1, null != this.selectedDomino && (this.selectedDomino.get_x() != this.selectedDominoInitPos.x || this.selectedDomino.get_y() != this.selectedDominoInitPos.y)) {
                var e = this.selectedDomino.getBounds(Desk.current.levels),
                    t = this.dominoMode.boardZone.intersection(e);
                if (t.width * t.height > e.width * e.height / 2) this.playSelectedDomino();
                else {
                    Actuate.tween(this.selectedDomino, .27, {
                        x: this.selectedDominoInitPos.x,
                        y: this.selectedDominoInitPos.y
                    }, !0, GameConfig.actuateWithCompID).ease(GameConfig.dominoMoveEase)
                }
            }
        },
        update: function(e) {
            if (Player.prototype.update.call(this, e), this.canDrag) {
                var t = this.selectedDomino;
                t.set_x(t.get_x() + (Desk.current.levels.get_mouseX() - this.mdPoint.x));
                var n = this.selectedDomino;
                n.set_y(n.get_y() + (Desk.current.levels.get_mouseY() - this.mdPoint.y))
            }
            this.setHighlers(), this.setStockHighlers(), this.mdPoint.x = Desk.current.levels.get_mouseX(), this.mdPoint.y = Desk.current.levels.get_mouseY()
        },
        setHighlers: function() {
            for (var e = 0, t = this.handShaders; e < t.length;) {
                var n = t[e];
                ++e, n.set_visible(!1)
            }
            for (var l = 0, i = this.handHighlers; l < i.length;) {
                var s = i[l];
                ++l, s.set_visible(!1)
            }
            for (var a = 0, r = 0, o = this.hand.length; r < o;) {
                var d = r++,
                    _ = this.hand[d];
                if (_ == this.selectedDomino) {
                    var h = this.handHighlers[0];
                    this.setHighler(_, h)
                } else if (!_.canPlay && 1 == _.baseEl.get_scaleX()) {
                    var p = this.handShaders[a];
                    this.setHighler(_, p), a++
                }
            }
        },
        onResize: function() {
            Player.prototype.onResize.call(this), this.setHighlers(), this.setStockHighlers(), null != this.selectedDomino && (this.selectedDominoInitPos.x = this.selectedDomino.get_x(), this.selectedDominoInitPos.y = this.selectedDomino.get_y())
        },
        setStockHighlers: function() {
            if (-1 != this.dominoMode.curTurn) {
                for (var e = 0, t = this.stockHighlers; e < t.length;) {
                    var n = t[e];
                    ++e, n.set_visible(!1)
                }
                for (var l = !1, i = 0, s = this.dominoMode.allPiles; i < s.length;) {
                    var a = s[i];
                    if (++i, a.get_length() > 0) {
                        l = !0;
                        break
                    }
                }
                if (l) {
                    for (var r = 0, o = [], d = 0, _ = this.curPlays.length; d < _;) {
                        var h = d++,
                            p = this.curPlays[h].stack.dominoAt(this.curPlays[h].stack.get_length() - 1);
                        if (this.curPlays[h].domino == this.selectedDomino && null != p && -1 == HxOverrides.indexOf(o, p, 0)) {
                            o.push(p);
                            var c = this.stockHighlers[r];
                            this.setHighler(p, c), r++
                        }
                    }
                    for (var Q = 0, U = this.stockHighlers; Q < U.length;) {
                        var m = U[Q];
                        ++Q, m.get_visible() || null == m.parent || m.parent.removeChild(m)
                    }
                } else this.dominoMode.setScoresAllfivesInform(null)
            }
        },
        setHighler: function(e, t) {
            t.set_visible(!0);
            var n = t.get_transform().get_matrix();
            n.copyFrom(e.get_transform().get_matrix()), t.get_transform().set_matrix(n), t.parent == e.parent && t.parent.getChildIndex(t) - 1 == e.parent.getChildIndex(e) || e.parent.addChildAt(t, e.parent.getChildIndex(e))
        },
        playSelectedDomino: function(e) {
            if (null == e && (e = !1), null == this.selectedDomino || !this.dominoMode.canPlay(this.selectedDomino)) return !1;
            var t, n = this.dominoMode.getAllPlays(this.hand),
                l = 1 / 0,
                i = null,
                s = this.selectedDomino.getBounds(Desk.current.levels);
            if (t = e ? {
                    x: Desk.current.levels.get_mouseX(),
                    y: Desk.current.levels.get_mouseY()
                } : {
                    x: s.x + s.width / 2,
                    y: s.y + s.height / 2
                }, 0 == this.dominoMode.pileList.length)
                for (var a = 0; a < n.length;) {
                    var r = n[a];
                    ++a, r.domino == this.selectedDomino && (i = r)
                } else
                    for (var o = 0, d = n.length; o < d;) {
                        var _ = n[o++];
                        if (_.domino == this.selectedDomino) {
                            s = _.stack.dominoAt(_.stack.get_length() - 1).getBounds(Desk.current.levels), _.stack == this.dominoMode.leftStack ? s.x -= 1 : _.stack == this.dominoMode.rightStack ? s.x += 1 : _.stack == this.dominoMode.topStack ? s.y -= 1 : _.stack == this.dominoMode.bottomStack && (s.y += 1);
                            var h = s.x + s.width / 2 - t.x,
                                p = s.y + s.height / 2 - t.y,
                                c = Math.sqrt(h * h + p * p);
                            c < l && (l = c, i = _)
                        }
                    }
            if (this.setStockHighlers(), null != i) {
                this.dominoMode.playPlay(this, i), this.set_selectedDomino(null);
                for (var Q = 0, U = this.hand; Q < U.length;) {
                    var m = U[Q];
                    ++Q, m.canPlay = !1
                }
                return this.setHighlers(), this.curPlays = [], !0
            }
            return this.setHighlers(), !1
        },
        draw: function(e) {
            if (this.dominoMode.canDraw()) {
                var t = Player.prototype.draw.call(this, e);
                if (t.open(!0), this.dominoMode.updatePoses(), GameConfig.timerWithComp(GameConfig.afterDrawDelay * GameConfig.gameSpeedCoef, $bind(this, this.play), null, null), t.sendOnTop(), "human" == DominoModeBase.playersTypes[this.dominoMode.curTurn]) {
                    var n = t.parent;
                    this.dominoMode.dominoCont.addChild(t), this.dominoMode.saveGame(), n.addChild(t)
                }
                return t
            }
            return null
        },
        __class__: HumanPlayer,
        __properties__: {
            set_selectedDomino: "set_selectedDomino"
        }
    });
    var HxOverrides = function() {};
    $hxClasses.HxOverrides = HxOverrides, HxOverrides.__name__ = ["HxOverrides"], HxOverrides.strDate = function(e) {
        switch (e.length) {
            case 8:
                var t = e.split(":"),
                    n = new Date;
                return n.setTime(0), n.setUTCHours(t[0]), n.setUTCMinutes(t[1]), n.setUTCSeconds(t[2]), n;
            case 10:
                var l = e.split("-");
                return new Date(l[0], l[1] - 1, l[2], 0, 0, 0);
            case 19:
                var i = e.split(" "),
                    s = i[0].split("-"),
                    a = i[1].split(":");
                return new Date(s[0], s[1] - 1, s[2], a[0], a[1], a[2]);
            default:
                throw new js__$Boot_HaxeError("Invalid date format : " + e)
        }
    }, HxOverrides.cca = function(e, t) {
        var n = e.charCodeAt(t);
        if (n == n) return n
    }, HxOverrides.substr = function(e, t, n) {
        return null != t && 0 != t && null != n && n < 0 ? "" : (null == n && (n = e.length), t < 0 ? (t = e.length + t) < 0 && (t = 0) : n < 0 && (n = e.length + n - t), e.substr(t, n))
    }, HxOverrides.indexOf = function(e, t, n) {
        var l = e.length;
        for (n < 0 && (n += l) < 0 && (n = 0); n < l;) {
            if (e[n] === t) return n;
            n++
        }
        return -1
    }, HxOverrides.remove = function(e, t) {
        var n = HxOverrides.indexOf(e, t, 0);
        return -1 != n && (e.splice(n, 1), !0)
    }, HxOverrides.iter = function(e) {
        return {
            cur: 0,
            arr: e,
            hasNext: function() {
                return this.cur < this.arr.length
            },
            next: function() {
                return this.arr[this.cur++]
            }
        }
    };
    var LevelsExt = function(e, t) {
        this.batching = null, this.physicElements = [], this.curLevel = -1, openfl_display_Sprite.call(this), this.main = Main.current, this.data = null == e ? this.main.levelsData : e, this.batching = t
    };
    $hxClasses.LevelsExt = LevelsExt, LevelsExt.__name__ = ["LevelsExt"], LevelsExt.__super__ = openfl_display_Sprite, LevelsExt.prototype = $extend(openfl_display_Sprite.prototype, {
        main: null,
        data: null,
        curLevel: null,
        physicElements: null,
        batching: null,
        spaceM: null,
        initLevel: function(e) {
            for (; this.physicElements.length > 0;) this.physicElements.pop().destroy();
            for (; this.get_numChildren() > 0;) this.removeChildAt(0);
            this.curLevel = e;
            var t = this.data.levels[e].elements,
                n = this.data.levels[e].joints,
                l = this.data.levels[e].space;
            this.spaceM = new openfl_geom_Matrix(l.a, l.b, l.c, l.d, l.tx, l.ty), this.initElementsFromData(t), this.initJointsFromData(n)
        },
        initElementsFromData: function(e, t) {
            null == t && (t = this);
            for (var n, l = [], i = e.length - 1; i >= 0;) "BodyBlock" != e[i].type && "Graphic" != e[i].type || (n = new MovieClipExt(e[i], this.spaceM, this.batching, this.data), this.physicElements.push(n), t.addChild(n), l.push(n)), i--;
            return l
        },
        initJointsFromData: function(e, t) {},
        update: function(e, t) {
            null == t && (t = !1);
            for (var n = 0, l = this.physicElements.length; n < l;) {
                var i = n++;
                if (null == this.physicElements[i]) break;
                this.physicElements[i].update(e)
            }
        },
        __class__: LevelsExt
    });
    var MovieClipExt = function(e, t, n, l) {
        if (this.destroied = !1, this.hp = new openfl_geom_Point, this.mHm1 = new openfl_geom_Matrix, this.mHm = new openfl_geom_Matrix, this.forcedRenderFrame = -1, this.wasFrameBeforeForcedFrame = -1, this.initFrame = 0, this.framesList = [], this.highlighted = !1, this.playCallback = null, this.isLoop = !1, this.curEndFrame = -1, this.curStartFrame = -1, this.curLabel = "", this.isPlaying = !0, this.layerName = "", this.groupName = "", this.userGroupIndex = 0, this.addonMatrix = null, this.hm1 = new openfl_geom_Matrix, this.hm = new openfl_geom_Matrix, this.totalFrames = 0, this.oneFrameTime = 41.666666666666664, this._curFrame = 0, this.ty = 0, this.tx = 0, openfl_display_Sprite.call(this), this.mainData = e, this.main = Main.current, this.batch = null == n ? this.main.batch : n, null != e) {
            var i = Reflect.field(null == l ? this.main.levelsData.classes : l.classes, e.element.libName);
            this.initFrame = e.ff, this.labels = i.labels, this.sounds = i.sounds, this.hitObjects = i.hitObjects, e.type, this.bodyInverseInitMatrix = new openfl_geom_Matrix(e.element.a, e.element.b, e.element.c, e.element.d, 0, 0);
            var s = new openfl_geom_Matrix(e.element.a, e.element.b, e.element.c, e.element.d, e.element.tx, e.element.ty);
            null != t && s.concat(t);
            Math.PI;
            var a = Math.atan(-s.c / s.d),
                r = Math.atan(s.b / s.a);
            a != a && (a = 0), r != r && (r = 0), this.isEquivalent(a, r) && (a = r = 0), this.get_transform().set_matrix(s), this.set_x(this.get_x()), null != e.element.al && this.set_alpha(e.element.al), this.totalFrames = i.totalFrames, this.framesData = i.frames, this.set_name(e.name), this.groupName = e.folder, this.layerName = e.layer, this.prepareFramesList(), this.prepareTransformMatrix()
        }
    };
    $hxClasses.MovieClipExt = MovieClipExt, MovieClipExt.__name__ = ["MovieClipExt"], MovieClipExt.__super__ = openfl_display_Sprite, MovieClipExt.prototype = $extend(openfl_display_Sprite.prototype, {
        main: null,
        tx: null,
        ty: null,
        _curFrame: null,
        get_curFrame: function() {
            return this._curFrame
        },
        set_curFrame: function(e) {
            if (null != this.sounds && this.isPlaying)
                for (var t = 0, n = this.sounds; t < n.length;) {
                    var l = n[t];
                    if (++t, l.frame <= e && l.frame >= this._curFrame) {
                        var i = Std.string(l.name) + "",
                            s = i.split("_");
                        1 == s.length ? Main.current.playSpriteSound(i) : "stop" == s[1] ? Main.current.stopSpriteSound(s[0]) : "loop" == s[1] ? Main.current.playSpriteSound(s[0], !0) : "once" == s[1] && Main.current.playSpriteSound(s[0])
                    }
                }
            return this._curFrame = e, this._curFrame
        },
        oneFrameTime: null,
        totalFrames: null,
        framesData: null,
        batch: null,
        hm: null,
        hm1: null,
        bodyInverseInitMatrix: null,
        addonMatrix: null,
        userGroupIndex: null,
        groupName: null,
        layerName: null,
        labels: null,
        sounds: null,
        isPlaying: null,
        curLabel: null,
        curStartFrame: null,
        curEndFrame: null,
        isLoop: null,
        playCallback: null,
        highlighted: null,
        hitObjects: null,
        framesList: null,
        initFrame: null,
        wasFrameBeforeForcedFrame: null,
        forcedRenderFrame: null,
        set_forcedRenderFrame: function(e) {
            if (e == this.forcedRenderFrame) return e;
            if (this.forcedRenderFrame = e, null == this.framesList) return this.forcedRenderFrame;
            if (-1 == e) {
                var t = Math.floor(this.wasFrameBeforeForcedFrame);
                for (this.set_curFrame(this.wasFrameBeforeForcedFrame); this.get_numChildren() > 0;) this.removeChildAt(0);
                this.addChild(this.framesList[t])
            } else {
                for (this.wasFrameBeforeForcedFrame = this.get_curFrame(); this.get_numChildren() > 0;) this.removeChildAt(0);
                this.addChild(this.framesList[this.forcedRenderFrame])
            }
            return this.forcedRenderFrame
        },
        mainData: null,
        clone: function(e) {
            null == e && (e = !0);
            var t = new MovieClipExt(null);
            return t.set_tx(this.tx), t.set_ty(this.ty), t.totalFrames = this.totalFrames, t.framesData = this.framesData, t.batch = this.batch, t.bodyInverseInitMatrix = this.bodyInverseInitMatrix.clone(), null != this.addonMatrix ? t.addonMatrix = this.addonMatrix.clone() : t.addonMatrix = null, t.userGroupIndex = this.userGroupIndex, t.groupName = this.groupName, t.layerName = this.layerName, t.labels = this.labels.slice(), t.hitObjects = this.hitObjects, t.mainData = this.mainData, t.prepareFramesList(), t
        },
        copyStateFrom: function(e) {
            this._curFrame = e._curFrame, this.set_curFrame(e.get_curFrame()), this.curLabel = e.curLabel, this.isLoop = e.isLoop, this.isPlaying = e.isPlaying, this.curStartFrame = e.curStartFrame, this.curEndFrame = e.curEndFrame
        },
        isEquivalent: function(e, t, n) {
            return null == n && (n = 1e-4), e - n < t && e + n > t
        },
        prepareFramesList: function() {
            for (var e, t, n, l, i = 0, s = this.totalFrames; i < s;) {
                var a = i++;
                e = new openfl_display_Sprite, this.framesList.push(e);
                for (var r = this.framesData[a], o = 0; o < r.length;) {
                    var d;
                    if (d = r[o] + (this.highlighted ? "_1" : ""), (n = new openfl_geom_Matrix).a = parseFloat(r[o + 1] + ""), n.b = parseFloat(r[o + 2] + ""), n.c = parseFloat(r[o + 3] + ""), n.d = parseFloat(r[o + 4] + ""), n.tx = parseFloat(r[o + 5] + ""), n.ty = parseFloat(r[o + 6] + ""), l = this.batch, -1 == this.batch.getImgId(d) && (l = Main.current.getBatchByImName(d)), null == l) {
                        var _ = "";
                        openfl_Assets.exists("img/backgrounds/" + d) || (openfl_Assets.exists("img/backgrounds/" + d + ".jpg") ? _ = ".jpg" : openfl_Assets.exists("img/backgrounds/" + d + ".png") ? _ = ".png" : console.log("Error: img:" + d + " not found!!!!")), t = new openfl_display_Bitmap(openfl_Assets.getBitmapData("img/backgrounds/" + d + _), 1, !0)
                    } else t = new BitmapBatch(l, d);
                    t.set_alpha(parseFloat(r[o + 7] + "")), t.get_transform().set_matrix(n), e.addChild(t), o += 8
                }
            }
            this.addChild(this.framesList[0])
        },
        set_x: function(e) {
            return openfl_display_Sprite.prototype.set_x.call(this, e), this.prepareTransformMatrix(), e
        },
        set_y: function(e) {
            return openfl_display_Sprite.prototype.set_y.call(this, e), this.prepareTransformMatrix(), e
        },
        set_scaleX: function(e) {
            return openfl_display_Sprite.prototype.set_scaleX.call(this, e), this.prepareTransformMatrix(), e
        },
        set_scaleY: function(e) {
            return openfl_display_Sprite.prototype.set_scaleY.call(this, e), this.prepareTransformMatrix(), e
        },
        set_tx: function(e) {
            return this.tx = e, this.prepareTransformMatrix(), this.tx
        },
        set_ty: function(e) {
            return this.ty = e, this.prepareTransformMatrix(), this.ty
        },
        set_rotation: function(e) {
            return openfl_display_Sprite.prototype.set_rotation.call(this, e), this.prepareTransformMatrix(), e
        },
        set_width: function(e) {
            return openfl_display_Sprite.prototype.set_width.call(this, e), this.prepareTransformMatrix(), e
        },
        set_height: function(e) {
            return openfl_display_Sprite.prototype.set_height.call(this, e), this.prepareTransformMatrix(), e
        },
        mHm: null,
        mHm1: null,
        prepareTransformMatrix: function() {},
        hasLabel: function(e) {
            if (null == this.labels) return !1;
            for (var t = 0, n = this.labels.length; t < n;) {
                var l = t++;
                if (-1 != (Std.string(this.labels[l].name) + "").indexOf(e)) return !0
            }
            return !1
        },
        getFrameLabels: function(e) {
            for (var t = null, n = 0, l = this.labels; n < l.length;) {
                var i = l[n];
                ++n, i.frame == e && (null == t && (t = []), t.push(i.name))
            }
            return t
        },
        playLabel: function(e, t) {
            if (this.curLabel == e && this.isPlaying) return !0;
            var n = "";
            this.curStartFrame = -1, this.curEndFrame = -1;
            for (var l = 0, i = this.labels.length; l < i;) {
                var s = l++;
                0 == (Std.string(this.labels[s].name) + "").indexOf(e + "_") && (-1 != (Std.string(this.labels[s].name) + "").indexOf("_end") ? this.curEndFrame = this.labels[s].frame : (this.curStartFrame = this.labels[s].frame, n = this.labels[s].name))
            }
            return this.curStartFrame < 0 || this.curEndFrame < 0 ? (this.curStartFrame = -1, this.curEndFrame = -1, !1) : (this.isPlaying = !0, this.playCallback = t, this.curLabel = e, this.isLoop = !1, this._curFrame = this.curStartFrame, this.set_curFrame(this.curStartFrame), this.isLoop = n.indexOf("_loop") > -1 || n.indexOf("_Loop") > -1, this.isPlaying = -1 == n.indexOf("_stop"), this.update(0), !0)
        },
        playWithCallBack: function(e) {
            this.isPlaying = !0, this.playCallback = e, this.curLabel = "", this.isLoop = !1, this.curStartFrame = 0, this.curEndFrame = this.totalFrames - 1
        },
        play: function() {
            this.isPlaying = !0
        },
        stop: function() {
            this.isPlaying = !1
        },
        gotoAndPlay: function(e, t) {
            this.playCallback = t, this._curFrame = e, this.set_curFrame(e), this.isPlaying = !0, this.curLabel = "", this.curStartFrame = e, this.curEndFrame = this.totalFrames - 1, this.isLoop = !1
        },
        gotoAndStop: function(e) {
            var t;
            for (this._curFrame = e, this.set_curFrame(e), this.isPlaying = !1, this.curLabel = "", this.curStartFrame = -1, this.curEndFrame = -1, this.isLoop = !1, t = -1 == this.forcedRenderFrame ? Math.floor(this.get_curFrame()) : this.forcedRenderFrame; this.get_numChildren() > 0;) this.removeChildAt(0);
            this.addChild(this.framesList[t])
        },
        gotoInitFrame: function() {
            this.gotoAndStop(this.initFrame)
        },
        gotoAndStopLabel: function(e) {
            for (var t = -1, n = 0, l = this.labels.length; n < l;) {
                var i = n++;
                if (0 == (Std.string(this.labels[i].name) + "").indexOf(e + "_") && -1 != (Std.string(this.labels[i].name) + "").indexOf("_end")) {
                    t = this.labels[i].frame;
                    break
                }
            } - 1 != t && (this.gotoAndStop(t), this.curLabel = e)
        },
        nextFrame: function() {
            var e;
            for (this.set_curFrame(Math.floor(this.get_curFrame()) + 1), this.get_curFrame() >= this.totalFrames && this.set_curFrame(0), e = -1 == this.forcedRenderFrame ? Math.floor(this.get_curFrame()) : this.forcedRenderFrame; this.get_numChildren() > 0;) this.removeChildAt(0);
            this.addChild(this.framesList[e])
        },
        hp: null,
        update: function(e) {
            if (null != this.mHm) {
                var t = !1;
                if (this.isPlaying && -1 == this.forcedRenderFrame) {
                    this.set_curFrame(this.get_curFrame() + e / this.oneFrameTime), -1 != this.curEndFrame ? this.get_curFrame() > this.curEndFrame && (null != this.playCallback && (t = !0), this.isLoop ? this.set_curFrame(this.curStartFrame) : (this.set_curFrame(this.curEndFrame), this.isPlaying = !1)) : this.get_curFrame() >= this.totalFrames && this.set_curFrame(0)
                }
                if (t) {
                    var n = this.playCallback;
                    this.playCallback = null, n(this), n = null
                }
                if (this.get_visible() && !this.destroied) {
                    var l;
                    for (l = -1 == this.forcedRenderFrame ? Math.floor(this.get_curFrame()) : this.forcedRenderFrame; this.get_numChildren() > 0;) this.removeChildAt(0);
                    this.addChild(this.framesList[l])
                }
            }
        },
        destroied: null,
        destroy: function() {
            if (!this.destroied) {
                if (this.destroied = !0, this.main = null, null != this.sounds)
                    for (var e = 0, t = this.sounds; e < t.length;) {
                        var n = t[e];
                        ++e;
                        var l = (Std.string(n.name) + "").split("_");
                        Main.current.stopSpriteSound(l[0]), Main.current.stopSpriteSound(l[0], !0)
                    }
                for (this.framesData = null, this.batch = null, this.hm = null, this.hm1 = null, this.bodyInverseInitMatrix = null, this.mHm = null, this.mHm1 = null, this.hp = null, this.labels = null; this.get_numChildren() > 0;) this.removeChildAt(0);
                for (; this.framesList.length > 0;) this.framesList.pop();
                this.framesList = null
            }
        },
        __class__: MovieClipExt,
        __properties__: $extend(openfl_display_Sprite.prototype.__properties__, {
            set_forcedRenderFrame: "set_forcedRenderFrame",
            set_curFrame: "set_curFrame",
            get_curFrame: "get_curFrame",
            set_ty: "set_ty",
            set_tx: "set_tx"
        })
    });
    var LevelsTextField = function(e, t) {
        this.text = "", this.editables = [], this.elementsInits = [], MovieClipExt.call(this, null), this.layerName = e[0].layerName, this.groupName = e[0].groupName, this.sortedElements = e.slice(), this.sortedElements.sort($bind(this, this.sortByX)), Desk.current.levels.addChildAt(this, Desk.current.levels.getChildIndex(this.sortedElements[0])), Desk.current.levels.physicElements.push(this);
        for (var n = 0, l = 0, i = 0, s = this.sortedElements; i < s.length;) {
            var a = s[i];
            if (++i, HxOverrides.remove(Desk.current.levels.physicElements, a), -1 != a.get_name().indexOf("_edit")) {
                this.set_name(a.get_name());
                var r = new LevelsEditableTextField(a);
                this.addChild(r), this.editables.push(r), this.elementsInits.push({
                    el: r,
                    x: a.get_x(),
                    y: a.get_y(),
                    w: a.get_width(),
                    h: a.get_height()
                })
            } else this.addChild(a), this.elementsInits.push({
                el: a,
                x: a.get_x(),
                y: a.get_y(),
                w: a.get_width(),
                h: a.get_height()
            }); - 1 != a.get_name().indexOf("pivotEl") && (n = a.get_x(), l = a.get_y())
        }
        null != t && (n = t.x, l = t.y), this.set_x(n), this.set_y(l);
        for (var o = 0, d = this.elementsInits; o < d.length;) {
            var _ = d[o];
            ++o;
            var h = _.el;
            h.set_x(h.get_x() - n);
            var p = _.el;
            p.set_y(p.get_y() - l), _.x -= n, _.y -= l
        }
        this.set_name(StringTools.replace(this.get_name(), "_edit", "")), this.set_name(StringTools.replace(this.get_name(), "_center", ""))
    };
    $hxClasses.LevelsTextField = LevelsTextField, LevelsTextField.__name__ = ["LevelsTextField"], LevelsTextField.__super__ = MovieClipExt, LevelsTextField.prototype = $extend(MovieClipExt.prototype, {
        sortedElements: null,
        elementsInits: null,
        editables: null,
        text: null,
        sortByX: function(e, t) {
            return e.get_x() == t.get_x() ? 0 : e.get_x() - t.get_x() < 0 ? -1 : 1
        },
        set_text: function(e) {
            return this.text != e && (this.text = e, this.updateText()), e
        },
        updateText: function() {
            for (var e = 0, t = this.editables; e < t.length;) {
                var n = t[e];
                ++e, n.set_text(this.text)
            }
            for (var l = 0, i = 0, s = this.elementsInits; i < s.length;) {
                var a = s[i];
                ++i, a.el.set_x(a.x + l), a.el.get_width() == a.w || js_Boot.__instanceof(a.el, LevelsEditableTextField) && js_Boot.__cast(a.el, LevelsEditableTextField).centered || (l += a.el.get_width() - a.w)
            }
        },
        update: function(e) {},
        __class__: LevelsTextField,
        __properties__: $extend(MovieClipExt.prototype.__properties__, {
            set_text: "set_text"
        })
    });
    var LevelsEditableTextField = function(e) {
        this.symOffsets = new haxe_ds_StringMap, this.initWidth = 0, this.centered = !1, this.text = "", this.imNames = new haxe_ds_StringMap, this.pool = [], openfl_display_Sprite.call(this), this.main = Main.current, this.baseElement = e, this.centered = -1 != e.get_name().indexOf("_center"), this.initWidth = e.get_width();
        for (var t = 0, n = this.baseElement.framesList.length; t < n;) {
            var l, i = t++;
            l = js_Boot.__cast(this.baseElement.framesList[i].getChildAt(0), BitmapBatch).imName, this.imNames.set(i + "", l);
            var s = {
                x: this.baseElement.framesList[i].getChildAt(0).get_x(),
                y: this.baseElement.framesList[i].getChildAt(0).get_y()
            };
            this.symOffsets.set(i + "", s)
        }
        this.baseElement.set_visible(!1), null != this.baseElement.parent && this.baseElement.parent.removeChild(this.baseElement), this.set_x(e.get_x()), this.set_y(e.get_y())
    };
    $hxClasses.LevelsEditableTextField = LevelsEditableTextField, LevelsEditableTextField.__name__ = ["LevelsEditableTextField"], LevelsEditableTextField.__super__ = openfl_display_Sprite, LevelsEditableTextField.prototype = $extend(openfl_display_Sprite.prototype, {
        pool: null,
        baseElement: null,
        imNames: null,
        text: null,
        main: null,
        centered: null,
        initWidth: null,
        symOffsets: null,
        set_text: function(e) {
            return this.text != e && (this.text = e, this.updateText()), e
        },
        getFromPool: function(e) {
            var t, n;
            return null == e && (e = ""), t = "" == e ? "" : this.imNames.get(e), this.pool.length > 0 ? (n = this.pool.pop(), "" != t && n.changeImName(t), n) : "" == t ? new BitmapBatch(this.main.batch) : new BitmapBatch(this.main.batch, t)
        },
        sendToPool: function(e) {
            null != e.parent && e.parent.removeChild(e), this.pool.push(e)
        },
        updateText: function() {
            for (; this.get_numChildren() > 0;) this.sendToPool(js_Boot.__cast(this.getChildAt(0), BitmapBatch));
            for (var e, t, n = this.text.length, l = 0, i = 0; i < n;) {
                var s = i++;
                t = this.text.charAt(s), e = this.getFromPool(t), this.addChild(e);
                var a = this.symOffsets.get(t);
                e.set_x(l + a.x), e.set_y(a.y), l += e.get_width() + a.x
            }
            if (this.centered)
                for (var r = this.initWidth / 2 - l / 2, o = 0, d = this.get_numChildren(); o < d;) {
                    var _ = o++,
                        h = this.getChildAt(_);
                    h.set_x(h.get_x() + r)
                }
        },
        __class__: LevelsEditableTextField,
        __properties__: $extend(openfl_display_Sprite.prototype.__properties__, {
            set_text: "set_text"
        })
    });
    var List = function() {
        this.length = 0
    };
    $hxClasses.List = List, List.__name__ = ["List"], List.prototype = {
        h: null,
        q: null,
        length: null,
        add: function(e) {
            var t = [e];
            null == this.h ? this.h = t : this.q[1] = t, this.q = t, this.length++
        },
        pop: function() {
            if (null == this.h) return null;
            var e = this.h[0];
            return this.h = this.h[1], null == this.h && (this.q = null), this.length--, e
        },
        iterator: function() {
            return new _$List_ListIterator(this.h)
        },
        __class__: List
    };
    var _$List_ListIterator = function(e) {
        this.head = e, this.val = null
    };
    $hxClasses["_List.ListIterator"] = _$List_ListIterator, _$List_ListIterator.__name__ = ["_List", "ListIterator"], _$List_ListIterator.prototype = {
        head: null,
        val: null,
        hasNext: function() {
            return null != this.head
        },
        next: function() {
            return this.val = this.head[0], this.head = this.head[1], this.val
        },
        __class__: _$List_ListIterator
    };
    var LocalSaves = function() {};
    $hxClasses.LocalSaves = LocalSaves, LocalSaves.__name__ = ["LocalSaves"], LocalSaves.getVar = function(e) {
        return null == LocalSaves.so && (LocalSaves.localPath = window.location.href, LocalSaves.localPath = LocalSaves.localPath.split("?")[0], LocalSaves.so = openfl_net_SharedObject.getLocal(LocalSaves.storeName, LocalSaves.localPath)), Reflect.field(LocalSaves.so.data, e)
    }, LocalSaves.setVar = function(e, t) {
        null == LocalSaves.so && (LocalSaves.localPath = window.location.href, LocalSaves.localPath = LocalSaves.localPath.split("?")[0], LocalSaves.so = openfl_net_SharedObject.getLocal(LocalSaves.storeName, LocalSaves.localPath)), LocalSaves.so.data[e] = t, LocalSaves.so.flush()
    }, Math.__name__ = ["Math"];
    var MathTestMode = function(e) {
        this.nextClicked = !1, this.selectors = [], BaseGameMode.call(this), this.config = e, this.allEls = this.desk.getElementsByFolderName("MathTest"), this.checkTestBtn = this.desk.getElementByName("testCheckBtn"), this.checkTestBtn.set_visible(!1);
        for (var t = 0, n = e.numExercises; t < n;) {
            var l = t++;
            this.selectors[l] = [], this.selectors[l] = this.selectors[l].concat(this.desk.getElementsByName("testIcon" + (l + 1))), this.selectors[l] = this.selectors[l].concat(this.desk.getElementsByName("testIcon" + (l + 1) + "_correct"))
        }
    };
    $hxClasses.MathTestMode = MathTestMode, MathTestMode.__name__ = ["MathTestMode"], MathTestMode.__super__ = BaseGameMode, MathTestMode.prototype = $extend(BaseGameMode.prototype, {
        config: null,
        allEls: null,
        checkTestBtn: null,
        selectors: null,
        checkAllIsCorrect: function() {
            for (var e = 0, t = this.config.numExercises; e < t;) {
                for (var n = e++, l = !1, i = 0, s = this.selectors[n].length; i < s;) {
                    var a = i++;
                    if (1 == this.selectors[n][a].get_curFrame()) {
                        l = -1 != this.selectors[n][a].get_name().indexOf("correct");
                        break
                    }
                    if (2 == this.selectors[n][a].get_curFrame()) {
                        l = !0;
                        break
                    }
                }
                if (!l) return !1
            }
            return !0
        },
        setTestResults: function() {
            for (var e = 0, t = this.config.numExercises; e < t;)
                for (var n = e++, l = 0, i = this.selectors[n].length; l < i;) {
                    var s = l++;
                    if (0 != this.selectors[n][s].get_curFrame()) {
                        this.selectors[n][s].gotoAndStop(-1 != this.selectors[n][s].get_name().indexOf("correct") ? 2 : 3);
                        break
                    }
                }
        },
        isGroupComlete: function(e) {
            for (var t = 0, n = this.selectors[e].length; t < n;) {
                var l = t++;
                if (2 == this.selectors[e][l].get_curFrame()) return !0
            }
            return !1
        },
        resetGroupSelectors: function(e) {
            for (var t = 0, n = this.selectors[e].length; t < n;) {
                var l = t++;
                this.selectors[e][l].gotoAndStop(0)
            }
        },
        checkShowBtn: function() {
            for (var e = 0, t = this.config.numExercises; e < t;) {
                for (var n = e++, l = !1, i = 0, s = this.selectors[n].length; i < s;) {
                    var a = i++;
                    if (0 != this.selectors[n][a].get_curFrame()) {
                        l = !0;
                        break
                    }
                }
                if (!l) return
            }
            this.checkTestBtn.set_visible(!0), this.desk.animateBtnApear(this.checkTestBtn)
        },
        nextClicked: null,
        onMDown: function() {
            var e = this;
            BaseGameMode.prototype.onMDown.call(this), this.checkTestBtn.get_visible() && this.desk.hitsMouse(this.checkTestBtn) && !this.nextClicked && (this.checkAllIsCorrect() ? (this.nextClicked = !0, this.desk.animateBtnClick(this.checkTestBtn, function() {
                e.setTestResults(), motion_Actuate.timer(1).onComplete($bind($_ = e.desk, $_.startNewGame), [e.desk.curLevel + 1]), motion_Actuate.tween(e.checkTestBtn, .4, {
                    alpha: 0
                }).ease(motion_easing_Linear.get_easeNone())
            })) : this.desk.animateBtnClick(this.checkTestBtn, $bind(this, this.setTestResults)));
            for (var t = 0, n = this.config.numExercises; t < n;) {
                var l = t++;
                if (!this.isGroupComlete(l))
                    for (var i = 0, s = this.selectors[l].length; i < s;) {
                        var a = i++;
                        if (this.desk.hitsMouse(this.selectors[l][a])) return this.resetGroupSelectors(l), this.selectors[l][a].gotoAndStop(1), void(this.checkTestBtn.get_visible() || this.checkShowBtn())
                    }
            }
        },
        __class__: MathTestMode
    });
    var Menu = function() {
        this.moveByResizeCallBack = null, this.moveThisOnResize = !1, this.remakeThisOnResize = !1, this.stopPropagation = !0, this.lastTime = -1, this.hitAlphaThereshold = 200, this.removedListeners = !1, this.isSimpleHittest = !0
    };
    $hxClasses.Menu = Menu, Menu.__name__ = ["Menu"], Menu.__super__ = openfl_display_Sprite, Menu.prototype = $extend(openfl_display_Sprite.prototype, {
        btnsArr: null,
        btnsFuntions: null,
        mcsArr: null,
        threeStateBtns: null,
        scrollContainers: null,
        textFields: null,
        isSimpleHittest: null,
        removedListeners: null,
        hitAlphaThereshold: null,
        lastBm: null,
        main: null,
        sWidth: null,
        sHeight: null,
        updateFunction: null,
        lastTime: null,
        minUpdateTime: null,
        snapShot: null,
        fill: null,
        hp: null,
        mHm: null,
        mainBatch: null,
        stopPropagation: null,
        allClickFunction: null,
        remakeThisOnResize: null,
        moveThisOnResize: null,
        moveByResizeCallBack: null,
        resizeCheck: function(e) {
            if (null != this.parent && (this.main.sWidth != this.sWidth || this.main.sHeight != this.sHeight)) {
                if (this.moveThisOnResize) this.moveByResize();
                else if (this.remakeThisOnResize && (this.main.sWidth != this.sWidth || this.main.sHeight != this.sHeight)) {
                    var t = Type.createInstance(js_Boot.getClass(this), []);
                    return this.parent.addChildAt(t, this.parent.getChildIndex(this)), this.close(), void(Menu.wasRemake = !0)
                }
                this.sWidth = this.main.sWidth, this.sHeight = this.main.sHeight, null != this.moveByResizeCallBack && this.moveByResizeCallBack()
            }
        },
        moveByResize: function() {
            if (this.main.sWidth != this.sWidth || this.main.sHeight != this.sHeight) {
                var e = this.main.sWidth - this.sWidth;
                this.set_x(this.get_x() + e / 2)
            }
        },
        removeOverlay: function() {
            if (null != this.fill) {
                this.fill.removeEventListener("click", $bind(this, this.stopEventForOverlay)), this.fill.removeEventListener("click", $bind(this, this.stopEventForOverlay));
                var e = this.fill.getChildAt(0);
                null != e && e.bitmapData.dispose(), null != this.fill.parent && this.fill.parent.removeChild(this.fill)
            }
        },
        stopEventForOverlay: function(e) {
            e.stopImmediatePropagation()
        },
        btnClick: function(e) {
            if (!this.main.fullStop)
                if (null != this.allClickFunction && this.allClickFunction(), this.removeListeners(e), this.stopPropagation && e.stopImmediatePropagation(), this.isSimpleHittest) {
                    if (this.get_visible() && null != this.hp) {
                        var t, n;
                        this.hp.x = e.stageX, this.hp.y = e.stageY;
                        for (var l = this.btnsFuntions.keys(); l.hasNext();) {
                            var i = l.next();
                            if (this.btnsArr.h.hasOwnProperty(i)) {
                                var s = this.btnsArr.h[i];
                                if (null == s) continue;
                                var a = s.get_alpha();
                                null != s.parent && (a *= s.parent.get_alpha());
                                var r = !0;
                                for (t = s; null != t.parent;)
                                    if (!(t = t.parent).get_visible()) {
                                        r = !1;
                                        break
                                    }
                                if (r && a > 0 && s.hitTestPoint(this.hp.x, this.hp.y)) return void(js_Boot.__instanceof(s, ThreeStateBtn) && !this.btnsArr.h[i].isActive || (n = this.btnsFuntions.h[i], Reflect.isFunction(n) ? n() : Reflect.callMethod(n.callBack, n.callBack, n.params)))
                            }
                        }
                    }
                } else this.btnClickAlpha(e)
        },
        btnClickAlpha: function(e) {
            if (this.get_visible()) {
                this.hp.x = e.stageX, this.hp.y = e.stageY, this.hp = this.globalToLocal(this.hp);
                for (var t, n, l = 0, i = 0, s = this.btnsFuntions.keys(); s.hasNext();) {
                    var a = s.next();
                    if (this.btnsArr.h.hasOwnProperty(a) && (l = Std.is(this.btnsArr.h[a], openfl_display_Bitmap) ? 0 : this.btnsArr.h[a].getChildAt(0).x, i = Std.is(this.btnsArr.h[a], openfl_display_Bitmap) ? 0 : this.btnsArr.h[a].getChildAt(0).y, t = Std.is(this.btnsArr.h[a], openfl_display_Bitmap) ? this.btnsArr.h[a] : this.btnsArr.h[a].getChildAt(0), this.btnsArr.h[a].visible && this.btnsArr.h[a].alpha > 0 && (t.bitmapData.getPixel32(Std.int(this.hp.x - this.btnsArr.h[a].x - l), Std.int(this.hp.y - this.btnsArr.h[a].y - i)) >> 24 & 255) > this.hitAlphaThereshold)) return void(Std.is(this.btnsArr.h[a], ThreeStateBtn) && !this.btnsArr.h[a].isActive || (n = this.btnsFuntions.h[a], Reflect.isFunction(n) ? n() : Reflect.callMethod(n.callBack, n.callBack, n.params)))
                }
            }
        },
        removeListeners: function(e) {
            this.removedListeners || ("click" == e.type || "mouseDown" == e.type || "mouseMove" == e.type || "mouseUp" == e.type ? this.removeEventListener("touchEnd", $bind(this, this.btnClick)) : this.removeEventListener("click", $bind(this, this.btnClick)), this.removedListeners = !0)
        },
        updatePr: function(e) {
            if (null != this.main)
                if (-1 != this.lastTime) {
                    var t = openfl_Lib.getTimer(),
                        n = t - this.lastTime;
                    if (n >= this.minUpdateTime) {
                        this.lastTime = t;
                        for (var l = 0, i = this.mcsArr.length; l < i;) {
                            var s = l++;
                            this.mcsArr[s].update(n)
                        }
                        for (var a = 0, r = this.scrollContainers.length; a < r;) {
                            var o = a++;
                            this.scrollContainers[o].update(n)
                        }
                        this.updateThreeStateBtns(), null != this.updateFunction && this.updateFunction(n)
                    }
                } else this.lastTime = openfl_Lib.getTimer()
        },
        updateThreeStateBtns: function() {
            if (null != this.threeStateBtns && 0 != this.threeStateBtns.length)
                if (this.main.isMouseDown) {
                    this.hp.x = openfl_Lib.current.stage.get_mouseX(), this.hp.y = openfl_Lib.current.stage.get_mouseY();
                    for (var e = 0, t = this.threeStateBtns.length; e < t;) {
                        var n = e++;
                        if (null == this.threeStateBtns || null == this.threeStateBtns[n]) break;
                        var l = this.threeStateBtns[n].getBounds(this.stage);
                        this.isSimpleHittest, this.threeStateBtns[n].get_visible() && this.threeStateBtns[n].get_alpha() > 0 && l.contains(this.hp.x, this.hp.y) ? this.threeStateBtns[n].press() : this.threeStateBtns[n].unPress()
                    }
                } else
                    for (var i = 0, s = this.threeStateBtns.length; i < s;) {
                        var a = i++;
                        this.threeStateBtns[a].unPress()
                    }
        },
        close: function() {
            this.main.overlayMaker == this && (this.main.overlayMaker = null), this.destroy()
        },
        destroy: function() {
            var e;
            if (this.removeEventListener("click", $bind(this, this.btnClick)), this.removeEventListener("touchEnd", $bind(this, this.btnClick)), this.removeEventListener("enterFrame", $bind(this, this.updatePr)), this.removeEventListener("enterFrame", $bind(this, this.resizeCheck)), this.moveByResizeCallBack = null, null != this.snapShot && null != this.snapShot.parent && this.snapShot.parent.removeChild(this.snapShot), this.snapShot = null, this.mainBatch = null, null != this.btnsFuntions)
                for (var t = this.btnsFuntions.keys(); t.hasNext();) {
                    var n = t.next();
                    this.btnsArr.h.hasOwnProperty(n) && Std.is(this.btnsArr.h[n], openfl_display_DisplayObject) && null != (e = this.btnsArr.h[n]).parent && e.parent.removeChild(e)
                }
            for (this.updateFunction = null, this.removeOverlay(), this.fill = null, this.btnsArr = null, this.btnsFuntions = null, this.textFields = null; this.get_numChildren() > 0;) this.removeChildAt(0);
            if (this.hp = null, this.mHm = null, this.lastBm = null, this.main = null, null != this.mcsArr) {
                for (; this.mcsArr.length > 0;) this.mcsArr.pop().destroy();
                this.mcsArr = null
            }
            if (null != this.threeStateBtns)
                for (; this.threeStateBtns.length > 0;) this.threeStateBtns.pop().destroy();
            if (this.threeStateBtns = null, null != this.scrollContainers)
                for (; this.scrollContainers.length > 0;) this.scrollContainers.pop().destroy();
            this.scrollContainers = null, null != this.parent && this.parent.removeChild(this)
        },
        __class__: Menu
    });
    var MenuMC = function() {
        this.framesSpeed = 1, this.curDelay = 0, this.loopDelay = 0, this.isPlaying = !0, this.loop = !0, this.totalFrames = 0, this.currentFrame = 0
    };
    $hxClasses.MenuMC = MenuMC, MenuMC.__name__ = ["MenuMC"], MenuMC.__super__ = openfl_display_Bitmap, MenuMC.prototype = $extend(openfl_display_Bitmap.prototype, {
        currentFrame: null,
        totalFrames: null,
        loop: null,
        isPlaying: null,
        loopDelay: null,
        curDelay: null,
        framesSpeed: null,
        batching: null,
        bmdsArr: null,
        update: function(e) {
            if (this.isPlaying && this.get_visible() && 0 != this.get_alpha() && (this.curDelay > 0 && (this.curDelay -= e), this.curDelay <= 0)) {
                if (this.curDelay = 0, this.currentFrame += e / 16.666666666666668 * this.framesSpeed, this.currentFrame >= this.totalFrames) {
                    if (this.loop) return this.currentFrame = 0, this.loopDelay > 0 && (this.curDelay = this.loopDelay), void this.set_bitmapData(this.bmdsArr[this.bmdsArr.length - 1]);
                    this.isPlaying = !1
                }
                this.set_bitmapData(this.bmdsArr[Math.floor(this.currentFrame)]), this.smoothing = !0
            }
        },
        destroy: function() {
            for (this.batching = null; this.bmdsArr.length > 0;) this.bmdsArr.pop();
            this.bmdsArr = null, null != this.parent && this.parent.removeChild(this)
        },
        __class__: MenuMC
    });
    var MovieClipHX = function() {
        this.stopFrames = [], this.__isPlaying = !0
    };
    $hxClasses.MovieClipHX = MovieClipHX, MovieClipHX.__name__ = ["MovieClipHX"], MovieClipHX.prototype = {
        __currentFrame: null,
        __currentFrameLabel: null,
        __currentLabel: null,
        __currentLabels: null,
        __totalFrames: null,
        __isPlaying: null,
        stopFrames: null,
        update: function(e) {
            if (null == e && (e = !0), this.__isPlaying) {
                this.__currentFrameLabel = "";
                for (var t = 0, n = this.__currentLabels.length; t < n;) {
                    var l = t++;
                    if (this.__currentLabels[l].get_frame() == this.__currentFrame) {
                        this.__currentFrameLabel = this.__currentLabels[l].get_name(), this.__currentLabel = this.__currentLabels[l].get_name();
                        break
                    }
                }
                this.__currentFrame++, this.__currentFrame >= this.get_totalFrames() && (this.__currentFrame = 0);
                for (var i = 0, s = this.stopFrames.length; i < s;) {
                    var a = i++;
                    this.stopFrames[a] == this.__currentFrame && (this.__isPlaying = !1)
                }
            }
        },
        get_totalFrames: function() {
            return this.__totalFrames + 1
        },
        __class__: MovieClipHX,
        __properties__: {
            get_totalFrames: "get_totalFrames"
        }
    };
    var openfl_display_DefaultPreloader = function() {
        openfl_display_Sprite.call(this);
        var e = this.getBackgroundColor(),
            t = 0;
        .299 * (e >> 16 & 255) + .587 * (e >> 8 & 255) + .114 * (255 & e) < 70 && (t = 16777215);
        var n = this.getHeight() / 2 - 3.5,
            l = this.getWidth() - 60;
        this.outline = new openfl_display_Sprite, this.outline.get_graphics().beginFill(t, .07), this.outline.get_graphics().drawRect(0, 0, l, 7), this.outline.set_x(30), this.outline.set_y(n), this.outline.set_alpha(0), this.addChild(this.outline), this.progress = new openfl_display_Sprite, this.progress.get_graphics().beginFill(t, .35), this.progress.get_graphics().drawRect(0, 0, l - 4, 3), this.progress.set_x(32), this.progress.set_y(n + 2), this.progress.set_scaleX(0), this.progress.set_alpha(0), this.addChild(this.progress), this.startAnimation = openfl_Lib.getTimer() + 100, this.endAnimation = this.startAnimation + 1e3, this.addEventListener("addedToStage", $bind(this, this.this_onAddedToStage))
    };
    $hxClasses["openfl.display.DefaultPreloader"] = openfl_display_DefaultPreloader, openfl_display_DefaultPreloader.__name__ = ["openfl", "display", "DefaultPreloader"], openfl_display_DefaultPreloader.__super__ = openfl_display_Sprite, openfl_display_DefaultPreloader.prototype = $extend(openfl_display_Sprite.prototype, {
        endAnimation: null,
        outline: null,
        progress: null,
        startAnimation: null,
        getBackgroundColor: function() {
            return openfl_Lib.current.stage.window.config.background
        },
        getHeight: function() {
            var e = openfl_Lib.current.stage.window.config.height;
            return e > 0 ? e : openfl_Lib.current.stage.stageHeight
        },
        getWidth: function() {
            var e = openfl_Lib.current.stage.window.config.width;
            return e > 0 ? e : openfl_Lib.current.stage.stageWidth
        },
        onInit: function() {
            this.addEventListener("enterFrame", $bind(this, this.this_onEnterFrame))
        },
        onLoaded: function() {
            this.removeEventListener("enterFrame", $bind(this, this.this_onEnterFrame)), this.dispatchEvent(new openfl_events_Event("unload"))
        },
        onUpdate: function(e, t) {
            var n = 0;
            t > 0 && (n = e / t) > 1 && (n = 1), this.progress.set_scaleX(n)
        },
        this_onAddedToStage: function(e) {
            this.removeEventListener("addedToStage", $bind(this, this.this_onAddedToStage)), this.onInit(), this.onUpdate(this.get_loaderInfo().bytesLoaded, this.get_loaderInfo().bytesTotal), this.addEventListener("progress", $bind(this, this.this_onProgress)), this.addEventListener("complete", $bind(this, this.this_onComplete))
        },
        this_onComplete: function(e) {
            var t = this;
            e.preventDefault(), this.removeEventListener("progress", $bind(this, this.this_onProgress)), this.removeEventListener("complete", $bind(this, this.this_onComplete)), this.addEventListener("complete", function(e) {
                t.dispatchEvent(new openfl_events_Event("unload"))
            }), this.onLoaded()
        },
        this_onEnterFrame: function(e) {
            var t = (openfl_Lib.getTimer() - this.startAnimation) / (this.endAnimation - this.startAnimation);
            t < 0 && (t = 0), t > 1 && (t = 1), this.outline.set_alpha(t), this.progress.set_alpha(t)
        },
        this_onProgress: function(e) {
            this.onUpdate(0 | e.bytesLoaded, 0 | e.bytesTotal)
        },
        __class__: openfl_display_DefaultPreloader
    });
    var openfl_display_BitmapData = function(e, t, n, l) {
        null == l && (l = -1), null == n && (n = !0), this.transparent = n, e = null == e ? 0 : e, t = null == t ? 0 : t, e = e < 0 ? 0 : e, t = t < 0 ? 0 : t, this.width = e, this.height = t, this.rect = new openfl_geom_Rectangle(0, 0, e, t), e > 0 && t > 0 && (n ? 0 == (-16777216 & l) && (l = 0) : l = -16777216 | 16777215 & l, l = l << 8 | l >> 24 & 255, this.image = new lime_graphics_Image(null, 0, 0, e, t, l), this.image.set_transparent(n), this.__isValid = !0, this.readable = !0), this.__worldTransform = new openfl_geom_Matrix, this.__worldColorTransform = new openfl_geom_ColorTransform
    };
    $hxClasses["openfl.display.BitmapData"] = openfl_display_BitmapData, openfl_display_BitmapData.__name__ = ["openfl", "display", "BitmapData"], openfl_display_BitmapData.__interfaces__ = [openfl_display_IBitmapDrawable], openfl_display_BitmapData.fromCanvas = function(e, t) {
        if (null == t && (t = !0), null == e) return null;
        var n = new openfl_display_BitmapData(0, 0, t, 0);
        return n.__fromImage(lime_graphics_Image.fromCanvas(e)), n.image.set_transparent(t), n
    }, openfl_display_BitmapData.fromImage = function(e, t) {
        if (null == t && (t = !0), null == e || null == e.buffer) return null;
        var n = new openfl_display_BitmapData(0, 0, t, 0);
        return n.__fromImage(e), n.image.set_transparent(t), n
    }, openfl_display_BitmapData.fromTexture = function(e) {
        if (null == e) return null;
        var t = new openfl_display_BitmapData(e.__width, e.__height, !0, 0);
        return t.readable = !1, t.__texture = e.__textureID, t.image = null, t
    }, openfl_display_BitmapData.loadFromFile = function(e) {
        return lime_graphics_Image.loadFromFile(e).then(function(e) {
            return lime_app_Future.withValue(openfl_display_BitmapData.fromImage(e))
        })
    }, openfl_display_BitmapData.prototype = {
        height: null,
        image: null,
        readable: null,
        rect: null,
        transparent: null,
        width: null,
        __buffer: null,
        __bufferAlpha: null,
        __bufferData: null,
        __framebuffer: null,
        __isValid: null,
        __surface: null,
        __texture: null,
        __textureVersion: null,
        __transform: null,
        __worldColorTransform: null,
        __worldTransform: null,
        clone: function() {
            if (this.__isValid) {
                if (this.readable || null != this.image) return openfl_display_BitmapData.fromImage(this.image.clone(), this.transparent);
                var e = new openfl_display_BitmapData(0, 0, this.transparent, 0);
                return e.width = this.width, e.height = this.height, e.rect.copyFrom(this.rect), e.__framebuffer = this.__framebuffer, e.__texture = this.__texture, e.__isValid = !0, e
            }
            return new openfl_display_BitmapData(this.width, this.height, this.transparent, 0)
        },
        colorTransform: function(e, t) {
            this.readable && this.image.colorTransform(e.__toLimeRectangle(), t.__toLimeColorMatrix())
        },
        copyPixels: function(e, t, n, l, i, s) {
            null == s && (s = !1), this.readable && null != e && this.image.copyPixels(e.image, t.__toLimeRectangle(), n.__toLimeVector2(), null != l ? l.image : null, null != i ? i.__toLimeVector2() : null, s)
        },
        dispose: function() {
            this.image = null, this.width = 0, this.height = 0, this.rect = null, this.__isValid = !1, this.readable = !1, this.__surface = null, this.__buffer = null, this.__framebuffer = null, this.__texture = null
        },
        draw: function(e, t, n, l, i, s) {
            if (null == s && (s = !1), null == t && (t = new openfl_geom_Matrix, null != e.__transform && (t.copyFrom(e.__transform), t.tx = 0, t.ty = 0)), this.readable) {
                if (null != n) {
                    var a = Math.ceil(Reflect.getProperty(e, "width")),
                        r = Math.ceil(Reflect.getProperty(e, "height")),
                        o = new openfl_display_BitmapData(a, r, !0, 0);
                    o.draw(e), o.colorTransform(o.rect, n), e = o
                }
                lime_graphics_utils_ImageCanvasUtil.convertToCanvas(this.image);
                var d = this.image.buffer,
                    _ = new openfl__$internal_renderer_RenderSession;
                _.context = d.__srcContext, _.allowSmoothing = s, _.roundPixels = !0, _.maskManager = new openfl__$internal_renderer_canvas_CanvasMaskManager(_), s || (d.__srcContext.imageSmoothingEnabled = !1, d.__srcContext.msImageSmoothingEnabled = !1, d.__srcContext.imageSmoothingEnabled = !1), null != i && _.maskManager.pushRect(i, new openfl_geom_Matrix);
                var h = e.__worldTransform;
                e.__updateTransforms(t), e.__updateChildren(!1), e.__renderCanvas(_), e.__updateTransforms(h), e.__updateChildren(!0), s || (d.__srcContext.imageSmoothingEnabled = !0, d.__srcContext.msImageSmoothingEnabled = !0, d.__srcContext.imageSmoothingEnabled = !0), null != i && _.maskManager.popRect(), d.__srcContext.setTransform(1, 0, 0, 1, 0, 0), d.__srcImageData = null, d.data = null, this.image.dirty = !0, this.image.version++
            } else if (null != lime_graphics_opengl_GL.context) {
                var p = lime_graphics_opengl_GL.context;
                p.bindFramebuffer(p.FRAMEBUFFER, this.__getFramebuffer(p)), p.viewport(0, 0, this.width, this.height);
                var c = new openfl__$internal_renderer_opengl_GLRenderer(openfl_Lib.current.stage, p, !1);
                c.resize(this.width, this.height), c.renderSession.shaderManager = js_Boot.__cast(openfl_Lib.current.stage.__renderer, openfl__$internal_renderer_opengl_GLRenderer).renderSession.shaderManager;
                var Q = e.__worldTransform;
                e.__updateTransforms(t), e.__updateChildren(!1), e.__renderGL(c.renderSession), e.__updateTransforms(Q), e.__updateChildren(!0), p.bindFramebuffer(p.FRAMEBUFFER, null)
            }
        },
        getBuffer: function(e, t) {
            if (null == this.__buffer) {
                var n, l = [this.width, this.height, 0, 1, 1, t, 0, this.height, 0, 0, 1, t, this.width, 0, 0, 1, 0, t, 0, 0, 0, 0, 0, t];
                n = null != l ? new Float32Array(l) : null, this.__bufferData = n, this.__bufferAlpha = t, this.__buffer = e.createBuffer(), e.bindBuffer(e.ARRAY_BUFFER, this.__buffer), e.bufferData(e.ARRAY_BUFFER, this.__bufferData, e.STATIC_DRAW)
            } else this.__bufferAlpha != t && (this.__bufferData[5] = t, this.__bufferData[11] = t, this.__bufferData[17] = t, this.__bufferData[23] = t, this.__bufferAlpha = t, e.bindBuffer(e.ARRAY_BUFFER, this.__buffer), e.bufferData(e.ARRAY_BUFFER, this.__bufferData, e.STATIC_DRAW));
            return this.__buffer
        },
        getPixel32: function(e, t) {
            return this.readable ? this.image.getPixel32(e, t, 1) : 0
        },
        getTexture: function(e) {
            if (!this.__isValid) return null;
            if (null == this.__texture && (this.__texture = e.createTexture(), e.bindTexture(e.TEXTURE_2D, this.__texture), e.texParameteri(e.TEXTURE_2D, e.TEXTURE_WRAP_S, e.CLAMP_TO_EDGE), e.texParameteri(e.TEXTURE_2D, e.TEXTURE_WRAP_T, e.CLAMP_TO_EDGE), e.texParameteri(e.TEXTURE_2D, e.TEXTURE_MAG_FILTER, e.NEAREST), e.texParameteri(e.TEXTURE_2D, e.TEXTURE_MIN_FILTER, e.NEAREST), this.__textureVersion = -1), lime_graphics_utils_ImageCanvasUtil.sync(this.image, !1), null != this.image && this.image.version != this.__textureVersion) {
                var t, n;
                null != this.__surface && lime_graphics_cairo__$CairoSurface_CairoSurface_$Impl_$.flush(this.__surface), 1 == this.image.buffer.bitsPerPixel ? (t = e.ALPHA, n = e.ALPHA) : (t = e.RGBA, n = e.RGBA), e.bindTexture(e.TEXTURE_2D, this.__texture);
                var l = this.image;
                l.type == lime_graphics_ImageType.DATA || l.get_premultiplied() ? !l.get_premultiplied() && l.get_transparent() && e.pixelStorei(e.UNPACK_PREMULTIPLY_ALPHA_WEBGL, 1) : e.pixelStorei(e.UNPACK_PREMULTIPLY_ALPHA_WEBGL, 1), 0 != l.get_format() && (l = l.clone()).set_format(0), l.type == lime_graphics_ImageType.DATA ? e.texImage2D(e.TEXTURE_2D, 0, t, l.buffer.width, l.buffer.height, 0, n, e.UNSIGNED_BYTE, l.get_data()) : e.texImage2D(e.TEXTURE_2D, 0, t, n, e.UNSIGNED_BYTE, l.get_src()), e.bindTexture(e.TEXTURE_2D, null), this.__textureVersion = this.image.version
            }
            return this.readable || null == this.image || (this.__surface = null, this.image = null), this.__texture
        },
        lock: function() {},
        setPixel32: function(e, t, n) {
            this.readable && this.image.setPixel32(e, t, n, 1)
        },
        unlock: function(e) {},
        __fromBase64: function(e, t, n) {
            var l = this;
            lime_graphics_Image.fromBase64(e, t, function(e) {
                l.__fromImage(e), null != n && n(l)
            })
        },
        __fromImage: function(e) {
            null != e && null != e.buffer && (this.image = e, this.width = e.width, this.height = e.height, this.rect = new openfl_geom_Rectangle(0, 0, e.width, e.height), this.readable = !0, this.__isValid = !0)
        },
        __getFramebuffer: function(e) {
            return null == this.__framebuffer && (this.getTexture(e), this.__framebuffer = e.createFramebuffer(), e.bindFramebuffer(e.FRAMEBUFFER, this.__framebuffer), e.framebufferTexture2D(e.FRAMEBUFFER, e.COLOR_ATTACHMENT0, e.TEXTURE_2D, this.__texture, 0)), this.__framebuffer
        },
        __renderCanvas: function(e) {
            if (this.readable) {
                this.image.type == lime_graphics_ImageType.DATA && lime_graphics_utils_ImageCanvasUtil.convertToCanvas(this.image);
                var t = e.context;
                null == this.__worldTransform && (this.__worldTransform = new openfl_geom_Matrix), t.globalAlpha = 1;
                var n = this.__worldTransform;
                e.roundPixels ? t.setTransform(n.a, n.b, n.c, n.d, 0 | n.tx, 0 | n.ty) : t.setTransform(n.a, n.b, n.c, n.d, n.tx, n.ty), t.drawImage(this.image.get_src(), 0, 0)
            }
        },
        __renderGL: function(e) {
            var t = e.renderer,
                n = e.gl;
            e.blendModeManager.setBlendMode(10);
            var l = e.shaderManager.defaultShader;
            l.get_data().uImage0.input = this, l.get_data().uImage0.smoothing = e.allowSmoothing && e.upscaled, l.get_data().uMatrix.value = t.getMatrix(this.__worldTransform), e.shaderManager.setShader(l), n.bindBuffer(n.ARRAY_BUFFER, this.getBuffer(n, 1)), n.vertexAttribPointer(l.get_data().aPosition.index, 3, n.FLOAT, !1, 24, 0), n.vertexAttribPointer(l.get_data().aTexCoord.index, 2, n.FLOAT, !1, 24, 12), n.vertexAttribPointer(l.get_data().aAlpha.index, 1, n.FLOAT, !1, 24, 20), n.drawArrays(n.TRIANGLE_STRIP, 0, 4)
        },
        __updateChildren: function(e) {},
        __updateTransforms: function(e) {
            null == e ? this.__worldTransform.identity() : this.__worldTransform = e
        },
        __class__: openfl_display_BitmapData
    };
    var SponsorLogo = function(e, t, n, l, i) {
        null == l && (l = -1), null == n && (n = !0), openfl_display_BitmapData.call(this, 0, 0, n, l), null != SponsorLogo.preload ? this.__fromImage(SponsorLogo.preload) : this.__fromBase64(haxe_Resource.getString(SponsorLogo.resourceName), SponsorLogo.resourceType, function(e) {
            null == SponsorLogo.preload && (SponsorLogo.preload = e.image), null != i && i(e)
        })
    };
    $hxClasses.SponsorLogo = SponsorLogo, SponsorLogo.__name__ = ["SponsorLogo"], SponsorLogo.__super__ = openfl_display_BitmapData, SponsorLogo.prototype = $extend(openfl_display_BitmapData.prototype, {
        __class__: SponsorLogo
    });
    var GameLogo = function(e, t, n, l, i) {
        null == l && (l = -1), null == n && (n = !0), openfl_display_BitmapData.call(this, 0, 0, n, l)
    };
    $hxClasses.GameLogo = GameLogo, GameLogo.__name__ = ["GameLogo"], GameLogo.__super__ = openfl_display_BitmapData, GameLogo.prototype = $extend(openfl_display_BitmapData.prototype, {
        __class__: GameLogo
    });
    var LoadMeter = function(e, t, n, l, i) {
        null == l && (l = -1), null == n && (n = !0), openfl_display_BitmapData.call(this, 0, 0, n, l), this.__fromBase64(haxe_Resource.getString(LoadMeter.resourceName), LoadMeter.resourceType, function(e) {
            null == LoadMeter.preload && (LoadMeter.preload = e.image), null != i && i(e)
        })
    };
    $hxClasses.LoadMeter = LoadMeter, LoadMeter.__name__ = ["LoadMeter"], LoadMeter.__super__ = openfl_display_BitmapData, LoadMeter.prototype = $extend(openfl_display_BitmapData.prototype, {
        __class__: LoadMeter
    });
    var LoadBarContur = function(e, t, n, l, i) {
        null == l && (l = -1), null == n && (n = !0), openfl_display_BitmapData.call(this, 0, 0, n, l)
    };
    $hxClasses.LoadBarContur = LoadBarContur, LoadBarContur.__name__ = ["LoadBarContur"], LoadBarContur.__super__ = openfl_display_BitmapData, LoadBarContur.prototype = $extend(openfl_display_BitmapData.prototype, {
        __class__: LoadBarContur
    });
    var LoadBarFill = function(e, t, n, l, i) {
        null == l && (l = -1), null == n && (n = !0), openfl_display_BitmapData.call(this, 0, 0, n, l)
    };
    $hxClasses.LoadBarFill = LoadBarFill, LoadBarFill.__name__ = ["LoadBarFill"], LoadBarFill.__super__ = openfl_display_BitmapData, LoadBarFill.prototype = $extend(openfl_display_BitmapData.prototype, {
        __class__: LoadBarFill
    });
    var OurLogo = function(e, t, n, l, i) {
        null == l && (l = -1), null == n && (n = !0), openfl_display_BitmapData.call(this, 0, 0, n, l), null != OurLogo.preload ? this.__fromImage(OurLogo.preload) : this.__fromBase64(haxe_Resource.getString(OurLogo.resourceName), OurLogo.resourceType, function(e) {
            null == OurLogo.preload && (OurLogo.preload = e.image), null != i && i(e)
        })
    };
    $hxClasses.OurLogo = OurLogo, OurLogo.__name__ = ["OurLogo"], OurLogo.__super__ = openfl_display_BitmapData, OurLogo.prototype = $extend(openfl_display_BitmapData.prototype, {
        __class__: OurLogo
    });
    var Preloader = function() {
        this.wasHeight = 0, this.wasWidth = 0, this.horseAng = 0, this.inited = !1, openfl_display_DefaultPreloader.call(this), Preloader.instance = this;
        var isMobileBrowser = !1,
            evalString = "";
        evalString += "/Android|webOS|iPhone|iPad|iPod|BlackBerry|Windows Phone|IEMobile|Opera Mini/i.test(navigator.userAgent)", isMobileBrowser = eval(evalString), isMobileBrowser || eval("document.getElementById('openfl-content').style.overflow = 'hidden'"), this.mainCont = new openfl_display_Sprite, this.addChild(this.mainCont), this.sponsorLogo = new openfl_display_Sprite, this.sponsorBm = new openfl_display_Bitmap(new SponsorLogo(0, 0), 1, !0), this.sponsorLogo.addChild(this.sponsorBm), this.gameLogo = new openfl_display_Bitmap(new GameLogo(0, 0), 1, !0), this.barContur = new openfl_display_Bitmap(new LoadBarContur(0, 0)), this.bar = new openfl_display_Bitmap(new LoadBarFill(0, 0)), this.loadMetrCont = new openfl_display_Sprite, this.loadMetr = new openfl_display_Bitmap(new LoadMeter(0, 0), 1, !0), this.ourLogo = new openfl_display_Sprite, this.ourLogo.addChild(new openfl_display_Bitmap(new OurLogo(0, 0), 1, !0)), this.getChildAt(0).set_visible(!1), this.getChildAt(1).set_visible(!1);
		new Sounds
    };
    $hxClasses.Preloader = Preloader, Preloader.__name__ = ["Preloader"], Preloader.remove = function() {
        Preloader.instance.onLoadedRemove()
    }, Preloader.getSize = function() {
        var e = 0,
            t = 0;
        return window.innerWidth > 0 ? (e = window.innerWidth, t = window.innerHeight) : null != window.document.documentElement && (window.document.documentElement.clientWidth > 0 || window.document.documentElement.clientHeight > 0) ? (e = window.document.documentElement.clientWidth, t = window.document.documentElement.clientHeight) : null != window.document.body && (window.document.body.clientWidth > 0 || window.document.body.clientHeight > 0) && (e = window.document.body.clientWidth, t = window.document.body.clientHeight), {
            width: e,
            height: t
        }
    }, Preloader.__super__ = openfl_display_DefaultPreloader, Preloader.prototype = $extend(openfl_display_DefaultPreloader.prototype, {
        mainCont: null,
        sponsorBm: null,
        sponsorLogo: null,
        gameLogo: null,
        loadMetr: null,
        loadMetrCont: null,
        barContur: null,
        bar: null,
        ourLogo: null,
        inited: null,
        overlay: null,
        horseAng: null,
        wasWidth: null,
        wasHeight: null,
        init: function() {
            var e = Preloader.getSize();
            this.wasWidth = e.width, this.wasHeight = e.height, this.sponsorLogo.set_x(-this.sponsorLogo.get_width() / 2), this.inited || this.mainCont.addChild(this.sponsorLogo);
            this.sponsorBm.__graphics;
            if (this.mainCont.set_scaleX(this.mainCont.set_scaleY(1)), this.gameLogo.set_width(e.width), this.gameLogo.get_scaleX() > 1 && this.gameLogo.set_scaleX(this.gameLogo.set_scaleY(1)), this.gameLogo.set_scaleY(this.gameLogo.get_scaleX()), this.gameLogo.set_x(-this.gameLogo.get_width() / 2), this.gameLogo.set_y(this.sponsorLogo.get_y() + this.sponsorLogo.get_height() + 60), this.inited || this.mainCont.addChild(this.gameLogo), this.loadMetr.set_x(-this.loadMetr.get_width() / 2), this.loadMetr.set_y(-this.loadMetr.get_height()), this.inited || this.loadMetrCont.addChild(this.loadMetr), this.loadMetrCont.set_x(-this.bar.get_width() / 2), this.loadMetrCont.set_y(this.gameLogo.get_y() + this.gameLogo.get_height() + 50), this.inited || this.mainCont.addChild(this.loadMetrCont), this.bar.set_x(-this.bar.bitmapData.width / 2), this.bar.set_y(this.loadMetrCont.get_y() + 5), this.barContur.set_x(this.bar.get_x() - 2), this.barContur.set_y(this.bar.get_y() - 2), this.inited || this.mainCont.addChild(this.barContur), this.inited || this.mainCont.addChild(this.bar), this.bar.set_width(1), this.ourLogo.set_scaleX(this.ourLogo.set_scaleY(.8)), this.ourLogo.set_x(-this.ourLogo.get_width() / 2), this.ourLogo.set_y(this.barContur.get_y() + this.barContur.get_height() + 50), this.ourLogo.set_scaleX(this.ourLogo.set_scaleY(.01)), this.ourLogo.set_alpha(0), this.inited || this.mainCont.addChild(this.ourLogo), this.set_x(e.width / 2), this.mainCont.get_height() > e.height) {
                var t = e.height / (this.mainCont.get_height() + 50);
                this.mainCont.set_scaleX(this.mainCont.set_scaleY(t))
            }
            this.set_y(e.height / 2 - this.mainCont.get_height() / 2), null == this.overlay && (this.overlay = new openfl_display_Bitmap(new openfl_display_BitmapData(100, 100, !0, 4128908)), this.addChildAt(this.overlay, this.getChildIndex(this.mainCont))), this.overlay.set_width(e.width), this.overlay.set_height(e.height), this.overlay.set_x(-this.get_x()), this.overlay.set_y(-this.get_y()), this.inited = !0, openfl_Lib.current.stage.addEventListener("resize", $bind(this, this.stage_onResize))
        },
        stage_onResize: function(e) {
            this.init()
        },
        onUpdate: function(e, t) {
            this.init(), openfl_display_DefaultPreloader.prototype.onUpdate.call(this, e, t), this.bar.set_width(218 * e / t), this.loadMetrCont.set_x(this.bar.get_x() + this.bar.get_width()), this.horseAng += .6, this.loadMetrCont.set_rotation(15 * Math.sin(this.horseAng))
        },
        onLoaded: function() {
            var e = window.navigator.userAgent.indexOf("SM-G900") > -1,
                t = window.navigator.userAgent.indexOf("SamsungBrowser") > -1;
            e && t || openfl_display_DefaultPreloader.prototype.onLoaded.call(this)
        },
        onLoadedRemove: function() {
            openfl_display_DefaultPreloader.prototype.onLoaded.call(this)
        },
        __class__: Preloader
    });
    var ProgressBarData = function(e) {
        if (this.fillWidth = 0, this.toolData = e, this.desk = Desk.current, this.parts = this.desk.getElementsByNamePrefix_(e.progressBar), this.fill = this.desk.getElementByName(e.progressBar + "_fill"), null == this.fill && (this.fill = this.desk.getElementByName(e.progressBar + "_fill_hidden")), HxOverrides.remove(this.parts, this.fill), null == this.fill) throw new js__$Boot_HaxeError(new openfl_errors_Error("Progress Bar with name:" + e.progressBar + " doesn't have fill line"));
        for (var t = 0, n = this.parts; t < n.length;) {
            var l = n[t];
            ++t, l.set_visible(!0)
        }
        this.fill.set_visible(!0), this.fill.set_scaleX(this.fill.set_scaleY(1)), this.fillWidth = this.fill.get_width(), this.fill.set_scaleX(.001)
    };
    $hxClasses.ProgressBarData = ProgressBarData, ProgressBarData.__name__ = ["ProgressBarData"], ProgressBarData.prototype = {
        parts: null,
        fill: null,
        toolData: null,
        desk: null,
        fillWidth: null,
        setProgress: function(e) {
            e > 100 && (e = 100), e < 0 && (e = 0), this.fill.set_scaleX(e / 100)
        },
        onEnd: function() {
            if (null != this.toolData.hideProgressOnEnd && this.toolData.hideProgressOnEnd) {
                for (var e = 0, t = this.parts; e < t.length;) {
                    var n = t[e];
                    ++e, n.set_visible(!1)
                }
                this.fill.set_visible(!1)
            }
        },
        __class__: ProgressBarData
    };
    var PuzzleMode = function(e) {
        this.finished = !1, this.target0ToSetOnResPos = null, this.dummyResizeMarker = null, this.firstTargetData = {
            x: 0,
            y: 0
        }, this.targetsCont = new openfl_display_Sprite, this.snapRadius = 40, this.mdP = new openfl_geom_Point, this.dynamicPuzzleZone = !1, this.data = null, BaseGameMode.call(this), this.data = e, this.targets = this.desk.getTargets(e.puzzlePartsTarget), this.targetsPoses = [];
        for (var t = 0, n = this.targets.length; t < n;) {
            var l = t++;
            this.targetsPoses.push({
                x: this.targets[l].get_x(),
                y: this.targets[l].get_y()
            })
        }
        var i = Desk.current.levels.initElementsFromData([this.targets[0].mainData])[0];
        if (this.targets[0].parent.addChildAt(i, this.targets[0].parent.getChildIndex(this.targets[0])), this.dummyResizeMarker = this.targets[0], this.dummyResizeMarker.set_visible(!1), i.set_x(this.dummyResizeMarker.get_x()), i.set_y(this.dummyResizeMarker.get_y()), this.targets[0] = i, this.target0ToSetOnResPos = i, this.rememberFirstTargetData(), null != e.puzzleZone) {
            var s = this.desk.getElementByName(e.puzzleZone);
            this.spreadRect = s.getBounds(this.desk.levels)
        } else this.spreadRect = new openfl_geom_Rectangle(-Desk.get_leftLevels(), -Desk.get_topLevels(), Desk.get_sWidthLevels(), Desk.get_sHeightLevels()), this.dynamicPuzzleZone = !0;
        this.randomizePuzzlePartsPozes(), this.targetsByChildIndex = this.targets.slice(), this.targetsByChildIndex.sort($bind(this, this.sortByParentIDX)), this.desk.levels.addChildAt(this.targetsCont, this.targetsByChildIndex[0].parent.getChildIndex(this.targetsByChildIndex[0]));
        for (var a = 0, r = this.targetsByChildIndex.length; a < r;) {
            var o = a++;
            this.targetsCont.addChildAt(this.targetsByChildIndex[o], 0)
        }
        if (null != e.snapRadius && (this.snapRadius = e.snapRadius), null != e.initAction) {
            var d = e.initAction;
            new ToolActions(d).start()
        }
    };
    $hxClasses.PuzzleMode = PuzzleMode, PuzzleMode.__name__ = ["PuzzleMode"], PuzzleMode.__super__ = BaseGameMode, PuzzleMode.prototype = $extend(BaseGameMode.prototype, {
        data: null,
        targets: null,
        targetsByChildIndex: null,
        targetsPoses: null,
        spreadRect: null,
        dynamicPuzzleZone: null,
        dragEl: null,
        mdP: null,
        snapRadius: null,
        targetsCont: null,
        firstTargetData: null,
        dummyResizeMarker: null,
        target0ToSetOnResPos: null,
        finished: null,
        rememberFirstTargetData: function() {
            this.firstTargetData.x = this.dummyResizeMarker.get_x(), this.firstTargetData.y = this.dummyResizeMarker.get_y()
        },
        randomizePuzzlePartsPozes: function() {
            for (var e = 0, t = this.targets; e < t.length;) {
                var n = t[e];
                ++e;
                var l = n.getBounds(this.desk.levels),
                    i = this.spreadRect.x + (this.spreadRect.width - l.width) * Math.random(),
                    s = this.spreadRect.y + (this.spreadRect.height - l.height) * Math.random();
                n.set_x(i + (n.get_x() - l.x)), n.set_y(s + (n.get_y() - l.y))
            }
        },
        sortByParentIDX: function(e, t) {
            return null == e.parent || null == t.parent ? 0 : e.parent.getChildIndex(e) - e.parent.getChildIndex(t) < 0 ? 1 : -1
        },
        onResize: function() {
            BaseGameMode.prototype.onResize.call(this);
            var e = this.dummyResizeMarker.get_x() - this.firstTargetData.x,
                t = this.dummyResizeMarker.get_y() - this.firstTargetData.y;
            this.target0ToSetOnResPos.set_x(this.dummyResizeMarker.get_x()), this.target0ToSetOnResPos.set_y(this.dummyResizeMarker.get_y());
            for (var n = 0, l = this.targetsPoses; n < l.length;) {
                var i = l[n];
                ++n, i.x += e, i.y += t
            }
            this.rememberFirstTargetData(), this.dynamicPuzzleZone && (this.spreadRect = new openfl_geom_Rectangle(-Desk.get_leftLevels(), -Desk.get_topLevels(), Desk.get_sWidthLevels(), Desk.get_sHeightLevels()), this.randomizePuzzlePartsPozes())
        },
        onMDown: function() {
            if (BaseGameMode.prototype.onMDown.call(this), !this.finished) {
                this.dragEl = null;
                for (var e = 0, t = this.targetsByChildIndex.length; e < t;) {
                    var n = e++,
                        l = this.targetsByChildIndex[n];
                    if (-1 != HxOverrides.indexOf(this.targets, l, 0) && this.desk.hitsMouse(l)) {
                        this.dragEl = l, this.targetsCont.setChildIndex(this.dragEl, this.targetsCont.get_numChildren() - 1);
                        break
                    }
                }
                this.mdP.x = this.desk.levels.get_mouseX(), this.mdP.y = this.desk.levels.get_mouseY()
            }
        },
        onMUp: function() {
            if (BaseGameMode.prototype.onMUp.call(this), !this.finished) {
                if (null != this.dragEl) {
                    var e = HxOverrides.indexOf(this.targets, this.dragEl, 0),
                        t = this.targetsPoses[e].x - this.dragEl.get_x(),
                        n = this.targetsPoses[e].y - this.dragEl.get_y();
                    Math.sqrt(t * t + n * n) <= this.snapRadius && (motion_Actuate.tween(this.dragEl, .23, {
                        x: this.targetsPoses[e].x,
                        y: this.targetsPoses[e].y
                    }).ease(motion_easing_Quad.get_easeInOut()), this.targets.splice(e, 1), this.targetsPoses.splice(e, 1), HxOverrides.remove(this.targetsByChildIndex, this.dragEl), this.targetsByChildIndex.push(this.dragEl))
                }
                this.dragEl = null;
                for (var l = 0, i = this.targetsByChildIndex.length; l < i;) {
                    var s = l++;
                    this.targetsCont.setChildIndex(this.targetsByChildIndex[this.targetsByChildIndex.length - 1 - s], s)
                }
                0 == this.targets.length && (this.finished = !0, motion_Actuate.timer(.5).onComplete($bind(this, this.finishMode)))
            }
        },
        finishMode: function() {
            if (null != this.data.completeAction) {
                var e = this.data.completeAction;
                new ToolActions(e).start()
            }
        },
        update: function(e) {
            if (BaseGameMode.prototype.update.call(this, e), !this.finished) {
                if (null != this.dragEl) {
                    var t = this.dragEl;
                    t.set_x(t.get_x() + (this.desk.levels.get_mouseX() - this.mdP.x));
                    var n = this.dragEl;
                    n.set_y(n.get_y() + (this.desk.levels.get_mouseY() - this.mdP.y))
                }
                this.mdP.x = this.desk.levels.get_mouseX(), this.mdP.y = this.desk.levels.get_mouseY()
            }
        },
        __class__: PuzzleMode
    });
    var Reflect = function() {};
    $hxClasses.Reflect = Reflect, Reflect.__name__ = ["Reflect"], Reflect.field = function(e, t) {
        try {
            return e[t]
        } catch (e) {
            return e instanceof js__$Boot_HaxeError && (e = e.val), null
        }
    }, Reflect.setField = function(e, t, n) {
        e[t] = n
    }, Reflect.getProperty = function(e, t) {
        var n;
        return null == e ? null : e.__properties__ && (n = e.__properties__["get_" + t]) ? e[n]() : e[t]
    }, Reflect.setProperty = function(e, t, n) {
        var l;
        e.__properties__ && (l = e.__properties__["set_" + t]) ? e[l](n) : e[t] = n
    }, Reflect.callMethod = function(e, t, n) {
        return t.apply(e, n)
    }, Reflect.fields = function(e) {
        var t = [];
        if (null != e) {
            var n = Object.prototype.hasOwnProperty;
            for (var l in e) "__id__" != l && "hx__closures__" != l && n.call(e, l) && t.push(l)
        }
        return t
    }, Reflect.isFunction = function(e) {
        return "function" == typeof e && !(e.__name__ || e.__ename__)
    }, Reflect.compare = function(e, t) {
        return e == t ? 0 : e > t ? 1 : -1
    }, Reflect.compareMethods = function(e, t) {
        return e == t || !(!Reflect.isFunction(e) || !Reflect.isFunction(t)) && (e.scope == t.scope && e.method == t.method && null != e.method)
    }, Reflect.deleteField = function(e, t) {
        return !!Object.prototype.hasOwnProperty.call(e, t) && (delete e[t], !0)
    };
    var SavesHelper = function() {};
    $hxClasses.SavesHelper = SavesHelper, SavesHelper.__name__ = ["SavesHelper"], SavesHelper.loadSave = function(e, t) {
        if (null != t) {
            DominoModeBase.playersTypes = t.playersTypes, e.changeTurnNextFrame = !1, e.numPlayers = DominoModeBase.playersTypes.length;
            for (var n = 0, l = DominoModeBase.playersTypes.length; n < l;) {
                var i = n++;
                e.players.push("computer" == DominoModeBase.playersTypes[i] ? new DrawDominoAI(e) : new HumanPlayer(e))
            }
            DominoModeBase.playersScores = t.playersScores, DominoModeBase.roundScores = t.roundScores, DominoModeBase.set_aiLevel(t.aiLevel), e.allowBoneyard = t.allowBoneyard, e.curTurn = t.curTurn, e.numPlayers = t.numPlayers, DominoModeBase.curRound = t.curRound, DominoModeBase.lastWinner = t.lastWinner, e.pileList = [];
            for (var s = 0, a = t.pileList.length; s < a;) {
                var r = s++;
                e.pileList.push(SavesHelper.getDominoFromSaveDominoData(e, t.pileList[r], !0))
            }
            e.boneyard = [];
            for (var o = 0, d = t.boneyard.length; o < d;) {
                var _ = o++;
                e.boneyard.push(SavesHelper.getDominoFromSaveDominoData(e, t.boneyard[_], !0))
            }
            for (var h = 0, p = t.playersHands.length; h < p;) {
                var c = h++;
                e.players[c].hand = [];
                for (var Q = 0, U = t.playersHands[c].length; Q < U;) {
                    var m = Q++;
                    e.players[c].hand.push(SavesHelper.getDominoFromSaveDominoData(e, t.playersHands[c][m], !0))
                }
            }
            SavesHelper.loadDominoStackTo(e, t.leftStack, e.leftStack, !0), SavesHelper.loadDominoStackTo(e, t.rightStack, e.rightStack, !0), SavesHelper.loadDominoStackTo(e, t.topStack, e.topStack, !0), SavesHelper.loadDominoStackTo(e, t.bottomStack, e.bottomStack, !0)
        }
    }, SavesHelper.loadDominoStackTo = function(e, t, n, l) {
        if (null == l && (l = !1), null != t && null != n) {
            l && n.clear();
            for (var i = 0, s = t.dominoArr.length; i < s;) {
                var a = i++;
                n.dominoArr.push(SavesHelper.getDominoFromSaveDominoData(e, t.dominoArr[a], !0))
            }
            for (var r = 0, o = t.dominoVals.length; r < o;) {
                var d = r++;
                n.dominoVals.push(t.dominoVals[d])
            }
        }
    }, SavesHelper.getDominoFromSaveDominoData = function(e, t, n) {
        null == n && (n = !0);
        for (var l = 0, i = e.deck; l < i.length;) {
            var s = i[l];
            if (++l, s.get_val1() == t.vals[0] && s.get_val2() == t.vals[1]) {
                if (n) return s.canPlay = t.canPlay, t.opened && s.open(!1), s.set_direction(t.direction), s.set_highlighted(t.highlighted), s.set_x(t.x), s.set_y(t.y), SavesHelper.setDominoParent(e, s, t.parent), s;
                break
            }
        }
        return null
    }, SavesHelper.setDominoParent = function(e, t, n) {
        switch (n) {
            case 1:
                e.dominoCont.addChild(t);
                break;
            case 2:
                e.pileDominoesCont.addChild(t);
                break;
            case 3:
                e.topPileDominoesCont.addChild(t);
                break;
            case 4:
                e.boneyardCont.addChild(t);
                break;
            case 5:
                e.boneyardDominoCont.addChild(t);
                break;
            case 6:
                e.boneyardAnimTopCont.addChild(t);
                break;
            case 7:
                Desk.current.levels.addChild(t)
        }
    }, SavesHelper.getModeSaveData = function(e) {
        for (var t = [], n = 0, l = e.players.length; n < l;) {
            var i = n++;
            t[i] = SavesHelper.getDominoArrSaveData(e, e.players[i].hand)
        }
        return {
            playersTypes: DominoModeBase.playersTypes,
            playersScores: DominoModeBase.playersScores,
            roundScores: DominoModeBase.roundScores,
            aiLevel: DominoModeBase.get_aiLevel(),
            allowBoneyard: e.allowBoneyard,
            curTurn: e.curTurn,
            numPlayers: e.numPlayers,
            curRound: DominoModeBase.curRound,
            lastWinner: DominoModeBase.lastWinner,
            boneyard: SavesHelper.getDominoArrSaveData(e, e.boneyard),
            pileList: SavesHelper.getDominoArrSaveData(e, e.pileList),
            leftStack: SavesHelper.getDominoStackSaveData(e, e.leftStack),
            rightStack: SavesHelper.getDominoStackSaveData(e, e.rightStack),
            topStack: SavesHelper.getDominoStackSaveData(e, e.topStack),
            bottomStack: SavesHelper.getDominoStackSaveData(e, e.bottomStack),
            playersHands: t
        }
    }, SavesHelper.getDominoArrSaveData = function(e, t) {
        for (var n = [], l = 0, i = t.length; l < i;) {
            var s = l++;
            n.push(SavesHelper.getDominoSaveData(e, t[s]))
        }
        return n
    }, SavesHelper.getDominoSaveData = function(e, t) {
        return {
            vals: t.vals,
            direction: t.direction,
            canPlay: t.canPlay,
            opened: t.opened,
            highlighted: t.highlighted,
            parent: SavesHelper.getDominoParentForSave(e, t),
            x: t.get_x(),
            y: t.get_y()
        }
    }, SavesHelper.getDominoParentForSave = function(e, t) {
        return t.parent == e.dominoCont ? 1 : t.parent == e.pileDominoesCont ? 2 : t.parent == e.topPileDominoesCont ? 3 : t.parent == e.boneyardCont ? 4 : t.parent == e.boneyardDominoCont ? 5 : t.parent == e.boneyardAnimTopCont ? 6 : t.parent == Desk.current.levels ? 7 : 0
    }, SavesHelper.getDominoStackSaveData = function(e, t) {
        if (null == t) return null;
        for (var n = [], l = [], i = 0, s = t.get_length(); i < s;) {
            var a = i++;
            n.push(SavesHelper.getDominoSaveData(e, t.dominoAt(a))), l.push(t.valAt(a))
        }
        return {
            dominoArr: n,
            dominoVals: l
        }
    };
    var ScrollContainer = function() {
        this.scrolled = !1, this.verLineSize = 0, this.isVerLineScrolling = !1, this.isVerScrollLine = !1, this.speedY = 0, this.speedX = 0, this.isMDown = !1, this.removedListeners = !1, this.doSimpleHorizontalScroll = !1, this.doSimpleVerticalScroll = !1
    };
    $hxClasses.ScrollContainer = ScrollContainer, ScrollContainer.__name__ = ["ScrollContainer"], ScrollContainer.__super__ = openfl_display_Sprite, ScrollContainer.prototype = $extend(openfl_display_Sprite.prototype, {
        contSprite: null,
        scrollHeight: null,
        scrollWidth: null,
        doSimpleVerticalScroll: null,
        doSimpleHorizontalScroll: null,
        removedListeners: null,
        isMDown: null,
        hp: null,
        main: null,
        speedX: null,
        speedY: null,
        scrollVerLine: null,
        scrollVerElement: null,
        isVerScrollLine: null,
        isVerLineScrolling: null,
        verLineSize: null,
        scrolled: null,
        btnDown: function(e) {
            this.removeListeners(e), this.isMDown || this.isVerLineScrolling || (e.stopImmediatePropagation(), null != this.scrollVerElement && this.scrollVerElement.hitTestPoint(e.stageX, e.stageY) ? this.isVerLineScrolling = !0 : this.isMDown = !0, this.hp.x = this.main.get_mouseX(), this.hp.y = this.main.get_mouseY())
        },
        btnMove: function(e) {
            if (this.isMDown) this.doSimpleVerticalScroll && this.addVerticalScroll((this.main.get_mouseY() - this.hp.y) * this.get_scaleY()), this.doSimpleHorizontalScroll && this.addHorScroll((this.main.get_mouseX() - this.hp.x) * this.get_scaleX()), this.speedY = (this.speedY + (this.hp.y - this.main.get_mouseY()) * this.get_scaleY() * 4 / 60) / 2, this.speedX = (this.speedX + (this.hp.x - this.main.get_mouseX()) * this.get_scaleX() * 4 / 60) / 2, this.hp.x = this.main.get_mouseX(), this.hp.y = this.main.get_mouseY(), this.scrolled = !0, this.isVerScrollLine && this.scrollHeight < this.contSprite.get_height() && this.scrollVerElement.set_y(this.scrollVerLine.get_y() - this.verLineSize / (this.contSprite.get_height() - this.scrollHeight) * this.contSprite.get_y());
            else if (this.isVerLineScrolling) {
                var t = this.scrollVerElement;
                t.set_y(t.get_y() + (this.main.get_mouseY() - this.hp.y) * this.get_scaleY()), this.scrollVerElement.get_y() - this.scrollVerLine.get_y() < 0 ? this.scrollVerElement.set_y(this.scrollVerLine.get_y()) : this.scrollVerElement.get_y() - this.scrollVerLine.get_y() > this.verLineSize && this.scrollVerElement.set_y(this.scrollVerLine.get_y() + this.verLineSize), this.contSprite.set_y(-(this.contSprite.get_height() - this.scrollHeight) / this.verLineSize * (this.scrollVerElement.get_y() - this.scrollVerLine.get_y())), this.hp.x = this.main.get_mouseX(), this.hp.y = this.main.get_mouseY()
            }
        },
        btnUp: function(e) {
            this.isMDown && e.stopImmediatePropagation(), this.isVerLineScrolling = !1, this.isMDown = !1, 60 * Math.abs(this.speedX) < 2 && (this.speedX = 0), 60 * Math.abs(this.speedY) < 2 && (this.speedY = 0)
        },
        btnClick: function(e) {
            this.scrolled && e.stopImmediatePropagation(), this.scrolled = !1
        },
        removeListeners: function(e) {
            this.removedListeners || ("mouseDown" == e.type || "mouseMove" == e.type || "mouseUp" == e.type ? (this.removeEventListener("touchBegin", $bind(this, this.btnDown)), openfl_Lib.current.stage.removeEventListener("touchBegin", $bind(this, this.btnDown)), openfl_Lib.current.stage.removeEventListener("touchMove", $bind(this, this.btnMove)), openfl_Lib.current.stage.removeEventListener("touchEnd", $bind(this, this.btnUp))) : (this.removeEventListener("mouseDown", $bind(this, this.btnDown)), openfl_Lib.current.stage.removeEventListener("mouseDown", $bind(this, this.btnDown)), openfl_Lib.current.stage.removeEventListener("mouseMove", $bind(this, this.btnMove)), openfl_Lib.current.stage.removeEventListener("mouseUp", $bind(this, this.btnUp)), this.removeEventListener("click", $bind(this, this.btnClick))), this.removedListeners = !0)
        },
        addVerticalScroll: function(e) {
            if (this.scrollHeight > this.contSprite.get_height()) return !1;
            var t = this.contSprite;
            return t.set_y(t.get_y() + e), this.contSprite.get_y() > 0 ? (this.contSprite.set_y(0), !1) : !(this.contSprite.get_height() + this.contSprite.get_y() < this.scrollHeight) || (this.contSprite.set_y(this.scrollHeight - this.contSprite.get_height()), !1)
        },
        addHorScroll: function(e) {
            var t = this.contSprite;
            return t.set_x(t.get_x() + e), this.contSprite.get_x() > 0 ? (this.contSprite.set_x(0), !1) : !(this.contSprite.get_width() + this.contSprite.get_x() < this.scrollWidth) || (this.contSprite.set_x(this.scrollWidth - this.contSprite.get_width()), !1)
        },
        addChild: function(e) {
            return this.contSprite.addChild(e)
        },
        addChildAt: function(e, t) {
            return this.contSprite.addChildAt(e, t)
        },
        removeChild: function(e) {
            return e.parent == this.contSprite && this.contSprite.removeChild(e), e
        },
        removeChildAt: function(e) {
            return this.contSprite.removeChildAt(e)
        },
        update: function(e) {
            if (!(this.isMDown || this.isVerLineScrolling || 0 == this.speedX && 0 == this.speedY)) {
                var t = e / 16.666666666666668,
                    n = Math.pow(.92, t);
                this.speedY *= n, this.speedX *= n, this.doSimpleVerticalScroll && !this.addVerticalScroll(-this.speedY * e) && (this.speedY = 0), this.doSimpleHorizontalScroll && !this.addHorScroll(-this.speedX * e) && (this.speedX = 0), 60 * Math.abs(this.speedY) <= .2 && (this.speedY = 0), 60 * Math.abs(this.speedX) <= .2 && (this.speedX = 0), this.isVerScrollLine && this.scrollVerElement.set_y(this.scrollVerLine.get_y() - this.verLineSize / (this.contSprite.get_height() - this.scrollHeight) * this.contSprite.get_y())
            }
            this.isVerScrollLine && this.scrollVerElement.set_visible(this.contSprite.get_height() > this.scrollHeight)
        },
        destroy: function() {
            this.removeEventListener("touchBegin", $bind(this, this.btnDown)), openfl_Lib.current.stage.removeEventListener("touchBegin", $bind(this, this.btnDown)), openfl_Lib.current.stage.removeEventListener("touchMove", $bind(this, this.btnMove)), openfl_Lib.current.stage.removeEventListener("touchEnd", $bind(this, this.btnUp)), this.removeEventListener("mouseDown", $bind(this, this.btnDown)), openfl_Lib.current.stage.removeEventListener("mouseDown", $bind(this, this.btnDown)), openfl_Lib.current.stage.removeEventListener("mouseMove", $bind(this, this.btnMove)), openfl_Lib.current.stage.removeEventListener("mouseUp", $bind(this, this.btnUp)), this.removeEventListener("click", $bind(this, this.btnClick)), this.main = null, null != this.contSprite && null != this.contSprite.parent && openfl_display_Sprite.prototype.removeChild.call(this, this.contSprite), this.contSprite = null, null != this.scrollVerLine && null != this.scrollVerLine.parent && openfl_display_Sprite.prototype.removeChild.call(this, this.scrollVerLine), this.scrollVerLine = null, null != this.scrollVerElement && null != this.scrollVerElement.parent && openfl_display_Sprite.prototype.removeChild.call(this, this.scrollVerElement), this.scrollVerElement = null, this.hp = null
        },
        __class__: ScrollContainer
    });
    var ShowHideAnimator = function(e, t, n) {
        null == n && (n = !1), null == t && (t = !0), this.isActive = !1, this.fills = [], this.hm = new openfl_geom_Matrix, this.isAnimating = !1, this.curDy = 0, this.curDx = 0, this.centerPoint = new openfl_geom_Point, this.initsMats = [], this.center = !1, this.main = Main.current, this.desk = Desk.current, this.elements = e, this.center = t;
        for (var l = Desk.current, i = 1e4, s = -1e4, a = 1e4, r = -1e4, o = 0; o < e.length;) {
            var d = e[o];
            if (++o, n && d.set_visible(!1), js_Boot.__instanceof(d, LevelsTextField) || -1 != d.get_name().indexOf("txt") && -1 != d.get_name().indexOf("edit")) this.initsMats.push(d.get_transform().get_matrix().clone());
            else if ("fill" != d.get_name()) {
                var _ = d.getBounds(l.levels);
                _.x < a && (a = _.x), _.get_right() > r && (r = _.get_right()), _.y < i && (i = _.y), _.get_bottom() > s && (s = _.get_bottom()), this.initsMats.push(d.get_transform().get_matrix().clone())
            } else this.initsMats.push(null), this.fills.push(d)
        }
        this.centerPoint.x = a + (r - a) / 2, this.centerPoint.y = i + (s - i) / 2;
        var h = -this.get_leftLevels() + this.get_sWidthLevels() / 2 - this.centerPoint.x,
            p = -this.get_topLevels() + this.get_sHeightLevels() / 2 - this.centerPoint.y;
        if (t)
            for (var c = 0, Q = this.initsMats; c < Q.length;) {
                var U = Q[c];
                ++c, null != U && (U.translate(h, p), e[HxOverrides.indexOf(this.initsMats, U, 0)].get_transform().set_matrix(U.clone()))
            }
        for (var m = 0, u = this.fills; m < u.length;) {
            var F = u[m];
            ++m, F.set_x(-l.levels.get_x() * (1 / Desk.current.levels.get_scaleX()) - 1 / Desk.current.levels.get_scaleX() * 10), F.set_y(-l.levels.get_y() * (1 / Desk.current.levels.get_scaleY()) - 1 / Desk.current.levels.get_scaleY() * 10), F.set_width((Main.current.sWidth + 20) * (1 / Desk.current.levels.get_scaleX())), F.set_height((Main.current.sHeight + 20) * (1 / Desk.current.levels.get_scaleY()))
        }
        this.wasSWidth = this.get_sWidthLevels(), this.wasSHeight = this.get_sHeightLevels(), this.wasTopLevels = this.get_topLevels(), this.wasLeftLevels = this.get_leftLevels(), this.isActive = !n
    };
    $hxClasses.ShowHideAnimator = ShowHideAnimator, ShowHideAnimator.__name__ = ["ShowHideAnimator"], ShowHideAnimator.prototype = {
        elements: null,
        center: null,
        initsMats: null,
        centerPoint: null,
        wasSWidth: null,
        wasSHeight: null,
        wasTopLevels: null,
        wasLeftLevels: null,
        curDx: null,
        curDy: null,
        isAnimating: null,
        hm: null,
        main: null,
        desk: null,
        fills: null,
        isActive: null,
        get_sWidthLevels: function() {
            return Main.current.sWidth / Desk.current.levels.get_scaleX()
        },
        get_sHeightLevels: function() {
            return Main.current.sHeight / Desk.current.levels.get_scaleY()
        },
        get_leftLevels: function() {
            return Desk.current.levels.get_x() / Desk.current.levels.get_scaleX()
        },
        get_topLevels: function() {
            return Desk.current.levels.get_y() / Desk.current.levels.get_scaleY()
        },
        animateShow: function(e, t) {
            this.isActive = !0, this.isAnimating = !0;
            for (var n = null, l = 0, i = this.elements; l < i.length;) {
                var s = i[l];
                ++l, s.set_visible(!0), "fill" != s.get_name() && (n = motion_Actuate.update($bind(this, this.updateAnim), .25, [s, 5, 0, 0, 0], [s, 1, 0, 0, 0], !1).ease(motion_easing_Back.get_easeOut()), this.updateAnim(s, .01, Math.PI / 2, -Math.PI, -Math.PI / 1.7))
            }
            n.onComplete($bind(this, this.onAnimEnd), [e, t]);
            for (var a = 0, r = this.fills; a < r.length;) {
                var o = r[a];
                ++a, o.set_alpha(.001), motion_Actuate.tween(o, .4, {
                    alpha: 1
                }).ease(motion_easing_Linear.get_easeNone())
            }
        },
        updateAnim: function(e, t, n, l, i) {
            if (null == i && (i = 0), null == l && (l = 0), null == n && (n = 0), null != e) {
                var s = e.get_transform().get_matrix();
                this.hm.identity(), this.center && this.hm.translate(this.get_leftLevels() - this.get_sWidthLevels() / 2, this.get_topLevels() - this.get_sHeightLevels() / 2), this.hm.scale(t, t), this.hm.rotate(i), AnimationHelper.skewMatrix(this.hm, 0, l), this.center && this.hm.translate(-this.get_leftLevels() + this.get_sWidthLevels() / 2, -this.get_topLevels() + this.get_sHeightLevels() / 2), s.copyFrom(this.initsMats[HxOverrides.indexOf(this.elements, e, 0)]), s.concat(this.hm), e.get_transform().set_matrix(s)
            }
        },
        onAnimEnd: function(e, t) {
            this.isAnimating = !1, null != e && motion_Actuate.timer(0).onComplete(e, t)
        },
        animateHide: function(e, t) {
            this.isAnimating = !0;
            for (var n = null, l = 0, i = this.elements; l < i.length;) {
                var s = i[l];
                ++l, "fill" != s.get_name() && (n = motion_Actuate.update($bind(this, this.updateAnim), .2, [s, 1], [s, .01], !1).ease(motion_easing_Back.get_easeIn()))
            }
            n.onComplete($bind(this, this.onHideEnd), [e, t]);
            for (var a = 0, r = this.fills; a < r.length;) {
                var o = r[a];
                ++a, motion_Actuate.tween(o, .2, {
                    alpha: 1e-4
                }).ease(motion_easing_Linear.get_easeNone())
            }
        },
        onHideEnd: function(e, t) {
            this.isActive = !1, this.isAnimating = !1;
            for (var n = 0, l = this.elements; n < l.length;) {
                var i = l[n];
                ++n, i.set_visible(!1)
            }
            null != e && motion_Actuate.timer(0).onComplete(e, t), this.isActive = !1
        },
        onResize: function() {
            var e = this.wasLeftLevels - this.get_leftLevels() + (this.get_sWidthLevels() - this.wasSWidth) / 2,
                t = this.wasTopLevels - this.get_topLevels() + (this.get_sHeightLevels() - this.wasSHeight) / 2;
            if (this.curDx = e, this.curDy = t, !this.isAnimating && (this.centerPoint.x += e, this.centerPoint.y += t, this.center)) {
                for (var n = 0, l = this.initsMats; n < l.length;) {
                    var i = l[n];
                    ++n, null != i && i.translate(e, t)
                }
                for (var s = 0, a = this.elements; s < a.length;) {
                    var r = a[s];
                    ++s, "fill" != r.get_name() && this.updateAnim(r, 1, 1, 0)
                }
            }
            for (var o = 0, d = this.fills; o < d.length;) {
                var _ = d[o];
                ++o, _.set_x(-this.desk.levels.get_x() * (1 / Desk.current.levels.get_scaleX()) - 1 / Desk.current.levels.get_scaleX() * 10), _.set_y(-this.desk.levels.get_y() * (1 / Desk.current.levels.get_scaleY()) - 1 / Desk.current.levels.get_scaleY() * 10), _.set_width((Main.current.sWidth + 20) * (1 / Desk.current.levels.get_scaleX())), _.set_height((Main.current.sHeight + 20) * (1 / Desk.current.levels.get_scaleY()))
            }
            this.wasSWidth = this.get_sWidthLevels(), this.wasSHeight = this.get_sHeightLevels(), this.wasTopLevels = this.get_topLevels(), this.wasLeftLevels = this.get_leftLevels()
        },
        __class__: ShowHideAnimator,
        __properties__: {
            get_topLevels: "get_topLevels",
            get_leftLevels: "get_leftLevels",
            get_sHeightLevels: "get_sHeightLevels",
            get_sWidthLevels: "get_sWidthLevels"
        }
    };
    var haxe_io_Bytes = function(e) {
        this.length = e.byteLength, this.b = new Uint8Array(e), this.b.bufferValue = e, e.hxBytes = this, e.bytes = this.b
    };
    $hxClasses["haxe.io.Bytes"] = haxe_io_Bytes, haxe_io_Bytes.__name__ = ["haxe", "io", "Bytes"], haxe_io_Bytes.ofString = function(e) {
        for (var t = [], n = 0; n < e.length;) {
            var l = StringTools.fastCodeAt(e, n++);
            55296 <= l && l <= 56319 && (l = l - 55232 << 10 | 1023 & StringTools.fastCodeAt(e, n++)), l <= 127 ? t.push(l) : l <= 2047 ? (t.push(192 | l >> 6), t.push(128 | 63 & l)) : l <= 65535 ? (t.push(224 | l >> 12), t.push(128 | l >> 6 & 63), t.push(128 | 63 & l)) : (t.push(240 | l >> 18), t.push(128 | l >> 12 & 63), t.push(128 | l >> 6 & 63), t.push(128 | 63 & l))
        }
        return new haxe_io_Bytes(new Uint8Array(t).buffer)
    }, haxe_io_Bytes.ofData = function(e) {
        var t = e.hxBytes;
        return null != t ? t : new haxe_io_Bytes(e)
    }, haxe_io_Bytes.prototype = {
        length: null,
        b: null,
        data: null,
        get: function(e) {
            return this.b[e]
        },
        set: function(e, t) {
            this.b[e] = 255 & t
        },
        blit: function(e, t, n, l) {
            if (e < 0 || n < 0 || l < 0 || e + l > this.length || n + l > t.length) throw new js__$Boot_HaxeError(haxe_io_Error.OutsideBounds);
            0 == n && l == t.b.byteLength ? this.b.set(t.b, e) : this.b.set(t.b.subarray(n, n + l), e)
        },
        getString: function(e, t) {
            if (e < 0 || t < 0 || e + t > this.length) throw new js__$Boot_HaxeError(haxe_io_Error.OutsideBounds);
            for (var n = "", l = this.b, i = String.fromCharCode, s = e, a = e + t; s < a;) {
                var r = l[s++];
                if (r < 128) {
                    if (0 == r) break;
                    n += i(r)
                } else if (r < 224) n += i((63 & r) << 6 | 127 & l[s++]);
                else if (r < 240) {
                    n += i((31 & r) << 12 | (127 & l[s++]) << 6 | 127 & l[s++])
                } else {
                    var o = (15 & r) << 18 | (127 & l[s++]) << 12 | (127 & l[s++]) << 6 | 127 & l[s++];
                    n += i(55232 + (o >> 10)), n += i(1023 & o | 56320)
                }
            }
            return n
        },
        toString: function() {
            return this.getString(0, this.length)
        },
        __class__: haxe_io_Bytes
    };
    var openfl_utils_IDataOutput = function() {};
    $hxClasses["openfl.utils.IDataOutput"] = openfl_utils_IDataOutput, openfl_utils_IDataOutput.__name__ = ["openfl", "utils", "IDataOutput"], openfl_utils_IDataOutput.prototype = {
        __class__: openfl_utils_IDataOutput
    };
    var openfl_utils_IDataInput = function() {};
    $hxClasses["openfl.utils.IDataInput"] = openfl_utils_IDataInput, openfl_utils_IDataInput.__name__ = ["openfl", "utils", "IDataInput"], openfl_utils_IDataInput.prototype = {
        __class__: openfl_utils_IDataInput
    };
    var openfl_utils_ByteArrayData = function(e) {
        null == e && (e = 0);
        var t = new haxe_io_Bytes(new ArrayBuffer(e));
        haxe_io_Bytes.call(this, t.b.buffer), this.__length = e, this.__endian = 0, this.position = 0
    };
    $hxClasses["openfl.utils.ByteArrayData"] = openfl_utils_ByteArrayData, openfl_utils_ByteArrayData.__name__ = ["openfl", "utils", "ByteArrayData"], openfl_utils_ByteArrayData.__interfaces__ = [openfl_utils_IDataOutput, openfl_utils_IDataInput], openfl_utils_ByteArrayData.__super__ = haxe_io_Bytes, openfl_utils_ByteArrayData.prototype = $extend(haxe_io_Bytes.prototype, {
        position: null,
        __endian: null,
        __length: null,
        __fromBytes: function(e) {
            this.b = e.b, this.__length = e.length, this.data = e.data, this.length = e.length
        },
        __class__: openfl_utils_ByteArrayData
    });
    var SpriteJson = function(e) {
        null == e && (e = 0), openfl_utils_ByteArrayData.call(this);
        var t = haxe_Resource.getBytes(SpriteJson.resourceName);
        this.__fromBytes(t)
    };
    $hxClasses.SpriteJson = SpriteJson, SpriteJson.__name__ = ["SpriteJson"], SpriteJson.__super__ = openfl_utils_ByteArrayData, SpriteJson.prototype = $extend(openfl_utils_ByteArrayData.prototype, {
        __class__: SpriteJson
    });
    var Sounds = function() {
        this.spriteSoundsNames = [], this.canPlaySound = !1, this.soundsAvailable = !0, this.muted = !1, this.playSoundsByAction = !1, this.soundAssets = new haxe_ds_StringMap, this.soundsToPlay = [], this.playingSounds = [], this.pausedSounds = [], eval("Howler.mobileAutoEnable = false;"), "true" == LocalSaves.getVar("muted") && (this.muted = !0), this.loadSounds(), Config._getIsMobileBrowser() ? (window.document.addEventListener("touchstart", $bind(this, this.bodyClick), !1), window.document.addEventListener("click", $bind(this, this.bodyClick), !1)) : this.canPlaySound = !0, Sounds.current = this
    };
    $hxClasses.Sounds = Sounds, Sounds.__name__ = ["Sounds"], Sounds.prototype = {
        soundAssets: null,
        soundsToPlay: null,
        playSoundsByAction: null,
        playingSounds: null,
        pausedSounds: null,
        spriteMap: null,
        muted: null,
        soundsAvailable: null,
        canPlaySound: null,
        spriteSoundsNames: null,
        bodyClick: function(e) {
            if (window.document.removeEventListener("touchstart", $bind(this, this.bodyClick)), window.document.removeEventListener("click", $bind(this, this.bodyClick)), null != Main.current) try {
                Main.current.update(null)
            } catch (e) {
                if (e instanceof js__$Boot_HaxeError && (e = e.val), !js_Boot.__instanceof(e, openfl_errors_Error)) throw e
            }
            return !!this.canPlaySound || (this.playSound("sprite", "silence", !1), this.playSound("sprite", "silence", !0), this.canPlaySound = !0, !0)
        },
        loadSounds: function() {
            var e, t, n = [];
            n.push(JSON.parse((new SpriteJson).toString()));
            for (var l = 0, i = n.length; l < i;) {
                t = n[l++], e = this.getSound(t.stream, !1, !1, !1, t.sprite);
                var s = t.stream,
                    a = e;
                this.soundAssets.set(s, a);
                var r = e = this.getSound(t.stream, !0, !0, !1, t.sprite);
                this.soundAssets.set(Std.string(t.stream) + "_loop", r)
            }
        },
        hasSpriteName: function(e) {
            return -1 != HxOverrides.indexOf(this.spriteSoundsNames, e, 0)
        },
        getSound: function(stream, buffer, loop, autoplay, sprite) {
            null == autoplay && (autoplay = !1), null == loop && (loop = !1), null == buffer && (buffer = !1), null != sprite && (this.spriteSoundsNames = this.spriteSoundsNames.concat(Reflect.fields(sprite))), buffer = !1;
            var spriteString = "",
                evalString;
            if (null != sprite) {
                var wasAnElement = !1;
                spriteString = ", sprite:{";
                for (var spr = Reflect.fields(sprite), _g = 0; _g < spr.length;) {
                    var i = spr[_g];
                    ++_g, spriteString += (wasAnElement ? "," : "") + (null == i ? "null" : "" + i) + ":[" + Reflect.field(sprite, i)[0] + "," + Reflect.field(sprite, i)[1] + "]", wasAnElement = !0
                }
                spriteString += "}"
            }
            this.spriteMap = sprite, evalString = "new Howl({  src: ['" + stream + ".ogg', '" + stream + ".m4a', '" + stream + ".mp3']" + spriteString + ", autoplay : " + (autoplay ? "true" : "false") + ", loop : " + (loop ? "true" : "false") + ", html5 : " + (buffer ? "true" : "false") + " }); ";
            var snd = eval(evalString);
            return snd
        },
        playSound: function(e, t, n, l, i, s) {
            if (null == s && (s = "sound"), null == i && (i = !1), null == l && (l = !1), null == n && (n = !1), null == t && (t = ""), this.soundsAvailable && (!this.muted || n || "silence" == t)) {
                var a = this.soundAssets.get("snd/" + e + (n ? "_loop" : ""));
                if ("silence" != t) {
                    if (!this.playSoundsByAction || i) {
                        var r = a.play(t);
                        this.playingSounds.push({
                            sprite: t,
                            id: r,
                            endTime: n ? -1 : openfl_Lib.getTimer() + Reflect.field(this.spriteMap, t)[1] + 50,
                            sound: a
                        })
                    } else l && this.soundsToPlay.push({
                        sound: a,
                        sprite: t
                    });
                    this.muted && (a.mute(!0), a.pause())
                } else a.play(t)
            }
        },
        stopSound: function(e, t) {
            for (var n = 0, l = openfl_Lib.getTimer(); n < this.playingSounds.length;)
                if (this.playingSounds[n].sprite == t) {
                    var i = [this.playingSounds[n].sound],
                        s = [this.playingSounds[n].id];
                    i[0].once("play", function(e, t) {
                        return function() {
                            t[0].stop(e[0])
                        }
                    }(s, i), s[0]), this.playingSounds[n].sound.stop(this.playingSounds[n].id);
                    var a = this.playingSounds[n];
                    HxOverrides.remove(this.playingSounds, a)
                } else if (-1 != this.playingSounds[n].endTime && l > this.playingSounds[n].endTime) {
                var r = this.playingSounds[n];
                HxOverrides.remove(this.playingSounds, r)
            } else n++
        },
        mute: function() {
            if (this.soundsAvailable) {
                this.muted = !0, LocalSaves.setVar("muted", "true");
                for (var e = 0; e < this.playingSounds.length;)
                    if (-1 == this.playingSounds[e].endTime) this.playingSounds[e].sound.pause(this.playingSounds[e].id), e++;
                    else {
                        this.playingSounds[e].sound.stop(this.playingSounds[e].id);
                        var t = this.playingSounds[e];
                        HxOverrides.remove(this.playingSounds, t)
                    }
            }
        },
        unMute: function(e) {
            if (null == e && (e = !0), this.soundsAvailable) {
                this.muted = !1;
                for (var t = 0; t < this.playingSounds.length;) - 1 == this.playingSounds[t].endTime && this.playingSounds[t].sound.play(this.playingSounds[t].id), t++;
                for (var n = this.soundAssets.keys(); n.hasNext();) {
                    var l = n.next();
                    if (-1 != l.indexOf("_loop")) this.soundAssets.get(l).mute(!1)
                }
                LocalSaves.setVar("muted", "false")
            }
        },
        __class__: Sounds
    };
    var SpinnerMode = function() {
        this.wasMDown = !1, this.curAvSpeed = 0, this.lastCircAng = 0, this.lmP = new openfl_geom_Point, this.mdP = new openfl_geom_Point, this.dump = .993, this.rotSpeed = 0, this.curAngle = 0, this.started = !0, SpinnerMode.current = this, this.main = Main.current, this.desk = Desk.current, this.spinnElements = this.desk.getElementsByFolderName("SpinnerParts");
        var e = this.desk.getElementByNameInFolder("spinner", "SpinnerParts");
        this.pPoint = new openfl_geom_Point(e.get_x(), e.get_y()), this.initMatrixes = [];
        for (var t = 0, n = this.spinnElements.length; t < n;) {
            var l = t++;
            this.initMatrixes[l] = this.spinnElements[l].get_transform().get_matrix().clone()
        }
        this.onResize()
    };
    $hxClasses.SpinnerMode = SpinnerMode, SpinnerMode.__name__ = ["SpinnerMode"], SpinnerMode.prototype = {
        main: null,
        desk: null,
        started: null,
        spinnElements: null,
        initMatrixes: null,
        pPoint: null,
        curAngle: null,
        rotSpeed: null,
        dump: null,
        mdP: null,
        lmP: null,
        lastCircAng: null,
        curAvSpeed: null,
        onResize: function() {
            for (var e = -this.desk.levels.get_x() / this.desk.levels.get_scaleX() + this.main.sWidth / this.desk.levels.get_scaleX() / 2 - this.pPoint.x, t = -this.desk.levels.get_y() / this.desk.levels.get_scaleY() + this.main.sHeight / this.desk.levels.get_scaleY() / 2 - this.pPoint.y, n = 0, l = this.initMatrixes; n < l.length;) {
                var i = l[n];
                ++n, i.translate(e, t)
            }
            this.pPoint.x = -this.desk.levels.get_x() / this.desk.levels.get_scaleX() + this.main.sWidth / this.desk.levels.get_scaleX() / 2, this.pPoint.y = -this.desk.levels.get_y() / this.desk.levels.get_scaleY() + this.main.sHeight / this.desk.levels.get_scaleY() / 2, this.updateElsAng()
        },
        destroy: function() {
            this.spinnElements = null, this.initMatrixes = null, this.pPoint = null, this.mdP = null, this.lmP = null
        },
        onMDown: function() {
            this.desk
        },
        onMUp: function() {},
        updateElsAng: function() {
            for (var e = 0, t = this.spinnElements.length; e < t;) {
                var n = e++,
                    l = this.spinnElements[n],
                    i = l.get_transform().get_matrix();
                i.copyFrom(this.initMatrixes[n]), i.translate(-this.pPoint.x, -this.pPoint.y), "center" != l.get_name() && i.rotate(this.curAngle), i.translate(this.pPoint.x, this.pPoint.y), l.get_transform().set_matrix(i)
            }
        },
        canMouseSpin: function() {
            var e = this.desk.toolsArr,
                t = !0;
            if (null != e)
                for (var n = 0; n < e.length;) {
                    var l = e[n];
                    if (++n, this.desk.hitsMouse(l)) {
                        t = !1;
                        break
                    }
                }
            return t = (null == this.desk.nextBtn || !this.desk.hitsMouse(this.desk.nextBtn)) && t
        },
        wasMDown: null,
        update: function(e) {
            if (this.started) {
                if (!this.wasMDown && this.main.isMouseDown) {
                    if (!this.canMouseSpin()) {
                        if (0 == this.rotSpeed) return;
                        return this.curAngle += this.rotSpeed * e, this.rotSpeed *= this.dump, void this.updateElsAng()
                    }
                    this.mdP.x = this.desk.levels.get_mouseX(), this.mdP.y = this.desk.levels.get_mouseY(), this.lmP.x = this.desk.levels.get_mouseX(), this.lmP.y = this.desk.levels.get_mouseY();
                    var t = this.pPoint.x - this.desk.levels.get_mouseX(),
                        n = this.pPoint.y - this.desk.levels.get_mouseY();
                    this.lastCircAng = Math.atan2(n, t), this.curAvSpeed = 0
                }
                if (this.main.isMouseDown || this.wasMDown) {
                    if (!this.canMouseSpin()) {
                        if (0 == this.rotSpeed) return;
                        return this.curAngle += this.rotSpeed * e, this.rotSpeed *= this.dump, void this.updateElsAng()
                    }
                    var l = !1;
                    this.wasMDown = this.main.isMouseDown;
                    var i = this.pPoint.x - this.desk.levels.get_mouseX(),
                        s = this.pPoint.y - this.desk.levels.get_mouseY(),
                        a = Math.sqrt(i * i + s * s),
                        r = Math.atan2(s, i),
                        o = Math.atan2(Math.sin(r - this.lastCircAng), Math.cos(r - this.lastCircAng)),
                        d = a * Std.int(Math.abs(o) / o) / 500 * e / 1e4;
                    if (this.curAvSpeed += d, this.curAvSpeed /= 2, this.wasMDown ? Math.abs(this.rotSpeed) < .001 ? (this.curAngle += o, this.updateElsAng(), l = !0) : this.rotSpeed += d : this.rotSpeed += 15 * this.curAvSpeed, this.lastCircAng = r, this.lmP.x = this.desk.levels.get_mouseX(), this.lmP.y = this.desk.levels.get_mouseY(), l) return
                }
                if (0 != this.rotSpeed) {
                    for (this.curAngle += this.rotSpeed * e, this.rotSpeed *= this.dump; this.curAngle > 2 * Math.PI;) this.curAngle -= 2 * Math.PI;
                    for (; this.curAngle < 2 * -Math.PI;) this.curAngle += 2 * Math.PI;
                    this.updateElsAng()
                }
            }
        },
        __class__: SpinnerMode
    };
    var Std = function() {};
    $hxClasses.Std = Std, Std.__name__ = ["Std"], Std.is = function(e, t) {
        return js_Boot.__instanceof(e, t)
    }, Std.string = function(e) {
        return js_Boot.__string_rec(e, "")
    }, Std.int = function(e) {
        return 0 | e
    }, Std.parseInt = function(e) {
        var t = parseInt(e, 10);
        return 0 != t || 120 != HxOverrides.cca(e, 1) && 88 != HxOverrides.cca(e, 1) || (t = parseInt(e)), isNaN(t) ? null : t
    }, Std.parseFloat = function(e) {
        return parseFloat(e)
    }, Std.random = function(e) {
        return e <= 0 ? 0 : Math.floor(Math.random() * e)
    };
    var StringBuf = function() {
        this.b = ""
    };
    $hxClasses.StringBuf = StringBuf, StringBuf.__name__ = ["StringBuf"], StringBuf.prototype = {
        b: null,
        add: function(e) {
            this.b += Std.string(e)
        },
        addSub: function(e, t, n) {
            this.b += null == n ? HxOverrides.substr(e, t, null) : HxOverrides.substr(e, t, n)
        },
        __class__: StringBuf
    };
    var StringTools = function() {};
    $hxClasses.StringTools = StringTools, StringTools.__name__ = ["StringTools"], StringTools.urlEncode = function(e) {
        return encodeURIComponent(e)
    }, StringTools.startsWith = function(e, t) {
        return e.length >= t.length && HxOverrides.substr(e, 0, t.length) == t
    }, StringTools.endsWith = function(e, t) {
        var n = t.length,
            l = e.length;
        return l >= n && HxOverrides.substr(e, l - n, n) == t
    }, StringTools.isSpace = function(e, t) {
        var n = HxOverrides.cca(e, t);
        return n > 8 && n < 14 || 32 == n
    }, StringTools.ltrim = function(e) {
        for (var t = e.length, n = 0; n < t && StringTools.isSpace(e, n);) n++;
        return n > 0 ? HxOverrides.substr(e, n, t - n) : e
    }, StringTools.rtrim = function(e) {
        for (var t = e.length, n = 0; n < t && StringTools.isSpace(e, t - n - 1);) n++;
        return n > 0 ? HxOverrides.substr(e, 0, t - n) : e
    }, StringTools.trim = function(e) {
        return StringTools.ltrim(StringTools.rtrim(e))
    }, StringTools.replace = function(e, t, n) {
        return e.split(t).join(n)
    }, StringTools.hex = function(e, t) {
        var n = "";
        do {
            n = "0123456789ABCDEF".charAt(15 & e) + n, e >>>= 4
        } while (e > 0);
        if (null != t)
            for (; n.length < t;) n = "0" + n;
        return n
    }, StringTools.fastCodeAt = function(e, t) {
        return e.charCodeAt(t)
    };
    var TJSON = function() {};
    $hxClasses.TJSON = TJSON, TJSON.__name__ = ["TJSON"], TJSON.parse = function(e, t, n) {
        return null == t && (t = "JSON Data"), new TJSONParser(e, t, n).doParse()
    };
    var TJSONParser = function(e, t, n) {
        null == t && (t = "JSON Data"), this.json = e, this.fileName = t, this.currentLine = 1, this.lastSymbolQuoted = !1, this.pos = 0, this.floatRegex = new EReg("^-?[0-9]*\\.[0-9]+$", ""), this.intRegex = new EReg("^-?[0-9]+$", ""), this.strProcessor = null == n ? $bind(this, this.defaultStringProcessor) : n, this.cache = []
    };
    $hxClasses.TJSONParser = TJSONParser, TJSONParser.__name__ = ["TJSONParser"], TJSONParser.prototype = {
        pos: null,
        json: null,
        lastSymbolQuoted: null,
        fileName: null,
        currentLine: null,
        cache: null,
        floatRegex: null,
        intRegex: null,
        strProcessor: null,
        doParse: function() {
            try {
                var e = this.getNextSymbol(),
                    t = e;
                switch (e) {
                    case "{":
                        return this.doObject();
                    case "[":
                        return this.doArray();
                    default:
                        return this.convertSymbolToProperType(t)
                }
            } catch (e) {
                throw e instanceof js__$Boot_HaxeError && (e = e.val), js_Boot.__instanceof(e, String) ? new js__$Boot_HaxeError(this.fileName + " on line " + this.currentLine + ": " + e) : e
            }
        },
        doObject: function() {
            var e, t = {},
                n = "",
                l = !1;
            for (this.cache.push(t); this.pos < this.json.length;)
                if ("," != (e = this.getNextSymbol()) || this.lastSymbolQuoted) {
                    if ("}" == e && !this.lastSymbolQuoted) return l && null != t.TJ_unserialize && t.TJ_unserialize(), t;
                    var i = this.getNextSymbol();
                    if (":" != i) throw new js__$Boot_HaxeError("Expected ':' but got '" + i + "' instead.");
                    var s = this.getNextSymbol();
                    if ("_hxcls" != e) n = "{" != s || this.lastSymbolQuoted ? "[" != s || this.lastSymbolQuoted ? this.convertSymbolToProperType(s) : this.doArray() : this.doObject(), t[e] = n;
                    else {
                        if (StringTools.startsWith(s, "Date@")) {
                            var a = Std.parseInt(HxOverrides.substr(s, 5, null)),
                                r = new Date;
                            r.setTime(a), t = r
                        } else {
                            var o = Type.resolveClass(s);
                            if (null == o) throw new js__$Boot_HaxeError("Invalid class name - " + s);
                            t = Type.createEmptyInstance(o)
                        }
                        this.cache.pop(), this.cache.push(t), l = !0
                    }
                }
            throw new js__$Boot_HaxeError("Unexpected end of file. Expected '}'")
        },
        doArray: function() {
            for (var e, t = []; this.pos < this.json.length;)
                if ("," != (e = this.getNextSymbol()) || this.lastSymbolQuoted) {
                    if ("]" == e && !this.lastSymbolQuoted) return t;
                    e = "{" != e || this.lastSymbolQuoted ? "[" != e || this.lastSymbolQuoted ? this.convertSymbolToProperType(e) : this.doArray() : this.doObject(), t.push(e)
                }
            throw new js__$Boot_HaxeError("Unexpected end of file. Expected ']'")
        },
        convertSymbolToProperType: function(e) {
            if (this.lastSymbolQuoted) {
                if (StringTools.startsWith(e, TJSON.OBJECT_REFERENCE_PREFIX)) {
                    var t = Std.parseInt(HxOverrides.substr(e, TJSON.OBJECT_REFERENCE_PREFIX.length, null));
                    return this.cache[t]
                }
                return e
            }
            return this.looksLikeFloat(e) ? parseFloat(e) : this.looksLikeInt(e) ? Std.parseInt(e) : "true" == e.toLowerCase() || "false" != e.toLowerCase() && ("null" == e.toLowerCase() ? null : e)
        },
        looksLikeFloat: function(e) {
            if (this.floatRegex.match(e)) return !0;
            if (this.intRegex.match(e)) {
                if (n = this.intRegex.matched(0), 45 == HxOverrides.cca(n, 0) ? n > "-2147483648" : n > "2147483647") return !0;
                var t = parseFloat(e);
                if (t > 2147483647) return !0;
                if (t < -2147483648) return !0
            }
            var n;
            return !1
        },
        looksLikeInt: function(e) {
            return this.intRegex.match(e)
        },
        getNextSymbol: function() {
            this.lastSymbolQuoted = !1;
            for (var e = "", t = !1, n = "", l = "", i = !1, s = !1, a = !1, r = !1; this.pos < this.json.length;)
                if ("\n" != (e = this.json.charAt(this.pos++)) || s || this.currentLine++, a) "\n" != e && "\r" != e || (a = !1, this.pos++);
                else if (r) "*" == e && "/" == this.json.charAt(this.pos) && (r = !1, this.pos++);
            else if (t) {
                if (i) {
                    if (i = !1, "'" == e || '"' == e) {
                        l += e;
                        continue
                    }
                    if ("t" == e) {
                        l += "\t";
                        continue
                    }
                    if ("n" == e) {
                        l += "\n";
                        continue
                    }
                    if ("\\" == e) {
                        l += "\\";
                        continue
                    }
                    if ("r" == e) {
                        l += "\r";
                        continue
                    }
                    if ("/" == e) {
                        l += "/";
                        continue
                    }
                    if ("u" == e) {
                        for (var o = 0, d = 0; d < 4;) {
                            var _;
                            d++;
                            if (this.pos >= this.json.length) throw new js__$Boot_HaxeError("Unfinished UTF8 character");
                            var h = this.pos++;
                            if (o <<= 4, (_ = HxOverrides.cca(this.json, h)) >= 48 && _ <= 57) o += _ - 48;
                            else if (_ >= 65 && _ <= 70) o += 10 + _ - 65;
                            else {
                                if (!(_ >= 97 && _ <= 102)) throw new js__$Boot_HaxeError("Not a hex digit");
                                o += 10 + _ - 95
                            }
                        }
                        var p = new haxe_Utf8;
                        p.__b += String.fromCharCode(o), l += p.__b;
                        continue
                    }
                    throw new js__$Boot_HaxeError("Invalid escape sequence '\\" + e + "'")
                }
                if ("\\" == e) {
                    i = !0;
                    continue
                }
                if (e == n) return l;
                l += e
            } else {
                if ("/" == e) {
                    var c = this.json.charAt(this.pos);
                    if ("/" == c) {
                        a = !0, this.pos++;
                        continue
                    }
                    if ("*" == c) {
                        r = !0, this.pos++;
                        continue
                    }
                }
                if (s) {
                    if (" " == e || "\n" == e || "\r" == e || "\t" == e || "," == e || ":" == e || "}" == e || "]" == e) return this.pos--, l;
                    l += e
                } else if (" " != e && "\t" != e && "\n" != e && "\r" != e) {
                    if ("{" == e || "}" == e || "[" == e || "]" == e || "," == e || ":" == e) return e;
                    "'" != e && '"' != e ? (s = !0, l = e) : (t = !0, n = e, this.lastSymbolQuoted = !0)
                }
            }
            if (t) throw new js__$Boot_HaxeError("Unexpected end of data. Expected ( " + n + " )");
            return l
        },
        defaultStringProcessor: function(e) {
            return e
        },
        __class__: TJSONParser
    };
    var TapToStartWindow = function() {};
    $hxClasses.TapToStartWindow = TapToStartWindow, TapToStartWindow.__name__ = ["TapToStartWindow"], TapToStartWindow.__super__ = Menu, TapToStartWindow.prototype = $extend(Menu.prototype, {
        tapToStartTxt: null,
        filll: null,
        upd: function(e) {
            this.set_x(0), this.set_y(0), this.tapToStartTxt.set_width(Main.current.config.sWidth), null != this.filll && (this.filll.set_width(this.sWidth), this.filll.set_height(this.sHeight), this.filll.set_x(-this.get_x()), this.filll.set_y(-this.get_y()))
        },
        close: function() {
            this.removeEventListener("enterFrame", $bind(this, this.upd)), null != this.main && (null != this.parent && this.parent.removeChild(this), Menu.prototype.close.call(this))
        },
        __class__: TapToStartWindow
    });
    var ThreeStateBtn = function() {
        this.isPressed = !1
    };
    $hxClasses.ThreeStateBtn = ThreeStateBtn, ThreeStateBtn.__name__ = ["ThreeStateBtn"], ThreeStateBtn.__super__ = openfl_display_Sprite, ThreeStateBtn.prototype = $extend(openfl_display_Sprite.prototype, {
        normal: null,
        pressed: null,
        inactive: null,
        isPressed: null,
        press: function() {
            if (!this.isPressed && (this.isPressed = !0, null == this.inactive.parent)) {
                for (; this.get_numChildren() > 0;) this.removeChildAt(0);
                this.addChild(this.pressed)
            }
        },
        unPress: function() {
            if (this.isPressed && (this.isPressed = !1, null == this.inactive.parent)) {
                for (; this.get_numChildren() > 0;) this.removeChildAt(0);
                this.addChild(this.normal)
            }
        },
        destroy: function() {
            for (; this.get_numChildren() > 0;) this.removeChildAt(0);
            this.normal = this.pressed = this.inactive = null
        },
        __class__: ThreeStateBtn
    });
    var ToolActions = function(e) {
        this.hm = new openfl_geom_Matrix, this.actions = [], this.desk = Desk.current;
        for (var t = new EReg("(.*)\\((.*)\\)", "i"), n = new EReg("([0-9])+\\.([0-9])+", "g"), l = 0; l < e.length;) {
            var i = e[l];
            ++l;
            for (var s = (i = n.replace(i, "$1$#Dot#$$2")).split("."), a = 0, r = s.length; a < r;) {
                var o = a++;
                s[o] = StringTools.replace(s[o], "$#Dot#$", ".")
            }
            var d = s.shift(),
                _ = s.shift();
            t.match(s.shift());
            var h = {
                seqName: d,
                target: _,
                action: [StringTools.trim(t.matched(1)), StringTools.trim(t.matched(2))],
                onEnd: this.getCallDataFromArr(s, "onEnd")
            };
            this.actions.push(h)
        }
    };
    $hxClasses.ToolActions = ToolActions, ToolActions.__name__ = ["ToolActions"], ToolActions.__properties__ = {
        set_onceIDS: "set_onceIDS",
        get_onceIDS: "get_onceIDS"
    }, ToolActions.resetObjectsScale = function() {
        ToolActions.objectsScale = new haxe_ds_ObjectMap
    }, ToolActions.get_onceIDS = function() {
        return null == ToolActions._onceIDS && (null != LocalSaves.getVar("onceIDS") ? ToolActions._onceIDS = LocalSaves.getVar("onceIDS") : ToolActions._onceIDS = []), ToolActions._onceIDS
    }, ToolActions.set_onceIDS = function(e) {
        return LocalSaves.setVar("onceIDS", ToolActions._onceIDS), ToolActions._onceIDS
    }, ToolActions.stopAllSounds = function() {
        for (; ToolActions.playingSounds.length > 0;) {
            var e = ToolActions.playingSounds.pop();
            Main.current.stopSpriteSound(e), Main.current.stopSpriteSound(e, !0)
        }
    }, ToolActions.prototype = {
        desk: null,
        actions: null,
        hm: null,
        start: function() {
            for (var e = 0, t = this.actions; e < t.length;) {
                var n = t[e];
                ++e, "now" == n.seqName.toLowerCase() && this.playAction(n)
            }
        },
        setConfig: function(e) {
            var t = this;
            "setnextbtnlevel" == e.action[0].toLowerCase() && (this.desk.nextBtnClickLevel = Std.parseInt(e.action[1]), null != e.onEnd && null != e.onEnd.params && this.onEnd1(e.onEnd.params)), "gotolevel" == e.action[0].toLowerCase() && (this.desk.startNewGame(Std.parseInt(e.action[1])), null != e.onEnd && null != e.onEnd.params && this.onEnd1(e.onEnd.params));
            var n, l = [];
            if ("makescreenshot" == e.action[0].toLowerCase()) {
                if ("" != e.action[1])
                    for (var i = e.action[1].split(","), s = 0, a = i.length; s < a;) {
                        var r = s++,
                            o = this.desk.getElementByName(StringTools.trim(i[r]));
                        null != o && o.get_visible() && (o.set_visible(!1), l.push(o))
                    }
                this.desk.saveScreenShot(), null != e.onEnd && null != e.onEnd.params && this.onEnd1(e.onEnd.params);
                for (var d = 0; d < l.length;) {
                    var _ = l[d];
                    ++d, _.set_visible(!0)
                }
            }
            if ("activatefinalprogresses" == e.action[0].toLowerCase() && FinalProgressBar.activateAllProgresses(), "track" == e.action[0].toLowerCase()) {
                var h = StringTools.trim(e.action[1]),
                    p = h.split(",")[0],
                    c = 0 == p.indexOf("SCREEN_"),
                    Q = null;
                if (!c) {
                    var U = h.split(",");
                    U.shift(), Q = TJSON.parse(U.join(","))
                }
                c ? gradle.event(p) : gradle.event(p, Q), null != e.onEnd && null != e.onEnd.params && this.onEnd1(e.onEnd.params)
            }
            "showdialog" == e.action[0].toLowerCase() && (n = null == e.onEnd ? null : function() {
                t.onEnd1(e.onEnd.params)
            }, DialogsWindowses.showDialogWindow(e.action[1], n));
            if ("call" == e.action[0].toLowerCase()) {
                for (var m = e.action[1].split(","), u = 0, F = m.length; u < F;) {
                    var N = u++;
                    m[N] = StringTools.trim(m[N])
                }
                this.callMethod(Reflect.field(FunctionsForLevels, m.shift()), m.length > 0 ? m : null)
            }
        },
        callMethod: function(e, t) {
            return null == t && (t = []), Reflect.callMethod(e, e, t)
        },
        setAssembler: function(e) {
            "restartlastassemblerlevel" == e.action[0].toLowerCase() && (this.desk.startNewGame(Assembler.lastAssemblerLevel), null != e.onEnd && null != e.onEnd.params && this.onEnd1(e.onEnd.params)), "startoneplayerfight" == e.action[0].toLowerCase() && (Assembler.isTwoPlayersFightMode = !1, this.desk.startNewGame(Std.parseInt(e.action[1])), null != e.onEnd && null != e.onEnd.params && this.onEnd1(e.onEnd.params)), "starttwoplayerfight" == e.action[0].toLowerCase() && (Assembler.isTwoPlayersFightMode = !0, this.desk.startNewGame(Std.parseInt(e.action[1])), null != e.onEnd && null != e.onEnd.params && this.onEnd1(e.onEnd.params))
        },
        playDelayAction: function(e) {
            if ("delay" == e.action[0].toLowerCase()) {
                var t = Std.parseFloat(StringTools.replace(e.action[1], ",", "."));
                motion_Actuate.timer(t).onComplete($bind(this, this.onEnd1), [e.onEnd.params])
            }
        },
        playSoundAction: function(e) {
            for (var t = e.action[1].split(","), n = 0, l = t.length; n < l;) {
                var i = n++;
                t[i] = StringTools.trim(t[i])
            }
            switch (e.action[0]) {
                case "play":
                    Main.current.playSpriteSound(t[0], -1 != HxOverrides.indexOf(t, "loop", 0)), ToolActions.playingSounds.push(t[0]);
                    break;
                case "stop":
                    Main.current.stopSpriteSound(t[0], -1 != HxOverrides.indexOf(t, "loop", 0)), HxOverrides.remove(ToolActions.playingSounds, t[0]);
                    break;
                default:
                    throw new js__$Boot_HaxeError(new openfl_errors_Error("Action: Incorrect sound action"))
            }
        },
        getTargets: function(e) {
            var t = e.split(":");
            return t.length > 1 && ("folder" == t[0] || "layer" == t[0]) ? "layer" == t[0] ? this.desk.getElementsByLayerName(t[1]) : "folder" == t[0] ? this.desk.getElementsByFolderName(t[1]) : null : [this.desk.getElementByName(e)]
        },
        scale: function(e) {
            var t, n, l, i, s = this.getTargets(e.target),
                a = StringTools.trim(e.action[1]).split(",");
            t = null == a[0] ? 1 : Std.parseInt(a[0]) / 100, n = null == a[1] ? 0 : Std.parseInt(a[1]), l = null == a[2] ? 0 : Std.parseInt(a[2]), i = null == a[3] ? 0 : Std.parseInt(a[3]) / 1e3;
            for (var r = 1, o = null, d = 0; d < s.length;) {
                var _ = s[d];
                if (++d, null == ToolActions.objectsScale.h.__keys__[_.__id__] || ToolActions.objectsScale.h[_.__id__].scale != t) {
                    var h;
                    h = null != ToolActions.objectsScale.h.__keys__[_.__id__] ? ToolActions.objectsScale.h[_.__id__] : null, r = null != ToolActions.objectsScale.h.__keys__[_.__id__] ? ToolActions.objectsScale.h[_.__id__].scale : 1;
                    var p = t;
                    null == h ? (h = {
                        initM: _.get_transform().get_matrix().clone(),
                        scale: t,
                        px: n,
                        py: l,
                        ix: _.get_x(),
                        iy: _.get_y()
                    }, ToolActions.objectsScale.set(_, h)) : (h.scale = t, h.px = n, h.py = l), o = motion_Actuate.update($bind(this, this.updateScale), i, [_, r], [_, p], !1).ease(motion_easing_Quad.get_easeOut())
                }
            }
            null != e.onEnd && null != o ? o.onComplete($bind(this, this.onEnd1), [e.onEnd.params]) : null != e.onEnd && null == o && this.onEnd1(e.onEnd.params)
        },
        updateScale: function(e, t) {
            if (null != ToolActions.objectsScale.h.__keys__[e.__id__]) {
                this.hm.identity(), this.hm.translate(-ToolActions.objectsScale.h[e.__id__].px, -ToolActions.objectsScale.h[e.__id__].py), this.hm.scale(t, t), this.hm.translate(ToolActions.objectsScale.h[e.__id__].px, ToolActions.objectsScale.h[e.__id__].py);
                var n = e.get_transform().get_matrix();
                n.copyFrom(ToolActions.objectsScale.h[e.__id__].initM), n.concat(this.hm), e.get_transform().set_matrix(n)
            }
        },
        move: function(e) {
            var t, n, l, i = this.getTargets(e.target),
                s = StringTools.trim(e.action[1]).split(",");
            t = null == s[0] ? 0 : Std.parseInt(s[0]), n = null == s[1] ? 0 : Std.parseInt(s[1]), l = null == s[2] ? 0 : Std.parseInt(s[2]) / 1e3;
            for (var a = null, r = 0; r < i.length;) {
                var o, d = i[r];
                ++r, null == (o = null != ToolActions.objectsScale.h.__keys__[d.__id__] ? ToolActions.objectsScale.h[d.__id__] : null) && (o = {
                    initM: d.get_transform().get_matrix().clone(),
                    scale: 1,
                    px: 0,
                    py: 0,
                    ix: d.get_x(),
                    iy: d.get_y()
                }, ToolActions.objectsScale.set(d, o)), a = motion_Actuate.tween(d, l, {
                    x: o.ix + t,
                    y: o.iy + n
                }, !1).ease(motion_easing_Quad.get_easeOut())
            }
            null != e.onEnd && null != a ? a.onComplete($bind(this, this.onEnd1), [e.onEnd.params]) : null != e.onEnd && null == a && this.onEnd1(e.onEnd.params)
        },
        playScore: function(e) {
            switch (e.action[0]) {
                case "count":
                    var t, n, l, i = 5e3 + Std.random(4999),
                        s = i - 1e3 - Std.random(3e3);
                    n = 1 == (t = Math.random() > .5 ? 1 : 2) ? i : s, l = 2 == t ? i : s, Desk.current.lastWinner = t;
                    var a, r = Desk.current.levelsTextFields[1],
                        o = Desk.current.levelsTextFields[2];
                    a = null != e.action[1] && "" != e.action[1] ? Std.parseInt(e.action[1]) / 1e3 : 1;
                    var d = function(e, t) {
                        e.set_text(Math.ceil(t) + "")
                    };
                    motion_Actuate.update(d, a, [r, 0], [r, n], !1).ease(motion_easing_Linear.get_easeNone()), motion_Actuate.update(d, a, [o, 0], [o, l], !1).ease(motion_easing_Linear.get_easeNone()).onComplete($bind(this, this.onEndScoreCount), [e, t]);
                    break;
                default:
                    throw new js__$Boot_HaxeError(new openfl_errors_Error("Action: Incorrect score action"))
            }
        },
        onEndScoreCount: function(e, t) {
            null != e.onEnd && this.onEnd1(e.onEnd.params), this.callActionByName(1 == t ? "onWinner1" : "onWinner2")
        },
        playAction: function(e) {
            var t, n, l = this;
            if ("delay" != e.target)
                if ("sound" != e.target)
                    if ("score" != e.target)
                        if ("config" != e.target)
                            if ("assemblerConfig" != e.target)
                                if ("rewardedVideo" != e.target)
                                    if ("onRewVideoPlayied" != e.target)
                                        if ("scale" != e.action[0])
                                            if ("move" != e.action[0]) {
                                                var i, s = this.getTargets(e.target);
                                                if (i = null == e.onEnd ? null : function(t) {
                                                        l.onEnd(t, e.onEnd.params)
                                                    }, !(null != s && s.length > 0)) throw new js__$Boot_HaxeError(new openfl_errors_Error("Action: Target mc with name:'" + e.target + "' not found on scene"));
                                                switch (e.action[0]) {
                                                    case "play":
                                                        if (null != i)
                                                            for (var a = 0, r = s.length; a < r;) {
                                                                var o = a++;
                                                                s[o].playWithCallBack(0 == o ? i : null)
                                                            } else
                                                                for (var d = 0; d < s.length;) {
                                                                    var _ = s[d];
                                                                    ++d, _.play()
                                                                }
                                                        break;
                                                    case "stop":
                                                        for (var h = 0; h < s.length;) {
                                                            var p = s[h];
                                                            ++h, p.stop()
                                                        }
                                                        null != i && i(s[0]);
                                                        break;
                                                    case "restartCurLabel":
                                                        for (var c = 0; c < s.length;) {
                                                            var Q = s[c];
                                                            if (++c, "" != Q.curLabel) {
                                                                var U = [Q.curLabel];
                                                                if ("full" == e.action[1].toLowerCase()) {
                                                                    var m = U[0].split("_");
                                                                    if (m.length > 1 && Std.parseInt(m[m.length - 1]) > 0) {
                                                                        var u = Std.parseInt(m.pop()) - 1,
                                                                            F = m.join("_") + "_" + u;
                                                                        if (Q.hasLabel(F)) {
                                                                            var N = function(e, t) {
                                                                                return function(n) {
                                                                                    n.playLabel(t[0], e[0])
                                                                                }
                                                                            }([Q.playCallback], U);
                                                                            Q.playLabel(F, N)
                                                                        } else Q.curLabel = "", Q.playLabel(U[0], Q.playCallback)
                                                                    }
                                                                } else Q.curLabel = "", Q.playLabel(U[0], Q.playCallback)
                                                            }
                                                        }
                                                        null != i && i(s[0]);
                                                        break;
                                                    case "gotoAndPlay":
                                                        if (Std.parseInt(e.action[1]) + "" == e.action[1])
                                                            for (var S = 0, W = s.length; S < W;) {
                                                                var B = S++;
                                                                s[B].gotoAndPlay(Std.parseInt(e.action[1]), 0 == B ? i : null)
                                                            } else
                                                                for (var Z = 0, D = s.length; Z < D;) {
                                                                    var V = Z++;
                                                                    s[V].playLabel(e.action[1], 0 == V ? i : null)
                                                                }
                                                        break;
                                                    case "gotoAndPlayIfNot":
                                                        if (Std.parseInt(e.action[1]) + "" == e.action[1])
                                                            for (var f = 0, R = s.length; f < R;) {
                                                                var T = f++;
                                                                s[T].gotoAndPlay(Std.parseInt(e.action[1]), 0 == T ? i : null)
                                                            } else {
                                                                for (var J = !1, g = 0, b = s.length; g < b;) {
                                                                    var E = g++;
                                                                    s[E].curLabel != e.action[1] && (s[E].playLabel(e.action[1], J ? null : i), J = !0)
                                                                }
                                                                J || null == i || i(s[0])
                                                            }
                                                        break;
                                                    case "gotoAndStop":
                                                        if (Std.parseInt(e.action[1]) + "" == e.action[1])
                                                            for (var v = 0; v < s.length;) {
                                                                var k = s[v];
                                                                ++v, k.gotoAndStop(Std.parseInt(e.action[1]))
                                                            } else
                                                                for (var M = 0; M < s.length;) {
                                                                    var y = s[M];
                                                                    ++M, y.gotoAndStopLabel(e.action[1])
                                                                }
                                                        null != i && i(s[0]);
                                                        break;
                                                    case "hide":
                                                        for (var x = 0; x < s.length;) {
                                                            var w = s[x];
                                                            ++x, w.set_visible(!1)
                                                        }
                                                        null != i && i(s[0]);
                                                        break;
                                                    case "show":
                                                        for (var G = 0; G < s.length;) {
                                                            var H = s[G];
                                                            ++G, H.set_visible(!0)
                                                        }
                                                        null != i && i(s[0]);
                                                        break;
                                                    case "fade":
                                                        for (var C = null, Y = e.action[1].split(","), O = 0; O < s.length;) {
                                                            var X = s[O];
                                                            ++O, C = motion_Actuate.tween(X, Std.parseFloat(StringTools.trim(Y[1])), {
                                                                alpha: Std.parseFloat(StringTools.trim(Y[0]))
                                                            }).ease(motion_easing_Linear.get_easeNone())
                                                        }
                                                        null != i && (null != C ? C.onComplete(i, [s[0]]) : i(s[0]));
                                                        break;
                                                    default:
                                                        throw new js__$Boot_HaxeError(new openfl_errors_Error("Action: Unknow action:'" + e.action[0] + "' on target:'" + e.target + "'"))
                                                }
                                            } else this.move(e);
            else this.scale(e);
            else "rewVideoID" == e.action[0] && -1 != (n = ToolActions.get_onceIDS(), HxOverrides.indexOf(n, e.action[1], 0)) && this.onEnd(null, e.onEnd.params);
            else "showOnce" == e.action[0] ? -1 == (t = ToolActions.get_onceIDS(), HxOverrides.indexOf(t, e.action[1], 0)) && (console.log("RewVid"), ToolActions.get_onceIDS().push(e.action[1]), ToolActions.set_onceIDS(ToolActions.get_onceIDS())) : "show" == e.action[0] && console.log("RewVid");
            else this.setAssembler(e);
            else this.setConfig(e);
            else this.playScore(e);
            else this.playSoundAction(e);
            else this.playDelayAction(e)
        },
        onEnd1: function(e) {
            this.onEnd(null, e)
        },
        onEnd: function(e, t) {
            for (var n = 0; n < t.length;) {
                var l = t[n];
                switch (++n, l) {
                    case "activate":
                        this.desk.activateCurrentTool();
                        break;
                    case "nextTool":
                        this.desk.nextTool();
                        break;
                    case "completeTools":
                        this.desk.completeTools();
                        break;
                    case "unblockTool":
                        this.desk.isBlockedAction = !1;
                        break;
                    case "hideLastMask":
                        this.desk.hideLastMask();
                        break;
                    default:
                        this.callActionByName(l)
                }
            }
        },
        callActionByName: function(e) {
            for (var t = 0, n = this.actions; t < n.length;) {
                var l = n[t];
                ++t, l.seqName == e && (this.playAction(l), !0)
            }
        },
        getCallDataFromArr: function(e, t) {
            for (var n = new EReg(t + "[\\s]*\\((.*)\\)", "i"), l = 0; l < e.length;) {
                var i = e[l];
                if (++l, n.match(i)) {
                    for (var s = n.matched(1).split(","), a = [], r = 0; r < s.length;) {
                        var o = s[r];
                        ++r, a.push(StringTools.trim(o))
                    }
                    return {
                        method: t,
                        params: a
                    }
                }
            }
            return null
        },
        __class__: ToolActions
    };
    var ValueType = $hxClasses.ValueType = {
        __ename__: ["ValueType"],
        __constructs__: ["TNull", "TInt", "TFloat", "TBool", "TObject", "TFunction", "TClass", "TEnum", "TUnknown"]
    };
    ValueType.TNull = ["TNull", 0], ValueType.TNull.toString = $estr, ValueType.TNull.__enum__ = ValueType, ValueType.TInt = ["TInt", 1], ValueType.TInt.toString = $estr, ValueType.TInt.__enum__ = ValueType, ValueType.TFloat = ["TFloat", 2], ValueType.TFloat.toString = $estr, ValueType.TFloat.__enum__ = ValueType, ValueType.TBool = ["TBool", 3], ValueType.TBool.toString = $estr, ValueType.TBool.__enum__ = ValueType, ValueType.TObject = ["TObject", 4], ValueType.TObject.toString = $estr, ValueType.TObject.__enum__ = ValueType, ValueType.TFunction = ["TFunction", 5], ValueType.TFunction.toString = $estr, ValueType.TFunction.__enum__ = ValueType, ValueType.TClass = function(e) {
        var t = ["TClass", 6, e];
        return t.__enum__ = ValueType, t.toString = $estr, t
    }, ValueType.TEnum = function(e) {
        var t = ["TEnum", 7, e];
        return t.__enum__ = ValueType, t.toString = $estr, t
    }, ValueType.TUnknown = ["TUnknown", 8], ValueType.TUnknown.toString = $estr, ValueType.TUnknown.__enum__ = ValueType;
    var Type = function() {};
    $hxClasses.Type = Type, Type.__name__ = ["Type"], Type.getClassName = function(e) {
        var t = e.__name__;
        return null == t ? null : t.join(".")
    }, Type.getEnumName = function(e) {
        return e.__ename__.join(".")
    }, Type.resolveClass = function(e) {
        var t = $hxClasses[e];
        return null != t && t.__name__ ? t : null
    }, Type.resolveEnum = function(e) {
        var t = $hxClasses[e];
        return null != t && t.__ename__ ? t : null
    }, Type.createInstance = function(e, t) {
        switch (t.length) {
            case 0:
                return new e;
            case 1:
                return new e(t[0]);
            case 2:
                return new e(t[0], t[1]);
            case 3:
                return new e(t[0], t[1], t[2]);
            case 4:
                return new e(t[0], t[1], t[2], t[3]);
            case 5:
                return new e(t[0], t[1], t[2], t[3], t[4]);
            case 6:
                return new e(t[0], t[1], t[2], t[3], t[4], t[5]);
            case 7:
                return new e(t[0], t[1], t[2], t[3], t[4], t[5], t[6]);
            case 8:
                return new e(t[0], t[1], t[2], t[3], t[4], t[5], t[6], t[7]);
            default:
                throw new js__$Boot_HaxeError("Too many arguments")
        }
        return null
    }, Type.createEmptyInstance = function(e) {
        function t() {}
        return t.prototype = e.prototype, new t
    }, Type.createEnum = function(e, t, n) {
        var l = Reflect.field(e, t);
        if (null == l) throw new js__$Boot_HaxeError("No such constructor " + t);
        if (Reflect.isFunction(l)) {
            if (null == n) throw new js__$Boot_HaxeError("Constructor " + t + " need parameters");
            return Reflect.callMethod(e, l, n)
        }
        if (null != n && 0 != n.length) throw new js__$Boot_HaxeError("Constructor " + t + " does not need parameters");
        return l
    }, Type.getInstanceFields = function(e) {
        var t = [];
        for (var n in e.prototype) t.push(n);
        return HxOverrides.remove(t, "__class__"), HxOverrides.remove(t, "__properties__"), t
    }, Type.getEnumConstructs = function(e) {
        return e.__constructs__.slice()
    }, Type.typeof = function(e) {
        switch (typeof e) {
            case "boolean":
                return ValueType.TBool;
            case "string":
                return ValueType.TClass(String);
            case "number":
                return Math.ceil(e) == e % 2147483648 ? ValueType.TInt : ValueType.TFloat;
            case "object":
                if (null == e) return ValueType.TNull;
                var t = e.__enum__;
                if (null != t) return ValueType.TEnum(t);
                var n = js_Boot.getClass(e);
                return null != n ? ValueType.TClass(n) : ValueType.TObject;
            case "function":
                return e.__name__ || e.__ename__ ? ValueType.TObject : ValueType.TFunction;
            case "undefined":
                return ValueType.TNull;
            default:
                return ValueType.TUnknown
        }
    };
    var UIManager = function(e) {
        this.hp = new openfl_geom_Point, this.hm = new openfl_geom_Matrix, this.tutorDomino = null, this.isTutorActive = !1, this._curBGIdx = -1, this.landscapeConfBtnDefOY = 0, this.portraitConfBtnDefOX = 0, this.fsFinPlayersIcons = [], this.fsFinScoreTFs = [], this.finalFS = null, this.fs1PlayersIcons = [], this.fs1Score2TFs = [], this.fs1Score1TFs = [], this.intermediateFS = null, this.pauseWindow = null, this.configBtns = [], this.playersTfs = [], this.playersIcons = [], this.portraitOY = 0, this.landscapeOX = 0, this.portraitIngameCont = new openfl_display_Sprite, this.landscapeIngameCont = new openfl_display_Sprite, UIManager.get_gameSpeed(), this.dominoMode = e, this.desk = Desk.current, this.main = Main.current, this.game = Game.current, this.portraitIngame = this.desk.getElementsByFolderName("PortraitIngame"), this.landscapeIngame = this.desk.getElementsByFolderName("LandscapeIngame"), Desk.current.getElementByName("bg").gotoAndStop(this.get_curBGIdx());
        for (var t = 0, n = this.portraitIngame.length; t < n;) {
            var l = t++,
                i = this.portraitIngame[l];
            if ("Line" == i.layerName) this.portraitLine = i;
            else if (-1 != i.get_name().indexOf("playerIcon")) {
                var s = Std.parseInt(StringTools.replace(i.get_name(), "playerIcon", "")) - 1;
                null == this.playersIcons[s] && (this.playersIcons[s] = []), this.playersIcons[s].push(i)
            } else if (-1 != i.get_name().indexOf("player") && -1 != i.get_name().indexOf("ScoreTF")) {
                var a = new EReg("player([0-9]+)[.*]?", "i");
                a.match(i.get_name());
                var r = Std.parseInt(a.matched(1)) - 1;
                null == this.playersTfs[r] && (this.playersTfs[r] = []), this.playersTfs[r].push(new LevelsTextField([i])), this.portraitIngame[l] = this.playersTfs[r][this.playersTfs[r].length - 1]
            } else "ConfigBtn" == i.get_name() && (this.configBtns.push(i), this.portraitConfBtn = i, this.portraitConfBtnDefOX = Config.baseSWidth - i.get_x() + 10)
        }
        for (var o = 0, d = this.landscapeIngame.length; o < d;) {
            var _ = o++,
                h = this.landscapeIngame[_];
            if ("Line" == h.layerName) this.landscapeLine = h;
            else if (-1 != h.get_name().indexOf("playerIcon")) {
                var p = Std.parseInt(StringTools.replace(h.get_name(), "playerIcon", "")) - 1;
                null == this.playersIcons[p] && (this.playersIcons[p] = []), this.playersIcons[p].push(h)
            } else if (-1 != h.get_name().indexOf("player") && -1 != h.get_name().indexOf("ScoreTF")) {
                var c = new EReg("player([0-9]+)[.*]?", "i");
                c.match(h.get_name());
                var Q = Std.parseInt(c.matched(1)) - 1;
                null == this.playersTfs[Q] && (this.playersTfs[Q] = []), this.playersTfs[Q].push(new LevelsTextField([h])), this.landscapeIngame[_] = this.playersTfs[Q][this.playersTfs[Q].length - 1]
            } else "ConfigBtn" == h.get_name() && (this.configBtns.push(h), this.landscapeConfBtn = h, this.landscapeConfBtnDefOY = h.get_y() + 30)
        }
        this.landscapeLine.parent.addChildAt(this.landscapeIngameCont, this.landscapeLine.parent.getChildIndex(this.landscapeLine)), this.portraitLine.parent.addChildAt(this.portraitIngameCont, this.portraitLine.parent.getChildIndex(this.portraitLine)), this.landscapeIngameCont.set_x(this.landscapeLine.get_x()), this.landscapeIngameCont.set_y(this.landscapeLine.get_y()), this.portraitIngameCont.set_x(this.portraitLine.get_x()), this.portraitIngameCont.set_y(this.portraitLine.get_y()), this.landscapeOX = Config.baseSWidth - this.landscapeLine.get_x(), this.portraitOY = this.portraitLine.get_y(), this.changeElsParent(this.portraitIngame, this.portraitIngameCont), this.changeElsParent(this.landscapeIngame, this.landscapeIngameCont), this.portraitIngameCont.set_visible(this.landscapeIngameCont.set_visible(!1)), this.desk.pauseClickFunction = $bind(this, this.pauseClickFun), this.pauseHomeBtn = this.desk.getElementByName("homeBtn"), this.pauseWindow = new ShowHideAnimator(this.desk.getElementsByFolderName("WindowPause"), !0, !0), this.pauseCloseBtn = this.desk.getElementByName("backBtn"), this.pauseSpeedBtn = this.desk.getElementByName("speedBtn"), this.pauseBgBtns = [];
        for (var U = 1; null != this.desk.getElementByName("bgSwitchBtn" + U);) this.pauseBgBtns.push(this.desk.getElementByName("bgSwitchBtn" + U)), U++;
        for (var m = 0, u = this.pauseBgBtns.length; m < u;) {
            var F = m++;
            this.pauseBgBtns[F].gotoAndStop(F == this.get_curBGIdx() ? 1 : 0)
        }
        this.pauseHelpBtn = this.desk.getElementByName("helpBtn"), this.intermediateFS = new ShowHideAnimator(this.desk.getElementsByFolderName("FinishScreen1"), !0, !0), this.fs1NextBtn = this.desk.getElementByNameInFolder("nextBtnFS", "FinishScreen1");
        for (var N = 0, S = DominoModeBase.playersTypes.length; N < S;) {
            var W = N++;
            this.fs1Score1TFs.push(this.desk.getElementByNameInFolder("fsScore1_" + (W + 1), "FinishScreen1")), this.fs1Score2TFs.push(this.desk.getElementByNameInFolder("fsScore2_" + (W + 1), "FinishScreen1")), this.fs1PlayersIcons.push(this.desk.getElementByNameInFolder("playerFS" + (W + 1), "FinishScreen1"))
        }
        this.finalFS = new ShowHideAnimator(this.desk.getElementsByFolderName("FinalFinishScreen"), !0, !0), this.fsFinNextBtn = this.desk.getElementByNameInFolder("fsFinHomeBtn", "FinalFinishScreen"), this.finalFSAnim = this.desk.getElementByNameInFolder("CrownAnim", "FinalFinishScreen"), this.fsFinWinnerIcon = this.desk.getElementByNameInFolder("winnerIcon", "FinalFinishScreen");
        for (var B = 0, Z = DominoModeBase.playersTypes.length; B < Z;) {
            var D = B++;
            this.fsFinScoreTFs.push(this.desk.getElementByNameInFolder("fsFinScore1_" + (D + 1), "FinalFinishScreen")), this.fsFinPlayersIcons.push(this.desk.getElementByNameInFolder("playerFinFS" + (D + 1), "FinalFinishScreen"))
        }
        this.confetti = new Confetti(this.desk.getElementByName("confetti")), this.tutorMC = this.desk.getElementByName("tutorMC")
    };
    $hxClasses.UIManager = UIManager, UIManager.__name__ = ["UIManager"], UIManager.__properties__ = {
        set_gameSpeed: "set_gameSpeed",
        get_gameSpeed: "get_gameSpeed"
    }, UIManager.get_gameSpeed = function() {
        return -1 == UIManager._gameSpeed && (null == LocalSaves.getVar("gameSpeed") ? UIManager._gameSpeed = 0 : UIManager._gameSpeed = LocalSaves.getVar("gameSpeed"), GameConfig.gameSpeedCoef = GameConfig.speedsCoefs[UIManager._gameSpeed]), UIManager._gameSpeed
    }, UIManager.set_gameSpeed = function(e) {
        return UIManager._gameSpeed = e, LocalSaves.setVar("gameSpeed", UIManager._gameSpeed), GameConfig.gameSpeedCoef = GameConfig.speedsCoefs[UIManager._gameSpeed], UIManager._gameSpeed
    }, UIManager.prototype = {
        desk: null,
        main: null,
        game: null,
        dominoMode: null,
        portraitIngame: null,
        landscapeIngame: null,
        landscapeIngameCont: null,
        portraitIngameCont: null,
        landscapeOX: null,
        portraitOY: null,
        portraitLine: null,
        landscapeLine: null,
        playersIcons: null,
        playersTfs: null,
        configBtns: null,
        pauseWindow: null,
        intermediateFS: null,
        fs1Score1TFs: null,
        fs1Score2TFs: null,
        fs1PlayersIcons: null,
        fs1NextBtn: null,
        finalFS: null,
        fsFinScoreTFs: null,
        fsFinPlayersIcons: null,
        fsFinNextBtn: null,
        finalFSAnim: null,
        fsFinWinnerIcon: null,
        confetti: null,
        pauseHomeBtn: null,
        pauseCloseBtn: null,
        pauseSpeedBtn: null,
        pauseBgBtns: null,
        pauseHelpBtn: null,
        portraitConfBtn: null,
        landscapeConfBtn: null,
        portraitConfBtnDefOX: null,
        landscapeConfBtnDefOY: null,
        _curBGIdx: null,
        get_curBGIdx: function() {
            return -1 == this._curBGIdx && (null == LocalSaves.getVar("curBGIdx") ? this._curBGIdx = 0 : this._curBGIdx = LocalSaves.getVar("curBGIdx")), this._curBGIdx
        },
        set_curBGIdx: function(e) {
            return this._curBGIdx = e, LocalSaves.setVar("curBGIdx", this._curBGIdx), this._curBGIdx
        },
        tutorMC: null,
        isTutorActive: null,
        tutorDomino: null,
        hm: null,
        hp: null,
        init: function() {
            this.setPlayers(), this.updatePlayersScoresIngame()
        },
        getScoreTFPos: function(e) {
            for (var t = null, n = 0, l = this.playersTfs[e]; n < l.length;) {
                var i = l[n];
                if (++n, i.get_visible() && i.parent.get_visible()) {
                    t = i;
                    break
                }
            }
            var s = t.getBounds(Desk.current.levels);
            return this.hp.x = s.x + s.width / 2, this.hp.y = s.y + s.height / 2, this.hp
        },
        getPlayerActiveScoreTF: function(e) {
            for (var t = 0, n = this.playersTfs[e]; t < n.length;) {
                var l = n[t];
                if (++t, l.get_visible() && l.parent.get_visible()) return l
            }
            return null
        },
        updatePlayersScoresIngame: function() {
            for (var e = 0, t = DominoModeBase.playersScores.length; e < t;)
                for (var n = e++, l = 0, i = this.playersTfs[n]; l < i.length;) {
                    var s = i[l];
                    ++l, s.set_text(DominoModeBase.playersScores[n] + "")
                }
        },
        setPlayers: function() {
            for (var e = 0, t = this.playersIcons.length; e < t;) {
                var n, l = e++;
                n = "human" == DominoModeBase.playersTypes[l] ? 0 : 2, l == this.dominoMode.curTurn && n++;
                for (var i = 0, s = this.playersIcons[l]; i < s.length;) {
                    var a = s[i];
                    ++i, a.gotoAndStop(n)
                }
            }
        },
        changeElsParent: function(e, t) {
            var n = e.slice();
            n.sort($bind(this, this.sortByChildIndex));
            var l = t.get_transform().get_matrix().clone();
            l.invert();
            for (var i = 0, s = n.length; i < s;) {
                var a = n[i++],
                    r = a.get_transform().get_matrix();
                r.concat(l), a.get_transform().set_matrix(r), t.addChild(a)
            }
        },
        sortByChildIndex: function(e, t) {
            return null == e.parent ? 1 : null == t.parent ? -1 : e.parent != t.parent ? 0 : e.parent.getChildIndex(e) - t.parent.getChildIndex(t) < 0 ? -1 : 1
        },
        get_isPortraitMode: function() {
            return this.dominoMode.get_isPortraitMode()
        },
        get_isLanscapeMode: function() {
            return this.dominoMode.get_isLanscapeMode()
        },
        onTurnChange: function() {
            "human" == DominoModeBase.playersTypes[this.dominoMode.curTurn] && UIManager.needShowTutor && this.showTutor()
        },
        showTutor: function(e) {
            if (null == e && (e = !1), e && "human" != DominoModeBase.playersTypes[this.dominoMode.curTurn]) UIManager.needShowTutor = !0;
            else {
                UIManager.needShowTutor = !1, this.isTutorActive = !0;
                var t = this.dominoMode.getAllPlays(this.dominoMode.get_currentPlayer().hand);
                if (null == t || 0 == t.length) {
                    if (null == this.dominoMode.boneyard || 0 == this.dominoMode.boneyard.length || !this.dominoMode.boneyardIsActive) return;
                    Actuate.timer(.4, "TutorActuate").onComplete($bind(this, this.showBoneyardTutor))
                } else {
                    var n = t[Std.random(t.length)],
                        l = n.stack.lastDomino();
                    if (this.tutorDomino = new Domino([n.domino.get_val1(), n.domino.get_val2()]), this.tutorDomino.open(!1), null == l) {
                        this.hp.x = -Desk.get_leftLevels() + Desk.get_sWidthLevels() / 2, this.hp.y = -Desk.get_topLevels() + Desk.get_sHeightLevels() / 2, this.hm.copyFrom(n.domino.get_transform().get_matrix());
                        for (var i = n.domino.parent; null != i && i != Desk.current.levels;) this.hm.concat(i.get_transform().get_matrix()), i = i.parent;
                        this.desk.levels.addChildAt(this.tutorDomino, this.tutorMC.parent.getChildIndex(this.tutorMC));
                        var s = this.tutorDomino.get_transform().get_matrix();
                        s.copyFrom(this.hm), this.tutorDomino.get_transform().set_matrix(s)
                    } else {
                        this.hm.copyFrom(n.domino.get_transform().get_matrix());
                        for (var a = n.domino.parent; null != a && a != Desk.current.levels;) this.hm.concat(a.get_transform().get_matrix()), a = a.parent;
                        var r = this.tutorDomino.get_transform().get_matrix();
                        r.copyFrom(this.hm), this.tutorDomino.get_transform().set_matrix(r), this.desk.levels.addChildAt(this.tutorDomino, this.tutorMC.parent.getChildIndex(this.tutorMC));
                        var o = l.getBounds(this.tutorDomino.parent);
                        this.hp.x = o.x + o.width / 2, this.hp.y = o.y + o.height / 2
                    }
                    this.tutorStep1(this.tutorDomino.get_x(), this.tutorDomino.get_y(), this.hp.x, this.hp.y)
                }
            }
        },
        showBoneyardTutor: function() {
            var e = this,
                t = "mouse";
            Config._getIsMobileBrowser() && (t = "touch");
            var n = this.dominoMode.boneyard[Std.random(this.dominoMode.boneyard.length)].getBounds(this.desk.levels);
            this.tutorMC.set_x(n.x + n.width / 2), this.tutorMC.set_y(n.y + n.height / 2), this.tutorMC.set_visible(!0), this.tutorMC.set_alpha(1), this.tutorMC.playLabel(t + "Down", function(n) {
                if (null != e.tutorMC) try {
                    e.tutorMC.playLabel(t + "Up"), Actuate.tween(e.tutorMC, .4, {
                        alpha: 1e-4
                    }, !0, "TutorActuate").ease(motion_easing_Quad.get_easeInOut()).delay(.4)
                } catch (e) {
                    e instanceof js__$Boot_HaxeError && (e = e.val)
                }
            }), Actuate.timer(2, "TutorActuate").onComplete($bind(this, this.showBoneyardTutor))
        },
        tutorStep1: function(e, t, n, l) {
            var i = "mouse";
            Config._getIsMobileBrowser() && (i = "touch"), this.tutorDomino.set_alpha(.5), this.tutorDomino.set_visible(!1), this.tutorDomino.set_x(e), this.tutorDomino.set_y(t), this.tutorMC.set_visible(!0), this.tutorMC.set_alpha(1), this.tutorMC.set_x(this.tutorDomino.get_x()), this.tutorMC.set_y(this.tutorDomino.get_y()), this.tutorMC.curLabel = "", this.tutorMC.playLabel(i + "Down"), Actuate.timer(.7, "TutorActuate").onComplete($bind(this, this.tutorStep2), [e, t, this.hp.x, this.hp.y])
        },
        tutorStep2: function(e, t, n, l) {
            this.tutorDomino.set_visible(!0), Actuate.tween(this.tutorDomino, 1, {
                x: n,
                y: l
            }, !0, "TutorActuate").ease(motion_easing_Quad.get_easeInOut()).onComplete($bind(this, this.tutorStep3), [e, t, this.hp.x, this.hp.y]), Actuate.tween(this.tutorMC, 1, {
                x: n,
                y: l
            }, !0, "TutorActuate").ease(motion_easing_Quad.get_easeInOut())
        },
        tutorStep3: function(e, t, n, l) {
            var i = "mouse";
            Config._getIsMobileBrowser() && (i = "touch"), this.tutorMC.curLabel = "", this.tutorMC.playLabel(i + "Up"), Actuate.tween(this.tutorMC, .4, {
                alpha: 1e-4
            }, !0, "TutorActuate").ease(motion_easing_Quad.get_easeInOut()).delay(.4), Actuate.tween(this.tutorDomino, .4, {
                alpha: 1e-4
            }, !0, "TutorActuate").ease(motion_easing_Quad.get_easeInOut()).delay(.4), Actuate.timer(2, "TutorActuate").onComplete($bind(this, this.tutorStep1), [e, t, this.hp.x, this.hp.y])
        },
        stopTutor: function() {
            null != this.tutorMC && this.tutorMC.get_visible() && this.isTutorActive && gradle.event('EVENT_TUTORIALSKIPPED', {}), Actuate.stopByID("TutorActuate", null, !1, !1), null != this.tutorDomino && null != this.tutorDomino.parent && this.tutorDomino.parent.removeChild(this.tutorDomino), this.tutorMC.set_visible(!1), this.tutorDomino = null, this.isTutorActive = !1
        },
        resetTutor: function() {
            this.stopTutor(), this.isTutorActive && (this.isTutorActive = !1, this.showTutor())
        },
        onMDown: function() {
            var e = this;
            if (this.isTutorActive && this.stopTutor(), this.intermediateFS.isActive) this.fs1NextBtn.get_visible() && 1 == this.fs1NextBtn.get_alpha() && this.desk.hitsMouse(this.fs1NextBtn) && this.desk.animateBtnClick(this.fs1NextBtn, function() {
                DominoModeBase.curRound++, e.fs1NextBtn.set_alpha(1), Actuate.reset(), e.desk.startNewGame(e.desk.curLevel)
            });
            else if (this.finalFS.isActive) this.fsFinNextBtn.get_visible() && 1 == this.fsFinNextBtn.get_alpha() && this.desk.hitsMouse(this.fsFinNextBtn) && this.desk.animateBtnClick(this.fsFinNextBtn, function() {
                e.fsFinNextBtn.set_alpha(1), Actuate.reset(), Desk.current.startNewGame(0)
            });
            else
                for (var t = 0, n = this.configBtns; t < n.length;) {
                    var l = [n[t]];
                    if (++t, l[0].get_visible() && null != l[0].parent && l[0].parent.get_visible() && !this.desk.paused && 1 == l[0].get_alpha() && this.desk.hitsMouse(l[0])) return l[0].set_alpha(.9999), void this.desk.animateBtnClick(l[0], function(t) {
                        return function() {
                            t[0].set_alpha(1), e.desk.showPauseWindow(!0), gradle.event('SCREEN_PAUSE'), e.pauseSpeedBtn.gotoAndStop(UIManager.get_gameSpeed());
                            for (var n = 0, l = e.pauseBgBtns.length; n < l;) {
                                var i = n++;
                                e.pauseBgBtns[i].gotoAndStop(i == e.get_curBGIdx() ? 1 : 0)
                            }
                            e.pauseWindow.animateShow()
                        }
                    }(l))
                }
        },
        onMUp: function() {},
        onResize: function() {
            this.resetTutor(), this.pauseWindow.onResize(), this.finalFS.onResize(), this.intermediateFS.onResize(), this.landscapeIngameCont.set_x(-Desk.get_leftLevels() + Desk.get_sWidthLevels() - this.landscapeOX), this.portraitIngameCont.set_y(-Desk.get_topLevels() + this.portraitOY), this.portraitIngameCont.set_visible(this.get_isPortraitMode()), this.landscapeIngameCont.set_visible(this.get_isLanscapeMode()), this.portraitConfBtn.set_x(-Desk.get_leftLevels() + Desk.get_sWidthLevels() - this.portraitConfBtn.parent.get_x() - this.portraitConfBtnDefOX), this.landscapeConfBtn.set_y(-Desk.get_topLevels() - this.landscapeConfBtn.parent.get_y() + this.landscapeConfBtnDefOY), this.landscapeLine.set_y(0), this.landscapeLine.set_scaleY(1), this.landscapeLine.get_height() < Desk.get_sHeightLevels() && (this.landscapeLine.set_y(-(Desk.get_sHeightLevels() - this.landscapeLine.get_height()) / 2), this.landscapeLine.set_height(Desk.get_sHeightLevels()))
        },
        showFinalFS: function(e, t) {
            var n = this,
                l = function() {
                    var l = [];
                    l.push(gradle.event('SCREEN_GAMERESULT')), 0 == e ? (l.push(gradle.event('EVENT_LEVELSUCCESS', {
                        levelName: Game.getLevelName()
                    })), l.push(gradle.event('EVENT_LEVELSCORE', {
                        levelName: Game.getLevelName(),
                        levelScore: t
                    })), l.push(gradle.event('EVENT_TOTALSCORE', {
                        levelName: Game.getLevelName(!0),
                        totalScore: DominoModeBase.playersScores[0]
                    }))) : l.push(gradle.event('EVENT_LEVELFAIL', {
                        levelName: Game.getLevelName(),
                        reason: "dead"
                    }));
                    var i = function() {
                        n.fsFinNextBtn.set_visible(!0);
                        var e = n.fsFinNextBtn.get_scaleX(),
                            t = n.fsFinNextBtn.get_scaleY();
                        n.fsFinNextBtn.set_scaleX(n.fsFinNextBtn.set_scaleY(.1)), Actuate.tween(n.fsFinNextBtn, .3, {
                            scaleX: e,
                            scaleY: t
                        }).ease(motion_easing_Back.get_easeOut())
                    };
                    setTimeout(function() {
                        Promise.all(l).then(i, i)
                    }, 2e3)
                };
            this.finalFS.animateShow(function() {
                Actuate.timer(.1).onComplete(l)
            }), this.fsFinNextBtn.set_visible(!1), this.dominoMode.clearSave();
            for (var i = 0, s = this.dominoMode.players.length; i < s;) {
                var a = i++;
                this.fsFinScoreTFs[a].set_text(DominoModeBase.playersScores[a] + "")
            }
            for (var r = 0, o = DominoModeBase.playersTypes.length; r < o;) {
                var d = r++;
                this.fsFinPlayersIcons[d].gotoAndStop("human" == DominoModeBase.playersTypes[d] ? 0 : 1)
            }
            this.fsFinWinnerIcon.gotoAndStop("human" == DominoModeBase.playersTypes[e] ? 0 : 1), this.finalFSAnim.gotoAndStop(0), this.finalFSAnim.play(), this.finalFSAnim.curEndFrame = this.finalFSAnim.totalFrames - 1, this.confetti.start()
        },
        showIntermediateFS: function(e, t) {
            var n = this,
                l = function() {
                    var l = [];
                    l.push(gradle.event('SCREEN_LEVELRESULT')), 0 == e ? (l.push(gradle.event('EVENT_LEVELSUCCESS', {
                        levelName: Game.getLevelName()
                    })), l.push(gradle.event('EVENT_LEVELSCORE', {
                        levelName: Game.getLevelName(),
                        levelScore: t
                    })), l.push(gradle.event('EVENT_TOTALSCORE', {
                        levelName: Game.getLevelName(!0),
                        totalScore: DominoModeBase.playersScores[0]
                    }))) : l.push(gradle.event('EVENT_LEVELFAIL', {
                        levelName: Game.getLevelName(),
                        reason: "dead"
                    }));
                    var i = function() {
                        n.fs1NextBtn.set_visible(!0);
                        var e = n.fs1NextBtn.get_scaleX(),
                            t = n.fs1NextBtn.get_scaleY();
                        n.fs1NextBtn.set_scaleX(n.fs1NextBtn.set_scaleY(.1)), Actuate.tween(n.fs1NextBtn, .3, {
                            scaleX: e,
                            scaleY: t
                        }).ease(motion_easing_Back.get_easeOut())
                    };
                    setTimeout(function() {
                        Promise.all(l).then(i, i)
                    }, 2e3)
                };
            this.intermediateFS.animateShow(function() {
                Actuate.timer(.1).onComplete(l)
            }), this.fs1NextBtn.set_visible(!1);
            for (var i = 0, s = this.dominoMode.players.length; i < s;) {
                var a = i++;
                this.fs1Score1TFs[a].set_text(DominoModeBase.roundScores[a] + ""), this.fs1Score2TFs[a].set_text(DominoModeBase.playersScores[a] + "")
            }
            for (var r = 0, o = DominoModeBase.playersTypes.length; r < o;) {
                var d = r++;
                this.fs1PlayersIcons[d].gotoAndStop("human" == DominoModeBase.playersTypes[d] ? 0 : 1)
            }
        },
        gotoHome: function() {
            Actuate.reset(), Desk.current.startNewGame(0), DominoModeBase.curRound = 0
        },
        pauseClickFun: function() {
            var e = this;
            if (this.pauseHelpBtn.get_visible() && 1 == this.pauseHelpBtn.get_alpha() && this.desk.hitsMouse(this.pauseHelpBtn)) return this.pauseHelpBtn.set_alpha(.9999), void this.desk.animateBtnClick(this.pauseHelpBtn, function() {
                e.pauseHelpBtn.set_alpha(1), e.pauseWindow.animateHide(function() {
                    e.showTutor(!0), e.desk.resume(!0)
                })
            });
            if (this.pauseHomeBtn.get_visible() && 1 == this.pauseHomeBtn.get_alpha() && this.desk.hitsMouse(this.pauseHomeBtn)) return this.pauseHomeBtn.set_alpha(.9999), this.desk.animateBtnClick(this.pauseHomeBtn, $bind(this, this.gotoHome)), void gradle.event('EVENT_LEVELFAIL', {
                levelName: Game.getLevelName(),
                reason: "quit"
            });
            if (this.pauseCloseBtn.get_visible() && 1 == this.pauseCloseBtn.get_alpha() && this.desk.hitsMouse(this.pauseCloseBtn)) return this.pauseCloseBtn.set_alpha(.9999), void this.desk.animateBtnClick(this.pauseCloseBtn, function() {
                e.pauseCloseBtn.set_alpha(1), e.pauseWindow.animateHide(function() {
                    gradle.event('SCREEN_LEVEL'), e.desk.resume(!0)
                })
            });
            if (this.pauseSpeedBtn.get_visible() && 1 == this.pauseSpeedBtn.get_alpha() && this.desk.hitsMouse(this.pauseSpeedBtn)) return this.pauseSpeedBtn.set_alpha(.9999), void this.desk.animateBtnClick(this.pauseSpeedBtn, function() {
                e.pauseSpeedBtn.set_alpha(1), UIManager.set_gameSpeed(0 == UIManager.get_gameSpeed() ? 1 : 0), e.pauseSpeedBtn.gotoAndStop(UIManager.get_gameSpeed())
            });
            for (var t = 0, n = this.pauseBgBtns.length; t < n;) {
                var l = [t++],
                    i = this.pauseBgBtns[l[0]];
                if (i.get_visible() && 1 == i.get_alpha() && this.desk.hitsMouse(i)) return void this.desk.animateBtnClick(i, function(t) {
                    return function() {
                        e.set_curBGIdx(t[0]);
                        for (var n = 0, l = e.pauseBgBtns.length; n < l;) {
                            var i = n++;
                            e.pauseBgBtns[i].gotoAndStop(i == e.get_curBGIdx() ? 1 : 0)
                        }
                        Desk.current.getElementByName("bg").gotoAndStop(e.get_curBGIdx())
                    }
                }(l))
            }
        },
        update: function(e) {
            this.confetti.isActive && this.confetti.update(e)
        },
        destroy: function() {
            this.confetti.destroy()
        },
        __class__: UIManager,
        __properties__: {
            get_isLanscapeMode: "get_isLanscapeMode",
            get_isPortraitMode: "get_isPortraitMode",
            set_curBGIdx: "set_curBGIdx",
            get_curBGIdx: "get_curBGIdx"
        }
    };
    var Xml = function(e) {
        this.nodeType = e, this.children = [], this.attributeMap = new haxe_ds_StringMap
    };
    $hxClasses.Xml = Xml, Xml.__name__ = ["Xml"], Xml.parse = function(e) {
        return haxe_xml_Parser.parse(e)
    }, Xml.createElement = function(e) {
        var t = new Xml(Xml.Element);
        if (t.nodeType != Xml.Element) throw new js__$Boot_HaxeError("Bad node type, expected Element but found " + t.nodeType);
        return t.nodeName = e, t
    }, Xml.createPCData = function(e) {
        var t = new Xml(Xml.PCData);
        if (t.nodeType == Xml.Document || t.nodeType == Xml.Element) throw new js__$Boot_HaxeError("Bad node type, unexpected " + t.nodeType);
        return t.nodeValue = e, t
    }, Xml.createCData = function(e) {
        var t = new Xml(Xml.CData);
        if (t.nodeType == Xml.Document || t.nodeType == Xml.Element) throw new js__$Boot_HaxeError("Bad node type, unexpected " + t.nodeType);
        return t.nodeValue = e, t
    }, Xml.createComment = function(e) {
        var t = new Xml(Xml.Comment);
        if (t.nodeType == Xml.Document || t.nodeType == Xml.Element) throw new js__$Boot_HaxeError("Bad node type, unexpected " + t.nodeType);
        return t.nodeValue = e, t
    }, Xml.createDocType = function(e) {
        var t = new Xml(Xml.DocType);
        if (t.nodeType == Xml.Document || t.nodeType == Xml.Element) throw new js__$Boot_HaxeError("Bad node type, unexpected " + t.nodeType);
        return t.nodeValue = e, t
    }, Xml.createProcessingInstruction = function(e) {
        var t = new Xml(Xml.ProcessingInstruction);
        if (t.nodeType == Xml.Document || t.nodeType == Xml.Element) throw new js__$Boot_HaxeError("Bad node type, unexpected " + t.nodeType);
        return t.nodeValue = e, t
    }, Xml.createDocument = function() {
        return new Xml(Xml.Document)
    }, Xml.prototype = {
        nodeType: null,
        nodeName: null,
        nodeValue: null,
        parent: null,
        children: null,
        attributeMap: null,
        get: function(e) {
            if (this.nodeType != Xml.Element) throw new js__$Boot_HaxeError("Bad node type, expected Element but found " + this.nodeType);
            return this.attributeMap.get(e)
        },
        set: function(e, t) {
            if (this.nodeType != Xml.Element) throw new js__$Boot_HaxeError("Bad node type, expected Element but found " + this.nodeType);
            this.attributeMap.set(e, t)
        },
        exists: function(e) {
            if (this.nodeType != Xml.Element) throw new js__$Boot_HaxeError("Bad node type, expected Element but found " + this.nodeType);
            return this.attributeMap.exists(e)
        },
        elementsNamed: function(e) {
            if (this.nodeType != Xml.Document && this.nodeType != Xml.Element) throw new js__$Boot_HaxeError("Bad node type, expected Element or Document but found " + this.nodeType);
            for (var t, n = [], l = 0, i = this.children; l < i.length;) {
                var s = i[l];
                ++l, s.nodeType == Xml.Element && function(e) {
                    if (s.nodeType != Xml.Element) throw new js__$Boot_HaxeError("Bad node type, expected Element but found " + s.nodeType);
                    return s.nodeName
                }() == e && n.push(s)
            }
            return t = n, HxOverrides.iter(t)
        },
        firstElement: function() {
            if (this.nodeType != Xml.Document && this.nodeType != Xml.Element) throw new js__$Boot_HaxeError("Bad node type, expected Element or Document but found " + this.nodeType);
            for (var e = 0, t = this.children; e < t.length;) {
                var n = t[e];
                if (++e, n.nodeType == Xml.Element) return n
            }
            return null
        },
        addChild: function(e) {
            if (this.nodeType != Xml.Document && this.nodeType != Xml.Element) throw new js__$Boot_HaxeError("Bad node type, expected Element or Document but found " + this.nodeType);
            null != e.parent && e.parent.removeChild(e), this.children.push(e), e.parent = this
        },
        removeChild: function(e) {
            if (this.nodeType != Xml.Document && this.nodeType != Xml.Element) throw new js__$Boot_HaxeError("Bad node type, expected Element or Document but found " + this.nodeType);
            return !!HxOverrides.remove(this.children, e) && (e.parent = null, !0)
        },
        __class__: Xml
    };
    var firework_Firework = function(e, t, n) {
        this.destroied = !1, this.stars = [], this.starsNum = 30, this.rotVelocityMax = 20, this.layer = e, this.AddStars(t, n), Main.current.playSpriteSound("FireworkSound")
    };
    $hxClasses["firework.Firework"] = firework_Firework, firework_Firework.__name__ = ["firework", "Firework"], firework_Firework.prototype = {
        rotVelocityMax: null,
        starsNum: null,
        stars: null,
        destroied: null,
        layer: null,
        on_enter_frame: function() {
            this.MoveFirework()
        },
        MoveFirework: function() {
            for (var e = this.stars.length - 1; e >= 0;) {
                var t = this.stars[e];
                t.RunFirework(), t.lifeCounter <= 0 ? (HxOverrides.remove(this.stars, t), null != t.parent && t.parent.removeChild(t), e -= 2) : e--
            }
            0 == this.stars.length && this.Destroy()
        },
        AddStars: function(e, t) {
            for (var n = 360 / this.starsNum, l = 0, i = Math.round(this.starsNum), s = 0; s < i;) {
                s++;
                var a = firework_Firework.X_VELOCITY / 4 + Math.random() * firework_Firework.X_VELOCITY * 3 / 4,
                    r = firework_Firework.Y_VELOCITY / 4 + Math.random() * firework_Firework.Y_VELOCITY * 3 / 4,
                    o = this.rotVelocityMax / 2 - Math.random() * this.rotVelocityMax,
                    d = new firework_Star;
                d.xVelocity = Math.sin(l * Math.PI / 180) * a * 3, d.yVelocity = Math.cos(l * Math.PI / 180) * r * 3, d.rotVelocity = 3 * o, d.lifeCounter = d.lifeCounter / 2 + Math.random() * d.lifeCounter / 2, d.set_x(e), d.set_y(t), d.RunFirework(), d.set_scaleX(d.set_scaleY(.7 + .3 * Math.random())), this.stars.push(d), this.layer.addChild(d), l += n
            }
        },
        Destroy: function() {
            if (!this.destroied) {
                for (this.destroied = !0; this.stars.length > 0;) {
                    var e = this.stars.pop();
                    null != e && null != e.parent && e.parent.removeChild(e)
                }
                this.stars = []
            }
        },
        update: function() {
            this.on_enter_frame()
        },
        __class__: firework_Firework
    };
    var firework_Star = function() {
        this.lifeCounter = 21, this.rotVelocity = 4.761904761904762, this.gravity = .47619047619047616, this.yVelocity = .47619047619047616, this.xVelocity = .47619047619047616, openfl_display_Sprite.call(this), this.bmBatch = new BitmapBatch(Main.current.batch, "firework" + (1 + Math.floor(6 * Math.random()))), this.bmBatch.set_x(-this.bmBatch.get_width() / 2), this.bmBatch.set_y(-this.bmBatch.get_height() / 2), this.addChild(this.bmBatch)
    };
    $hxClasses["firework.Star"] = firework_Star, firework_Star.__name__ = ["firework", "Star"], firework_Star.__super__ = openfl_display_Sprite, firework_Star.prototype = $extend(openfl_display_Sprite.prototype, {
        xVelocity: null,
        yVelocity: null,
        gravity: null,
        rotVelocity: null,
        lifeCounter: null,
        bmBatch: null,
        RunFirework: function() {
            this.lifeCounter--, this.yVelocity <= .2 && (this.yVelocity += this.gravity), this.xVelocity = this.xVelocity / 1.4, this.yVelocity = this.yVelocity / 1.4, this.set_x(this.get_x() + this.xVelocity), this.set_y(this.get_y() + this.yVelocity), this.set_rotation(this.get_rotation() + this.rotVelocity)
        },
        __class__: firework_Star
    });
    var haxe_IMap = function() {};
    $hxClasses["haxe.IMap"] = haxe_IMap, haxe_IMap.__name__ = ["haxe", "IMap"];
    var haxe__$Int64__$_$_$Int64 = function(e, t) {
        this.high = e, this.low = t
    };
    $hxClasses["haxe._Int64.___Int64"] = haxe__$Int64__$_$_$Int64, haxe__$Int64__$_$_$Int64.__name__ = ["haxe", "_Int64", "___Int64"], haxe__$Int64__$_$_$Int64.prototype = {
        high: null,
        low: null,
        __class__: haxe__$Int64__$_$_$Int64
    };
    var haxe_Resource = function() {};
    $hxClasses["haxe.Resource"] = haxe_Resource, haxe_Resource.__name__ = ["haxe", "Resource"], haxe_Resource.getString = function(e) {
        for (var t = 0, n = haxe_Resource.content; t < n.length;) {
            var l = n[t];
            if (++t, l.name == e) return null != l.str ? l.str : haxe_crypto_Base64.decode(l.data).toString()
        }
        return null
    }, haxe_Resource.getBytes = function(e) {
        for (var t = 0, n = haxe_Resource.content; t < n.length;) {
            var l = n[t];
            if (++t, l.name == e) return null != l.str ? haxe_io_Bytes.ofString(l.str) : haxe_crypto_Base64.decode(l.data)
        }
        return null
    };
    var haxe_Serializer = function() {
        this.buf = new StringBuf, this.cache = [], this.useCache = haxe_Serializer.USE_CACHE, this.useEnumIndex = haxe_Serializer.USE_ENUM_INDEX, this.shash = new haxe_ds_StringMap, this.scount = 0
    };
    $hxClasses["haxe.Serializer"] = haxe_Serializer, haxe_Serializer.__name__ = ["haxe", "Serializer"], haxe_Serializer.run = function(e) {
        var t = new haxe_Serializer;
        return t.serialize(e), t.toString()
    }, haxe_Serializer.prototype = {
        buf: null,
        cache: null,
        shash: null,
        scount: null,
        useCache: null,
        useEnumIndex: null,
        toString: function() {
            return this.buf.b
        },
        serializeString: function(e) {
            var t = this.shash.get(e);
            if (null != t) return this.buf.b += "R", void(this.buf.b += null == t ? "null" : "" + t);
            this.shash.set(e, this.scount++), this.buf.b += "y", null == (e = encodeURIComponent(e)).length ? this.buf.b += "null" : this.buf.b += "" + e.length, this.buf.b += ":", this.buf.b += null == e ? "null" : "" + e
        },
        serializeRef: function(e) {
            for (var t = typeof e, n = 0, l = this.cache.length; n < l;) {
                var i = n++,
                    s = this.cache[i];
                if (typeof s == t && s == e) return this.buf.b += "r", this.buf.b += null == i ? "null" : "" + i, !0
            }
            return this.cache.push(e), !1
        },
        serializeFields: function(e) {
            for (var t = 0, n = Reflect.fields(e); t < n.length;) {
                var l = n[t];
                ++t, this.serializeString(l), this.serialize(Reflect.field(e, l))
            }
            this.buf.b += "g"
        },
        serialize: function(e) {
            var t = Type.typeof(e);
            switch (t[1]) {
                case 0:
                    this.buf.b += "n";
                    break;
                case 1:
                    var n = e;
                    if (0 == n) return void(this.buf.b += "z");
                    this.buf.b += "i", this.buf.b += null == n ? "null" : "" + n;
                    break;
                case 2:
                    var l = e;
                    isNaN(l) ? this.buf.b += "k" : isFinite(l) ? (this.buf.b += "d", this.buf.b += null == l ? "null" : "" + l) : this.buf.b += l < 0 ? "m" : "p";
                    break;
                case 3:
                    this.buf.b += e ? "t" : "f";
                    break;
                case 6:
                    var i = t[2];
                    if (i == String) return void this.serializeString(e);
                    if (this.useCache && this.serializeRef(e)) return;
                    switch (i) {
                        case Array:
                            var s = 0;
                            this.buf.b += "a";
                            for (var a = e.length, r = 0; r < a;) {
                                var o = r++;
                                null == e[o] ? s++ : (s > 0 && (1 == s ? this.buf.b += "n" : (this.buf.b += "u", this.buf.b += null == s ? "null" : "" + s), s = 0), this.serialize(e[o]))
                            }
                            s > 0 && (1 == s ? this.buf.b += "n" : (this.buf.b += "u", this.buf.b += null == s ? "null" : "" + s)), this.buf.b += "h";
                            break;
                        case List:
                            this.buf.b += "l";
                            for (var d = e.h, _ = null; null != d;) {
                                var h;
                                _ = d[0], d = d[1], h = _, this.serialize(h)
                            }
                            this.buf.b += "h";
                            break;
                        case Date:
                            var p = e;
                            this.buf.b += "v", this.buf.add(p.getTime());
                            break;
                        case haxe_ds_StringMap:
                            this.buf.b += "b";
                            for (var c = e, Q = c.keys(); Q.hasNext();) {
                                var U = Q.next();
                                this.serializeString(U), this.serialize(null != __map_reserved[U] ? c.getReserved(U) : c.h[U])
                            }
                            this.buf.b += "h";
                            break;
                        case haxe_ds_IntMap:
                            this.buf.b += "q";
                            for (var m = e, u = m.keys(); u.hasNext();) {
                                var F = u.next();
                                this.buf.b += ":", this.buf.b += null == F ? "null" : "" + F, this.serialize(m.h[F])
                            }
                            this.buf.b += "h";
                            break;
                        case haxe_ds_ObjectMap:
                            this.buf.b += "M";
                            for (var N = e, S = N.keys(); S.hasNext();) {
                                var W = S.next(),
                                    B = Reflect.field(W, "__id__");
                                Reflect.deleteField(W, "__id__"), this.serialize(W), W.__id__ = B, this.serialize(N.h[W.__id__])
                            }
                            this.buf.b += "h";
                            break;
                        case haxe_io_Bytes:
                            for (var Z = e, D = 0, V = Z.length - 2, f = new StringBuf, R = haxe_Serializer.BASE64; D < V;) {
                                var T = Z.get(D++),
                                    J = Z.get(D++),
                                    g = Z.get(D++);
                                f.add(R.charAt(T >> 2)), f.add(R.charAt(63 & (T << 4 | J >> 4))), f.add(R.charAt(63 & (J << 2 | g >> 6))), f.add(R.charAt(63 & g))
                            }
                            if (D == V) {
                                var b = Z.get(D++),
                                    E = Z.get(D++);
                                f.add(R.charAt(b >> 2)), f.add(R.charAt(63 & (b << 4 | E >> 4))), f.add(R.charAt(E << 2 & 63))
                            } else if (D == V + 1) {
                                var v = Z.get(D++);
                                f.add(R.charAt(v >> 2)), f.add(R.charAt(v << 4 & 63))
                            }
                            var k = f.b;
                            this.buf.b += "s", null == k.length ? this.buf.b += "null" : this.buf.b += "" + k.length, this.buf.b += ":", this.buf.b += null == k ? "null" : "" + k;
                            break;
                        default:
                            this.useCache && this.cache.pop(), null != e.hxSerialize ? (this.buf.b += "C", this.serializeString(Type.getClassName(i)), this.useCache && this.cache.push(e), e.hxSerialize(this), this.buf.b += "g") : (this.buf.b += "c", this.serializeString(Type.getClassName(i)), this.useCache && this.cache.push(e), this.serializeFields(e))
                    }
                    break;
                case 4:
                    if (js_Boot.__instanceof(e, Class)) {
                        var M = Type.getClassName(e);
                        this.buf.b += "A", this.serializeString(M)
                    } else if (js_Boot.__instanceof(e, Enum)) this.buf.b += "B", this.serializeString(Type.getEnumName(e));
                    else {
                        if (this.useCache && this.serializeRef(e)) return;
                        this.buf.b += "o", this.serializeFields(e)
                    }
                    break;
                case 7:
                    var y = t[2];
                    if (this.useCache) {
                        if (this.serializeRef(e)) return;
                        this.cache.pop()
                    }
                    this.useEnumIndex ? this.buf.b += "j" : this.buf.b += "w", this.serializeString(Type.getEnumName(y)), this.useEnumIndex ? (this.buf.b += ":", this.buf.b += Std.string(e[1])) : this.serializeString(e[0]), this.buf.b += ":";
                    var x = e.length;
                    this.buf.b += Std.string(x - 2);
                    for (var w = 2; w < x;) {
                        var G = w++;
                        this.serialize(e[G])
                    }
                    this.useCache && this.cache.push(e);
                    break;
                case 5:
                    throw new js__$Boot_HaxeError("Cannot serialize function");
                default:
                    throw new js__$Boot_HaxeError("Cannot serialize " + Std.string(e))
            }
        },
        __class__: haxe_Serializer
    };
    var haxe_Timer = function(e) {
        var t = this;
        this.id = setInterval(function() {
            t.run()
        }, e)
    };
    $hxClasses["haxe.Timer"] = haxe_Timer, haxe_Timer.__name__ = ["haxe", "Timer"], haxe_Timer.delay = function(e, t) {
        var n = new haxe_Timer(t);
        return n.run = function() {
            n.stop(), e()
        }, n
    }, haxe_Timer.prototype = {
        id: null,
        stop: function() {
            null != this.id && (clearInterval(this.id), this.id = null)
        },
        run: function() {},
        __class__: haxe_Timer
    };
    var haxe_Unserializer = function(e) {
        this.buf = e, this.length = e.length, this.pos = 0, this.scache = [], this.cache = [];
        var t = haxe_Unserializer.DEFAULT_RESOLVER;
        null == t && (t = Type, haxe_Unserializer.DEFAULT_RESOLVER = t), this.setResolver(t)
    };
    $hxClasses["haxe.Unserializer"] = haxe_Unserializer, haxe_Unserializer.__name__ = ["haxe", "Unserializer"], haxe_Unserializer.initCodes = function() {
        for (var e = [], t = 0, n = haxe_Unserializer.BASE64.length; t < n;) {
            var l = t++;
            e[haxe_Unserializer.BASE64.charCodeAt(l)] = l
        }
        return e
    }, haxe_Unserializer.run = function(e) {
        return new haxe_Unserializer(e).unserialize()
    }, haxe_Unserializer.prototype = {
        buf: null,
        pos: null,
        length: null,
        cache: null,
        scache: null,
        resolver: null,
        setResolver: function(e) {
            this.resolver = null == e ? {
                resolveClass: function(e) {
                    return null
                },
                resolveEnum: function(e) {
                    return null
                }
            } : e
        },
        get: function(e) {
            return this.buf.charCodeAt(e)
        },
        readDigits: function() {
            for (var e = 0, t = !1, n = this.pos;;) {
                var l = this.buf.charCodeAt(this.pos);
                if (l != l) break;
                if (45 != l) {
                    if (l < 48 || l > 57) break;
                    e = 10 * e + (l - 48), this.pos++
                } else {
                    if (this.pos != n) break;
                    t = !0, this.pos++
                }
            }
            return t && (e *= -1), e
        },
        readFloat: function() {
            for (var e = this.pos;;) {
                var t = this.buf.charCodeAt(this.pos);
                if (!(t >= 43 && t < 58 || 101 == t || 69 == t)) break;
                this.pos++
            }
            return Std.parseFloat(HxOverrides.substr(this.buf, e, this.pos - e))
        },
        unserializeObject: function(e) {
            for (;;) {
                if (this.pos >= this.length) throw new js__$Boot_HaxeError("Invalid object");
                if (103 == this.buf.charCodeAt(this.pos)) break;
                var t = this.unserialize();
                if ("string" != typeof t) throw new js__$Boot_HaxeError("Invalid object key");
                var n = this.unserialize();
                e[t] = n
            }
            this.pos++
        },
        unserializeEnum: function(e, t) {
            if (58 != this.get(this.pos++)) throw new js__$Boot_HaxeError("Invalid enum format");
            var n = this.readDigits();
            if (0 == n) return Type.createEnum(e, t);
            for (var l = []; n-- > 0;) l.push(this.unserialize());
            return Type.createEnum(e, t, l)
        },
        unserialize: function() {
            switch (this.get(this.pos++)) {
                case 110:
                    return null;
                case 116:
                    return !0;
                case 102:
                    return !1;
                case 122:
                    return 0;
                case 105:
                    return this.readDigits();
                case 100:
                    return this.readFloat();
                case 121:
                    var e = this.readDigits();
                    if (58 != this.get(this.pos++) || this.length - this.pos < e) throw new js__$Boot_HaxeError("Invalid string length");
                    var t = HxOverrides.substr(this.buf, this.pos, e);
                    return this.pos += e, t = decodeURIComponent(t.split("+").join(" ")), this.scache.push(t), t;
                case 107:
                    return NaN;
                case 109:
                    return -1 / 0;
                case 112:
                    return 1 / 0;
                case 97:
                    this.buf;
                    var n = [];
                    for (this.cache.push(n);;) {
                        var l = this.buf.charCodeAt(this.pos);
                        if (104 == l) {
                            this.pos++;
                            break
                        }
                        if (117 == l) {
                            this.pos++;
                            var i = this.readDigits();
                            n[n.length + i - 1] = null
                        } else n.push(this.unserialize())
                    }
                    return n;
                case 111:
                    var s = {};
                    return this.cache.push(s), this.unserializeObject(s), s;
                case 114:
                    var a = this.readDigits();
                    if (a < 0 || a >= this.cache.length) throw new js__$Boot_HaxeError("Invalid reference");
                    return this.cache[a];
                case 82:
                    var r = this.readDigits();
                    if (r < 0 || r >= this.scache.length) throw new js__$Boot_HaxeError("Invalid string reference");
                    return this.scache[r];
                case 120:
                    throw new js__$Boot_HaxeError(this.unserialize());
                case 99:
                    var o = this.unserialize(),
                        d = this.resolver.resolveClass(o);
                    if (null == d) throw new js__$Boot_HaxeError("Class not found " + o);
                    var _ = Type.createEmptyInstance(d);
                    return this.cache.push(_), this.unserializeObject(_), _;
                case 119:
                    var h = this.unserialize(),
                        p = this.resolver.resolveEnum(h);
                    if (null == p) throw new js__$Boot_HaxeError("Enum not found " + h);
                    var c = this.unserializeEnum(p, this.unserialize());
                    return this.cache.push(c), c;
                case 106:
                    var Q = this.unserialize(),
                        U = this.resolver.resolveEnum(Q);
                    if (null == U) throw new js__$Boot_HaxeError("Enum not found " + Q);
                    this.pos++;
                    var m = this.readDigits(),
                        u = Type.getEnumConstructs(U)[m];
                    if (null == u) throw new js__$Boot_HaxeError("Unknown enum index " + Q + "@" + m);
                    var F = this.unserializeEnum(U, u);
                    return this.cache.push(F), F;
                case 108:
                    var N = new List;
                    this.cache.push(N);
                    for (this.buf; 104 != this.buf.charCodeAt(this.pos);) N.add(this.unserialize());
                    return this.pos++, N;
                case 98:
                    var S = new haxe_ds_StringMap;
                    this.cache.push(S);
                    for (this.buf; 104 != this.buf.charCodeAt(this.pos);) {
                        var W = this.unserialize();
                        S.set(W, this.unserialize())
                    }
                    return this.pos++, S;
                case 113:
                    var B = new haxe_ds_IntMap;
                    this.cache.push(B);
                    this.buf;
                    for (var Z = this.get(this.pos++); 58 == Z;) {
                        var D = this.readDigits();
                        B.set(D, this.unserialize()), Z = this.get(this.pos++)
                    }
                    if (104 != Z) throw new js__$Boot_HaxeError("Invalid IntMap format");
                    return B;
                case 77:
                    var V = new haxe_ds_ObjectMap;
                    this.cache.push(V);
                    for (this.buf; 104 != this.buf.charCodeAt(this.pos);) {
                        var f = this.unserialize();
                        V.set(f, this.unserialize())
                    }
                    return this.pos++, V;
                case 118:
                    var R;
                    if (this.buf.charCodeAt(this.pos) >= 48 && this.buf.charCodeAt(this.pos) <= 57 && this.buf.charCodeAt(this.pos + 1) >= 48 && this.buf.charCodeAt(this.pos + 1) <= 57 && this.buf.charCodeAt(this.pos + 2) >= 48 && this.buf.charCodeAt(this.pos + 2) <= 57 && this.buf.charCodeAt(this.pos + 3) >= 48 && this.buf.charCodeAt(this.pos + 3) <= 57 && 45 == this.buf.charCodeAt(this.pos + 4)) {
                        var T = HxOverrides.substr(this.buf, this.pos, 19);
                        R = HxOverrides.strDate(T), this.pos += 19
                    } else {
                        var J = this.readFloat(),
                            g = new Date;
                        g.setTime(J), R = g
                    }
                    return this.cache.push(R), R;
                case 115:
                    var b = this.readDigits(),
                        E = this.buf;
                    if (58 != this.get(this.pos++) || this.length - this.pos < b) throw new js__$Boot_HaxeError("Invalid bytes length");
                    var v = haxe_Unserializer.CODES;
                    null == v && (v = haxe_Unserializer.initCodes(), haxe_Unserializer.CODES = v);
                    for (var k = this.pos, M = 3 & b, y = k + (b - M), x = new haxe_io_Bytes(new ArrayBuffer(3 * (b >> 2) + (M >= 2 ? M - 1 : 0))), w = 0; k < y;) {
                        var G = v[StringTools.fastCodeAt(E, k++)],
                            H = v[StringTools.fastCodeAt(E, k++)];
                        x.set(w++, G << 2 | H >> 4);
                        var C = v[StringTools.fastCodeAt(E, k++)];
                        x.set(w++, H << 4 | C >> 2);
                        var Y = v[StringTools.fastCodeAt(E, k++)];
                        x.set(w++, C << 6 | Y)
                    }
                    if (M >= 2) {
                        var O = v[StringTools.fastCodeAt(E, k++)],
                            X = v[StringTools.fastCodeAt(E, k++)];
                        if (x.set(w++, O << 2 | X >> 4), 3 == M) {
                            var z = v[StringTools.fastCodeAt(E, k++)];
                            x.set(w++, X << 4 | z >> 2)
                        }
                    }
                    return this.pos += b, this.cache.push(x), x;
                case 67:
                    var I = this.unserialize(),
                        j = this.resolver.resolveClass(I);
                    if (null == j) throw new js__$Boot_HaxeError("Class not found " + I);
                    var L = Type.createEmptyInstance(j);
                    if (this.cache.push(L), L.hxUnserialize(this), 103 != this.get(this.pos++)) throw new js__$Boot_HaxeError("Invalid custom data");
                    return L;
                case 65:
                    var A = this.unserialize(),
                        P = this.resolver.resolveClass(A);
                    if (null == P) throw new js__$Boot_HaxeError("Class not found " + A);
                    return P;
                case 66:
                    var $ = this.unserialize(),
                        K = this.resolver.resolveEnum($);
                    if (null == K) throw new js__$Boot_HaxeError("Enum not found " + $);
                    return K
            }
            throw this.pos--, new js__$Boot_HaxeError("Invalid char " + this.buf.charAt(this.pos) + " at position " + this.pos)
        },
        __class__: haxe_Unserializer
    };
    var haxe_Utf8 = function(e) {
        this.__b = ""
    };
    $hxClasses["haxe.Utf8"] = haxe_Utf8, haxe_Utf8.__name__ = ["haxe", "Utf8"], haxe_Utf8.prototype = {
        __b: null,
        __class__: haxe_Utf8
    };
    var haxe_crypto_Adler32 = function() {
        this.a1 = 1, this.a2 = 0
    };
    $hxClasses["haxe.crypto.Adler32"] = haxe_crypto_Adler32, haxe_crypto_Adler32.__name__ = ["haxe", "crypto", "Adler32"], haxe_crypto_Adler32.read = function(e) {
        var t = new haxe_crypto_Adler32,
            n = e.readByte(),
            l = e.readByte(),
            i = e.readByte(),
            s = e.readByte();
        return t.a1 = i << 8 | s, t.a2 = n << 8 | l, t
    }, haxe_crypto_Adler32.prototype = {
        a1: null,
        a2: null,
        update: function(e, t, n) {
            for (var l = this.a1, i = this.a2, s = t, a = t + n; s < a;) {
                var r = s++;
                i = (i + (l = (l + e.b[r]) % 65521)) % 65521
            }
            this.a1 = l, this.a2 = i
        },
        equals: function(e) {
            return e.a1 == this.a1 && e.a2 == this.a2
        },
        __class__: haxe_crypto_Adler32
    };
    var haxe_crypto_Base64 = function() {};
    $hxClasses["haxe.crypto.Base64"] = haxe_crypto_Base64, haxe_crypto_Base64.__name__ = ["haxe", "crypto", "Base64"], haxe_crypto_Base64.decode = function(e, t) {
        if (null == t && (t = !0), t)
            for (; 61 == HxOverrides.cca(e, e.length - 1);) e = HxOverrides.substr(e, 0, -1);
        return new haxe_crypto_BaseCode(haxe_crypto_Base64.BYTES).decodeBytes(haxe_io_Bytes.ofString(e))
    };
    var haxe_crypto_BaseCode = function(e) {
        for (var t = e.length, n = 1; t > 1 << n;) n++;
        if (n > 8 || t != 1 << n) throw new js__$Boot_HaxeError("BaseCode : base length must be a power of two.");
        this.base = e, this.nbits = n
    };
    $hxClasses["haxe.crypto.BaseCode"] = haxe_crypto_BaseCode, haxe_crypto_BaseCode.__name__ = ["haxe", "crypto", "BaseCode"], haxe_crypto_BaseCode.prototype = {
        base: null,
        nbits: null,
        tbl: null,
        initTable: function() {
            for (var e = [], t = 0; t < 256;) {
                e[t++] = -1
            }
            for (var n = 0, l = this.base.length; n < l;) {
                var i = n++;
                e[this.base.b[i]] = i
            }
            this.tbl = e
        },
        decodeBytes: function(e) {
            var t = this.nbits;
            this.base;
            null == this.tbl && this.initTable();
            for (var n = this.tbl, l = e.length * t >> 3, i = new haxe_io_Bytes(new ArrayBuffer(l)), s = 0, a = 0, r = 0, o = 0; o < l;) {
                for (; a < 8;) {
                    a += t, s <<= t;
                    var d = n[e.get(r++)];
                    if (-1 == d) throw new js__$Boot_HaxeError("BaseCode : invalid encoded char");
                    s |= d
                }
                a -= 8, i.set(o++, s >> a & 255)
            }
            return i
        },
        __class__: haxe_crypto_BaseCode
    };
    var haxe_ds_IntMap = function() {
        this.h = {}
    };
    $hxClasses["haxe.ds.IntMap"] = haxe_ds_IntMap, haxe_ds_IntMap.__name__ = ["haxe", "ds", "IntMap"], haxe_ds_IntMap.__interfaces__ = [haxe_IMap], haxe_ds_IntMap.prototype = {
        h: null,
        set: function(e, t) {
            this.h[e] = t
        },
        remove: function(e) {
            return !!this.h.hasOwnProperty(e) && (delete this.h[e], !0)
        },
        keys: function() {
            var e = [];
            for (var t in this.h) this.h.hasOwnProperty(t) && e.push(0 | t);
            return HxOverrides.iter(e)
        },
        iterator: function() {
            return {
                ref: this.h,
                it: this.keys(),
                hasNext: function() {
                    return this.it.hasNext()
                },
                next: function() {
                    var e = this.it.next();
                    return this.ref[e]
                }
            }
        },
        __class__: haxe_ds_IntMap
    };
    var haxe_ds_ObjectMap = function() {
        this.h = {}, this.h.__keys__ = {}
    };
    $hxClasses["haxe.ds.ObjectMap"] = haxe_ds_ObjectMap, haxe_ds_ObjectMap.__name__ = ["haxe", "ds", "ObjectMap"], haxe_ds_ObjectMap.__interfaces__ = [haxe_IMap], haxe_ds_ObjectMap.prototype = {
        h: null,
        set: function(e, t) {
            var n = e.__id__ || (e.__id__ = ++haxe_ds_ObjectMap.count);
            this.h[n] = t, this.h.__keys__[n] = e
        },
        remove: function(e) {
            var t = e.__id__;
            return null != this.h.__keys__[t] && (delete this.h[t], delete this.h.__keys__[t], !0)
        },
        keys: function() {
            var e = [];
            for (var t in this.h.__keys__) this.h.hasOwnProperty(t) && e.push(this.h.__keys__[t]);
            return HxOverrides.iter(e)
        },
        iterator: function() {
            return {
                ref: this.h,
                it: this.keys(),
                hasNext: function() {
                    return this.it.hasNext()
                },
                next: function() {
                    var e = this.it.next();
                    return this.ref[e.__id__]
                }
            }
        },
        __class__: haxe_ds_ObjectMap
    };
    var haxe_ds__$StringMap_StringMapIterator = function(e, t) {
        this.map = e, this.keys = t, this.index = 0, this.count = t.length
    };
    $hxClasses["haxe.ds._StringMap.StringMapIterator"] = haxe_ds__$StringMap_StringMapIterator, haxe_ds__$StringMap_StringMapIterator.__name__ = ["haxe", "ds", "_StringMap", "StringMapIterator"], haxe_ds__$StringMap_StringMapIterator.prototype = {
        map: null,
        keys: null,
        index: null,
        count: null,
        hasNext: function() {
            return this.index < this.count
        },
        next: function() {
            return this.map.get(this.keys[this.index++])
        },
        __class__: haxe_ds__$StringMap_StringMapIterator
    };
    var haxe_ds_StringMap = function() {
        this.h = {}
    };
    $hxClasses["haxe.ds.StringMap"] = haxe_ds_StringMap, haxe_ds_StringMap.__name__ = ["haxe", "ds", "StringMap"], haxe_ds_StringMap.__interfaces__ = [haxe_IMap], haxe_ds_StringMap.prototype = {
        h: null,
        rh: null,
        set: function(e, t) {
            null != __map_reserved[e] ? this.setReserved(e, t) : this.h[e] = t
        },
        get: function(e) {
            return null != __map_reserved[e] ? this.getReserved(e) : this.h[e]
        },
        exists: function(e) {
            return null != __map_reserved[e] ? this.existsReserved(e) : this.h.hasOwnProperty(e)
        },
        setReserved: function(e, t) {
            null == this.rh && (this.rh = {}), this.rh["$" + e] = t
        },
        getReserved: function(e) {
            return null == this.rh ? null : this.rh["$" + e]
        },
        existsReserved: function(e) {
            return null != this.rh && this.rh.hasOwnProperty("$" + e)
        },
        remove: function(e) {
            return null != __map_reserved[e] ? (e = "$" + e, !(null == this.rh || !this.rh.hasOwnProperty(e)) && (delete this.rh[e], !0)) : !!this.h.hasOwnProperty(e) && (delete this.h[e], !0)
        },
        keys: function() {
            var e = this.arrayKeys();
            return HxOverrides.iter(e)
        },
        arrayKeys: function() {
            var e = [];
            for (var t in this.h) this.h.hasOwnProperty(t) && e.push(t);
            if (null != this.rh)
                for (var t in this.rh) 36 == t.charCodeAt(0) && e.push(t.substr(1));
            return e
        },
        iterator: function() {
            return new haxe_ds__$StringMap_StringMapIterator(this, this.arrayKeys())
        },
        __class__: haxe_ds_StringMap
    };
    var haxe_io_BytesBuffer = function() {
        this.b = []
    };
    $hxClasses["haxe.io.BytesBuffer"] = haxe_io_BytesBuffer, haxe_io_BytesBuffer.__name__ = ["haxe", "io", "BytesBuffer"], haxe_io_BytesBuffer.prototype = {
        b: null,
        addBytes: function(e, t, n) {
            if (t < 0 || n < 0 || t + n > e.length) throw new js__$Boot_HaxeError(haxe_io_Error.OutsideBounds);
            this.b;
            for (var l = e.b, i = t, s = t + n; i < s;) {
                var a = i++;
                this.b.push(l[a])
            }
        },
        getBytes: function() {
            var e = new haxe_io_Bytes(new Uint8Array(this.b).buffer);
            return this.b = null, e
        },
        __class__: haxe_io_BytesBuffer
    };
    var haxe_io_Input = function() {};
    $hxClasses["haxe.io.Input"] = haxe_io_Input, haxe_io_Input.__name__ = ["haxe", "io", "Input"], haxe_io_Input.prototype = {
        bigEndian: null,
        readByte: function() {
            throw new js__$Boot_HaxeError("Not implemented")
        },
        readBytes: function(e, t, n) {
            var l = n,
                i = e.b;
            if (t < 0 || n < 0 || t + n > e.length) throw new js__$Boot_HaxeError(haxe_io_Error.OutsideBounds);
            for (; l > 0;) i[t] = this.readByte(), t++, l--;
            return n
        },
        read: function(e) {
            for (var t = new haxe_io_Bytes(new ArrayBuffer(e)), n = 0; e > 0;) {
                var l = this.readBytes(t, n, e);
                if (0 == l) throw new js__$Boot_HaxeError(haxe_io_Error.Blocked);
                n += l, e -= l
            }
            return t
        },
        readUInt16: function() {
            var e = this.readByte(),
                t = this.readByte();
            return this.bigEndian ? t | e << 8 : e | t << 8
        },
        __class__: haxe_io_Input
    };
    var haxe_io_BytesInput = function(e, t, n) {
        if (null == t && (t = 0), null == n && (n = e.length - t), t < 0 || n < 0 || t + n > e.length) throw new js__$Boot_HaxeError(haxe_io_Error.OutsideBounds);
        this.b = e.b, this.pos = t, this.len = n, this.totlen = n
    };
    $hxClasses["haxe.io.BytesInput"] = haxe_io_BytesInput, haxe_io_BytesInput.__name__ = ["haxe", "io", "BytesInput"], haxe_io_BytesInput.__super__ = haxe_io_Input, haxe_io_BytesInput.prototype = $extend(haxe_io_Input.prototype, {
        b: null,
        pos: null,
        len: null,
        totlen: null,
        readByte: function() {
            if (0 == this.len) throw new js__$Boot_HaxeError(new haxe_io_Eof);
            return this.len--, this.b[this.pos++]
        },
        readBytes: function(e, t, n) {
            if (t < 0 || n < 0 || t + n > e.length) throw new js__$Boot_HaxeError(haxe_io_Error.OutsideBounds);
            if (0 == this.len && n > 0) throw new js__$Boot_HaxeError(new haxe_io_Eof);
            this.len < n && (n = this.len);
            for (var l = this.b, i = e.b, s = 0; s < n;) {
                var a = s++;
                i[t + a] = l[this.pos + a]
            }
            return this.pos += n, this.len -= n, n
        },
        __class__: haxe_io_BytesInput
    });
    var haxe_io_Eof = function() {};
    $hxClasses["haxe.io.Eof"] = haxe_io_Eof, haxe_io_Eof.__name__ = ["haxe", "io", "Eof"], haxe_io_Eof.prototype = {
        toString: function() {
            return "Eof"
        },
        __class__: haxe_io_Eof
    };
    var haxe_io_Error = $hxClasses["haxe.io.Error"] = {
        __ename__: ["haxe", "io", "Error"],
        __constructs__: ["Blocked", "Overflow", "OutsideBounds", "Custom"]
    };
    haxe_io_Error.Blocked = ["Blocked", 0], haxe_io_Error.Blocked.toString = $estr, haxe_io_Error.Blocked.__enum__ = haxe_io_Error, haxe_io_Error.Overflow = ["Overflow", 1], haxe_io_Error.Overflow.toString = $estr, haxe_io_Error.Overflow.__enum__ = haxe_io_Error, haxe_io_Error.OutsideBounds = ["OutsideBounds", 2], haxe_io_Error.OutsideBounds.toString = $estr, haxe_io_Error.OutsideBounds.__enum__ = haxe_io_Error, haxe_io_Error.Custom = function(e) {
        var t = ["Custom", 3, e];
        return t.__enum__ = haxe_io_Error, t.toString = $estr, t
    };
    var haxe_io_FPHelper = function() {};
    $hxClasses["haxe.io.FPHelper"] = haxe_io_FPHelper, haxe_io_FPHelper.__name__ = ["haxe", "io", "FPHelper"], haxe_io_FPHelper.i32ToFloat = function(e) {
        var t = e >>> 23 & 255,
            n = 8388607 & e;
        return 0 == n && 0 == t ? 0 : (1 - (e >>> 31 << 1)) * (1 + Math.pow(2, -23) * n) * Math.pow(2, t - 127)
    }, haxe_io_FPHelper.floatToI32 = function(e) {
        if (0 == e) return 0;
        var t;
        t = e < 0 ? -e : e;
        var n = Math.floor(Math.log(t) / .6931471805599453);
        n < -127 ? n = -127 : n > 128 && (n = 128);
        var l = Math.round(8388608 * (t / Math.pow(2, n) - 1));
        return 8388608 == l && n < 128 && (l = 0, n++), (e < 0 ? -2147483648 : 0) | n + 127 << 23 | l
    }, haxe_io_FPHelper.i64ToDouble = function(e, t) {
        var n = (t >> 20 & 2047) - 1023,
            l = 4294967296 * (1048575 & t) + 2147483648 * (e >>> 31) + (2147483647 & e);
        return 0 == l && -1023 == n ? 0 : (1 - (t >>> 31 << 1)) * (1 + Math.pow(2, -52) * l) * Math.pow(2, n)
    }, haxe_io_FPHelper.doubleToI64 = function(e) {
        var t = haxe_io_FPHelper.i64tmp;
        if (0 == e) t.low = 0, t.high = 0;
        else if (isFinite(e)) {
            var n;
            n = e < 0 ? -e : e;
            var l, i = Math.floor(Math.log(n) / .6931471805599453),
                s = 4503599627370496 * (n / Math.pow(2, i) - 1),
                a = 0 | (l = Math.round(s)),
                r = l / 4294967296 | 0;
            t.low = a, t.high = (e < 0 ? -2147483648 : 0) | i + 1023 << 20 | r
        } else e > 0 ? (t.low = 0, t.high = 2146435072) : (t.low = 0, t.high = -1048576);
        return t
    };
    var haxe_io_Path = function(e) {
        switch (e) {
            case ".":
            case "..":
                return this.dir = e, void(this.file = "")
        }
        var t = e.lastIndexOf("/"),
            n = e.lastIndexOf("\\");
        t < n ? (this.dir = HxOverrides.substr(e, 0, n), e = HxOverrides.substr(e, n + 1, null), this.backslash = !0) : n < t ? (this.dir = HxOverrides.substr(e, 0, t), e = HxOverrides.substr(e, t + 1, null)) : this.dir = null;
        var l = e.lastIndexOf("."); - 1 != l ? (this.ext = HxOverrides.substr(e, l + 1, null), this.file = HxOverrides.substr(e, 0, l)) : (this.ext = null, this.file = e)
    };
    $hxClasses["haxe.io.Path"] = haxe_io_Path, haxe_io_Path.__name__ = ["haxe", "io", "Path"], haxe_io_Path.withoutExtension = function(e) {
        var t = new haxe_io_Path(e);
        return t.ext = null, t.toString()
    }, haxe_io_Path.prototype = {
        dir: null,
        file: null,
        ext: null,
        backslash: null,
        toString: function() {
            return (null == this.dir ? "" : this.dir + (this.backslash ? "\\" : "/")) + this.file + (null == this.ext ? "" : "." + this.ext)
        },
        __class__: haxe_io_Path
    };
    var haxe_xml_Parser = function() {};
    $hxClasses["haxe.xml.Parser"] = haxe_xml_Parser, haxe_xml_Parser.__name__ = ["haxe", "xml", "Parser"], haxe_xml_Parser.parse = function(e, t) {
        null == t && (t = !1);
        var n = Xml.createDocument();
        return haxe_xml_Parser.doParse(e, t, 0, n), n
    }, haxe_xml_Parser.doParse = function(e, t, n, l) {
        null == n && (n = 0);
        for (var i = null, s = 1, a = 1, r = null, o = 0, d = 0, _ = 0, h = e.charCodeAt(n), p = new StringBuf, c = 1, Q = -1; h == h;) {
            switch (s) {
                case 0:
                    switch (h) {
                        case 10:
                        case 13:
                        case 9:
                        case 32:
                            break;
                        default:
                            s = a;
                            continue
                    }
                    break;
                case 1:
                    switch (h) {
                        case 60:
                            s = 0, a = 2;
                            break;
                        default:
                            o = n, s = 13;
                            continue
                    }
                    break;
                case 13:
                    if (60 == h) {
                        p.addSub(e, o, n - o);
                        var U = Xml.createPCData(p.b);
                        p = new StringBuf, l.addChild(U), d++, s = 0, a = 2
                    } else 38 == h && (p.addSub(e, o, n - o), s = 18, c = 13, o = n + 1);
                    break;
                case 17:
                    if (93 == h && 93 == e.charCodeAt(n + 1) && 62 == e.charCodeAt(n + 2)) {
                        var m = Xml.createCData(HxOverrides.substr(e, o, n - o));
                        l.addChild(m), d++, n += 2, s = 1
                    }
                    break;
                case 2:
                    switch (h) {
                        case 33:
                            if (91 == e.charCodeAt(n + 1)) {
                                if (n += 2, "CDATA[" != HxOverrides.substr(e, n, 6).toUpperCase()) throw new js__$Boot_HaxeError("Expected <![CDATA[");
                                s = 17, o = (n += 5) + 1
                            } else if (68 == e.charCodeAt(n + 1) || 100 == e.charCodeAt(n + 1)) {
                                if ("OCTYPE" != HxOverrides.substr(e, n + 2, 6).toUpperCase()) throw new js__$Boot_HaxeError("Expected <!DOCTYPE");
                                s = 16, o = (n += 8) + 1
                            } else {
                                if (45 != e.charCodeAt(n + 1) || 45 != e.charCodeAt(n + 2)) throw new js__$Boot_HaxeError("Expected \x3c!--");
                                s = 15, o = (n += 2) + 1
                            }
                            break;
                        case 63:
                            s = 14, o = n;
                            break;
                        case 47:
                            if (null == l) throw new js__$Boot_HaxeError("Expected node name");
                            o = n + 1, s = 0, a = 10;
                            break;
                        default:
                            s = 3, o = n;
                            continue
                    }
                    break;
                case 3:
                    if (!(h >= 97 && h <= 122 || h >= 65 && h <= 90 || h >= 48 && h <= 57 || 58 == h || 46 == h || 95 == h || 45 == h)) {
                        if (n == o) throw new js__$Boot_HaxeError("Expected node name");
                        i = Xml.createElement(HxOverrides.substr(e, o, n - o)), l.addChild(i), d++, s = 0, a = 4;
                        continue
                    }
                    break;
                case 4:
                    switch (h) {
                        case 47:
                            s = 11;
                            break;
                        case 62:
                            s = 9;
                            break;
                        default:
                            s = 5, o = n;
                            continue
                    }
                    break;
                case 5:
                    if (!(h >= 97 && h <= 122 || h >= 65 && h <= 90 || h >= 48 && h <= 57 || 58 == h || 46 == h || 95 == h || 45 == h)) {
                        if (o == n) throw new js__$Boot_HaxeError("Expected attribute name");
                        if (r = HxOverrides.substr(e, o, n - o), i.exists(r)) throw new js__$Boot_HaxeError("Duplicate attribute");
                        s = 0, a = 6;
                        continue
                    }
                    break;
                case 6:
                    switch (h) {
                        case 61:
                            s = 0, a = 7;
                            break;
                        default:
                            throw new js__$Boot_HaxeError("Expected =")
                    }
                    break;
                case 7:
                    switch (h) {
                        case 34:
                        case 39:
                            p = new StringBuf, s = 8, o = n + 1, Q = h;
                            break;
                        default:
                            throw new js__$Boot_HaxeError('Expected "')
                    }
                    break;
                case 8:
                    switch (h) {
                        case 38:
                            p.addSub(e, o, n - o), s = 18, c = 8, o = n + 1;
                            break;
                        case 62:
                            if (t) throw new js__$Boot_HaxeError("Invalid unescaped " + String.fromCharCode(h) + " in attribute value");
                            if (h == Q) {
                                p.addSub(e, o, n - o);
                                var u = p.b;
                                p = new StringBuf, i.set(r, u), s = 0, a = 4
                            }
                            break;
                        case 60:
                            if (t) throw new js__$Boot_HaxeError("Invalid unescaped " + String.fromCharCode(h) + " in attribute value");
                            if (h == Q) {
                                p.addSub(e, o, n - o);
                                var F = p.b;
                                p = new StringBuf, i.set(r, F), s = 0, a = 4
                            }
                            break;
                        default:
                            if (h == Q) {
                                p.addSub(e, o, n - o);
                                var N = p.b;
                                p = new StringBuf, i.set(r, N), s = 0, a = 4
                            }
                    }
                    break;
                case 9:
                    o = n = haxe_xml_Parser.doParse(e, t, n, i), s = 1;
                    break;
                case 11:
                    switch (h) {
                        case 62:
                            s = 1;
                            break;
                        default:
                            throw new js__$Boot_HaxeError("Expected >")
                    }
                    break;
                case 12:
                    switch (h) {
                        case 62:
                            return 0 == d && l.addChild(Xml.createPCData("")), n;
                        default:
                            throw new js__$Boot_HaxeError("Expected >")
                    }
                    break;
                case 10:
                    if (!(h >= 97 && h <= 122 || h >= 65 && h <= 90 || h >= 48 && h <= 57 || 58 == h || 46 == h || 95 == h || 45 == h)) {
                        if (o == n) throw new js__$Boot_HaxeError("Expected node name");
                        if (HxOverrides.substr(e, o, n - o) != function(e) {
                                if (l.nodeType != Xml.Element) throw new js__$Boot_HaxeError("Bad node type, expected Element but found " + l.nodeType);
                                return l.nodeName
                            }()) throw new js__$Boot_HaxeError("Expected </" + function(e) {
                            if (l.nodeType != Xml.Element) throw "Bad node type, expected Element but found " + l.nodeType;
                            return l.nodeName
                        }() + ">");
                        s = 0, a = 12;
                        continue
                    }
                    break;
                case 15:
                    if (45 == h && 45 == e.charCodeAt(n + 1) && 62 == e.charCodeAt(n + 2)) {
                        var S = Xml.createComment(HxOverrides.substr(e, o, n - o));
                        l.addChild(S), d++, n += 2, s = 1
                    }
                    break;
                case 16:
                    if (91 == h) _++;
                    else if (93 == h) _--;
                    else if (62 == h && 0 == _) {
                        var W = Xml.createDocType(HxOverrides.substr(e, o, n - o));
                        l.addChild(W), d++, s = 1
                    }
                    break;
                case 14:
                    if (63 == h && 62 == e.charCodeAt(n + 1)) {
                        n++;
                        var B = HxOverrides.substr(e, o + 1, n - o - 2),
                            Z = Xml.createProcessingInstruction(B);
                        l.addChild(Z), d++, s = 1
                    }
                    break;
                case 18:
                    if (59 == h) {
                        var D, V = HxOverrides.substr(e, o, n - o);
                        if (35 == V.charCodeAt(0)) D = 120 == V.charCodeAt(1) ? Std.parseInt("0" + HxOverrides.substr(V, 1, V.length - 1)) : Std.parseInt(HxOverrides.substr(V, 1, V.length - 1)), p.b += String.fromCharCode(D);
                        else if (haxe_xml_Parser.escapes.exists(V)) p.add(haxe_xml_Parser.escapes.get(V));
                        else {
                            if (t) throw new js__$Boot_HaxeError("Undefined entity: " + V);
                            p.b += Std.string("&" + V + ";")
                        }
                        o = n + 1, s = c
                    } else if (!(h >= 97 && h <= 122 || h >= 65 && h <= 90 || h >= 48 && h <= 57 || 58 == h || 46 == h || 95 == h || 45 == h) && 35 != h) {
                        if (t) throw new js__$Boot_HaxeError("Invalid character in entity: " + String.fromCharCode(h));
                        p.b += "&", p.addSub(e, o, n - o), o = --n + 1, s = c
                    }
            }
            h = StringTools.fastCodeAt(e, ++n)
        }
        if (1 == s && (o = n, s = 13), 13 == s) {
            if (n != o || 0 == d) {
                p.addSub(e, o, n - o);
                var f = Xml.createPCData(p.b);
                l.addChild(f), d++
            }
            return n
        }
        if (!t && 18 == s && 13 == c) {
            p.b += "&", p.addSub(e, o, n - o);
            var R = Xml.createPCData(p.b);
            return l.addChild(R), d++, n
        }
        throw new js__$Boot_HaxeError("Unexpected end")
    };
    var haxe_zip_Huffman = $hxClasses["haxe.zip.Huffman"] = {
        __ename__: ["haxe", "zip", "Huffman"],
        __constructs__: ["Found", "NeedBit", "NeedBits"]
    };
    haxe_zip_Huffman.Found = function(e) {
        var t = ["Found", 0, e];
        return t.__enum__ = haxe_zip_Huffman, t.toString = $estr, t
    }, haxe_zip_Huffman.NeedBit = function(e, t) {
        var n = ["NeedBit", 1, e, t];
        return n.__enum__ = haxe_zip_Huffman, n.toString = $estr, n
    }, haxe_zip_Huffman.NeedBits = function(e, t) {
        var n = ["NeedBits", 2, e, t];
        return n.__enum__ = haxe_zip_Huffman, n.toString = $estr, n
    };
    var haxe_zip_HuffTools = function() {};
    $hxClasses["haxe.zip.HuffTools"] = haxe_zip_HuffTools, haxe_zip_HuffTools.__name__ = ["haxe", "zip", "HuffTools"], haxe_zip_HuffTools.prototype = {
        treeDepth: function(e) {
            switch (e[1]) {
                case 0:
                    return 0;
                case 2:
                    throw new js__$Boot_HaxeError("assert");
                case 1:
                    var t = e[3],
                        n = e[2],
                        l = this.treeDepth(n),
                        i = this.treeDepth(t);
                    return 1 + (l < i ? l : i)
            }
        },
        treeCompress: function(e) {
            var t = this.treeDepth(e);
            if (0 == t) return e;
            if (1 == t) switch (e[1]) {
                case 1:
                    var n = e[3],
                        l = e[2];
                    return haxe_zip_Huffman.NeedBit(this.treeCompress(l), this.treeCompress(n));
                default:
                    throw new js__$Boot_HaxeError("assert")
            }
            for (var i = 1 << t, s = [], a = 0; a < i;) {
                a++;
                s.push(haxe_zip_Huffman.Found(-1))
            }
            return this.treeWalk(s, 0, 0, t, e), haxe_zip_Huffman.NeedBits(t, s)
        },
        treeWalk: function(e, t, n, l, i) {
            switch (i[1]) {
                case 1:
                    var s = i[3],
                        a = i[2];
                    l > 0 ? (this.treeWalk(e, t, n + 1, l - 1, a), this.treeWalk(e, t | 1 << n, n + 1, l - 1, s)) : e[t] = this.treeCompress(i);
                    break;
                default:
                    e[t] = this.treeCompress(i)
            }
        },
        treeMake: function(e, t, n, l) {
            if (l > t) throw new js__$Boot_HaxeError("Invalid huffman");
            var i = n << 5 | l;
            return e.h.hasOwnProperty(i) ? haxe_zip_Huffman.Found(e.h[i]) : (n <<= 1, l += 1, haxe_zip_Huffman.NeedBit(this.treeMake(e, t, n, l), this.treeMake(e, t, 1 | n, l)))
        },
        make: function(e, t, n, l) {
            var i = [],
                s = [];
            if (l > 32) throw new js__$Boot_HaxeError("Invalid huffman");
            for (var a = 0; a < l;) {
                a++;
                i.push(0), s.push(0)
            }
            for (var r = 0; r < n;) {
                var o = e[r++ + t];
                if (o >= l) throw new js__$Boot_HaxeError("Invalid huffman");
                i[o]++
            }
            for (var d = 0, _ = 1, h = l - 1; _ < h;) {
                var p = _++;
                d = d + i[p] << 1, s[p] = d
            }
            for (var c = new haxe_ds_IntMap, Q = 0; Q < n;) {
                var U = Q++,
                    m = e[U + t];
                if (0 != m) {
                    var u = s[m - 1];
                    s[m - 1] = u + 1, c.h[u << 5 | m] = U
                }
            }
            return this.treeCompress(haxe_zip_Huffman.NeedBit(this.treeMake(c, l, 0, 1), this.treeMake(c, l, 1, 1)))
        },
        __class__: haxe_zip_HuffTools
    };
    var haxe_zip__$InflateImpl_Window = function(e) {
        this.buffer = new haxe_io_Bytes(new ArrayBuffer(65536)), this.pos = 0, e && (this.crc = new haxe_crypto_Adler32)
    };
    $hxClasses["haxe.zip._InflateImpl.Window"] = haxe_zip__$InflateImpl_Window, haxe_zip__$InflateImpl_Window.__name__ = ["haxe", "zip", "_InflateImpl", "Window"], haxe_zip__$InflateImpl_Window.prototype = {
        buffer: null,
        pos: null,
        crc: null,
        slide: function() {
            null != this.crc && this.crc.update(this.buffer, 0, 32768);
            var e = new haxe_io_Bytes(new ArrayBuffer(65536));
            this.pos -= 32768, e.blit(0, this.buffer, 32768, this.pos), this.buffer = e
        },
        addBytes: function(e, t, n) {
            this.pos + n > 65536 && this.slide(), this.buffer.blit(this.pos, e, t, n), this.pos += n
        },
        addByte: function(e) {
            65536 == this.pos && this.slide(), this.buffer.b[this.pos] = 255 & e, this.pos++
        },
        getLastChar: function() {
            return this.buffer.b[this.pos - 1]
        },
        available: function() {
            return this.pos
        },
        checksum: function() {
            return null != this.crc && this.crc.update(this.buffer, 0, this.pos), this.crc
        },
        __class__: haxe_zip__$InflateImpl_Window
    };
    var haxe_zip__$InflateImpl_State = $hxClasses["haxe.zip._InflateImpl.State"] = {
        __ename__: ["haxe", "zip", "_InflateImpl", "State"],
        __constructs__: ["Head", "Block", "CData", "Flat", "Crc", "Dist", "DistOne", "Done"]
    };
    haxe_zip__$InflateImpl_State.Head = ["Head", 0], haxe_zip__$InflateImpl_State.Head.toString = $estr, haxe_zip__$InflateImpl_State.Head.__enum__ = haxe_zip__$InflateImpl_State, haxe_zip__$InflateImpl_State.Block = ["Block", 1], haxe_zip__$InflateImpl_State.Block.toString = $estr, haxe_zip__$InflateImpl_State.Block.__enum__ = haxe_zip__$InflateImpl_State, haxe_zip__$InflateImpl_State.CData = ["CData", 2], haxe_zip__$InflateImpl_State.CData.toString = $estr, haxe_zip__$InflateImpl_State.CData.__enum__ = haxe_zip__$InflateImpl_State, haxe_zip__$InflateImpl_State.Flat = ["Flat", 3], haxe_zip__$InflateImpl_State.Flat.toString = $estr, haxe_zip__$InflateImpl_State.Flat.__enum__ = haxe_zip__$InflateImpl_State, haxe_zip__$InflateImpl_State.Crc = ["Crc", 4], haxe_zip__$InflateImpl_State.Crc.toString = $estr, haxe_zip__$InflateImpl_State.Crc.__enum__ = haxe_zip__$InflateImpl_State, haxe_zip__$InflateImpl_State.Dist = ["Dist", 5], haxe_zip__$InflateImpl_State.Dist.toString = $estr, haxe_zip__$InflateImpl_State.Dist.__enum__ = haxe_zip__$InflateImpl_State, haxe_zip__$InflateImpl_State.DistOne = ["DistOne", 6], haxe_zip__$InflateImpl_State.DistOne.toString = $estr, haxe_zip__$InflateImpl_State.DistOne.__enum__ = haxe_zip__$InflateImpl_State, haxe_zip__$InflateImpl_State.Done = ["Done", 7], haxe_zip__$InflateImpl_State.Done.toString = $estr, haxe_zip__$InflateImpl_State.Done.__enum__ = haxe_zip__$InflateImpl_State;
    var haxe_zip_InflateImpl = function(e, t, n) {
        null == n && (n = !0), null == t && (t = !0), this.final = !1, this.htools = new haxe_zip_HuffTools, this.huffman = this.buildFixedHuffman(), this.huffdist = null, this.len = 0, this.dist = 0, this.state = t ? haxe_zip__$InflateImpl_State.Head : haxe_zip__$InflateImpl_State.Block, this.input = e, this.bits = 0, this.nbits = 0, this.needed = 0, this.output = null, this.outpos = 0, this.lengths = [];
        for (var l = 0; l < 19;) {
            l++;
            this.lengths.push(-1)
        }
        this.window = new haxe_zip__$InflateImpl_Window(n)
    };
    $hxClasses["haxe.zip.InflateImpl"] = haxe_zip_InflateImpl, haxe_zip_InflateImpl.__name__ = ["haxe", "zip", "InflateImpl"], haxe_zip_InflateImpl.run = function(e, t) {
        null == t && (t = 65536);
        for (var n = new haxe_io_Bytes(new ArrayBuffer(t)), l = new haxe_io_BytesBuffer, i = new haxe_zip_InflateImpl(e);;) {
            var s = i.readBytes(n, 0, t);
            if (l.addBytes(n, 0, s), s < t) break
        }
        return l.getBytes()
    }, haxe_zip_InflateImpl.prototype = {
        nbits: null,
        bits: null,
        state: null,
        final: null,
        huffman: null,
        huffdist: null,
        htools: null,
        len: null,
        dist: null,
        needed: null,
        output: null,
        outpos: null,
        input: null,
        lengths: null,
        window: null,
        buildFixedHuffman: function() {
            if (null != haxe_zip_InflateImpl.FIXED_HUFFMAN) return haxe_zip_InflateImpl.FIXED_HUFFMAN;
            for (var e = [], t = 0; t < 288;) {
                var n = t++;
                e.push(n <= 143 ? 8 : n <= 255 ? 9 : n <= 279 ? 7 : 8)
            }
            return haxe_zip_InflateImpl.FIXED_HUFFMAN = this.htools.make(e, 0, 288, 10), haxe_zip_InflateImpl.FIXED_HUFFMAN
        },
        readBytes: function(e, t, n) {
            if (this.needed = n, this.outpos = t, this.output = e, n > 0)
                for (; this.inflateLoop(););
            return n - this.needed
        },
        getBits: function(e) {
            for (; this.nbits < e;) this.bits |= this.input.readByte() << this.nbits, this.nbits += 8;
            var t = this.bits & (1 << e) - 1;
            return this.nbits -= e, this.bits >>= e, t
        },
        getBit: function() {
            0 == this.nbits && (this.nbits = 8, this.bits = this.input.readByte());
            var e = 1 == (1 & this.bits);
            return this.nbits--, this.bits >>= 1, e
        },
        getRevBits: function(e) {
            return 0 == e ? 0 : this.getBit() ? 1 << e - 1 | this.getRevBits(e - 1) : this.getRevBits(e - 1)
        },
        resetBits: function() {
            this.bits = 0, this.nbits = 0
        },
        addBytes: function(e, t, n) {
            this.window.addBytes(e, t, n), this.output.blit(this.outpos, e, t, n), this.needed -= n, this.outpos += n
        },
        addByte: function(e) {
            this.window.addByte(e), this.output.b[this.outpos] = 255 & e, this.needed--, this.outpos++
        },
        addDistOne: function(e) {
            for (var t = this.window.getLastChar(), n = 0; n < e;) {
                n++;
                this.addByte(t)
            }
        },
        addDist: function(e, t) {
            this.addBytes(this.window.buffer, this.window.pos - e, t)
        },
        applyHuffman: function(e) {
            switch (e[1]) {
                case 0:
                    return e[2];
                case 1:
                    var t = e[3],
                        n = e[2];
                    return this.applyHuffman(this.getBit() ? t : n);
                case 2:
                    var l = e[3],
                        i = e[2];
                    return this.applyHuffman(l[this.getBits(i)])
            }
        },
        inflateLengths: function(e, t) {
            for (var n = 0, l = 0; n < t;) {
                var i = this.applyHuffman(this.huffman);
                switch (i) {
                    case 0:
                    case 1:
                    case 2:
                    case 3:
                    case 4:
                    case 5:
                    case 6:
                    case 7:
                    case 8:
                    case 9:
                    case 10:
                    case 11:
                    case 12:
                    case 13:
                    case 14:
                    case 15:
                        l = i, e[n] = i, n++;
                        break;
                    case 16:
                        var s = n + 3 + this.getBits(2);
                        if (s > t) throw new js__$Boot_HaxeError("Invalid data");
                        for (; n < s;) e[n] = l, n++;
                        break;
                    case 17:
                        if ((n += 3 + this.getBits(3)) > t) throw new js__$Boot_HaxeError("Invalid data");
                        break;
                    case 18:
                        if ((n += 11 + this.getBits(7)) > t) throw new js__$Boot_HaxeError("Invalid data");
                        break;
                    default:
                        throw new js__$Boot_HaxeError("Invalid data")
                }
            }
        },
        inflateLoop: function() {
            switch (this.state[1]) {
                case 0:
                    var e = this.input.readByte();
                    if (8 != (15 & e)) throw new js__$Boot_HaxeError("Invalid data");
                    var t = this.input.readByte(),
                        n = 0 != (32 & t);
                    if (((e << 8) + t) % 31 != 0) throw new js__$Boot_HaxeError("Invalid data");
                    if (n) throw new js__$Boot_HaxeError("Unsupported dictionary");
                    return this.state = haxe_zip__$InflateImpl_State.Block, !0;
                case 4:
                    var l = this.window.checksum();
                    if (null == l) return this.state = haxe_zip__$InflateImpl_State.Done, !0;
                    var i = haxe_crypto_Adler32.read(this.input);
                    if (!l.equals(i)) throw new js__$Boot_HaxeError("Invalid CRC");
                    return this.state = haxe_zip__$InflateImpl_State.Done, !0;
                case 7:
                    return !1;
                case 1:
                    switch (this.final = this.getBit(), this.getBits(2)) {
                        case 0:
                            if (this.len = this.input.readUInt16(), this.input.readUInt16() != 65535 - this.len) throw new js__$Boot_HaxeError("Invalid data");
                            this.state = haxe_zip__$InflateImpl_State.Flat;
                            var s = this.inflateLoop();
                            return this.resetBits(), s;
                        case 1:
                            return this.huffman = this.buildFixedHuffman(), this.huffdist = null, this.state = haxe_zip__$InflateImpl_State.CData, !0;
                        case 2:
                            for (var a = this.getBits(5) + 257, r = this.getBits(5) + 1, o = this.getBits(4) + 4, d = 0; d < o;) {
                                var _ = d++;
                                this.lengths[haxe_zip_InflateImpl.CODE_LENGTHS_POS[_]] = this.getBits(3)
                            }
                            for (var h = o; h < 19;) {
                                var p = h++;
                                this.lengths[haxe_zip_InflateImpl.CODE_LENGTHS_POS[p]] = 0
                            }
                            this.huffman = this.htools.make(this.lengths, 0, 19, 8);
                            for (var c = [], Q = 0, U = a + r; Q < U;) {
                                Q++;
                                c.push(0)
                            }
                            return this.inflateLengths(c, a + r), this.huffdist = this.htools.make(c, a, r, 16), this.huffman = this.htools.make(c, 0, a, 16), this.state = haxe_zip__$InflateImpl_State.CData, !0;
                        default:
                            throw new js__$Boot_HaxeError("Invalid data")
                    }
                    break;
                case 3:
                    var m;
                    m = this.len < this.needed ? this.len : this.needed;
                    var u = this.input.read(m);
                    return this.len -= m, this.addBytes(u, 0, m), 0 == this.len && (this.final ? this.state = haxe_zip__$InflateImpl_State.Crc : this.state = haxe_zip__$InflateImpl_State.Block), this.needed > 0;
                case 6:
                    var F;
                    return F = this.len < this.needed ? this.len : this.needed, this.addDistOne(F), this.len -= F, 0 == this.len && (this.state = haxe_zip__$InflateImpl_State.CData), this.needed > 0;
                case 5:
                    for (; this.len > 0 && this.needed > 0;) {
                        var N, S;
                        N = this.len < this.dist ? this.len : this.dist, S = this.needed < N ? this.needed : N, this.addDist(this.dist, S), this.len -= S
                    }
                    return 0 == this.len && (this.state = haxe_zip__$InflateImpl_State.CData), this.needed > 0;
                case 2:
                    var W = this.applyHuffman(this.huffman);
                    if (W < 256) return this.addByte(W), this.needed > 0;
                    if (256 == W) return this.final ? this.state = haxe_zip__$InflateImpl_State.Crc : this.state = haxe_zip__$InflateImpl_State.Block, !0;
                    W -= 257;
                    var B, Z = haxe_zip_InflateImpl.LEN_EXTRA_BITS_TBL[W];
                    if (-1 == Z) throw new js__$Boot_HaxeError("Invalid data");
                    if (this.len = haxe_zip_InflateImpl.LEN_BASE_VAL_TBL[W] + this.getBits(Z), B = null == this.huffdist ? this.getRevBits(5) : this.applyHuffman(this.huffdist), -1 == (Z = haxe_zip_InflateImpl.DIST_EXTRA_BITS_TBL[B])) throw new js__$Boot_HaxeError("Invalid data");
                    if (this.dist = haxe_zip_InflateImpl.DIST_BASE_VAL_TBL[B] + this.getBits(Z), this.dist > this.window.available()) throw new js__$Boot_HaxeError("Invalid data");
                    return 1 == this.dist ? this.state = haxe_zip__$InflateImpl_State.DistOne : this.state = haxe_zip__$InflateImpl_State.Dist, !0
            }
        },
        __class__: haxe_zip_InflateImpl
    };
    var haxe_zip_Uncompress = function() {};
    $hxClasses["haxe.zip.Uncompress"] = haxe_zip_Uncompress, haxe_zip_Uncompress.__name__ = ["haxe", "zip", "Uncompress"], haxe_zip_Uncompress.run = function(e, t) {
        return haxe_zip_InflateImpl.run(new haxe_io_BytesInput(e), t)
    };
    var js__$Boot_HaxeError = function(e) {
        Error.call(this), this.val = e, this.message = String(e), Error.captureStackTrace && Error.captureStackTrace(this, js__$Boot_HaxeError)
    };
    $hxClasses["js._Boot.HaxeError"] = js__$Boot_HaxeError, js__$Boot_HaxeError.__name__ = ["js", "_Boot", "HaxeError"], js__$Boot_HaxeError.__super__ = Error, js__$Boot_HaxeError.prototype = $extend(Error.prototype, {
        val: null,
        __class__: js__$Boot_HaxeError
    });
    var js_Boot = function() {};
    $hxClasses["js.Boot"] = js_Boot, js_Boot.__name__ = ["js", "Boot"], js_Boot.getClass = function(e) {
        if (e instanceof Array && null == e.__enum__) return Array;
        var t = e.__class__;
        if (null != t) return t;
        var n = js_Boot.__nativeClassName(e);
        return null != n ? js_Boot.__resolveNativeClass(n) : null
    }, js_Boot.__string_rec = function(e, t) {
        if (null == e) return "null";
        if (t.length >= 5) return "<...>";
        var n = typeof e;
        switch ("function" == n && (e.__name__ || e.__ename__) && (n = "object"), n) {
            case "object":
                if (e instanceof Array) {
                    if (e.__enum__) {
                        if (2 == e.length) return e[0];
                        var l = e[0] + "(";
                        t += "\t";
                        for (var i = 2, s = e.length; i < s;) {
                            var a = i++;
                            l += 2 != a ? "," + js_Boot.__string_rec(e[a], t) : js_Boot.__string_rec(e[a], t)
                        }
                        return l + ")"
                    }
                    var r = e.length,
                        o = "[";
                    t += "\t";
                    for (var d = 0; d < r;) {
                        var _ = d++;
                        o += (_ > 0 ? "," : "") + js_Boot.__string_rec(e[_], t)
                    }
                    return o += "]"
                }
                var h;
                try {
                    h = e.toString
                } catch (e) {
                    return e instanceof js__$Boot_HaxeError && (e = e.val), "???"
                }
                if (null != h && h != Object.toString && "function" == typeof h) {
                    var p = e.toString();
                    if ("[object Object]" != p) return p
                }
                var c = null,
                    Q = "{\n";
                t += "\t";
                var U = null != e.hasOwnProperty;
                for (var c in e) U && !e.hasOwnProperty(c) || "prototype" != c && "__class__" != c && "__super__" != c && "__interfaces__" != c && "__properties__" != c && (2 != Q.length && (Q += ", \n"), Q += t + c + " : " + js_Boot.__string_rec(e[c], t));
                return Q += "\n" + (t = t.substring(1)) + "}";
            case "function":
                return "<function>";
            case "string":
                return e;
            default:
                return String(e)
        }
    }, js_Boot.__interfLoop = function(e, t) {
        if (null == e) return !1;
        if (e == t) return !0;
        var n = e.__interfaces__;
        if (null != n)
            for (var l = 0, i = n.length; l < i;) {
                var s = n[l++];
                if (s == t || js_Boot.__interfLoop(s, t)) return !0
            }
        return js_Boot.__interfLoop(e.__super__, t)
    }, js_Boot.__instanceof = function(e, t) {
        if (null == t) return !1;
        switch (t) {
            case Int:
                return (0 | e) === e;
            case Float:
                return "number" == typeof e;
            case Bool:
                return "boolean" == typeof e;
            case String:
                return "string" == typeof e;
            case Array:
                return e instanceof Array && null == e.__enum__;
            case Dynamic:
                return !0;
            default:
                if (null == e) return !1;
                if ("function" == typeof t) {
                    if (e instanceof t) return !0;
                    if (js_Boot.__interfLoop(js_Boot.getClass(e), t)) return !0
                } else if ("object" == typeof t && js_Boot.__isNativeObj(t) && e instanceof t) return !0;
                return t == Class && null != e.__name__ || (t == Enum && null != e.__ename__ || e.__enum__ == t)
        }
    }, js_Boot.__cast = function(e, t) {
        if (js_Boot.__instanceof(e, t)) return e;
        throw new js__$Boot_HaxeError("Cannot cast " + Std.string(e) + " to " + Std.string(t))
    }, js_Boot.__nativeClassName = function(e) {
        var t = js_Boot.__toStr.call(e).slice(8, -1);
        return "Object" == t || "Function" == t || "Math" == t || "JSON" == t ? null : t
    }, js_Boot.__isNativeObj = function(e) {
        return null != js_Boot.__nativeClassName(e)
    }, js_Boot.__resolveNativeClass = function(e) {
        return $global[e]
    };
    var js_Browser = function() {};
    $hxClasses["js.Browser"] = js_Browser, js_Browser.__name__ = ["js", "Browser"], js_Browser.getLocalStorage = function() {
        try {
            var e = window.localStorage;
            return e.getItem(""), e
        } catch (e) {
            return e instanceof js__$Boot_HaxeError && (e = e.val), null
        }
    };
    var js_html__$CanvasElement_CanvasUtil = function() {};
    $hxClasses["js.html._CanvasElement.CanvasUtil"] = js_html__$CanvasElement_CanvasUtil, js_html__$CanvasElement_CanvasUtil.__name__ = ["js", "html", "_CanvasElement", "CanvasUtil"], js_html__$CanvasElement_CanvasUtil.getContextWebGL = function(e, t) {
        for (var n = 0, l = ["webgl", "experimental-webgl"]; n < l.length;) {
            var i = l[n];
            ++n;
            var s = e.getContext(i, t);
            if (null != s) return s
        }
        return null
    };
    var js_html_compat_ArrayBuffer = function(e) {
        if (e instanceof Array && null == e.__enum__) this.a = e, this.byteLength = e.length;
        else {
            var t = e;
            this.a = [];
            for (var n = 0; n < t;) {
                var l = n++;
                this.a[l] = 0
            }
            this.byteLength = t
        }
    };
    $hxClasses["js.html.compat.ArrayBuffer"] = js_html_compat_ArrayBuffer, js_html_compat_ArrayBuffer.__name__ = ["js", "html", "compat", "ArrayBuffer"], js_html_compat_ArrayBuffer.sliceImpl = function(e, t) {
        var n = new Uint8Array(this, e, null == t ? null : t - e),
            l = new ArrayBuffer(n.byteLength);
        return new Uint8Array(l).set(n), l
    }, js_html_compat_ArrayBuffer.prototype = {
        byteLength: null,
        a: null,
        slice: function(e, t) {
            return new js_html_compat_ArrayBuffer(this.a.slice(e, t))
        },
        __class__: js_html_compat_ArrayBuffer
    };
    var js_html_compat_DataView = function(e, t, n) {
        if (this.buf = e, this.offset = null == t ? 0 : t, this.length = null == n ? e.byteLength - this.offset : n, this.offset < 0 || this.length < 0 || this.offset + this.length > e.byteLength) throw new js__$Boot_HaxeError(haxe_io_Error.OutsideBounds)
    };
    $hxClasses["js.html.compat.DataView"] = js_html_compat_DataView, js_html_compat_DataView.__name__ = ["js", "html", "compat", "DataView"], js_html_compat_DataView.prototype = {
        buf: null,
        offset: null,
        length: null,
        getInt8: function(e) {
            var t = this.buf.a[this.offset + e];
            return t >= 128 ? t - 256 : t
        },
        getUint8: function(e) {
            return this.buf.a[this.offset + e]
        },
        getInt16: function(e, t) {
            var n = this.getUint16(e, t);
            return n >= 32768 ? n - 65536 : n
        },
        getUint16: function(e, t) {
            return t ? this.buf.a[this.offset + e] | this.buf.a[this.offset + e + 1] << 8 : this.buf.a[this.offset + e] << 8 | this.buf.a[this.offset + e + 1]
        },
        getInt32: function(e, t) {
            var n = this.offset + e,
                l = this.buf.a[n++],
                i = this.buf.a[n++],
                s = this.buf.a[n++],
                a = this.buf.a[n++];
            return t ? l | i << 8 | s << 16 | a << 24 : a | s << 8 | i << 16 | l << 24
        },
        getUint32: function(e, t) {
            var n = this.getInt32(e, t);
            return n < 0 ? n + 4294967296 : n
        },
        getFloat32: function(e, t) {
            return haxe_io_FPHelper.i32ToFloat(this.getInt32(e, t))
        },
        getFloat64: function(e, t) {
            var n = this.getInt32(e, t),
                l = this.getInt32(e + 4, t);
            return haxe_io_FPHelper.i64ToDouble(t ? n : l, t ? l : n)
        },
        setInt8: function(e, t) {
            this.buf.a[e + this.offset] = t < 0 ? t + 128 & 255 : 255 & t
        },
        setUint8: function(e, t) {
            this.buf.a[e + this.offset] = 255 & t
        },
        setInt16: function(e, t, n) {
            this.setUint16(e, t < 0 ? t + 65536 : t, n)
        },
        setUint16: function(e, t, n) {
            var l = e + this.offset;
            n ? (this.buf.a[l] = 255 & t, this.buf.a[l++] = t >> 8 & 255) : (this.buf.a[l++] = t >> 8 & 255, this.buf.a[l] = 255 & t)
        },
        setInt32: function(e, t, n) {
            this.setUint32(e, t, n)
        },
        setUint32: function(e, t, n) {
            var l = e + this.offset;
            n ? (this.buf.a[l++] = 255 & t, this.buf.a[l++] = t >> 8 & 255, this.buf.a[l++] = t >> 16 & 255, this.buf.a[l++] = t >>> 24) : (this.buf.a[l++] = t >>> 24, this.buf.a[l++] = t >> 16 & 255, this.buf.a[l++] = t >> 8 & 255, this.buf.a[l++] = 255 & t)
        },
        setFloat32: function(e, t, n) {
            this.setUint32(e, haxe_io_FPHelper.floatToI32(t), n)
        },
        setFloat64: function(e, t, n) {
            var l = haxe_io_FPHelper.doubleToI64(t);
            n ? (this.setUint32(e, l.low), this.setUint32(e, l.high)) : (this.setUint32(e, l.high), this.setUint32(e, l.low))
        },
        __class__: js_html_compat_DataView
    };
    var js_html_compat_Uint8Array = function() {};
    $hxClasses["js.html.compat.Uint8Array"] = js_html_compat_Uint8Array, js_html_compat_Uint8Array.__name__ = ["js", "html", "compat", "Uint8Array"], js_html_compat_Uint8Array._new = function(e, t, n) {
        var l;
        if ("number" == typeof e) {
            l = [];
            for (var i = 0; i < e;) {
                l[i++] = 0
            }
            l.byteLength = l.length, l.byteOffset = 0, l.buffer = new js_html_compat_ArrayBuffer(l)
        } else if (js_Boot.__instanceof(e, js_html_compat_ArrayBuffer)) {
            var s = e;
            null == t && (t = 0), null == n && (n = s.byteLength - t), (l = 0 == t ? s.a : s.a.slice(t, t + n)).byteLength = l.length, l.byteOffset = t, l.buffer = s
        } else {
            if (!(e instanceof Array && null == e.__enum__)) throw new js__$Boot_HaxeError("TODO " + Std.string(e));
            (l = e.slice()).byteLength = l.length, l.byteOffset = 0, l.buffer = new js_html_compat_ArrayBuffer(l)
        }
        return l.subarray = js_html_compat_Uint8Array._subarray, l.set = js_html_compat_Uint8Array._set, l
    }, js_html_compat_Uint8Array._set = function(e, t) {
        var n = this;
        if (js_Boot.__instanceof(e.buffer, js_html_compat_ArrayBuffer)) {
            var l = e;
            if (e.byteLength + t > n.byteLength) throw new js__$Boot_HaxeError("set() outside of range");
            for (var i = 0, s = e.byteLength; i < s;) {
                var a = i++;
                n[a + t] = l[a]
            }
        } else {
            if (!(e instanceof Array && null == e.__enum__)) throw new js__$Boot_HaxeError("TODO");
            var r = e;
            if (r.length + t > n.byteLength) throw new js__$Boot_HaxeError("set() outside of range");
            for (var o = 0, d = r.length; o < d;) {
                var _ = o++;
                n[_ + t] = r[_]
            }
        }
    }, js_html_compat_Uint8Array._subarray = function(e, t) {
        var n = js_html_compat_Uint8Array._new(this.slice(e, t));
        return n.byteOffset = e, n
    };
    var lime__$backend_html5_HTML5Application = function(e) {
        this.gameDeviceCache = new haxe_ds_IntMap, this.parent = e, this.currentUpdate = 0, this.lastUpdate = 0, this.nextUpdate = 0, this.framePeriod = -1, lime_media_AudioManager.init()
    };
    $hxClasses["lime._backend.html5.HTML5Application"] = lime__$backend_html5_HTML5Application, lime__$backend_html5_HTML5Application.__name__ = ["lime", "_backend", "html5", "HTML5Application"], lime__$backend_html5_HTML5Application.prototype = {
        gameDeviceCache: null,
        currentUpdate: null,
        deltaTime: null,
        framePeriod: null,
        lastUpdate: null,
        nextUpdate: null,
        parent: null,
        convertKeyCode: function(e) {
            if (e >= 65 && e <= 90) return e + 32;
            switch (e) {
                case 16:
                    return 1073742049;
                case 17:
                    return 1073742048;
                case 18:
                    return 1073742050;
                case 20:
                    return 1073741881;
                case 33:
                    return 1073741899;
                case 34:
                    return 1073741902;
                case 35:
                    return 1073741901;
                case 36:
                    return 1073741898;
                case 37:
                    return 1073741904;
                case 38:
                    return 1073741906;
                case 39:
                    return 1073741903;
                case 40:
                    return 1073741905;
                case 45:
                    return 1073741897;
                case 46:
                    return 127;
                case 96:
                    return 1073741922;
                case 97:
                    return 1073741913;
                case 98:
                    return 1073741914;
                case 99:
                    return 1073741915;
                case 100:
                    return 1073741916;
                case 101:
                    return 1073741917;
                case 102:
                    return 1073741918;
                case 103:
                    return 1073741919;
                case 104:
                    return 1073741920;
                case 105:
                    return 1073741921;
                case 106:
                    return 1073741909;
                case 107:
                    return 1073741911;
                case 109:
                    return 1073741910;
                case 110:
                    return 1073741923;
                case 111:
                    return 1073741908;
                case 112:
                    return 1073741882;
                case 113:
                    return 1073741883;
                case 114:
                    return 1073741884;
                case 115:
                    return 1073741885;
                case 116:
                    return 1073741886;
                case 117:
                    return 1073741887;
                case 118:
                    return 1073741888;
                case 119:
                    return 1073741889;
                case 120:
                    return 1073741890;
                case 121:
                    return 1073741891;
                case 122:
                    return 1073741892;
                case 123:
                    return 1073741893;
                case 124:
                    return 1073741928;
                case 125:
                    return 1073741929;
                case 126:
                    return 1073741930;
                case 144:
                    return 1073741907;
                case 186:
                    return 59;
                case 187:
                    return 61;
                case 188:
                    return 44;
                case 189:
                    return 45;
                case 190:
                    return 46;
                case 191:
                    return 47;
                case 192:
                    return 96;
                case 219:
                    return 91;
                case 220:
                    return 92;
                case 221:
                    return 93;
                case 222:
                    return 39
            }
            return e
        },
        create: function(e) {},
        exec: function() {
            window.addEventListener("keydown", $bind(this, this.handleKeyEvent), !1), window.addEventListener("keyup", $bind(this, this.handleKeyEvent), !1), window.addEventListener("focus", $bind(this, this.handleWindowEvent), !1), window.addEventListener("blur", $bind(this, this.handleWindowEvent), !1), window.addEventListener("resize", $bind(this, this.handleWindowEvent), !1), window.addEventListener("beforeunload", $bind(this, this.handleWindowEvent), !1), CanvasRenderingContext2D.prototype.isPointInStroke || (CanvasRenderingContext2D.prototype.isPointInStroke = function(e, t, n) {
                return !1
            }), CanvasRenderingContext2D.prototype.isPointInPath || (CanvasRenderingContext2D.prototype.isPointInPath = function(e, t, n) {
                return !1
            });
            for (var e = 0, t = ["ms", "moz", "webkit", "o"], n = 0; n < t.length && !window.requestAnimationFrame; ++n) window.requestAnimationFrame = window[t[n] + "RequestAnimationFrame"], window.cancelAnimationFrame = window[t[n] + "CancelAnimationFrame"] || window[t[n] + "CancelRequestAnimationFrame"];
            return window.requestAnimationFrame || (window.requestAnimationFrame = function(t, n) {
                var l = (new Date).getTime(),
                    i = Math.max(0, 16 - (l - e)),
                    s = window.setTimeout(function() {
                        t(l + i)
                    }, i);
                return e = l + i, s
            }), window.cancelAnimationFrame || (window.cancelAnimationFrame = function(e) {
                clearTimeout(e)
            }), window.requestAnimFrame = window.requestAnimationFrame, this.lastUpdate = (new Date).getTime(), this.handleApplicationEvent(), 0
        },
        exit: function() {},
        getFrameRate: function() {
            return this.framePeriod < 0 ? 60 : 1e3 == this.framePeriod ? 0 : 1e3 / this.framePeriod
        },
        handleApplicationEvent: function(e) {
            this.updateGameDevices(), this.currentUpdate = (new Date).getTime(), this.currentUpdate >= this.nextUpdate && (this.deltaTime = this.currentUpdate - this.lastUpdate, this.parent.onUpdate.dispatch(0 | this.deltaTime), null != this.parent.__renderers[0] && (this.parent.__renderers[0].onRender.dispatch(), this.parent.__renderers[0].flip()), this.framePeriod < 0 ? (this.nextUpdate = this.currentUpdate, this.nextUpdate = this.currentUpdate) : this.nextUpdate = this.currentUpdate + this.framePeriod, this.lastUpdate = this.currentUpdate), window.requestAnimationFrame($bind(this, this.handleApplicationEvent))
        },
        handleKeyEvent: function(e) {
            if (null != this.parent.__windows[0]) {
                var t, n = this.convertKeyCode(null != e.keyCode ? e.keyCode : e.which);
                t = (e.shiftKey ? 3 : 0) | (e.ctrlKey ? 192 : 0) | (e.altKey ? 768 : 0) | (e.metaKey ? 3072 : 0), "keydown" == e.type ? (this.parent.__windows[0].onKeyDown.dispatch(n, t), this.parent.__windows[0].onKeyDown.canceled && e.preventDefault()) : (this.parent.__windows[0].onKeyUp.dispatch(n, t), this.parent.__windows[0].onKeyUp.canceled && e.preventDefault())
            }
        },
        handleWindowEvent: function(e) {
            if (null != this.parent.__windows[0]) switch (e.type) {
                case "focus":
                    this.parent.__windows[0].onFocusIn.dispatch(), this.parent.__windows[0].onActivate.dispatch();
                    break;
                case "blur":
                    this.parent.__windows[0].onFocusOut.dispatch(), this.parent.__windows[0].onDeactivate.dispatch();
                    break;
                case "resize":
                    var t = this.parent.__windows[0].__width,
                        n = this.parent.__windows[0].__height;
                    this.parent.__windows[0].backend.handleResize(), this.parent.__windows[0].__width == t && this.parent.__windows[0].__height == n || this.parent.__windows[0].onResize.dispatch(this.parent.__windows[0].__width, this.parent.__windows[0].__height);
                    break;
                case "beforeunload":
                    this.parent.__windows[0].onClose.dispatch()
            }
        },
        setFrameRate: function(e) {
            return this.framePeriod = e >= 60 ? -1 : e > 0 ? 1e3 / e : 1e3, e
        },
        updateGameDevices: function() {
            var e = lime_ui_Joystick.__getDeviceData();
            if (null != e)
                for (var t, n, l, i, s, a = 0, r = e.length; a < r;) {
                    if (null != (i = e[t = a++])) {
                        if (!this.gameDeviceCache.h.hasOwnProperty(t)) {
                            (s = new lime__$backend_html5_GameDeviceData).id = t, s.connected = i.connected;
                            for (var o = 0, d = i.buttons.length; o < d;) {
                                var _ = o++;
                                s.buttons.push(i.buttons[_].value)
                            }
                            for (var h = 0, p = i.axes.length; h < p;) {
                                var c = h++;
                                s.axes.push(i.axes[c])
                            }
                            "standard" == i.mapping && (s.isGamepad = !0), this.gameDeviceCache.h[t] = s, i.connected && (lime_ui_Joystick.__connect(t), s.isGamepad && lime_ui_Gamepad.__connect(t))
                        }
                        if (s = this.gameDeviceCache.h[t], l = lime_ui_Joystick.devices.h[t], n = lime_ui_Gamepad.devices.h[t], i.connected) {
                            for (var Q, U, m = 0, u = i.buttons.length; m < u;) {
                                var F = m++;
                                if ((U = i.buttons[F].value) != s.buttons[F]) {
                                    if (6 == F) l.onAxisMove.dispatch(i.axes.length, U), null != n && n.onAxisMove.dispatch(4, U);
                                    else if (7 == F) l.onAxisMove.dispatch(i.axes.length + 1, U), null != n && n.onAxisMove.dispatch(5, U);
                                    else if (U > 0 ? l.onButtonDown.dispatch(F) : l.onButtonUp.dispatch(F), null != n) {
                                        switch (F) {
                                            case 0:
                                                Q = 0;
                                                break;
                                            case 1:
                                                Q = 1;
                                                break;
                                            case 2:
                                                Q = 2;
                                                break;
                                            case 3:
                                                Q = 3;
                                                break;
                                            case 4:
                                                Q = 9;
                                                break;
                                            case 5:
                                                Q = 10;
                                                break;
                                            case 8:
                                                Q = 4;
                                                break;
                                            case 9:
                                                Q = 6;
                                                break;
                                            case 10:
                                                Q = 7;
                                                break;
                                            case 11:
                                                Q = 8;
                                                break;
                                            case 12:
                                                Q = 11;
                                                break;
                                            case 13:
                                                Q = 12;
                                                break;
                                            case 14:
                                                Q = 13;
                                                break;
                                            case 15:
                                                Q = 14;
                                                break;
                                            case 16:
                                                Q = 5;
                                                break;
                                            default:
                                                continue
                                        }
                                        U > 0 ? n.onButtonDown.dispatch(Q) : n.onButtonUp.dispatch(Q)
                                    }
                                    s.buttons[F] = U
                                }
                            }
                            for (var N = 0, S = i.axes.length; N < S;) {
                                var W = N++;
                                i.axes[W] != s.axes[W] && (l.onAxisMove.dispatch(W, i.axes[W]), null != n && n.onAxisMove.dispatch(W, i.axes[W]), s.axes[W] = i.axes[W])
                            }
                        } else s.connected && (s.connected = !1, lime_ui_Joystick.__disconnect(t), lime_ui_Gamepad.__disconnect(t))
                    }
                }
        },
        __class__: lime__$backend_html5_HTML5Application
    };
    var lime__$backend_html5_GameDeviceData = function() {
        this.connected = !0, this.buttons = [], this.axes = []
    };
    $hxClasses["lime._backend.html5.GameDeviceData"] = lime__$backend_html5_GameDeviceData, lime__$backend_html5_GameDeviceData.__name__ = ["lime", "_backend", "html5", "GameDeviceData"], lime__$backend_html5_GameDeviceData.prototype = {
        connected: null,
        id: null,
        isGamepad: null,
        buttons: null,
        axes: null,
        __class__: lime__$backend_html5_GameDeviceData
    };
    var lime__$backend_html5_HTML5AudioSource = function() {};
    $hxClasses["lime._backend.html5.HTML5AudioSource"] = lime__$backend_html5_HTML5AudioSource, lime__$backend_html5_HTML5AudioSource.__name__ = ["lime", "_backend", "html5", "HTML5AudioSource"], lime__$backend_html5_HTML5AudioSource.prototype = {
        completed: null,
        gain: null,
        id: null,
        length: null,
        loops: null,
        parent: null,
        playing: null,
        position: null,
        dispose: function() {},
        play: function() {
            if (!this.playing && null != this.parent.buffer) {
                this.playing = !0;
                var e = this.getCurrentTime();
                this.completed = !1;
                var t = this.parent.buffer.__srcHowl._volume;
                this.parent.buffer.__srcHowl._volume = this.parent.get_gain(), this.id = this.parent.buffer.__srcHowl.play(), this.parent.buffer.__srcHowl._volume = t, this.setPosition(this.parent.get_position()), this.parent.buffer.__srcHowl.on("end", $bind(this, this.howl_onEnd), this.id), this.setCurrentTime(e)
            }
        },
        stop: function() {
            this.playing = !1, this.parent.buffer.__srcHowl.stop(this.id)
        },
        howl_onEnd: function() {
            if (this.playing = !1, this.loops > 0) return this.loops--, this.stop(), void this.play();
            this.parent.buffer.__srcHowl.stop(this.id), this.completed = !0, this.parent.onComplete.dispatch()
        },
        getCurrentTime: function() {
            if (-1 == this.id) return 0;
            if (this.completed) return this.getLength();
            var e = Std.int(1e3 * this.parent.buffer.__srcHowl.seek(this.id)) - this.parent.offset;
            return e < 0 ? 0 : e
        },
        setCurrentTime: function(e) {
            if (null != this.parent.buffer) {
                var t = (e + this.parent.offset) / 1e3;
                t < 0 && (t = 0), this.parent.buffer.__srcHowl.seek(t, this.id)
            }
            return e
        },
        getGain: function() {
            return this.gain
        },
        setGain: function(e) {
            return null != this.parent.buffer && this.parent.buffer.__srcHowl.volume(e, this.id), this.gain = e
        },
        getLength: function() {
            return 0 != this.length ? this.length : Std.int(1e3 * this.parent.buffer.__srcHowl.duration())
        },
        getPosition: function() {
            return this.position
        },
        setPosition: function(e) {
            return this.position.x = e.x, this.position.y = e.y, this.position.z = e.z, this.position.w = e.w, this.position
        },
        __class__: lime__$backend_html5_HTML5AudioSource
    };
    var lime__$backend_html5_HTML5HTTPRequest = function() {};
    $hxClasses["lime._backend.html5.HTML5HTTPRequest"] = lime__$backend_html5_HTML5HTTPRequest, lime__$backend_html5_HTML5HTTPRequest.__name__ = ["lime", "_backend", "html5", "HTML5HTTPRequest"], lime__$backend_html5_HTML5HTTPRequest.prototype = {
        binary: null,
        parent: null,
        request: null,
        init: function(e) {
            this.parent = e
        },
        load: function(e, t, n) {
            this.request = new XMLHttpRequest, this.request.addEventListener("progress", t, !1), this.request.onreadystatechange = n;
            var l = "";
            if (null == this.parent.data) {
                for (var i = this.parent.formData.keys(); i.hasNext();) {
                    var s = i.next();
                    l.length > 0 && (l += "&"), l += encodeURIComponent(s) + "=" + StringTools.urlEncode(Std.string(this.parent.formData.get(s)))
                }
                "GET" == this.parent.method && "" != l && (e.indexOf("?") > -1 ? e += "&" + l : e += "?" + l, l = "")
            }
            this.request.open(Std.string(this.parent.method), e, !0), this.parent.timeout > 0 && (this.request.timeout = this.parent.timeout), this.binary && (this.request.responseType = "arraybuffer");
            for (var a = !1, r = 0, o = this.parent.headers; r < o.length;) {
                var d = o[r];
                ++r, "Content-Type" == d.name && (a = !0), this.request.setRequestHeader(d.name, d.value)
            }
            a || this.request.setRequestHeader("Content-Type", this.parent.contentType), null != this.parent.data ? this.request.send(this.parent.data.b.bufferValue) : this.request.send(l)
        },
        loadData: function(e) {
            var t = this,
                n = new lime_app_Promise;
            return this.binary = !0, this.load(e, function(e) {
                n.progress(e.loaded, e.total)
            }, function(e) {
                if (4 == t.request.readyState) {
                    var l;
                    null != t.request.status && t.request.status >= 200 && t.request.status <= 400 ? (l = "" == t.request.responseType ? haxe_io_Bytes.ofString(t.request.responseText) : haxe_io_Bytes.ofData(t.request.response), t.processResponse(), n.complete(l)) : (t.processResponse(), n.error(t.request.status)), t.request = null
                }
            }), n.future
        },
        processResponse: function() {
            if (this.parent.enableResponseHeaders) {
                var e, t;
                this.parent.responseHeaders = [];
                for (var n = 0, l = this.request.getAllResponseHeaders().split("\n"); n < l.length;) {
                    var i = l[n];
                    ++n, e = StringTools.trim((void 0, a = i.indexOf(":"), HxOverrides.substr(i, 0, a))), t = StringTools.trim((void 0, s = i.indexOf(":") + 1, HxOverrides.substr(i, s, null))), "" != e && this.parent.responseHeaders.push(new lime_net_HTTPRequestHeader(e, t))
                }
            }
            var s, a;
            this.parent.responseStatus = this.request.status
        },
        __class__: lime__$backend_html5_HTML5HTTPRequest
    };
    var lime__$backend_html5_HTML5Mouse = function() {};
    $hxClasses["lime._backend.html5.HTML5Mouse"] = lime__$backend_html5_HTML5Mouse, lime__$backend_html5_HTML5Mouse.__name__ = ["lime", "_backend", "html5", "HTML5Mouse"], lime__$backend_html5_HTML5Mouse.set_cursor = function(e) {
        if (lime__$backend_html5_HTML5Mouse.__cursor != e) {
            if (!lime__$backend_html5_HTML5Mouse.__hidden)
                for (var t = 0, n = lime_app_Application.current.__windows; t < n.length;) {
                    var l = n[t];
                    switch (++t, e[1]) {
                        case 0:
                            l.backend.element.style.cursor = "default";
                            break;
                        case 1:
                            l.backend.element.style.cursor = "crosshair";
                            break;
                        case 3:
                            l.backend.element.style.cursor = "move";
                            break;
                        case 4:
                            l.backend.element.style.cursor = "pointer";
                            break;
                        case 5:
                            l.backend.element.style.cursor = "nesw-resize";
                            break;
                        case 6:
                            l.backend.element.style.cursor = "ns-resize";
                            break;
                        case 7:
                            l.backend.element.style.cursor = "nwse-resize";
                            break;
                        case 8:
                            l.backend.element.style.cursor = "ew-resize";
                            break;
                        case 9:
                            l.backend.element.style.cursor = "text";
                            break;
                        case 10:
                        case 11:
                            l.backend.element.style.cursor = "wait";
                            break;
                        default:
                            l.backend.element.style.cursor = "auto"
                    }
                }
            lime__$backend_html5_HTML5Mouse.__cursor = e
        }
        return lime__$backend_html5_HTML5Mouse.__cursor
    };
    var lime__$backend_html5_HTML5Renderer = function(e) {
        this.parent = e
    };
    $hxClasses["lime._backend.html5.HTML5Renderer"] = lime__$backend_html5_HTML5Renderer, lime__$backend_html5_HTML5Renderer.__name__ = ["lime", "_backend", "html5", "HTML5Renderer"], lime__$backend_html5_HTML5Renderer.prototype = {
        parent: null,
        create: function() {
            switch (this.createContext(), this.parent.context[1]) {
                case 0:
                    this.parent.window.backend.canvas.addEventListener("webglcontextlost", $bind(this, this.handleEvent), !1), this.parent.window.backend.canvas.addEventListener("webglcontextrestored", $bind(this, this.handleEvent), !1)
            }
        },
        createContext: function() {
            if (null != this.parent.window.backend.div) this.parent.context = lime_graphics_RenderContext.DOM(this.parent.window.backend.div), this.parent.type = lime_graphics_RendererType.DOM;
            else if (null != this.parent.window.backend.canvas) {
                this.parent.context = lime_graphics_RenderContext.CANVAS(this.parent.window.backend.canvas.getContext("2d")), this.parent.type = lime_graphics_RendererType.CANVAS
            }
        },
        flip: function() {},
        handleEvent: function(e) {
            switch (e.type) {
                case "webglcontextlost":
                    e.preventDefault(), this.parent.context = null, this.parent.onContextLost.dispatch();
                    break;
                case "webglcontextrestored":
                    this.createContext(), this.parent.onContextRestored.dispatch(this.parent.context)
            }
        },
        __class__: lime__$backend_html5_HTML5Renderer
    };
    var lime__$backend_html5_HTML5Window = function(e) {
        this.unusedTouchesPool = new List, this.scale = 1, this.currentTouches = new haxe_ds_IntMap, this.parent = e, null != e.config && Object.prototype.hasOwnProperty.call(e.config, "element") && (this.element = e.config.element), null != e.config && Object.prototype.hasOwnProperty.call(e.config, "allowHighDPI") && e.config.allowHighDPI && (this.scale = window.devicePixelRatio), e.__scale = this.scale, this.cacheMouseX = 0, this.cacheMouseY = 0
    };
    $hxClasses["lime._backend.html5.HTML5Window"] = lime__$backend_html5_HTML5Window, lime__$backend_html5_HTML5Window.__name__ = ["lime", "_backend", "html5", "HTML5Window"], lime__$backend_html5_HTML5Window.prototype = {
        canvas: null,
        div: null,
        element: null,
        cacheMouseX: null,
        cacheMouseY: null,
        currentTouches: null,
        enableTextEvents: null,
        parent: null,
        primaryTouch: null,
        scale: null,
        setHeight: null,
        setWidth: null,
        unusedTouchesPool: null,
        close: function() {
            this.parent.application.removeWindow(this.parent)
        },
        create: function(e) {
            if (this.setWidth = this.parent.__width, this.setHeight = this.parent.__height, this.parent.id = lime__$backend_html5_HTML5Window.windowID++, js_Boot.__instanceof(this.element, HTMLCanvasElement) ? this.canvas = this.element : this.canvas = window.document.createElement("canvas"), null != this.canvas) {
                var t = this.canvas.style;
                t.setProperty("-webkit-transform", "translateZ(0)", null), t.setProperty("transform", "translateZ(0)", null)
            } else if (null != this.div) {
                var n = this.div.style;
                n.setProperty("-webkit-transform", "translate3D(0,0,0)", null), n.setProperty("transform", "translate3D(0,0,0)", null), n.position = "relative", n.overflow = "hidden", n.setProperty("-webkit-user-select", "none", null), n.setProperty("-moz-user-select", "none", null), n.setProperty("-ms-user-select", "none", null), n.setProperty("-o-user-select", "none", null)
            }
            if (0 == this.parent.__width && 0 == this.parent.__height && (null != this.element ? (this.parent.set_width(this.element.clientWidth), this.parent.set_height(this.element.clientHeight)) : (this.parent.set_width(window.innerWidth), this.parent.set_height(window.innerHeight)), this.parent.set_fullscreen(!0)), null != this.canvas ? (this.canvas.width = Math.round(this.parent.__width * this.scale), this.canvas.height = Math.round(this.parent.__height * this.scale), this.canvas.style.width = this.parent.__width + "px", this.canvas.style.height = this.parent.__height + "px") : (this.div.style.width = this.parent.__width + "px", this.div.style.height = this.parent.__height + "px"), this.handleResize(), null != this.element) {
                null != this.canvas ? this.element != this.canvas && this.element.appendChild(this.canvas) : this.element.appendChild(this.div);
                for (var l = ["mousedown", "mouseenter", "mouseleave", "mousemove", "mouseup", "wheel"], i = 0; i < l.length;) {
                    var s = l[i];
                    ++i, this.element.addEventListener(s, $bind(this, this.handleMouseEvent), !0)
                }
                window.document.addEventListener("dragstart", function(e) {
                    return "img" != e.target.nodeName.toLowerCase() || (e.preventDefault(), !1)
                }, !1), this.element.addEventListener("contextmenu", $bind(this, this.handleContextMenuEvent), !0), this.element.addEventListener("touchstart", $bind(this, this.handleTouchEvent), !0), this.element.addEventListener("touchmove", $bind(this, this.handleTouchEvent), !0), this.element.addEventListener("touchend", $bind(this, this.handleTouchEvent), !0), this.element.addEventListener("gamepadconnected", $bind(this, this.handleGamepadEvent), !0), this.element.addEventListener("gamepaddisconnected", $bind(this, this.handleGamepadEvent), !0)
            }
        },
        handleContextMenuEvent: function(e) {
            this.parent.onMouseUp.canceled && e.preventDefault()
        },
        handleFocusEvent: function(e) {
            this.enableTextEvents && haxe_Timer.delay(function() {
                lime__$backend_html5_HTML5Window.textInput.focus()
            }, 20)
        },
        handleGamepadEvent: function(e) {
            switch (e.type) {
                case "gamepadconnected":
                    lime_ui_Joystick.__connect(e.gamepad.index), "standard" == e.gamepad.mapping && lime_ui_Gamepad.__connect(e.gamepad.index);
                    break;
                case "gamepaddisconnected":
                    lime_ui_Joystick.__disconnect(e.gamepad.index), lime_ui_Gamepad.__disconnect(e.gamepad.index)
            }
        },
        handleCutOrCopyEvent: function(e) {
            e.clipboardData.setData("text/plain", lime_system_Clipboard.get_text()), e.preventDefault()
        },
        handlePasteEvent: function(e) {
            if (e.clipboardData.types.indexOf("text/plain") > -1) {
                var t = lime_system_Clipboard.set_text(e.clipboardData.getData("text/plain"));
                this.parent.onTextInput.dispatch(t), e.preventDefault()
            }
        },
        handleInputEvent: function(e) {
            lime__$backend_html5_HTML5Window.textInput.value != lime__$backend_html5_HTML5Window.dummyCharacter && (lime__$backend_html5_HTML5Window.textInput.value.charAt(0) == lime__$backend_html5_HTML5Window.dummyCharacter ? this.parent.onTextInput.dispatch(HxOverrides.substr(lime__$backend_html5_HTML5Window.textInput.value, 1, null)) : this.parent.onTextInput.dispatch(lime__$backend_html5_HTML5Window.textInput.value), lime__$backend_html5_HTML5Window.textInput.value = lime__$backend_html5_HTML5Window.dummyCharacter)
        },
        handleMouseEvent: function(e) {
            var t = 0,
                n = 0;
            if ("wheel" != e.type) {
                if (null != this.element)
                    if (null != this.canvas) {
                        var l = this.canvas.getBoundingClientRect();
                        t = (e.clientX - l.left) * (this.parent.__width / l.width), n = (e.clientY - l.top) * (this.parent.__height / l.height)
                    } else if (null != this.div) {
                    var i = this.div.getBoundingClientRect();
                    t = e.clientX - i.left, n = e.clientY - i.top
                } else {
                    var s = this.element.getBoundingClientRect();
                    t = (e.clientX - s.left) * (this.parent.__width / s.width), n = (e.clientY - s.top) * (this.parent.__height / s.height)
                } else t = e.clientX, n = e.clientY;
                switch (e.type) {
                    case "mousedown":
                        this.parent.onMouseDown.dispatch(t, n, e.button), this.parent.onMouseDown.canceled && e.preventDefault();
                        break;
                    case "mouseenter":
                        e.target == this.element && (this.parent.onEnter.dispatch(), this.parent.onEnter.canceled && e.preventDefault());
                        break;
                    case "mouseleave":
                        e.target == this.element && (this.parent.onLeave.dispatch(), this.parent.onLeave.canceled && e.preventDefault());
                        break;
                    case "mouseup":
                        this.parent.onMouseUp.dispatch(t, n, e.button), this.parent.onMouseUp.canceled && e.preventDefault();
                        break;
                    case "mousemove":
                        t == this.cacheMouseX && n == this.cacheMouseY || (this.parent.onMouseMove.dispatch(t, n), this.parent.onMouseMoveRelative.dispatch(t - this.cacheMouseX, n - this.cacheMouseY), (this.parent.onMouseMove.canceled || this.parent.onMouseMoveRelative.canceled) && e.preventDefault())
                }
                this.cacheMouseX = t, this.cacheMouseY = n
            } else this.parent.onMouseWheel.dispatch(e.deltaX, -e.deltaY), this.parent.onMouseWheel.canceled && e.preventDefault()
        },
        handleResize: function() {
            this.primaryTouch = null;
            var e = this.parent.__fullscreen || 0 == this.setWidth && 0 == this.setHeight;
            if (null != this.element && (null == this.div || null != this.div && e))
                if (e) this.parent.__width == this.element.clientWidth && this.parent.__height == this.element.clientHeight || (this.parent.set_width(this.element.clientWidth), this.parent.set_height(this.element.clientHeight), null != this.canvas ? this.element != this.canvas && (this.canvas.width = Math.round(this.element.clientWidth * this.scale), this.canvas.height = Math.round(this.element.clientHeight * this.scale), this.canvas.style.width = this.element.clientWidth + "px", this.canvas.style.height = this.element.clientHeight + "px") : (this.div.style.width = this.element.clientWidth + "px", this.div.style.height = this.element.clientHeight + "px"));
                else {
                    var t, n;
                    t = 0 != this.setWidth ? this.element.clientWidth / this.setWidth : 1, n = 0 != this.setHeight ? this.element.clientHeight / this.setHeight : 1;
                    var l = this.element.clientWidth,
                        i = this.element.clientHeight,
                        s = 0,
                        a = 0;
                    t < n ? (i = Math.floor(this.setHeight * t), a = Math.floor((this.element.clientHeight - i) / 2)) : (l = Math.floor(this.setWidth * n), s = Math.floor((this.element.clientWidth - l) / 2)), null != this.canvas ? this.element != this.canvas && (this.canvas.style.width = l + "px", this.canvas.style.height = i + "px", this.canvas.style.marginLeft = s + "px", this.canvas.style.marginTop = a + "px") : (this.div.style.width = l + "px", this.div.style.height = i + "px", this.div.style.marginLeft = s + "px", this.div.style.marginTop = a + "px")
                }
        },
        handleTouchEvent: function(e) {
            e.preventDefault();
            var t = null;
            null != this.element && (t = null != this.canvas ? this.canvas.getBoundingClientRect() : null != this.div ? this.div.getBoundingClientRect() : this.element.getBoundingClientRect());
            var n = this.setWidth,
                l = this.setHeight;
            0 != n && 0 != l || (null != t ? (n = t.width, l = t.height) : (n = 1, l = 1));
            for (var i = 0, s = e.changedTouches; i < s.length;) {
                var a = s[i];
                ++i;
                var r = 0,
                    o = 0;
                switch (null != t ? (r = (a.clientX - t.left) * (n / t.width), o = (a.clientY - t.top) * (l / t.height)) : (r = a.clientX, o = a.clientY), e.type) {
                    case "touchstart":
                        var d = this.unusedTouchesPool.pop();
                        null == d ? d = new lime_ui_Touch(r / n, o / l, a.identifier, 0, 0, a.force, this.parent.id) : (d.x = r / n, d.y = o / l, d.id = a.identifier, d.dx = 0, d.dy = 0, d.pressure = a.force, d.device = this.parent.id), this.currentTouches.h[a.identifier] = d, lime_ui_Touch.onStart.dispatch(d), null == this.primaryTouch && (this.primaryTouch = d), d == this.primaryTouch && this.parent.onMouseDown.dispatch(r, o, 0);
                        break;
                    case "touchend":
                        var _ = this.currentTouches.h[a.identifier];
                        if (null != _) {
                            var h = _.x,
                                p = _.y;
                            _.x = r / n, _.y = o / l, _.dx = _.x - h, _.dy = _.y - p, _.pressure = a.force, lime_ui_Touch.onEnd.dispatch(_), this.currentTouches.remove(a.identifier), this.unusedTouchesPool.add(_), _ == this.primaryTouch && (this.parent.onMouseUp.dispatch(r, o, 0), this.primaryTouch = null)
                        }
                        break;
                    case "touchmove":
                        var c = this.currentTouches.h[a.identifier];
                        if (null != c) {
                            var Q = c.x,
                                U = c.y;
                            c.x = r / n, c.y = o / l, c.dx = c.x - Q, c.dy = c.y - U, c.pressure = a.force, lime_ui_Touch.onMove.dispatch(c), c == this.primaryTouch && this.parent.onMouseMove.dispatch(r, o)
                        }
                }
            }
        },
        resize: function(e, t) {},
        setClipboard: function(e) {
            if (window.document.queryCommandEnabled("copy")) {
                var t = this.enableTextEvents;
                this.setEnableTextEvents(!0), this.setEnableTextEvents(!1);
                var n = lime__$backend_html5_HTML5Window.textInput.value;
                lime__$backend_html5_HTML5Window.textInput.value = e, window.document.execCommand("copy"), lime__$backend_html5_HTML5Window.textInput.value = n, this.setEnableTextEvents(t)
            }
        },
        setEnableTextEvents: function(e) {
            return e ? (null == lime__$backend_html5_HTML5Window.textInput && (lime__$backend_html5_HTML5Window.textInput = window.document.createElement("input"), lime__$backend_html5_HTML5Window.textInput.type = "text", lime__$backend_html5_HTML5Window.textInput.style.position = "absolute", lime__$backend_html5_HTML5Window.textInput.style.opacity = "0", lime__$backend_html5_HTML5Window.textInput.style.color = "transparent", lime__$backend_html5_HTML5Window.textInput.value = lime__$backend_html5_HTML5Window.dummyCharacter, lime__$backend_html5_HTML5Window.textInput.autocapitalize = "off", lime__$backend_html5_HTML5Window.textInput.autocorrect = "off", lime__$backend_html5_HTML5Window.textInput.autocomplete = "off", lime__$backend_html5_HTML5Window.textInput.style.left = "0px", lime__$backend_html5_HTML5Window.textInput.style.top = "50%", new EReg("(iPad|iPhone|iPod).*OS 8_", "gi").match(window.navigator.userAgent) ? (lime__$backend_html5_HTML5Window.textInput.style.fontSize = "0px", lime__$backend_html5_HTML5Window.textInput.style.width = "0px", lime__$backend_html5_HTML5Window.textInput.style.height = "0px") : (lime__$backend_html5_HTML5Window.textInput.style.width = "1px", lime__$backend_html5_HTML5Window.textInput.style.height = "1px"), lime__$backend_html5_HTML5Window.textInput.style.pointerEvents = "none", lime__$backend_html5_HTML5Window.textInput.style.zIndex = "-10000000", window.document.body.appendChild(lime__$backend_html5_HTML5Window.textInput)), this.enableTextEvents || (lime__$backend_html5_HTML5Window.textInput.addEventListener("input", $bind(this, this.handleInputEvent), !0), lime__$backend_html5_HTML5Window.textInput.addEventListener("blur", $bind(this, this.handleFocusEvent), !0), lime__$backend_html5_HTML5Window.textInput.addEventListener("cut", $bind(this, this.handleCutOrCopyEvent), !0), lime__$backend_html5_HTML5Window.textInput.addEventListener("copy", $bind(this, this.handleCutOrCopyEvent), !0), lime__$backend_html5_HTML5Window.textInput.addEventListener("paste", $bind(this, this.handlePasteEvent), !0)), lime__$backend_html5_HTML5Window.textInput.focus(), lime__$backend_html5_HTML5Window.textInput.select()) : null != lime__$backend_html5_HTML5Window.textInput && (lime__$backend_html5_HTML5Window.textInput.removeEventListener("input", $bind(this, this.handleInputEvent), !0), lime__$backend_html5_HTML5Window.textInput.removeEventListener("blur", $bind(this, this.handleFocusEvent), !0), lime__$backend_html5_HTML5Window.textInput.removeEventListener("cut", $bind(this, this.handleCutOrCopyEvent), !0), lime__$backend_html5_HTML5Window.textInput.removeEventListener("copy", $bind(this, this.handleCutOrCopyEvent), !0), lime__$backend_html5_HTML5Window.textInput.removeEventListener("paste", $bind(this, this.handlePasteEvent), !0), lime__$backend_html5_HTML5Window.textInput.blur()), this.enableTextEvents = e
        },
        setFullscreen: function(e) {
            return !1
        },
        __class__: lime__$backend_html5_HTML5Window
    };
    var lime_app_IModule = function() {};
    $hxClasses["lime.app.IModule"] = lime_app_IModule, lime_app_IModule.__name__ = ["lime", "app", "IModule"], lime_app_IModule.prototype = {
        addRenderer: null,
        addWindow: null,
        registerModule: null,
        setPreloader: null,
        __class__: lime_app_IModule
    };
    var lime_app_Module = function() {
        this.onExit = new lime_app__$Event_$Int_$Void, this.__renderers = [], this.__windows = []
    };
    $hxClasses["lime.app.Module"] = lime_app_Module, lime_app_Module.__name__ = ["lime", "app", "Module"], lime_app_Module.__interfaces__ = [lime_app_IModule], lime_app_Module.prototype = {
        onExit: null,
        __application: null,
        __preloader: null,
        __renderers: null,
        __windows: null,
        addRenderer: function(e) {
            var t, n, l, i, s, a;
            e.onRender.add((t = $bind(this, this.render), n = e, function() {
                t(n)
            })), e.onContextLost.add((l = $bind(this, this.onRenderContextLost), i = e, function() {
                l(i)
            })), e.onContextRestored.add((s = $bind(this, this.onRenderContextRestored), a = e, function(e) {
                s(a, e)
            })), this.__renderers.push(e)
        },
        addWindow: function(e) {
            var t, n, l, i, s, a, r, o, d, _, h, p, c, Q, U, m, u, F, N, S, W, B, Z, D, V, f, R, T, J, g, b, E, v, k, M, y, x, w, G, H, C, Y, O, X, z, I;
            e.onActivate.add((t = $bind(this, this.onWindowActivate), n = e, function() {
                t(n)
            })), e.onClose.add((l = $bind(this, this.__onWindowClose), i = e, function() {
                l(i)
            }), !1, -1e4), e.onCreate.add((s = $bind(this, this.onWindowCreate), a = e, function() {
                s(a)
            })), e.onDeactivate.add((r = $bind(this, this.onWindowDeactivate), o = e, function() {
                r(o)
            })), e.onDropFile.add((d = $bind(this, this.onWindowDropFile), _ = e, function(e) {
                d(_, e)
            })), e.onEnter.add((h = $bind(this, this.onWindowEnter), p = e, function() {
                h(p)
            })), e.onFocusIn.add((c = $bind(this, this.onWindowFocusIn), Q = e, function() {
                c(Q)
            })), e.onFocusOut.add((U = $bind(this, this.onWindowFocusOut), m = e, function() {
                U(m)
            })), e.onFullscreen.add((u = $bind(this, this.onWindowFullscreen), F = e, function() {
                u(F)
            })), e.onKeyDown.add((N = $bind(this, this.onKeyDown), S = e, function(e, t) {
                N(S, e, t)
            })), e.onKeyUp.add((W = $bind(this, this.onKeyUp), B = e, function(e, t) {
                W(B, e, t)
            })), e.onLeave.add((Z = $bind(this, this.onWindowLeave), D = e, function() {
                Z(D)
            })), e.onMinimize.add((V = $bind(this, this.onWindowMinimize), f = e, function() {
                V(f)
            })), e.onMouseDown.add((R = $bind(this, this.onMouseDown), T = e, function(e, t, n) {
                R(T, e, t, n)
            })), e.onMouseMove.add((J = $bind(this, this.onMouseMove), g = e, function(e, t) {
                J(g, e, t)
            })), e.onMouseMoveRelative.add((b = $bind(this, this.onMouseMoveRelative), E = e, function(e, t) {
                b(E, e, t)
            })), e.onMouseUp.add((v = $bind(this, this.onMouseUp), k = e, function(e, t, n) {
                v(k, e, t, n)
            })), e.onMouseWheel.add((M = $bind(this, this.onMouseWheel), y = e, function(e, t) {
                M(y, e, t)
            })), e.onMove.add((x = $bind(this, this.onWindowMove), w = e, function(e, t) {
                x(w, e, t)
            })), e.onResize.add((G = $bind(this, this.onWindowResize), H = e, function(e, t) {
                G(H, e, t)
            })), e.onRestore.add((C = $bind(this, this.onWindowRestore), Y = e, function() {
                C(Y)
            })), e.onTextEdit.add((O = $bind(this, this.onTextEdit), X = e, function(e, t, n) {
                O(X, e, t, n)
            })), e.onTextInput.add((z = $bind(this, this.onTextInput), I = e, function(e) {
                z(I, e)
            })), e.id > -1 && this.onWindowCreate(e), this.__windows.push(e)
        },
        registerModule: function(e) {
            this.__application = e, e.onExit.add($bind(this, this.onModuleExit), !1, 0), e.onUpdate.add($bind(this, this.update));
            for (var t = lime_ui_Gamepad.devices.iterator(); t.hasNext();) {
                var n = t.next();
                this.__onGamepadConnect(n)
            }
            lime_ui_Gamepad.onConnect.add($bind(this, this.__onGamepadConnect));
            for (var l = lime_ui_Joystick.devices.iterator(); l.hasNext();) {
                var i = l.next();
                this.__onJoystickConnect(i)
            }
            lime_ui_Joystick.onConnect.add($bind(this, this.__onJoystickConnect)), lime_ui_Touch.onStart.add($bind(this, this.onTouchStart)), lime_ui_Touch.onMove.add($bind(this, this.onTouchMove)), lime_ui_Touch.onEnd.add($bind(this, this.onTouchEnd))
        },
        removeRenderer: function(e) {
            null != e && HxOverrides.indexOf(this.__renderers, e, 0) > -1 && HxOverrides.remove(this.__renderers, e)
        },
        setPreloader: function(e) {
            null != this.__preloader && (this.__preloader.onProgress.remove($bind(this, this.onPreloadProgress)), this.__preloader.onComplete.remove($bind(this, this.onPreloadComplete))), this.__preloader = e, null == e || e.complete ? this.onPreloadComplete() : (e.onProgress.add($bind(this, this.onPreloadProgress)), e.onComplete.add($bind(this, this.onPreloadComplete)))
        },
        onGamepadAxisMove: function(e, t, n) {},
        onGamepadButtonDown: function(e, t) {},
        onGamepadButtonUp: function(e, t) {},
        onGamepadConnect: function(e) {},
        onGamepadDisconnect: function(e) {},
        onJoystickAxisMove: function(e, t, n) {},
        onJoystickButtonDown: function(e, t) {},
        onJoystickButtonUp: function(e, t) {},
        onJoystickConnect: function(e) {},
        onJoystickDisconnect: function(e) {},
        onJoystickHatMove: function(e, t, n) {},
        onJoystickTrackballMove: function(e, t, n) {},
        onKeyDown: function(e, t, n) {},
        onKeyUp: function(e, t, n) {},
        onModuleExit: function(e) {},
        onMouseDown: function(e, t, n, l) {},
        onMouseMove: function(e, t, n) {},
        onMouseMoveRelative: function(e, t, n) {},
        onMouseUp: function(e, t, n, l) {},
        onMouseWheel: function(e, t, n) {},
        onPreloadComplete: function() {},
        onPreloadProgress: function(e, t) {},
        onRenderContextLost: function(e) {},
        onRenderContextRestored: function(e, t) {},
        onTextEdit: function(e, t, n, l) {},
        onTextInput: function(e, t) {},
        onTouchEnd: function(e) {},
        onTouchMove: function(e) {},
        onTouchStart: function(e) {},
        onWindowActivate: function(e) {},
        onWindowClose: function(e) {},
        onWindowCreate: function(e) {},
        onWindowDeactivate: function(e) {},
        onWindowDropFile: function(e, t) {},
        onWindowEnter: function(e) {},
        onWindowFocusIn: function(e) {},
        onWindowFocusOut: function(e) {},
        onWindowFullscreen: function(e) {},
        onWindowLeave: function(e) {},
        onWindowMove: function(e, t, n) {},
        onWindowMinimize: function(e) {},
        onWindowResize: function(e, t, n) {},
        onWindowRestore: function(e) {},
        render: function(e) {},
        update: function(e) {},
        __onGamepadConnect: function(e) {
            var t, n, l, i, s, a, r, o;
            this.onGamepadConnect(e), e.onAxisMove.add((t = $bind(this, this.onGamepadAxisMove), n = e, function(e, l) {
                t(n, e, l)
            })), e.onButtonDown.add((l = $bind(this, this.onGamepadButtonDown), i = e, function(e) {
                l(i, e)
            })), e.onButtonUp.add((s = $bind(this, this.onGamepadButtonUp), a = e, function(e) {
                s(a, e)
            })), e.onDisconnect.add((r = $bind(this, this.onGamepadDisconnect), o = e, function() {
                r(o)
            }))
        },
        __onJoystickConnect: function(e) {
            var t, n, l, i, s, a, r, o, d, _, h, p;
            this.onJoystickConnect(e), e.onAxisMove.add((t = $bind(this, this.onJoystickAxisMove), n = e, function(e, l) {
                t(n, e, l)
            })), e.onButtonDown.add((l = $bind(this, this.onJoystickButtonDown), i = e, function(e) {
                l(i, e)
            })), e.onButtonUp.add((s = $bind(this, this.onJoystickButtonUp), a = e, function(e) {
                s(a, e)
            })), e.onDisconnect.add((r = $bind(this, this.onJoystickDisconnect), o = e, function() {
                r(o)
            })), e.onHatMove.add((d = $bind(this, this.onJoystickHatMove), _ = e, function(e, t) {
                d(_, e, t)
            })), e.onTrackballMove.add((h = $bind(this, this.onJoystickTrackballMove), p = e, function(e, t) {
                h(p, e, t)
            }))
        },
        __onWindowClose: function(e) {
            this.onWindowClose(e), HxOverrides.remove(this.__windows, e)
        },
        __class__: lime_app_Module
    };
    var lime_app_Application = function() {
        this.onUpdate = new lime_app__$Event_$Int_$Void, lime_app_Module.call(this), null == lime_app_Application.current && (lime_app_Application.current = this), this.modules = [], this.windowByID = new haxe_ds_IntMap, this.backend = new lime__$backend_html5_HTML5Application(this), this.registerModule(this)
    };
    $hxClasses["lime.app.Application"] = lime_app_Application, lime_app_Application.__name__ = ["lime", "app", "Application"], lime_app_Application.__super__ = lime_app_Module, lime_app_Application.prototype = $extend(lime_app_Module.prototype, {
        config: null,
        modules: null,
        onUpdate: null,
        window: null,
        backend: null,
        windowByID: null,
        addModule: function(e) {
            if (e.registerModule(this), this.modules.push(e), this.__renderers.length > 0)
                for (var t = 0, n = this.__renderers; t < n.length;) {
                    var l = n[t];
                    ++t, e.addRenderer(l)
                }
            if (this.__windows.length > 0)
                for (var i = 0, s = this.__windows; i < s.length;) {
                    var a = s[i];
                    ++i, e.addWindow(a)
                }
            e.setPreloader(this.__preloader)
        },
        addRenderer: function(e) {
            lime_app_Module.prototype.addRenderer.call(this, e);
            for (var t = 0, n = this.modules; t < n.length;) {
                var l = n[t];
                ++t, l.addRenderer(e)
            }
        },
        createWindow: function(e) {
            lime_app_Module.prototype.addWindow.call(this, e);
            for (var t = 0, n = this.modules; t < n.length;) {
                var l = n[t];
                ++t, l.addWindow(e)
            }
            if (null == e.renderer) {
                var i = new lime_graphics_Renderer(e);
                this.addRenderer(i)
            }
            e.create(this), this.windowByID.h[e.id] = e, e.onCreate.dispatch()
        },
        exec: function() {
            return lime_app_Application.current = this, this.backend.exec()
        },
        onModuleExit: function(e) {
            this.backend.exit()
        },
        onWindowClose: function(e) {
            this.removeWindow(e)
        },
        removeWindow: function(e) {
            null != e && this.windowByID.h.hasOwnProperty(e.id) && (HxOverrides.remove(this.__windows, e), this.windowByID.remove(e.id), e.close(), null != e.renderer && this.removeRenderer(e.renderer), this.__windows[0] == e && (this.window = null), 0 == this.__windows.length && lime_system_System.exit(0))
        },
        setPreloader: function(e) {
            lime_app_Module.prototype.setPreloader.call(this, e);
            for (var t = 0, n = this.modules; t < n.length;) {
                var l = n[t];
                ++t, l.setPreloader(e)
            }
        },
        __class__: lime_app_Application
    });
    var lime_app_Future = function(e, t) {
        if (null == t && (t = !1), null != e)
            if (t) {
                var n = new lime_app_Promise;
                n.future = this, lime_app__$Future_FutureWork.queue({
                    promise: n,
                    work: e
                })
            } else try {
                this.value = e(), this.isComplete = !0
            } catch (e) {
                e instanceof js__$Boot_HaxeError && (e = e.val), this.error = e, this.isError = !0
            }
    };
    $hxClasses["lime.app.Future"] = lime_app_Future, lime_app_Future.__name__ = ["lime", "app", "Future"], lime_app_Future.withError = function(e) {
        var t = new lime_app_Future;
        return t.isError = !0, t.error = e, t
    }, lime_app_Future.withValue = function(e) {
        var t = new lime_app_Future;
        return t.isComplete = !0, t.value = e, t
    }, lime_app_Future.prototype = {
        error: null,
        isComplete: null,
        isError: null,
        value: null,
        __completeListeners: null,
        __errorListeners: null,
        __progressListeners: null,
        onComplete: function(e) {
            return null != e && (this.isComplete ? e(this.value) : this.isError || (null == this.__completeListeners && (this.__completeListeners = []), this.__completeListeners.push(e))), this
        },
        onError: function(e) {
            return null != e && (this.isError ? e(this.error) : this.isComplete || (null == this.__errorListeners && (this.__errorListeners = []), this.__errorListeners.push(e))), this
        },
        onProgress: function(e) {
            return null != e && (null == this.__progressListeners && (this.__progressListeners = []), this.__progressListeners.push(e)), this
        },
        then: function(e) {
            if (this.isComplete) return e(this.value);
            if (this.isError) {
                var t = new lime_app_Future;
                return t.onError(this.error), t
            }
            var n = new lime_app_Promise;
            return this.onError($bind(n, n.error)), this.onProgress($bind(n, n.progress)), this.onComplete(function(t) {
                var l = e(t);
                l.onError($bind(n, n.error)), l.onComplete($bind(n, n.complete))
            }), n.future
        },
        __class__: lime_app_Future
    };
    var lime_app__$Future_FutureWork = function() {};
    $hxClasses["lime.app._Future.FutureWork"] = lime_app__$Future_FutureWork, lime_app__$Future_FutureWork.__name__ = ["lime", "app", "_Future", "FutureWork"], lime_app__$Future_FutureWork.queue = function(e) {
        null == lime_app__$Future_FutureWork.threadPool && (lime_app__$Future_FutureWork.threadPool = new lime_system_ThreadPool, lime_app__$Future_FutureWork.threadPool.doWork.add(lime_app__$Future_FutureWork.threadPool_doWork), lime_app__$Future_FutureWork.threadPool.onComplete.add(lime_app__$Future_FutureWork.threadPool_onComplete), lime_app__$Future_FutureWork.threadPool.onError.add(lime_app__$Future_FutureWork.threadPool_onError)), lime_app__$Future_FutureWork.threadPool.queue(e)
    }, lime_app__$Future_FutureWork.threadPool_doWork = function(e) {
        try {
            var t = e.work();
            lime_app__$Future_FutureWork.threadPool.sendComplete({
                promise: e.promise,
                result: t
            })
        } catch (t) {
            t instanceof js__$Boot_HaxeError && (t = t.val), lime_app__$Future_FutureWork.threadPool.sendError({
                promise: e.promise,
                error: t
            })
        }
    }, lime_app__$Future_FutureWork.threadPool_onComplete = function(e) {
        e.promise.complete(e.result)
    }, lime_app__$Future_FutureWork.threadPool_onError = function(e) {
        e.promise.error(e.error)
    };
    var lime_app_Preloader = function() {
        this.bytesTotalCache = new haxe_ds_StringMap, this.bytesLoadedCache2 = new haxe_ds_StringMap, this.bytesLoadedCache = new haxe_ds_ObjectMap, this.onProgress = new lime_app__$Event_$Int_$Int_$Void, this.onComplete = new lime_app__$Event_$Void_$Void, this.bytesLoaded = 0, this.bytesTotal = 0, this.libraries = [], this.libraryNames = [], this.onProgress.add($bind(this, this.update))
    };
    $hxClasses["lime.app.Preloader"] = lime_app_Preloader, lime_app_Preloader.__name__ = ["lime", "app", "Preloader"], lime_app_Preloader.prototype = {
        complete: null,
        onComplete: null,
        onProgress: null,
        bytesLoaded: null,
        bytesLoadedCache: null,
        bytesLoadedCache2: null,
        bytesTotal: null,
        bytesTotalCache: null,
        initLibraryNames: null,
        libraries: null,
        libraryNames: null,
        loadedLibraries: null,
        simulateProgress: null,
        addLibrary: function(e) {
            this.libraries.push(e)
        },
        create: function(e) {},
        load: function() {
            for (var e = this, t = 0, n = this.libraries; t < n.length;) {
                var l = n[t];
                ++t, this.bytesTotal += l.bytesTotal
            }
            this.loadedLibraries = -1;
            for (var i = 0, s = this.libraries; i < s.length;) {
                var a = [s[i]];
                ++i, a[0].load().onProgress(function(t) {
                    return function(n, l) {
                        null == e.bytesLoadedCache.h.__keys__[t[0].__id__] ? e.bytesLoaded += n : e.bytesLoaded += n - e.bytesLoadedCache.h[t[0].__id__], e.bytesLoadedCache.set(t[0], n), e.simulateProgress || e.onProgress.dispatch(e.bytesLoaded, e.bytesTotal)
                    }
                }(a)).onComplete(function(t) {
                    return function(n) {
                        null == e.bytesLoadedCache.h.__keys__[t[0].__id__] ? e.bytesLoaded += t[0].bytesTotal : e.bytesLoaded += t[0].bytesTotal - e.bytesLoadedCache.h[t[0].__id__], e.loadedLibraries++, e.updateProgress()
                    }
                }(a)).onError(function(e) {
                    console.log(e)
                })
            }
            for (var r = 0, o = this.libraryNames; r < o.length;) {
                o[r];
                ++r, this.bytesTotal += 200
            }
            this.loadedLibraries++, this.updateProgress()
        },
        start: function() {
            this.complete || (this.complete = !0, this.onComplete.dispatch())
        },
        update: function(e, t) {},
        updateProgress: function() {
            var e = this;
            if (this.simulateProgress || this.onProgress.dispatch(this.bytesLoaded, this.bytesTotal), this.loadedLibraries == this.libraries.length && !this.initLibraryNames) {
                this.initLibraryNames = !0;
                for (var t = 0, n = this.libraryNames; t < n.length;) {
                    var l = [n[t]];
                    ++t, lime_utils_Assets.loadLibrary(l[0]).onProgress(function(t) {
                        return function(n, l) {
                            l > 0 && (e.bytesTotalCache.exists(t[0]) || (e.bytesTotalCache.set(t[0], l), e.bytesTotal += l - 200), n > l && (n = l), e.bytesLoadedCache2.exists(t[0]) ? e.bytesLoaded += n - e.bytesLoadedCache2.get(t[0]) : e.bytesLoaded += n, e.bytesLoadedCache2.set(t[0], n), e.simulateProgress || e.onProgress.dispatch(e.bytesLoaded, e.bytesTotal))
                        }
                    }(l)).onComplete(function(t) {
                        return function(n) {
                            var l = 200;
                            e.bytesTotalCache.exists(t[0]) && (l = e.bytesTotalCache.get(t[0])), e.bytesLoadedCache2.exists(t[0]) ? e.bytesLoaded += l - e.bytesLoadedCache2.get(t[0]) : e.bytesLoaded += l, e.loadedLibraries++, e.updateProgress()
                        }
                    }(l)).onError(function(e) {
                        console.log(e)
                    })
                }
            }
            this.simulateProgress || this.loadedLibraries != this.libraries.length + this.libraryNames.length || this.start()
        },
        __class__: lime_app_Preloader
    };
    var lime_app_Promise = function() {
        this.future = new lime_app_Future
    };
    $hxClasses["lime.app.Promise"] = lime_app_Promise, lime_app_Promise.__name__ = ["lime", "app", "Promise"], lime_app_Promise.prototype = {
        future: null,
        complete: function(e) {
            if (!this.future.isError && (this.future.isComplete = !0, this.future.value = e, null != this.future.__completeListeners)) {
                for (var t = 0, n = this.future.__completeListeners; t < n.length;) {
                    var l = n[t];
                    ++t, l(e)
                }
                this.future.__completeListeners = null
            }
            return this
        },
        completeWith: function(e) {
            return e.onComplete($bind(this, this.complete)), e.onError($bind(this, this.error)), e.onProgress($bind(this, this.progress)), this
        },
        error: function(e) {
            if (!this.future.isComplete && (this.future.isError = !0, this.future.error = e, null != this.future.__errorListeners)) {
                for (var t = 0, n = this.future.__errorListeners; t < n.length;) {
                    var l = n[t];
                    ++t, l(e)
                }
                this.future.__errorListeners = null
            }
            return this
        },
        progress: function(e, t) {
            if (!this.future.isError && !this.future.isComplete && null != this.future.__progressListeners)
                for (var n = 0, l = this.future.__progressListeners; n < l.length;) {
                    var i = l[n];
                    ++n, i(e, t)
                }
            return this
        },
        __class__: lime_app_Promise
    };
    var lime_app__$Event_$Dynamic_$Void = function() {
        this.canceled = !1, this.__listeners = [], this.__priorities = [], this.__repeat = []
    };
    $hxClasses["lime.app._Event_Dynamic_Void"] = lime_app__$Event_$Dynamic_$Void, lime_app__$Event_$Dynamic_$Void.__name__ = ["lime", "app", "_Event_Dynamic_Void"], lime_app__$Event_$Dynamic_$Void.prototype = {
        canceled: null,
        __repeat: null,
        __priorities: null,
        add: function(e, t, n) {
            null == n && (n = 0), null == t && (t = !1);
            for (var l = 0, i = this.__priorities.length; l < i;) {
                var s = l++;
                if (n > this.__priorities[s]) return this.__listeners.splice(s, 0, e), this.__priorities.splice(s, 0, n), void this.__repeat.splice(s, 0, !t)
            }
            this.__listeners.push(e), this.__priorities.push(n), this.__repeat.push(!t)
        },
        remove: function(e) {
            for (var t = this.__listeners.length; --t >= 0;) Reflect.compareMethods(this.__listeners[t], e) && (this.__listeners.splice(t, 1), this.__priorities.splice(t, 1), this.__repeat.splice(t, 1))
        },
        __listeners: null,
        dispatch: function(e) {
            this.canceled = !1;
            for (var t = this.__listeners, n = this.__repeat, l = 0; l < t.length && (t[l](e), n[l] ? l++ : this.remove(t[l]), !this.canceled););
        },
        __class__: lime_app__$Event_$Dynamic_$Void
    };
    var lime_app__$Event_$Float_$Float_$Int_$Void = function() {
        this.canceled = !1, this.__listeners = [], this.__priorities = [], this.__repeat = []
    };
    $hxClasses["lime.app._Event_Float_Float_Int_Void"] = lime_app__$Event_$Float_$Float_$Int_$Void, lime_app__$Event_$Float_$Float_$Int_$Void.__name__ = ["lime", "app", "_Event_Float_Float_Int_Void"], lime_app__$Event_$Float_$Float_$Int_$Void.prototype = {
        canceled: null,
        __repeat: null,
        __priorities: null,
        add: function(e, t, n) {
            null == n && (n = 0), null == t && (t = !1);
            for (var l = 0, i = this.__priorities.length; l < i;) {
                var s = l++;
                if (n > this.__priorities[s]) return this.__listeners.splice(s, 0, e), this.__priorities.splice(s, 0, n), void this.__repeat.splice(s, 0, !t)
            }
            this.__listeners.push(e), this.__priorities.push(n), this.__repeat.push(!t)
        },
        cancel: function() {
            this.canceled = !0
        },
        remove: function(e) {
            for (var t = this.__listeners.length; --t >= 0;) Reflect.compareMethods(this.__listeners[t], e) && (this.__listeners.splice(t, 1), this.__priorities.splice(t, 1), this.__repeat.splice(t, 1))
        },
        __listeners: null,
        dispatch: function(e, t, n) {
            this.canceled = !1;
            for (var l = this.__listeners, i = this.__repeat, s = 0; s < l.length && (l[s](e, t, n), i[s] ? s++ : this.remove(l[s]), !this.canceled););
        },
        __class__: lime_app__$Event_$Float_$Float_$Int_$Void
    };
    var lime_app__$Event_$Float_$Float_$Void = function() {
        this.canceled = !1, this.__listeners = [], this.__priorities = [], this.__repeat = []
    };
    $hxClasses["lime.app._Event_Float_Float_Void"] = lime_app__$Event_$Float_$Float_$Void, lime_app__$Event_$Float_$Float_$Void.__name__ = ["lime", "app", "_Event_Float_Float_Void"], lime_app__$Event_$Float_$Float_$Void.prototype = {
        canceled: null,
        __repeat: null,
        __priorities: null,
        add: function(e, t, n) {
            null == n && (n = 0), null == t && (t = !1);
            for (var l = 0, i = this.__priorities.length; l < i;) {
                var s = l++;
                if (n > this.__priorities[s]) return this.__listeners.splice(s, 0, e), this.__priorities.splice(s, 0, n), void this.__repeat.splice(s, 0, !t)
            }
            this.__listeners.push(e), this.__priorities.push(n), this.__repeat.push(!t)
        },
        remove: function(e) {
            for (var t = this.__listeners.length; --t >= 0;) Reflect.compareMethods(this.__listeners[t], e) && (this.__listeners.splice(t, 1), this.__priorities.splice(t, 1), this.__repeat.splice(t, 1))
        },
        __listeners: null,
        dispatch: function(e, t) {
            this.canceled = !1;
            for (var n = this.__listeners, l = this.__repeat, i = 0; i < n.length && (n[i](e, t), l[i] ? i++ : this.remove(n[i]), !this.canceled););
        },
        __class__: lime_app__$Event_$Float_$Float_$Void
    };
    var lime_app__$Event_$Int_$Float_$Void = function() {
        this.canceled = !1, this.__listeners = [], this.__priorities = [], this.__repeat = []
    };
    $hxClasses["lime.app._Event_Int_Float_Void"] = lime_app__$Event_$Int_$Float_$Void, lime_app__$Event_$Int_$Float_$Void.__name__ = ["lime", "app", "_Event_Int_Float_Void"], lime_app__$Event_$Int_$Float_$Void.prototype = {
        canceled: null,
        __repeat: null,
        __priorities: null,
        add: function(e, t, n) {
            null == n && (n = 0), null == t && (t = !1);
            for (var l = 0, i = this.__priorities.length; l < i;) {
                var s = l++;
                if (n > this.__priorities[s]) return this.__listeners.splice(s, 0, e), this.__priorities.splice(s, 0, n), void this.__repeat.splice(s, 0, !t)
            }
            this.__listeners.push(e), this.__priorities.push(n), this.__repeat.push(!t)
        },
        remove: function(e) {
            for (var t = this.__listeners.length; --t >= 0;) Reflect.compareMethods(this.__listeners[t], e) && (this.__listeners.splice(t, 1), this.__priorities.splice(t, 1), this.__repeat.splice(t, 1))
        },
        __listeners: null,
        dispatch: function(e, t) {
            this.canceled = !1;
            for (var n = this.__listeners, l = this.__repeat, i = 0; i < n.length && (n[i](e, t), l[i] ? i++ : this.remove(n[i]), !this.canceled););
        },
        __class__: lime_app__$Event_$Int_$Float_$Void
    };
    var lime_app__$Event_$Int_$Int_$Void = function() {
        this.canceled = !1, this.__listeners = [], this.__priorities = [], this.__repeat = []
    };
    $hxClasses["lime.app._Event_Int_Int_Void"] = lime_app__$Event_$Int_$Int_$Void, lime_app__$Event_$Int_$Int_$Void.__name__ = ["lime", "app", "_Event_Int_Int_Void"], lime_app__$Event_$Int_$Int_$Void.prototype = {
        canceled: null,
        __repeat: null,
        __priorities: null,
        add: function(e, t, n) {
            null == n && (n = 0), null == t && (t = !1);
            for (var l = 0, i = this.__priorities.length; l < i;) {
                var s = l++;
                if (n > this.__priorities[s]) return this.__listeners.splice(s, 0, e), this.__priorities.splice(s, 0, n), void this.__repeat.splice(s, 0, !t)
            }
            this.__listeners.push(e), this.__priorities.push(n), this.__repeat.push(!t)
        },
        remove: function(e) {
            for (var t = this.__listeners.length; --t >= 0;) Reflect.compareMethods(this.__listeners[t], e) && (this.__listeners.splice(t, 1), this.__priorities.splice(t, 1), this.__repeat.splice(t, 1))
        },
        __listeners: null,
        dispatch: function(e, t) {
            this.canceled = !1;
            for (var n = this.__listeners, l = this.__repeat, i = 0; i < n.length && (n[i](e, t), l[i] ? i++ : this.remove(n[i]), !this.canceled););
        },
        __class__: lime_app__$Event_$Int_$Int_$Void
    };
    var lime_app__$Event_$Int_$Void = function() {
        this.canceled = !1, this.__listeners = [], this.__priorities = [], this.__repeat = []
    };
    $hxClasses["lime.app._Event_Int_Void"] = lime_app__$Event_$Int_$Void, lime_app__$Event_$Int_$Void.__name__ = ["lime", "app", "_Event_Int_Void"], lime_app__$Event_$Int_$Void.prototype = {
        canceled: null,
        __repeat: null,
        __priorities: null,
        add: function(e, t, n) {
            null == n && (n = 0), null == t && (t = !1);
            for (var l = 0, i = this.__priorities.length; l < i;) {
                var s = l++;
                if (n > this.__priorities[s]) return this.__listeners.splice(s, 0, e), this.__priorities.splice(s, 0, n), void this.__repeat.splice(s, 0, !t)
            }
            this.__listeners.push(e), this.__priorities.push(n), this.__repeat.push(!t)
        },
        remove: function(e) {
            for (var t = this.__listeners.length; --t >= 0;) Reflect.compareMethods(this.__listeners[t], e) && (this.__listeners.splice(t, 1), this.__priorities.splice(t, 1), this.__repeat.splice(t, 1))
        },
        __listeners: null,
        dispatch: function(e) {
            this.canceled = !1;
            for (var t = this.__listeners, n = this.__repeat, l = 0; l < t.length && (t[l](e), n[l] ? l++ : this.remove(t[l]), !this.canceled););
        },
        __class__: lime_app__$Event_$Int_$Void
    };
    var lime_app__$Event_$Int_$lime_$ui_$JoystickHatPosition_$Void = function() {
        this.canceled = !1, this.__listeners = [], this.__priorities = [], this.__repeat = []
    };
    $hxClasses["lime.app._Event_Int_lime_ui_JoystickHatPosition_Void"] = lime_app__$Event_$Int_$lime_$ui_$JoystickHatPosition_$Void, lime_app__$Event_$Int_$lime_$ui_$JoystickHatPosition_$Void.__name__ = ["lime", "app", "_Event_Int_lime_ui_JoystickHatPosition_Void"], lime_app__$Event_$Int_$lime_$ui_$JoystickHatPosition_$Void.prototype = {
        canceled: null,
        __repeat: null,
        __priorities: null,
        add: function(e, t, n) {
            null == n && (n = 0), null == t && (t = !1);
            for (var l = 0, i = this.__priorities.length; l < i;) {
                var s = l++;
                if (n > this.__priorities[s]) return this.__listeners.splice(s, 0, e), this.__priorities.splice(s, 0, n), void this.__repeat.splice(s, 0, !t)
            }
            this.__listeners.push(e), this.__priorities.push(n), this.__repeat.push(!t)
        },
        __listeners: null,
        __class__: lime_app__$Event_$Int_$lime_$ui_$JoystickHatPosition_$Void
    };
    var lime_app__$Event_$String_$Int_$Int_$Void = function() {
        this.canceled = !1, this.__listeners = [], this.__priorities = [], this.__repeat = []
    };
    $hxClasses["lime.app._Event_String_Int_Int_Void"] = lime_app__$Event_$String_$Int_$Int_$Void, lime_app__$Event_$String_$Int_$Int_$Void.__name__ = ["lime", "app", "_Event_String_Int_Int_Void"], lime_app__$Event_$String_$Int_$Int_$Void.prototype = {
        canceled: null,
        __repeat: null,
        __priorities: null,
        add: function(e, t, n) {
            null == n && (n = 0), null == t && (t = !1);
            for (var l = 0, i = this.__priorities.length; l < i;) {
                var s = l++;
                if (n > this.__priorities[s]) return this.__listeners.splice(s, 0, e), this.__priorities.splice(s, 0, n), void this.__repeat.splice(s, 0, !t)
            }
            this.__listeners.push(e), this.__priorities.push(n), this.__repeat.push(!t)
        },
        __listeners: null,
        __class__: lime_app__$Event_$String_$Int_$Int_$Void
    };
    var lime_app__$Event_$String_$Void = function() {
        this.canceled = !1, this.__listeners = [], this.__priorities = [], this.__repeat = []
    };
    $hxClasses["lime.app._Event_String_Void"] = lime_app__$Event_$String_$Void, lime_app__$Event_$String_$Void.__name__ = ["lime", "app", "_Event_String_Void"], lime_app__$Event_$String_$Void.prototype = {
        canceled: null,
        __repeat: null,
        __priorities: null,
        add: function(e, t, n) {
            null == n && (n = 0), null == t && (t = !1);
            for (var l = 0, i = this.__priorities.length; l < i;) {
                var s = l++;
                if (n > this.__priorities[s]) return this.__listeners.splice(s, 0, e), this.__priorities.splice(s, 0, n), void this.__repeat.splice(s, 0, !t)
            }
            this.__listeners.push(e), this.__priorities.push(n), this.__repeat.push(!t)
        },
        has: function(e) {
            for (var t = 0, n = this.__listeners; t < n.length;) {
                var l = n[t];
                if (++t, Reflect.compareMethods(l, e)) return !0
            }
            return !1
        },
        remove: function(e) {
            for (var t = this.__listeners.length; --t >= 0;) Reflect.compareMethods(this.__listeners[t], e) && (this.__listeners.splice(t, 1), this.__priorities.splice(t, 1), this.__repeat.splice(t, 1))
        },
        __listeners: null,
        dispatch: function(e) {
            this.canceled = !1;
            for (var t = this.__listeners, n = this.__repeat, l = 0; l < t.length && (t[l](e), n[l] ? l++ : this.remove(t[l]), !this.canceled););
        },
        __class__: lime_app__$Event_$String_$Void
    };
    var lime_app__$Event_$Void_$Void = function() {
        this.canceled = !1, this.__listeners = [], this.__priorities = [], this.__repeat = []
    };
    $hxClasses["lime.app._Event_Void_Void"] = lime_app__$Event_$Void_$Void, lime_app__$Event_$Void_$Void.__name__ = ["lime", "app", "_Event_Void_Void"], lime_app__$Event_$Void_$Void.prototype = {
        canceled: null,
        __repeat: null,
        __priorities: null,
        add: function(e, t, n) {
            null == n && (n = 0), null == t && (t = !1);
            for (var l = 0, i = this.__priorities.length; l < i;) {
                var s = l++;
                if (n > this.__priorities[s]) return this.__listeners.splice(s, 0, e), this.__priorities.splice(s, 0, n), void this.__repeat.splice(s, 0, !t)
            }
            this.__listeners.push(e), this.__priorities.push(n), this.__repeat.push(!t)
        },
        remove: function(e) {
            for (var t = this.__listeners.length; --t >= 0;) Reflect.compareMethods(this.__listeners[t], e) && (this.__listeners.splice(t, 1), this.__priorities.splice(t, 1), this.__repeat.splice(t, 1))
        },
        __listeners: null,
        dispatch: function() {
            this.canceled = !1;
            for (var e = this.__listeners, t = this.__repeat, n = 0; n < e.length && (e[n](), t[n] ? n++ : this.remove(e[n]), !this.canceled););
        },
        __class__: lime_app__$Event_$Void_$Void
    };
    var lime_app__$Event_$lime_$graphics_$RenderContext_$Void = function() {
        this.canceled = !1, this.__listeners = [], this.__priorities = [], this.__repeat = []
    };
    $hxClasses["lime.app._Event_lime_graphics_RenderContext_Void"] = lime_app__$Event_$lime_$graphics_$RenderContext_$Void, lime_app__$Event_$lime_$graphics_$RenderContext_$Void.__name__ = ["lime", "app", "_Event_lime_graphics_RenderContext_Void"], lime_app__$Event_$lime_$graphics_$RenderContext_$Void.prototype = {
        canceled: null,
        __repeat: null,
        __priorities: null,
        add: function(e, t, n) {
            null == n && (n = 0), null == t && (t = !1);
            for (var l = 0, i = this.__priorities.length; l < i;) {
                var s = l++;
                if (n > this.__priorities[s]) return this.__listeners.splice(s, 0, e), this.__priorities.splice(s, 0, n), void this.__repeat.splice(s, 0, !t)
            }
            this.__listeners.push(e), this.__priorities.push(n), this.__repeat.push(!t)
        },
        remove: function(e) {
            for (var t = this.__listeners.length; --t >= 0;) Reflect.compareMethods(this.__listeners[t], e) && (this.__listeners.splice(t, 1), this.__priorities.splice(t, 1), this.__repeat.splice(t, 1))
        },
        __listeners: null,
        dispatch: function(e) {
            this.canceled = !1;
            for (var t = this.__listeners, n = this.__repeat, l = 0; l < t.length && (t[l](e), n[l] ? l++ : this.remove(t[l]), !this.canceled););
        },
        __class__: lime_app__$Event_$lime_$graphics_$RenderContext_$Void
    };
    var lime_app__$Event_$lime_$ui_$GamepadAxis_$Float_$Void = function() {
        this.canceled = !1, this.__listeners = [], this.__priorities = [], this.__repeat = []
    };
    $hxClasses["lime.app._Event_lime_ui_GamepadAxis_Float_Void"] = lime_app__$Event_$lime_$ui_$GamepadAxis_$Float_$Void, lime_app__$Event_$lime_$ui_$GamepadAxis_$Float_$Void.__name__ = ["lime", "app", "_Event_lime_ui_GamepadAxis_Float_Void"], lime_app__$Event_$lime_$ui_$GamepadAxis_$Float_$Void.prototype = {
        canceled: null,
        __repeat: null,
        __priorities: null,
        add: function(e, t, n) {
            null == n && (n = 0), null == t && (t = !1);
            for (var l = 0, i = this.__priorities.length; l < i;) {
                var s = l++;
                if (n > this.__priorities[s]) return this.__listeners.splice(s, 0, e), this.__priorities.splice(s, 0, n), void this.__repeat.splice(s, 0, !t)
            }
            this.__listeners.push(e), this.__priorities.push(n), this.__repeat.push(!t)
        },
        remove: function(e) {
            for (var t = this.__listeners.length; --t >= 0;) Reflect.compareMethods(this.__listeners[t], e) && (this.__listeners.splice(t, 1), this.__priorities.splice(t, 1), this.__repeat.splice(t, 1))
        },
        __listeners: null,
        dispatch: function(e, t) {
            this.canceled = !1;
            for (var n = this.__listeners, l = this.__repeat, i = 0; i < n.length && (n[i](e, t), l[i] ? i++ : this.remove(n[i]), !this.canceled););
        },
        __class__: lime_app__$Event_$lime_$ui_$GamepadAxis_$Float_$Void
    };
    var lime_app__$Event_$lime_$ui_$GamepadButton_$Void = function() {
        this.canceled = !1, this.__listeners = [], this.__priorities = [], this.__repeat = []
    };
    $hxClasses["lime.app._Event_lime_ui_GamepadButton_Void"] = lime_app__$Event_$lime_$ui_$GamepadButton_$Void, lime_app__$Event_$lime_$ui_$GamepadButton_$Void.__name__ = ["lime", "app", "_Event_lime_ui_GamepadButton_Void"], lime_app__$Event_$lime_$ui_$GamepadButton_$Void.prototype = {
        canceled: null,
        __repeat: null,
        __priorities: null,
        add: function(e, t, n) {
            null == n && (n = 0), null == t && (t = !1);
            for (var l = 0, i = this.__priorities.length; l < i;) {
                var s = l++;
                if (n > this.__priorities[s]) return this.__listeners.splice(s, 0, e), this.__priorities.splice(s, 0, n), void this.__repeat.splice(s, 0, !t)
            }
            this.__listeners.push(e), this.__priorities.push(n), this.__repeat.push(!t)
        },
        remove: function(e) {
            for (var t = this.__listeners.length; --t >= 0;) Reflect.compareMethods(this.__listeners[t], e) && (this.__listeners.splice(t, 1), this.__priorities.splice(t, 1), this.__repeat.splice(t, 1))
        },
        __listeners: null,
        dispatch: function(e) {
            this.canceled = !1;
            for (var t = this.__listeners, n = this.__repeat, l = 0; l < t.length && (t[l](e), n[l] ? l++ : this.remove(t[l]), !this.canceled););
        },
        __class__: lime_app__$Event_$lime_$ui_$GamepadButton_$Void
    };
    var lime_app__$Event_$lime_$ui_$Gamepad_$Void = function() {
        this.canceled = !1, this.__listeners = [], this.__priorities = [], this.__repeat = []
    };
    $hxClasses["lime.app._Event_lime_ui_Gamepad_Void"] = lime_app__$Event_$lime_$ui_$Gamepad_$Void, lime_app__$Event_$lime_$ui_$Gamepad_$Void.__name__ = ["lime", "app", "_Event_lime_ui_Gamepad_Void"], lime_app__$Event_$lime_$ui_$Gamepad_$Void.prototype = {
        canceled: null,
        __repeat: null,
        __priorities: null,
        add: function(e, t, n) {
            null == n && (n = 0), null == t && (t = !1);
            for (var l = 0, i = this.__priorities.length; l < i;) {
                var s = l++;
                if (n > this.__priorities[s]) return this.__listeners.splice(s, 0, e), this.__priorities.splice(s, 0, n), void this.__repeat.splice(s, 0, !t)
            }
            this.__listeners.push(e), this.__priorities.push(n), this.__repeat.push(!t)
        },
        remove: function(e) {
            for (var t = this.__listeners.length; --t >= 0;) Reflect.compareMethods(this.__listeners[t], e) && (this.__listeners.splice(t, 1), this.__priorities.splice(t, 1), this.__repeat.splice(t, 1))
        },
        __listeners: null,
        dispatch: function(e) {
            this.canceled = !1;
            for (var t = this.__listeners, n = this.__repeat, l = 0; l < t.length && (t[l](e), n[l] ? l++ : this.remove(t[l]), !this.canceled););
        },
        __class__: lime_app__$Event_$lime_$ui_$Gamepad_$Void
    };
    var lime_app__$Event_$lime_$ui_$Joystick_$Void = function() {
        this.canceled = !1, this.__listeners = [], this.__priorities = [], this.__repeat = []
    };
    $hxClasses["lime.app._Event_lime_ui_Joystick_Void"] = lime_app__$Event_$lime_$ui_$Joystick_$Void, lime_app__$Event_$lime_$ui_$Joystick_$Void.__name__ = ["lime", "app", "_Event_lime_ui_Joystick_Void"], lime_app__$Event_$lime_$ui_$Joystick_$Void.prototype = {
        canceled: null,
        __repeat: null,
        __priorities: null,
        add: function(e, t, n) {
            null == n && (n = 0), null == t && (t = !1);
            for (var l = 0, i = this.__priorities.length; l < i;) {
                var s = l++;
                if (n > this.__priorities[s]) return this.__listeners.splice(s, 0, e), this.__priorities.splice(s, 0, n), void this.__repeat.splice(s, 0, !t)
            }
            this.__listeners.push(e), this.__priorities.push(n), this.__repeat.push(!t)
        },
        remove: function(e) {
            for (var t = this.__listeners.length; --t >= 0;) Reflect.compareMethods(this.__listeners[t], e) && (this.__listeners.splice(t, 1), this.__priorities.splice(t, 1), this.__repeat.splice(t, 1))
        },
        __listeners: null,
        dispatch: function(e) {
            this.canceled = !1;
            for (var t = this.__listeners, n = this.__repeat, l = 0; l < t.length && (t[l](e), n[l] ? l++ : this.remove(t[l]), !this.canceled););
        },
        __class__: lime_app__$Event_$lime_$ui_$Joystick_$Void
    };
    var lime_app__$Event_$lime_$ui_$KeyCode_$lime_$ui_$KeyModifier_$Void = function() {
        this.canceled = !1, this.__listeners = [], this.__priorities = [], this.__repeat = []
    };
    $hxClasses["lime.app._Event_lime_ui_KeyCode_lime_ui_KeyModifier_Void"] = lime_app__$Event_$lime_$ui_$KeyCode_$lime_$ui_$KeyModifier_$Void, lime_app__$Event_$lime_$ui_$KeyCode_$lime_$ui_$KeyModifier_$Void.__name__ = ["lime", "app", "_Event_lime_ui_KeyCode_lime_ui_KeyModifier_Void"], lime_app__$Event_$lime_$ui_$KeyCode_$lime_$ui_$KeyModifier_$Void.prototype = {
        canceled: null,
        __repeat: null,
        __priorities: null,
        add: function(e, t, n) {
            null == n && (n = 0), null == t && (t = !1);
            for (var l = 0, i = this.__priorities.length; l < i;) {
                var s = l++;
                if (n > this.__priorities[s]) return this.__listeners.splice(s, 0, e), this.__priorities.splice(s, 0, n), void this.__repeat.splice(s, 0, !t)
            }
            this.__listeners.push(e), this.__priorities.push(n), this.__repeat.push(!t)
        },
        cancel: function() {
            this.canceled = !0
        },
        remove: function(e) {
            for (var t = this.__listeners.length; --t >= 0;) Reflect.compareMethods(this.__listeners[t], e) && (this.__listeners.splice(t, 1), this.__priorities.splice(t, 1), this.__repeat.splice(t, 1))
        },
        __listeners: null,
        dispatch: function(e, t) {
            this.canceled = !1;
            for (var n = this.__listeners, l = this.__repeat, i = 0; i < n.length && (n[i](e, t), l[i] ? i++ : this.remove(n[i]), !this.canceled););
        },
        __class__: lime_app__$Event_$lime_$ui_$KeyCode_$lime_$ui_$KeyModifier_$Void
    };
    var lime_app__$Event_$lime_$ui_$Touch_$Void = function() {
        this.canceled = !1, this.__listeners = [], this.__priorities = [], this.__repeat = []
    };
    $hxClasses["lime.app._Event_lime_ui_Touch_Void"] = lime_app__$Event_$lime_$ui_$Touch_$Void, lime_app__$Event_$lime_$ui_$Touch_$Void.__name__ = ["lime", "app", "_Event_lime_ui_Touch_Void"], lime_app__$Event_$lime_$ui_$Touch_$Void.prototype = {
        canceled: null,
        __repeat: null,
        __priorities: null,
        add: function(e, t, n) {
            null == n && (n = 0), null == t && (t = !1);
            for (var l = 0, i = this.__priorities.length; l < i;) {
                var s = l++;
                if (n > this.__priorities[s]) return this.__listeners.splice(s, 0, e), this.__priorities.splice(s, 0, n), void this.__repeat.splice(s, 0, !t)
            }
            this.__listeners.push(e), this.__priorities.push(n), this.__repeat.push(!t)
        },
        remove: function(e) {
            for (var t = this.__listeners.length; --t >= 0;) Reflect.compareMethods(this.__listeners[t], e) && (this.__listeners.splice(t, 1), this.__priorities.splice(t, 1), this.__repeat.splice(t, 1))
        },
        __listeners: null,
        dispatch: function(e) {
            this.canceled = !1;
            for (var t = this.__listeners, n = this.__repeat, l = 0; l < t.length && (t[l](e), n[l] ? l++ : this.remove(t[l]), !this.canceled););
        },
        __class__: lime_app__$Event_$lime_$ui_$Touch_$Void
    };
    var lime_graphics_Image = function(e, t, n, l, i, s, a) {
        var r;
        if (null == i && (i = -1), null == l && (l = -1), null == n && (n = 0), null == t && (t = 0), this.offsetX = t, this.offsetY = n, this.width = l, this.height = i, this.version = 0, null == a)
            if (null != lime_app_Application.current && null != lime_app_Application.current.__renderers[0]) switch (lime_app_Application.current.__renderers[0].context[1]) {
                case 2:
                case 1:
                    this.type = lime_graphics_ImageType.CANVAS;
                    break;
                case 3:
                    this.type = lime_graphics_ImageType.FLASH;
                    break;
                default:
                    this.type = lime_graphics_ImageType.DATA
            } else this.type = lime_graphics_ImageType.DATA;
            else this.type = a;
        if (null == e) {
            if (l > 0 && i > 0) switch (this.type[1]) {
                case 0:
                    this.buffer = new lime_graphics_ImageBuffer(null, l, i), lime_graphics_utils_ImageCanvasUtil.createCanvas(this, l, i), null != s && this.fillRect(new lime_math_Rectangle(0, 0, l, i), s);
                    break;
                case 1:
                    this.buffer = new lime_graphics_ImageBuffer(null != (r = l * i * 4) ? new Uint8Array(r) : null, l, i), null != s && this.fillRect(new lime_math_Rectangle(0, 0, l, i), s)
            }
        } else this.__fromImageBuffer(e)
    };
    $hxClasses["lime.graphics.Image"] = lime_graphics_Image, lime_graphics_Image.__name__ = ["lime", "graphics", "Image"], lime_graphics_Image.fromBase64 = function(e, t, n) {
        if (null == e) return null;
        var l = new lime_graphics_Image;
        return l.__fromBase64(e, t, n), l
    }, lime_graphics_Image.fromBitmapData = function(e) {
        return null == e ? null : e.image
    }, lime_graphics_Image.fromCanvas = function(e) {
        if (null == e) return null;
        var t = new lime_graphics_ImageBuffer(null, e.width, e.height);
        t.set_src(e);
        var n = new lime_graphics_Image(t);
        return n.type = lime_graphics_ImageType.CANVAS, n
    }, lime_graphics_Image.fromFile = function(e, t, n) {
        if (null == e) return null;
        var l = new lime_graphics_Image;
        return l.__fromFile(e, t, n), l
    }, lime_graphics_Image.loadFromFile = function(e) {
        if (null == e) return lime_app_Future.withValue(null);
        var t = new lime_app_Promise,
            n = new Image;
        return n.crossOrigin = "Anonymous", n.addEventListener("load", function(e) {
            var l = new lime_graphics_ImageBuffer(null, n.width, n.height);
            l.__srcImage = n, t.complete(new lime_graphics_Image(l))
        }, !1), n.addEventListener("progress", function(e) {
            t.progress(e.loaded, e.total)
        }, !1), n.addEventListener("error", function(e) {
            t.error(e.detail)
        }, !1), n.src = e, t.future
    }, lime_graphics_Image.prototype = {
        buffer: null,
        dirty: null,
        height: null,
        offsetX: null,
        offsetY: null,
        type: null,
        version: null,
        width: null,
        clone: function() {
            if (null != this.buffer) {
                this.type == lime_graphics_ImageType.CANVAS ? lime_graphics_utils_ImageCanvasUtil.convertToCanvas(this) : lime_graphics_utils_ImageCanvasUtil.convertToData(this);
                var e = new lime_graphics_Image(this.buffer.clone(), this.offsetX, this.offsetY, this.width, this.height, null, this.type);
                return e.version = this.version, e
            }
            return new lime_graphics_Image(null, this.offsetX, this.offsetY, this.width, this.height, null, this.type)
        },
        colorTransform: function(e, t) {
            if (e = this.__clipRect(e), null != this.buffer && null != e) switch (this.type[1]) {
                case 0:
                    lime_graphics_utils_ImageCanvasUtil.colorTransform(this, e, t);
                    break;
                case 1:
                    lime_graphics_utils_ImageCanvasUtil.convertToData(this), lime_graphics_utils_ImageDataUtil.colorTransform(this, e, t);
                    break;
                case 2:
                    e.offset(this.offsetX, this.offsetY), this.buffer.__srcBitmapData.colorTransform(e.__toFlashRectangle(), lime_math__$ColorMatrix_ColorMatrix_$Impl_$.__toFlashColorTransform(t))
            }
        },
        copyChannel: function(e, t, n, l, i) {
            if ((t = this.__clipRect(t), null != this.buffer && null != t) && ((i != lime_graphics_ImageChannel.ALPHA || this.get_transparent()) && !(t.width <= 0 || t.height <= 0))) switch (t.x + t.width > e.width && (t.width = e.width - t.x), t.y + t.height > e.height && (t.height = e.height - t.y), this.type[1]) {
                case 0:
                    lime_graphics_utils_ImageCanvasUtil.copyChannel(this, e, t, n, l, i);
                    break;
                case 1:
                    lime_graphics_utils_ImageCanvasUtil.convertToData(this), lime_graphics_utils_ImageCanvasUtil.convertToData(e), lime_graphics_utils_ImageDataUtil.copyChannel(this, e, t, n, l, i);
                    break;
                case 2:
                    var s, a;
                    switch (l[1]) {
                        case 0:
                            s = 1;
                            break;
                        case 1:
                            s = 2;
                            break;
                        case 2:
                            s = 4;
                            break;
                        case 3:
                            s = 8
                    }
                    switch (i[1]) {
                        case 0:
                            a = 1;
                            break;
                        case 1:
                            a = 2;
                            break;
                        case 2:
                            a = 4;
                            break;
                        case 3:
                            a = 8
                    }
                    t.offset(e.offsetX, e.offsetY), n.offset(this.offsetX, this.offsetY), this.buffer.__srcBitmapData.copyChannel(e.buffer.get_src(), t.__toFlashRectangle(), n.__toFlashPoint(), s, a)
            }
        },
        copyPixels: function(e, t, n, l, i, s) {
            if ((null == s && (s = !1), null != this.buffer && null != e) && !(t.width <= 0 || t.height <= 0 || this.width <= 0 || this.height <= 0)) switch (t.x + t.width > e.width && (t.width = e.width - t.x), t.y + t.height > e.height && (t.height = e.height - t.y), t.x < 0 && (t.width += t.x, t.x = 0), t.y < 0 && (t.height += t.y, t.y = 0), n.x + t.width > this.width && (t.width = this.width - n.x), n.y + t.height > this.height && (t.height = this.height - n.y), n.x < 0 && (t.width += n.x, t.x -= n.x, n.x = 0), n.y < 0 && (t.height += n.y, t.y -= n.y, n.y = 0), e == this && (e = this.clone()), this.type[1]) {
                case 0:
                    lime_graphics_utils_ImageCanvasUtil.convertToCanvas(this), lime_graphics_utils_ImageCanvasUtil.copyPixels(this, e, t, n, l, i, s);
                    break;
                case 1:
                    lime_graphics_utils_ImageCanvasUtil.convertToData(this), lime_graphics_utils_ImageCanvasUtil.convertToData(e), lime_graphics_utils_ImageDataUtil.copyPixels(this, e, t, n, l, i, s);
                    break;
                case 2:
                    t.offset(e.offsetX, e.offsetY), n.offset(this.offsetX, this.offsetY), null != l && null != i && i.offset(l.offsetX, l.offsetY), this.buffer.__srcBitmapData.copyPixels(e.buffer.__srcBitmapData, t.__toFlashRectangle(), n.__toFlashPoint(), null != l ? l.buffer.get_src() : null, null != i ? i.__toFlashPoint() : null, s)
            }
        },
        fillRect: function(e, t, n) {
            if (e = this.__clipRect(e), null != this.buffer && null != e) switch (this.type[1]) {
                case 0:
                    lime_graphics_utils_ImageCanvasUtil.fillRect(this, e, t, n);
                    break;
                case 1:
                    if (lime_graphics_utils_ImageCanvasUtil.convertToData(this), 0 == this.buffer.data.length) return;
                    lime_graphics_utils_ImageDataUtil.fillRect(this, e, t, n);
                    break;
                case 2:
                    var l;
                    if (e.offset(this.offsetX, this.offsetY), null != n) switch (n) {
                        case 1:
                            l = t;
                            break;
                        case 2:
                            l = (255 & t) << 24 | (255 & t >> 8) << 16 | (255 & t >> 16) << 8 | 255 & t >> 24;
                            break;
                        default:
                            l = (255 & t) << 24 | (255 & t >> 24) << 16 | (255 & t >> 16) << 8 | 255 & t >> 8
                    } else {
                        l = (255 & t) << 24 | (255 & t >> 24) << 16 | (255 & t >> 16) << 8 | 255 & t >> 8
                    }
                    this.buffer.__srcBitmapData.fillRect(e.__toFlashRectangle(), l)
            }
        },
        getPixel32: function(e, t, n) {
            if (null == this.buffer || e < 0 || t < 0 || e >= this.width || t >= this.height) return 0;
            switch (this.type[1]) {
                case 0:
                    return lime_graphics_utils_ImageCanvasUtil.getPixel32(this, e, t, n);
                case 1:
                    return lime_graphics_utils_ImageCanvasUtil.convertToData(this), lime_graphics_utils_ImageDataUtil.getPixel32(this, e, t, n);
                case 2:
                    var l = this.buffer.__srcBitmapData.getPixel32(e + this.offsetX, t + this.offsetY);
                    if (null == n) {
                        return (255 & l >> 16) << 24 | (255 & l >> 8) << 16 | (255 & l) << 8 | 255 & l >> 24
                    }
                    switch (n) {
                        case 1:
                            return l;
                        case 2:
                            return (255 & l) << 24 | (255 & l >> 8) << 16 | (255 & l >> 16) << 8 | 255 & l >> 24;
                        default:
                            return (255 & l >> 16) << 24 | (255 & l >> 8) << 16 | (255 & l) << 8 | 255 & l >> 24
                    }
                    break;
                default:
                    return 0
            }
        },
        setPixel32: function(e, t, n, l) {
            if (!(null == this.buffer || e < 0 || t < 0 || e >= this.width || t >= this.height)) switch (this.type[1]) {
                case 0:
                    lime_graphics_utils_ImageCanvasUtil.setPixel32(this, e, t, n, l);
                    break;
                case 1:
                    lime_graphics_utils_ImageCanvasUtil.convertToData(this), lime_graphics_utils_ImageDataUtil.setPixel32(this, e, t, n, l);
                    break;
                case 2:
                    var i;
                    if (null != l) switch (l) {
                        case 1:
                            i = n;
                            break;
                        case 2:
                            i = (255 & n) << 24 | (255 & n >> 8) << 16 | (255 & n >> 16) << 8 | 255 & n >> 24;
                            break;
                        default:
                            i = (255 & n) << 24 | (255 & n >> 24) << 16 | (255 & n >> 16) << 8 | 255 & n >> 8
                    } else {
                        i = (255 & n) << 24 | (255 & n >> 24) << 16 | (255 & n >> 16) << 8 | 255 & n >> 8
                    }
                    this.buffer.__srcBitmapData.setPixel32(e + this.offsetX, t + this.offsetY, i)
            }
        },
        __clipRect: function(e) {
            return null == e ? null : e.x < 0 && (e.width -= -e.x, e.x = 0, e.x + e.width <= 0) ? null : e.y < 0 && (e.height -= -e.y, e.y = 0, e.y + e.height <= 0) ? null : e.x + e.width >= this.width && (e.width -= e.x + e.width - this.width, e.width <= 0) ? null : e.y + e.height >= this.height && (e.height -= e.y + e.height - this.height, e.height <= 0) ? null : e
        },
        __fromBase64: function(e, t, n) {
            var l = this,
                i = new Image;
            i.addEventListener("load", function(e) {
                l.buffer = new lime_graphics_ImageBuffer(null, i.width, i.height), l.buffer.__srcImage = i, l.offsetX = 0, l.offsetY = 0, l.width = l.buffer.width, l.height = l.buffer.height, null != n && n(l)
            }, !1), i.src = "data:" + t + ";base64," + e
        },
        __fromFile: function(e, t, n) {
            var l = this,
                i = new Image;
            i.crossOrigin = "Anonymous", i.onload = function(e) {
                l.buffer = new lime_graphics_ImageBuffer(null, i.width, i.height), l.buffer.__srcImage = i, l.width = i.width, l.height = i.height, null != t && t(l)
            }, i.onerror = function(e) {
                null != n && n()
            }, i.src = e, i.complete
        },
        __fromImageBuffer: function(e) {
            this.buffer = e, null != e && (-1 == this.width && (this.width = e.width), -1 == this.height && (this.height = e.height))
        },
        get_data: function() {
            return null == this.buffer.data && this.buffer.width > 0 && this.buffer.height > 0 && lime_graphics_utils_ImageCanvasUtil.convertToData(this), this.buffer.data
        },
        get_format: function() {
            return this.buffer.format
        },
        set_format: function(e) {
            if (this.buffer.format != e) switch (this.type[1]) {
                case 1:
                    lime_graphics_utils_ImageDataUtil.setFormat(this, e)
            }
            return this.buffer.format = e
        },
        get_premultiplied: function() {
            return this.buffer.premultiplied
        },
        set_premultiplied: function(e) {
            if (e && !this.buffer.premultiplied) switch (this.type[1]) {
                case 0:
                case 1:
                    lime_graphics_utils_ImageCanvasUtil.convertToData(this), lime_graphics_utils_ImageDataUtil.multiplyAlpha(this)
            } else if (!e && this.buffer.premultiplied) {
                switch (this.type[1]) {
                    case 1:
                        lime_graphics_utils_ImageCanvasUtil.convertToData(this), lime_graphics_utils_ImageDataUtil.unmultiplyAlpha(this)
                }
            }
            return e
        },
        get_rect: function() {
            return new lime_math_Rectangle(0, 0, this.width, this.height)
        },
        get_src: function() {
            return null == this.buffer.__srcCanvas && lime_graphics_utils_ImageCanvasUtil.convertToCanvas(this), this.buffer.get_src()
        },
        get_transparent: function() {
            return null != this.buffer && this.buffer.transparent
        },
        set_transparent: function(e) {
            return null != this.buffer && (this.buffer.transparent = e)
        },
        __class__: lime_graphics_Image,
        __properties__: {
            get_rect: "get_rect",
            set_transparent: "set_transparent",
            get_transparent: "get_transparent",
            get_src: "get_src",
            set_premultiplied: "set_premultiplied",
            get_premultiplied: "get_premultiplied",
            set_format: "set_format",
            get_format: "get_format",
            get_data: "get_data"
        }
    };
    var lime_graphics_ImageBuffer = function(e, t, n, l, i) {
        null == l && (l = 32), null == n && (n = 0), null == t && (t = 0), this.data = e, this.width = t, this.height = n, this.bitsPerPixel = l, this.format = null == i ? 0 : i, this.premultiplied = !1, this.transparent = !0
    };
    $hxClasses["lime.graphics.ImageBuffer"] = lime_graphics_ImageBuffer, lime_graphics_ImageBuffer.__name__ = ["lime", "graphics", "ImageBuffer"], lime_graphics_ImageBuffer.prototype = {
        bitsPerPixel: null,
        data: null,
        format: null,
        height: null,
        premultiplied: null,
        transparent: null,
        width: null,
        __srcBitmapData: null,
        __srcCanvas: null,
        __srcContext: null,
        __srcImage: null,
        __srcImageData: null,
        clone: function() {
            var e = new lime_graphics_ImageBuffer(this.data, this.width, this.height, this.bitsPerPixel);
            if (null != this.data) {
                var t, n, l = this.data.byteLength;
                t = null != l ? new Uint8Array(l) : null, e.data = t;
                var i = this.data;
                n = null != i ? new Uint8Array(i) : null, e.data.set(n)
            } else if (null != this.__srcImageData) {
                e.__srcCanvas = window.document.createElement("canvas"), e.__srcContext = e.__srcCanvas.getContext("2d"), e.__srcCanvas.width = this.__srcImageData.width, e.__srcCanvas.height = this.__srcImageData.height, e.__srcImageData = e.__srcContext.createImageData(this.__srcImageData.width, this.__srcImageData.height);
                var s = new Uint8ClampedArray(this.__srcImageData.data);
                e.__srcImageData.data.set(s)
            } else null != this.__srcCanvas ? (e.__srcCanvas = window.document.createElement("canvas"), e.__srcContext = e.__srcCanvas.getContext("2d"), e.__srcCanvas.width = this.__srcCanvas.width, e.__srcCanvas.height = this.__srcCanvas.height, e.__srcContext.drawImage(this.__srcCanvas, 0, 0)) : e.__srcImage = this.__srcImage;
            return e.bitsPerPixel = this.bitsPerPixel, e.format = this.format, e.premultiplied = this.premultiplied, e.transparent = this.transparent, e
        },
        get_src: function() {
            return null != this.__srcImage ? this.__srcImage : this.__srcCanvas
        },
        set_src: function(e) {
            return js_Boot.__instanceof(e, Image) ? this.__srcImage = e : js_Boot.__instanceof(e, HTMLCanvasElement) && (this.__srcCanvas = e, this.__srcContext = this.__srcCanvas.getContext("2d")), e
        },
        get_stride: function() {
            return 4 * this.width
        },
        __class__: lime_graphics_ImageBuffer,
        __properties__: {
            get_stride: "get_stride",
            set_src: "set_src",
            get_src: "get_src"
        }
    };
    var lime_graphics_ImageChannel = $hxClasses["lime.graphics.ImageChannel"] = {
        __ename__: ["lime", "graphics", "ImageChannel"],
        __constructs__: ["RED", "GREEN", "BLUE", "ALPHA"]
    };
    lime_graphics_ImageChannel.RED = ["RED", 0], lime_graphics_ImageChannel.RED.toString = $estr, lime_graphics_ImageChannel.RED.__enum__ = lime_graphics_ImageChannel, lime_graphics_ImageChannel.GREEN = ["GREEN", 1], lime_graphics_ImageChannel.GREEN.toString = $estr, lime_graphics_ImageChannel.GREEN.__enum__ = lime_graphics_ImageChannel, lime_graphics_ImageChannel.BLUE = ["BLUE", 2], lime_graphics_ImageChannel.BLUE.toString = $estr, lime_graphics_ImageChannel.BLUE.__enum__ = lime_graphics_ImageChannel, lime_graphics_ImageChannel.ALPHA = ["ALPHA", 3], lime_graphics_ImageChannel.ALPHA.toString = $estr, lime_graphics_ImageChannel.ALPHA.__enum__ = lime_graphics_ImageChannel;
    var lime_graphics_ImageType = $hxClasses["lime.graphics.ImageType"] = {
        __ename__: ["lime", "graphics", "ImageType"],
        __constructs__: ["CANVAS", "DATA", "FLASH", "CUSTOM"]
    };
    lime_graphics_ImageType.CANVAS = ["CANVAS", 0], lime_graphics_ImageType.CANVAS.toString = $estr, lime_graphics_ImageType.CANVAS.__enum__ = lime_graphics_ImageType, lime_graphics_ImageType.DATA = ["DATA", 1], lime_graphics_ImageType.DATA.toString = $estr, lime_graphics_ImageType.DATA.__enum__ = lime_graphics_ImageType, lime_graphics_ImageType.FLASH = ["FLASH", 2], lime_graphics_ImageType.FLASH.toString = $estr, lime_graphics_ImageType.FLASH.__enum__ = lime_graphics_ImageType, lime_graphics_ImageType.CUSTOM = ["CUSTOM", 3], lime_graphics_ImageType.CUSTOM.toString = $estr, lime_graphics_ImageType.CUSTOM.__enum__ = lime_graphics_ImageType;
    var lime_graphics_RenderContext = $hxClasses["lime.graphics.RenderContext"] = {
        __ename__: ["lime", "graphics", "RenderContext"],
        __constructs__: ["OPENGL", "CANVAS", "DOM", "FLASH", "CAIRO", "CONSOLE", "CUSTOM", "NONE"]
    };
    lime_graphics_RenderContext.OPENGL = function(e) {
        var t = ["OPENGL", 0, e];
        return t.__enum__ = lime_graphics_RenderContext, t.toString = $estr, t
    }, lime_graphics_RenderContext.CANVAS = function(e) {
        var t = ["CANVAS", 1, e];
        return t.__enum__ = lime_graphics_RenderContext, t.toString = $estr, t
    }, lime_graphics_RenderContext.DOM = function(e) {
        var t = ["DOM", 2, e];
        return t.__enum__ = lime_graphics_RenderContext, t.toString = $estr, t
    }, lime_graphics_RenderContext.FLASH = function(e) {
        var t = ["FLASH", 3, e];
        return t.__enum__ = lime_graphics_RenderContext, t.toString = $estr, t
    }, lime_graphics_RenderContext.CAIRO = function(e) {
        var t = ["CAIRO", 4, e];
        return t.__enum__ = lime_graphics_RenderContext, t.toString = $estr, t
    }, lime_graphics_RenderContext.CONSOLE = function(e) {
        var t = ["CONSOLE", 5, e];
        return t.__enum__ = lime_graphics_RenderContext, t.toString = $estr, t
    }, lime_graphics_RenderContext.CUSTOM = function(e) {
        var t = ["CUSTOM", 6, e];
        return t.__enum__ = lime_graphics_RenderContext, t.toString = $estr, t
    }, lime_graphics_RenderContext.NONE = ["NONE", 7], lime_graphics_RenderContext.NONE.toString = $estr, lime_graphics_RenderContext.NONE.__enum__ = lime_graphics_RenderContext;
    var lime_graphics_Renderer = function(e) {
        this.onRender = new lime_app__$Event_$Void_$Void, this.onContextRestored = new lime_app__$Event_$lime_$graphics_$RenderContext_$Void, this.onContextLost = new lime_app__$Event_$Void_$Void, this.window = e, this.backend = new lime__$backend_html5_HTML5Renderer(this), this.window.renderer = this
    };
    $hxClasses["lime.graphics.Renderer"] = lime_graphics_Renderer, lime_graphics_Renderer.__name__ = ["lime", "graphics", "Renderer"], lime_graphics_Renderer.prototype = {
        context: null,
        onContextLost: null,
        onContextRestored: null,
        onRender: null,
        type: null,
        window: null,
        backend: null,
        create: function() {
            this.backend.create()
        },
        flip: function() {
            this.backend.flip()
        },
        __class__: lime_graphics_Renderer
    };
    var lime_graphics_RendererType = $hxClasses["lime.graphics.RendererType"] = {
        __ename__: ["lime", "graphics", "RendererType"],
        __constructs__: ["OPENGL", "CANVAS", "DOM", "FLASH", "CAIRO", "CONSOLE", "CUSTOM"]
    };
    lime_graphics_RendererType.OPENGL = ["OPENGL", 0], lime_graphics_RendererType.OPENGL.toString = $estr, lime_graphics_RendererType.OPENGL.__enum__ = lime_graphics_RendererType, lime_graphics_RendererType.CANVAS = ["CANVAS", 1], lime_graphics_RendererType.CANVAS.toString = $estr, lime_graphics_RendererType.CANVAS.__enum__ = lime_graphics_RendererType, lime_graphics_RendererType.DOM = ["DOM", 2], lime_graphics_RendererType.DOM.toString = $estr, lime_graphics_RendererType.DOM.__enum__ = lime_graphics_RendererType, lime_graphics_RendererType.FLASH = ["FLASH", 3], lime_graphics_RendererType.FLASH.toString = $estr, lime_graphics_RendererType.FLASH.__enum__ = lime_graphics_RendererType, lime_graphics_RendererType.CAIRO = ["CAIRO", 4], lime_graphics_RendererType.CAIRO.toString = $estr, lime_graphics_RendererType.CAIRO.__enum__ = lime_graphics_RendererType, lime_graphics_RendererType.CONSOLE = ["CONSOLE", 5], lime_graphics_RendererType.CONSOLE.toString = $estr, lime_graphics_RendererType.CONSOLE.__enum__ = lime_graphics_RendererType, lime_graphics_RendererType.CUSTOM = ["CUSTOM", 6], lime_graphics_RendererType.CUSTOM.toString = $estr, lime_graphics_RendererType.CUSTOM.__enum__ = lime_graphics_RendererType;
    var lime_graphics_cairo_Cairo = function() {};
    $hxClasses["lime.graphics.cairo.Cairo"] = lime_graphics_cairo_Cairo, lime_graphics_cairo_Cairo.__name__ = ["lime", "graphics", "cairo", "Cairo"], lime_graphics_cairo_Cairo.prototype = {
        __class__: lime_graphics_cairo_Cairo
    };
    var lime_graphics_cairo__$CairoSurface_CairoSurface_$Impl_$ = {};
    $hxClasses["lime.graphics.cairo._CairoSurface.CairoSurface_Impl_"] = lime_graphics_cairo__$CairoSurface_CairoSurface_$Impl_$, lime_graphics_cairo__$CairoSurface_CairoSurface_$Impl_$.__name__ = ["lime", "graphics", "cairo", "_CairoSurface", "CairoSurface_Impl_"], lime_graphics_cairo__$CairoSurface_CairoSurface_$Impl_$.flush = function(e) {};
    var lime_graphics_opengl_ExtensionAnisotropicFiltering = function() {};
    $hxClasses["lime.graphics.opengl.ExtensionAnisotropicFiltering"] = lime_graphics_opengl_ExtensionAnisotropicFiltering, lime_graphics_opengl_ExtensionAnisotropicFiltering.__name__ = ["lime", "graphics", "opengl", "ExtensionAnisotropicFiltering"];
    var lime_graphics_opengl_GL = function() {};
    $hxClasses["lime.graphics.opengl.GL"] = lime_graphics_opengl_GL, lime_graphics_opengl_GL.__name__ = ["lime", "graphics", "opengl", "GL"], lime_graphics_opengl_GL.useProgram = function(e) {
        lime_graphics_opengl_GL.__currentProgram = e, lime_graphics_opengl_GL.context.useProgram(e)
    };
    var lime_graphics_utils_ImageCanvasUtil = function() {};
    $hxClasses["lime.graphics.utils.ImageCanvasUtil"] = lime_graphics_utils_ImageCanvasUtil, lime_graphics_utils_ImageCanvasUtil.__name__ = ["lime", "graphics", "utils", "ImageCanvasUtil"], lime_graphics_utils_ImageCanvasUtil.colorTransform = function(e, t, n) {
        lime_graphics_utils_ImageCanvasUtil.convertToData(e), lime_graphics_utils_ImageDataUtil.colorTransform(e, t, n)
    }, lime_graphics_utils_ImageCanvasUtil.convertToCanvas = function(e, t) {
        null == t && (t = !1);
        var n = e.buffer;
        null != n.__srcImage ? (null == n.__srcCanvas && (lime_graphics_utils_ImageCanvasUtil.createCanvas(e, n.__srcImage.width, n.__srcImage.height), n.__srcContext.drawImage(n.__srcImage, 0, 0)), n.__srcImage = null) : null == n.__srcCanvas && null != n.data ? (e.set_transparent(!0), lime_graphics_utils_ImageCanvasUtil.createCanvas(e, n.width, n.height), lime_graphics_utils_ImageCanvasUtil.createImageData(e), n.__srcContext.putImageData(n.__srcImageData, 0, 0)) : e.type == lime_graphics_ImageType.DATA && null != n.__srcImageData && e.dirty && (n.__srcContext.putImageData(n.__srcImageData, 0, 0), e.dirty = !1), t ? (n.data = null, n.__srcImageData = null) : null == n.data && null != n.__srcImageData && (n.data = n.__srcImageData.data), e.type = lime_graphics_ImageType.CANVAS
    }, lime_graphics_utils_ImageCanvasUtil.convertToData = function(e, t) {
        null == t && (t = !1);
        var n = e.buffer;
        if (null != n.__srcImage && lime_graphics_utils_ImageCanvasUtil.convertToCanvas(e), null != n.__srcCanvas && null == n.data) lime_graphics_utils_ImageCanvasUtil.createImageData(e), e.type == lime_graphics_ImageType.CANVAS && (e.dirty = !1);
        else if (e.type == lime_graphics_ImageType.CANVAS && null != n.__srcCanvas && e.dirty) {
            if (null == n.__srcImageData) lime_graphics_utils_ImageCanvasUtil.createImageData(e);
            else {
                n.__srcImageData = n.__srcContext.getImageData(0, 0, n.width, n.height);
                var l, i = n.__srcImageData.data.buffer;
                l = null != i ? new Uint8Array(i) : null, n.data = l
            }
            e.dirty = !1
        }
        t && (e.buffer.__srcCanvas = null, e.buffer.__srcContext = null), e.type = lime_graphics_ImageType.DATA
    }, lime_graphics_utils_ImageCanvasUtil.copyChannel = function(e, t, n, l, i, s) {
        lime_graphics_utils_ImageCanvasUtil.convertToData(t), lime_graphics_utils_ImageCanvasUtil.convertToData(e), lime_graphics_utils_ImageDataUtil.copyChannel(e, t, n, l, i, s)
    }, lime_graphics_utils_ImageCanvasUtil.copyPixels = function(e, t, n, l, i, s, a) {
        if (null == a && (a = !1), !(null == l || l.x >= e.width || l.y >= e.height || null == n || n.width < 1 || n.height < 1)) {
            if (null != i && i.get_transparent()) {
                null == s && (s = new lime_math_Vector2);
                var r = e.clone();
                r.copyChannel(i, new lime_math_Rectangle(s.x, s.y, n.width, n.height), new lime_math_Vector2(n.x, n.y), lime_graphics_ImageChannel.ALPHA, lime_graphics_ImageChannel.ALPHA), t = r
            }
            lime_graphics_utils_ImageCanvasUtil.convertToCanvas(e, !0), a || e.get_transparent() && t.get_transparent() && e.buffer.__srcContext.clearRect(l.x + e.offsetX, l.y + e.offsetY, n.width + e.offsetX, n.height + e.offsetY), lime_graphics_utils_ImageCanvasUtil.convertToCanvas(t), null != t.buffer.get_src() && e.buffer.__srcContext.drawImage(t.buffer.get_src(), n.x + t.offsetX | 0, n.y + t.offsetY | 0, 0 | n.width, 0 | n.height, l.x + e.offsetX | 0, l.y + e.offsetY | 0, 0 | n.width, 0 | n.height), e.dirty = !0, e.version++
        }
    }, lime_graphics_utils_ImageCanvasUtil.createCanvas = function(e, t, n) {
        var l = e.buffer;
        null == l.__srcCanvas && (l.__srcCanvas = window.document.createElement("canvas"), l.__srcCanvas.width = t, l.__srcCanvas.height = n, e.get_transparent() ? l.__srcContext = l.__srcCanvas.getContext("2d") : (e.get_transparent() || l.__srcCanvas.setAttribute("moz-opaque", "true"), l.__srcContext = l.__srcCanvas.getContext("2d", {
            alpha: !1
        })), l.__srcContext.imageSmoothingEnabled = !1, l.__srcContext.msImageSmoothingEnabled = !1, l.__srcContext.imageSmoothingEnabled = !1)
    }, lime_graphics_utils_ImageCanvasUtil.createImageData = function(e) {
        var t = e.buffer;
        if (null == t.__srcImageData) {
            null == t.data ? t.__srcImageData = t.__srcContext.getImageData(0, 0, t.width, t.height) : (t.__srcImageData = t.__srcContext.createImageData(t.width, t.height), t.__srcImageData.data.set(t.data));
            var n, l = t.__srcImageData.data.buffer;
            n = null != l ? new Uint8Array(l) : null, t.data = n
        }
    }, lime_graphics_utils_ImageCanvasUtil.fillRect = function(e, t, n, l) {
        var i, s, a, r;
        lime_graphics_utils_ImageCanvasUtil.convertToCanvas(e), 1 == l ? (i = n >> 16 & 255, s = n >> 8 & 255, a = 255 & n, r = e.get_transparent() ? n >> 24 & 255 : 255) : (i = n >> 24 & 255, s = n >> 16 & 255, a = n >> 8 & 255, r = e.get_transparent() ? 255 & n : 255), 0 == t.x && 0 == t.y && t.width == e.width && t.height == e.height && e.get_transparent() && 0 == r ? e.buffer.__srcCanvas.width = e.buffer.width : (e.buffer.__srcContext.fillStyle = "rgba(" + i + ", " + s + ", " + a + ", " + r / 255 + ")", e.buffer.__srcContext.fillRect(t.x + e.offsetX, t.y + e.offsetY, t.width + e.offsetX, t.height + e.offsetY), e.dirty = !0, e.version++)
    }, lime_graphics_utils_ImageCanvasUtil.getPixel32 = function(e, t, n, l) {
        return lime_graphics_utils_ImageCanvasUtil.convertToData(e), lime_graphics_utils_ImageDataUtil.getPixel32(e, t, n, l)
    }, lime_graphics_utils_ImageCanvasUtil.setPixel32 = function(e, t, n, l, i) {
        lime_graphics_utils_ImageCanvasUtil.convertToData(e), lime_graphics_utils_ImageDataUtil.setPixel32(e, t, n, l, i)
    }, lime_graphics_utils_ImageCanvasUtil.sync = function(e, t) {
        null != e && (e.type == lime_graphics_ImageType.CANVAS ? lime_graphics_utils_ImageCanvasUtil.convertToCanvas(e, t) : lime_graphics_utils_ImageCanvasUtil.convertToData(e, t))
    };
    var lime_graphics_utils_ImageDataUtil = function() {};
    $hxClasses["lime.graphics.utils.ImageDataUtil"] = lime_graphics_utils_ImageDataUtil, lime_graphics_utils_ImageDataUtil.__name__ = ["lime", "graphics", "utils", "ImageDataUtil"], lime_graphics_utils_ImageDataUtil.colorTransform = function(e, t, n) {
        var l = e.buffer.data;
        if (null != l) {
            for (var i, s, a, r = e.buffer.format, o = e.buffer.premultiplied, d = new lime_graphics_utils__$ImageDataUtil_ImageDataView(e, t), _ = lime_math__$ColorMatrix_ColorMatrix_$Impl_$.getAlphaTable(n), h = lime_math__$ColorMatrix_ColorMatrix_$Impl_$.getRedTable(n), p = lime_math__$ColorMatrix_ColorMatrix_$Impl_$.getGreenTable(n), c = lime_math__$ColorMatrix_ColorMatrix_$Impl_$.getBlueTable(n), Q = 0, U = d.height; Q < U;) {
                var m = Q++;
                i = d.offset + d.stride * m;
                for (var u = 0, F = d.width; u < F;) {
                    switch (s = i + 4 * u++, r) {
                        case 2:
                            a = (255 & l[s + 2]) << 24 | (255 & l[s + 1]) << 16 | (255 & l[s]) << 8 | 255 & l[s + 3];
                            break;
                        case 0:
                            a = (255 & l[s]) << 24 | (255 & l[s + 1]) << 16 | (255 & l[s + 2]) << 8 | 255 & l[s + 3];
                            break;
                        case 1:
                            a = (255 & l[s + 1]) << 24 | (255 & l[s + 2]) << 16 | (255 & l[s + 3]) << 8 | 255 & l[s]
                    }
                    if (o && 0 != (255 & a) && 255 != (255 & a)) {
                        var N;
                        lime_math_color__$RGBA_RGBA_$Impl_$.unmult = 255 / (255 & a);
                        var S, W = Math.round((a >> 24 & 255) * lime_math_color__$RGBA_RGBA_$Impl_$.unmult);
                        N = lime_math_color__$RGBA_RGBA_$Impl_$.__clamp[W];
                        var B = Math.round((a >> 16 & 255) * lime_math_color__$RGBA_RGBA_$Impl_$.unmult);
                        S = lime_math_color__$RGBA_RGBA_$Impl_$.__clamp[B];
                        var Z = Math.round((a >> 8 & 255) * lime_math_color__$RGBA_RGBA_$Impl_$.unmult);
                        a = (255 & N) << 24 | (255 & S) << 16 | (255 & lime_math_color__$RGBA_RGBA_$Impl_$.__clamp[Z]) << 8 | 255 & a
                    }
                    switch (a = (255 & h[a >> 24 & 255]) << 24 | (255 & p[a >> 16 & 255]) << 16 | (255 & c[a >> 8 & 255]) << 8 | 255 & _[255 & a], o && (0 == (255 & a) ? 0 != a && (a = 0) : 255 != (255 & a) && (lime_math_color__$RGBA_RGBA_$Impl_$.a16 = lime_math_color__$RGBA_RGBA_$Impl_$.__alpha16[255 & a], a = ((a >> 24 & 255) * lime_math_color__$RGBA_RGBA_$Impl_$.a16 >> 16 & 255) << 24 | ((a >> 16 & 255) * lime_math_color__$RGBA_RGBA_$Impl_$.a16 >> 16 & 255) << 16 | ((a >> 8 & 255) * lime_math_color__$RGBA_RGBA_$Impl_$.a16 >> 16 & 255) << 8 | 255 & a)), r) {
                        case 2:
                            l[s] = a >> 8 & 255, l[s + 1] = a >> 16 & 255, l[s + 2] = a >> 24 & 255, l[s + 3] = 255 & a;
                            break;
                        case 0:
                            l[s] = a >> 24 & 255, l[s + 1] = a >> 16 & 255, l[s + 2] = a >> 8 & 255, l[s + 3] = 255 & a;
                            break;
                        case 1:
                            l[s] = 255 & a, l[s + 1] = a >> 24 & 255, l[s + 2] = a >> 16 & 255, l[s + 3] = a >> 8 & 255
                    }
                }
            }
            e.dirty = !0, e.version++
        }
    }, lime_graphics_utils_ImageDataUtil.copyChannel = function(e, t, n, l, i, s) {
        var a, r;
        switch (s[1]) {
            case 0:
                a = 0;
                break;
            case 1:
                a = 1;
                break;
            case 2:
                a = 2;
                break;
            case 3:
                a = 3
        }
        switch (i[1]) {
            case 0:
                r = 0;
                break;
            case 1:
                r = 1;
                break;
            case 2:
                r = 2;
                break;
            case 3:
                r = 3
        }
        var o = t.buffer.data,
            d = e.buffer.data;
        if (null != o && null != d) {
            for (var _, h, p, c, Q = new lime_graphics_utils__$ImageDataUtil_ImageDataView(t, n), U = new lime_graphics_utils__$ImageDataUtil_ImageDataView(e, new lime_math_Rectangle(l.x, l.y, Q.width, Q.height)), m = t.buffer.format, u = e.buffer.format, F = t.buffer.premultiplied, N = e.buffer.premultiplied, S = 0, W = 0, B = U.height; W < B;) {
                var Z = W++;
                _ = Q.offset + Q.stride * Z, h = U.offset + U.stride * Z;
                for (var D = 0, V = U.width; D < V;) {
                    D++;
                    switch (m) {
                        case 2:
                            p = (255 & o[_ + 2]) << 24 | (255 & o[_ + 1]) << 16 | (255 & o[_]) << 8 | 255 & o[_ + 3];
                            break;
                        case 0:
                            p = (255 & o[_]) << 24 | (255 & o[_ + 1]) << 16 | (255 & o[_ + 2]) << 8 | 255 & o[_ + 3];
                            break;
                        case 1:
                            p = (255 & o[_ + 1]) << 24 | (255 & o[_ + 2]) << 16 | (255 & o[_ + 3]) << 8 | 255 & o[_]
                    }
                    if (F && 0 != (255 & p) && 255 != (255 & p)) {
                        var f;
                        lime_math_color__$RGBA_RGBA_$Impl_$.unmult = 255 / (255 & p);
                        var R, T = Math.round((p >> 24 & 255) * lime_math_color__$RGBA_RGBA_$Impl_$.unmult);
                        f = lime_math_color__$RGBA_RGBA_$Impl_$.__clamp[T];
                        var J = Math.round((p >> 16 & 255) * lime_math_color__$RGBA_RGBA_$Impl_$.unmult);
                        R = lime_math_color__$RGBA_RGBA_$Impl_$.__clamp[J];
                        var g = Math.round((p >> 8 & 255) * lime_math_color__$RGBA_RGBA_$Impl_$.unmult);
                        p = (255 & f) << 24 | (255 & R) << 16 | (255 & lime_math_color__$RGBA_RGBA_$Impl_$.__clamp[g]) << 8 | 255 & p
                    }
                    switch (u) {
                        case 2:
                            c = (255 & d[h + 2]) << 24 | (255 & d[h + 1]) << 16 | (255 & d[h]) << 8 | 255 & d[h + 3];
                            break;
                        case 0:
                            c = (255 & d[h]) << 24 | (255 & d[h + 1]) << 16 | (255 & d[h + 2]) << 8 | 255 & d[h + 3];
                            break;
                        case 1:
                            c = (255 & d[h + 1]) << 24 | (255 & d[h + 2]) << 16 | (255 & d[h + 3]) << 8 | 255 & d[h]
                    }
                    if (N && 0 != (255 & c) && 255 != (255 & c)) {
                        var b;
                        lime_math_color__$RGBA_RGBA_$Impl_$.unmult = 255 / (255 & c);
                        var E, v = Math.round((c >> 24 & 255) * lime_math_color__$RGBA_RGBA_$Impl_$.unmult);
                        b = lime_math_color__$RGBA_RGBA_$Impl_$.__clamp[v];
                        var k = Math.round((c >> 16 & 255) * lime_math_color__$RGBA_RGBA_$Impl_$.unmult);
                        E = lime_math_color__$RGBA_RGBA_$Impl_$.__clamp[k];
                        var M = Math.round((c >> 8 & 255) * lime_math_color__$RGBA_RGBA_$Impl_$.unmult);
                        c = (255 & b) << 24 | (255 & E) << 16 | (255 & lime_math_color__$RGBA_RGBA_$Impl_$.__clamp[M]) << 8 | 255 & c
                    }
                    switch (r) {
                        case 0:
                            S = p >> 24 & 255;
                            break;
                        case 1:
                            S = p >> 16 & 255;
                            break;
                        case 2:
                            S = p >> 8 & 255;
                            break;
                        case 3:
                            S = 255 & p
                    }
                    switch (a) {
                        case 0:
                            c = (255 & S) << 24 | (255 & c >> 16) << 16 | (255 & c >> 8) << 8 | 255 & c;
                            break;
                        case 1:
                            c = (255 & c >> 24) << 24 | (255 & S) << 16 | (255 & c >> 8) << 8 | 255 & c;
                            break;
                        case 2:
                            c = (255 & c >> 24) << 24 | (255 & c >> 16) << 16 | (255 & S) << 8 | 255 & c;
                            break;
                        case 3:
                            c = (255 & c >> 24) << 24 | (255 & c >> 16) << 16 | (255 & c >> 8) << 8 | 255 & S
                    }
                    switch (N && (0 == (255 & c) ? 0 != c && (c = 0) : 255 != (255 & c) && (lime_math_color__$RGBA_RGBA_$Impl_$.a16 = lime_math_color__$RGBA_RGBA_$Impl_$.__alpha16[255 & c], c = ((c >> 24 & 255) * lime_math_color__$RGBA_RGBA_$Impl_$.a16 >> 16 & 255) << 24 | ((c >> 16 & 255) * lime_math_color__$RGBA_RGBA_$Impl_$.a16 >> 16 & 255) << 16 | ((c >> 8 & 255) * lime_math_color__$RGBA_RGBA_$Impl_$.a16 >> 16 & 255) << 8 | 255 & c)), u) {
                        case 2:
                            d[h] = c >> 8 & 255, d[h + 1] = c >> 16 & 255, d[h + 2] = c >> 24 & 255, d[h + 3] = 255 & c;
                            break;
                        case 0:
                            d[h] = c >> 24 & 255, d[h + 1] = c >> 16 & 255, d[h + 2] = c >> 8 & 255, d[h + 3] = 255 & c;
                            break;
                        case 1:
                            d[h] = 255 & c, d[h + 1] = c >> 24 & 255, d[h + 2] = c >> 16 & 255, d[h + 3] = c >> 8 & 255
                    }
                    _ += 4, h += 4
                }
            }
            e.dirty = !0, e.version++
        }
    }, lime_graphics_utils_ImageDataUtil.copyPixels = function(e, t, n, l, i, s, a) {
        null == a && (a = !1);
        var r = t.buffer.data,
            o = e.buffer.data;
        if (null != r && null != o) {
            var d, _, h, p, c, Q, U, m, u = new lime_graphics_utils__$ImageDataUtil_ImageDataView(t, n),
                F = new lime_graphics_utils__$ImageDataUtil_ImageDataView(e, new lime_math_Rectangle(l.x, l.y, u.width, u.height)),
                N = t.buffer.format,
                S = e.buffer.format,
                W = t.buffer.premultiplied,
                B = e.buffer.premultiplied;
            if (a && t.get_transparent())
                if (null == i)
                    for (var Z = 0, D = F.height; Z < D;) {
                        var V = Z++;
                        d = u.offset + u.stride * V, _ = F.offset + F.stride * V;
                        for (var f = 0, R = F.width; f < R;) {
                            f++;
                            switch (N) {
                                case 2:
                                    h = (255 & r[d + 2]) << 24 | (255 & r[d + 1]) << 16 | (255 & r[d]) << 8 | 255 & r[d + 3];
                                    break;
                                case 0:
                                    h = (255 & r[d]) << 24 | (255 & r[d + 1]) << 16 | (255 & r[d + 2]) << 8 | 255 & r[d + 3];
                                    break;
                                case 1:
                                    h = (255 & r[d + 1]) << 24 | (255 & r[d + 2]) << 16 | (255 & r[d + 3]) << 8 | 255 & r[d]
                            }
                            if (W && 0 != (255 & h) && 255 != (255 & h)) {
                                var T;
                                lime_math_color__$RGBA_RGBA_$Impl_$.unmult = 255 / (255 & h);
                                var J, g = Math.round((h >> 24 & 255) * lime_math_color__$RGBA_RGBA_$Impl_$.unmult);
                                T = lime_math_color__$RGBA_RGBA_$Impl_$.__clamp[g];
                                var b = Math.round((h >> 16 & 255) * lime_math_color__$RGBA_RGBA_$Impl_$.unmult);
                                J = lime_math_color__$RGBA_RGBA_$Impl_$.__clamp[b];
                                var E = Math.round((h >> 8 & 255) * lime_math_color__$RGBA_RGBA_$Impl_$.unmult);
                                h = (255 & T) << 24 | (255 & J) << 16 | (255 & lime_math_color__$RGBA_RGBA_$Impl_$.__clamp[E]) << 8 | 255 & h
                            }
                            switch (S) {
                                case 2:
                                    m = (255 & o[_ + 2]) << 24 | (255 & o[_ + 1]) << 16 | (255 & o[_]) << 8 | 255 & o[_ + 3];
                                    break;
                                case 0:
                                    m = (255 & o[_]) << 24 | (255 & o[_ + 1]) << 16 | (255 & o[_ + 2]) << 8 | 255 & o[_ + 3];
                                    break;
                                case 1:
                                    m = (255 & o[_ + 1]) << 24 | (255 & o[_ + 2]) << 16 | (255 & o[_ + 3]) << 8 | 255 & o[_]
                            }
                            if (B && 0 != (255 & m) && 255 != (255 & m)) {
                                var v;
                                lime_math_color__$RGBA_RGBA_$Impl_$.unmult = 255 / (255 & m);
                                var k, M = Math.round((m >> 24 & 255) * lime_math_color__$RGBA_RGBA_$Impl_$.unmult);
                                v = lime_math_color__$RGBA_RGBA_$Impl_$.__clamp[M];
                                var y = Math.round((m >> 16 & 255) * lime_math_color__$RGBA_RGBA_$Impl_$.unmult);
                                k = lime_math_color__$RGBA_RGBA_$Impl_$.__clamp[y];
                                var x = Math.round((m >> 8 & 255) * lime_math_color__$RGBA_RGBA_$Impl_$.unmult);
                                m = (255 & v) << 24 | (255 & k) << 16 | (255 & lime_math_color__$RGBA_RGBA_$Impl_$.__clamp[x]) << 8 | 255 & m
                            }
                            if (0 == (U = (p = (255 & h) / 255) + (c = (255 & m) / 255) * (Q = 1 - p))) m = 0;
                            else {
                                var w = Math.round(((h >> 24 & 255) * p + (m >> 24 & 255) * c * Q) / U);
                                m = (255 & lime_math_color__$RGBA_RGBA_$Impl_$.__clamp[w]) << 24 | (255 & m >> 16) << 16 | (255 & m >> 8) << 8 | 255 & m;
                                var G = Math.round(((h >> 16 & 255) * p + (m >> 16 & 255) * c * Q) / U);
                                m = (255 & m >> 24) << 24 | (255 & lime_math_color__$RGBA_RGBA_$Impl_$.__clamp[G]) << 16 | (255 & m >> 8) << 8 | 255 & m;
                                var H = Math.round(((h >> 8 & 255) * p + (m >> 8 & 255) * c * Q) / U);
                                m = (255 & m >> 24) << 24 | (255 & m >> 16) << 16 | (255 & lime_math_color__$RGBA_RGBA_$Impl_$.__clamp[H]) << 8 | 255 & m;
                                var C = Math.round(255 * U);
                                m = (255 & m >> 24) << 24 | (255 & m >> 16) << 16 | (255 & m >> 8) << 8 | 255 & lime_math_color__$RGBA_RGBA_$Impl_$.__clamp[C]
                            }
                            switch (B && (0 == (255 & m) ? 0 != m && (m = 0) : 255 != (255 & m) && (lime_math_color__$RGBA_RGBA_$Impl_$.a16 = lime_math_color__$RGBA_RGBA_$Impl_$.__alpha16[255 & m], m = ((m >> 24 & 255) * lime_math_color__$RGBA_RGBA_$Impl_$.a16 >> 16 & 255) << 24 | ((m >> 16 & 255) * lime_math_color__$RGBA_RGBA_$Impl_$.a16 >> 16 & 255) << 16 | ((m >> 8 & 255) * lime_math_color__$RGBA_RGBA_$Impl_$.a16 >> 16 & 255) << 8 | 255 & m)), S) {
                                case 2:
                                    o[_] = m >> 8 & 255, o[_ + 1] = m >> 16 & 255, o[_ + 2] = m >> 24 & 255, o[_ + 3] = 255 & m;
                                    break;
                                case 0:
                                    o[_] = m >> 24 & 255, o[_ + 1] = m >> 16 & 255, o[_ + 2] = m >> 8 & 255, o[_ + 3] = 255 & m;
                                    break;
                                case 1:
                                    o[_] = 255 & m, o[_ + 1] = m >> 24 & 255, o[_ + 2] = m >> 16 & 255, o[_ + 3] = m >> 8 & 255
                            }
                            d += 4, _ += 4
                        }
                    } else {
                        null == s && (s = new lime_math_Vector2);
                        for (var Y, O, X = i.buffer.data, z = i.buffer.format, I = i.buffer.premultiplied, j = new lime_graphics_utils__$ImageDataUtil_ImageDataView(i, new lime_math_Rectangle(s.x, s.y, F.width, F.height)), L = 0, A = j.height; L < A;) {
                            var P = L++;
                            d = u.offset + u.stride * P, _ = F.offset + F.stride * P, Y = j.offset + j.stride * P;
                            for (var $ = 0, K = j.width; $ < K;) {
                                $++;
                                switch (N) {
                                    case 2:
                                        h = (255 & r[d + 2]) << 24 | (255 & r[d + 1]) << 16 | (255 & r[d]) << 8 | 255 & r[d + 3];
                                        break;
                                    case 0:
                                        h = (255 & r[d]) << 24 | (255 & r[d + 1]) << 16 | (255 & r[d + 2]) << 8 | 255 & r[d + 3];
                                        break;
                                    case 1:
                                        h = (255 & r[d + 1]) << 24 | (255 & r[d + 2]) << 16 | (255 & r[d + 3]) << 8 | 255 & r[d]
                                }
                                if (W && 0 != (255 & h) && 255 != (255 & h)) {
                                    var q;
                                    lime_math_color__$RGBA_RGBA_$Impl_$.unmult = 255 / (255 & h);
                                    var ee, te = Math.round((h >> 24 & 255) * lime_math_color__$RGBA_RGBA_$Impl_$.unmult);
                                    q = lime_math_color__$RGBA_RGBA_$Impl_$.__clamp[te];
                                    var ne = Math.round((h >> 16 & 255) * lime_math_color__$RGBA_RGBA_$Impl_$.unmult);
                                    ee = lime_math_color__$RGBA_RGBA_$Impl_$.__clamp[ne];
                                    var le = Math.round((h >> 8 & 255) * lime_math_color__$RGBA_RGBA_$Impl_$.unmult);
                                    h = (255 & q) << 24 | (255 & ee) << 16 | (255 & lime_math_color__$RGBA_RGBA_$Impl_$.__clamp[le]) << 8 | 255 & h
                                }
                                switch (S) {
                                    case 2:
                                        m = (255 & o[_ + 2]) << 24 | (255 & o[_ + 1]) << 16 | (255 & o[_]) << 8 | 255 & o[_ + 3];
                                        break;
                                    case 0:
                                        m = (255 & o[_]) << 24 | (255 & o[_ + 1]) << 16 | (255 & o[_ + 2]) << 8 | 255 & o[_ + 3];
                                        break;
                                    case 1:
                                        m = (255 & o[_ + 1]) << 24 | (255 & o[_ + 2]) << 16 | (255 & o[_ + 3]) << 8 | 255 & o[_]
                                }
                                if (B && 0 != (255 & m) && 255 != (255 & m)) {
                                    var ie;
                                    lime_math_color__$RGBA_RGBA_$Impl_$.unmult = 255 / (255 & m);
                                    var se, ae = Math.round((m >> 24 & 255) * lime_math_color__$RGBA_RGBA_$Impl_$.unmult);
                                    ie = lime_math_color__$RGBA_RGBA_$Impl_$.__clamp[ae];
                                    var re = Math.round((m >> 16 & 255) * lime_math_color__$RGBA_RGBA_$Impl_$.unmult);
                                    se = lime_math_color__$RGBA_RGBA_$Impl_$.__clamp[re];
                                    var oe = Math.round((m >> 8 & 255) * lime_math_color__$RGBA_RGBA_$Impl_$.unmult);
                                    m = (255 & ie) << 24 | (255 & se) << 16 | (255 & lime_math_color__$RGBA_RGBA_$Impl_$.__clamp[oe]) << 8 | 255 & m
                                }
                                switch (z) {
                                    case 2:
                                        O = (255 & X[Y + 2]) << 24 | (255 & X[Y + 1]) << 16 | (255 & X[Y]) << 8 | 255 & X[Y + 3];
                                        break;
                                    case 0:
                                        O = (255 & X[Y]) << 24 | (255 & X[Y + 1]) << 16 | (255 & X[Y + 2]) << 8 | 255 & X[Y + 3];
                                        break;
                                    case 1:
                                        O = (255 & X[Y + 1]) << 24 | (255 & X[Y + 2]) << 16 | (255 & X[Y + 3]) << 8 | 255 & X[Y]
                                }
                                if (I && 0 != (255 & O) && 255 != (255 & O)) {
                                    var de;
                                    lime_math_color__$RGBA_RGBA_$Impl_$.unmult = 255 / (255 & O);
                                    var _e, he = Math.round((O >> 24 & 255) * lime_math_color__$RGBA_RGBA_$Impl_$.unmult);
                                    de = lime_math_color__$RGBA_RGBA_$Impl_$.__clamp[he];
                                    var pe = Math.round((O >> 16 & 255) * lime_math_color__$RGBA_RGBA_$Impl_$.unmult);
                                    _e = lime_math_color__$RGBA_RGBA_$Impl_$.__clamp[pe];
                                    var ce = Math.round((O >> 8 & 255) * lime_math_color__$RGBA_RGBA_$Impl_$.unmult);
                                    O = (255 & de) << 24 | (255 & _e) << 16 | (255 & lime_math_color__$RGBA_RGBA_$Impl_$.__clamp[ce]) << 8 | 255 & O
                                }
                                if (0 == (U = (p = (255 & O) / 255) + (c = (255 & m) / 255) * (Q = 1 - p))) m = 0;
                                else {
                                    var Qe = Math.round(((h >> 24 & 255) * p + (m >> 24 & 255) * c * Q) / U);
                                    m = (255 & lime_math_color__$RGBA_RGBA_$Impl_$.__clamp[Qe]) << 24 | (255 & m >> 16) << 16 | (255 & m >> 8) << 8 | 255 & m;
                                    var Ue = Math.round(((h >> 16 & 255) * p + (m >> 16 & 255) * c * Q) / U);
                                    m = (255 & m >> 24) << 24 | (255 & lime_math_color__$RGBA_RGBA_$Impl_$.__clamp[Ue]) << 16 | (255 & m >> 8) << 8 | 255 & m;
                                    var me = Math.round(((h >> 8 & 255) * p + (m >> 8 & 255) * c * Q) / U);
                                    m = (255 & m >> 24) << 24 | (255 & m >> 16) << 16 | (255 & lime_math_color__$RGBA_RGBA_$Impl_$.__clamp[me]) << 8 | 255 & m;
                                    var ue = Math.round(255 * U);
                                    m = (255 & m >> 24) << 24 | (255 & m >> 16) << 16 | (255 & m >> 8) << 8 | 255 & lime_math_color__$RGBA_RGBA_$Impl_$.__clamp[ue]
                                }
                                switch (B && (0 == (255 & m) ? 0 != m && (m = 0) : 255 != (255 & m) && (lime_math_color__$RGBA_RGBA_$Impl_$.a16 = lime_math_color__$RGBA_RGBA_$Impl_$.__alpha16[255 & m], m = ((m >> 24 & 255) * lime_math_color__$RGBA_RGBA_$Impl_$.a16 >> 16 & 255) << 24 | ((m >> 16 & 255) * lime_math_color__$RGBA_RGBA_$Impl_$.a16 >> 16 & 255) << 16 | ((m >> 8 & 255) * lime_math_color__$RGBA_RGBA_$Impl_$.a16 >> 16 & 255) << 8 | 255 & m)), S) {
                                    case 2:
                                        o[_] = m >> 8 & 255, o[_ + 1] = m >> 16 & 255, o[_ + 2] = m >> 24 & 255, o[_ + 3] = 255 & m;
                                        break;
                                    case 0:
                                        o[_] = m >> 24 & 255, o[_ + 1] = m >> 16 & 255, o[_ + 2] = m >> 8 & 255, o[_ + 3] = 255 & m;
                                        break;
                                    case 1:
                                        o[_] = 255 & m, o[_ + 1] = m >> 24 & 255, o[_ + 2] = m >> 16 & 255, o[_ + 3] = m >> 8 & 255
                                }
                                d += 4, _ += 4
                            }
                        }
                    } else
                        for (var Fe = 0, Ne = F.height; Fe < Ne;) {
                            var Se = Fe++;
                            d = u.offset + u.stride * Se, _ = F.offset + F.stride * Se;
                            for (var We = 0, Be = F.width; We < Be;) {
                                We++;
                                switch (N) {
                                    case 2:
                                        h = (255 & r[d + 2]) << 24 | (255 & r[d + 1]) << 16 | (255 & r[d]) << 8 | 255 & r[d + 3];
                                        break;
                                    case 0:
                                        h = (255 & r[d]) << 24 | (255 & r[d + 1]) << 16 | (255 & r[d + 2]) << 8 | 255 & r[d + 3];
                                        break;
                                    case 1:
                                        h = (255 & r[d + 1]) << 24 | (255 & r[d + 2]) << 16 | (255 & r[d + 3]) << 8 | 255 & r[d]
                                }
                                if (W && 0 != (255 & h) && 255 != (255 & h)) {
                                    var Ze;
                                    lime_math_color__$RGBA_RGBA_$Impl_$.unmult = 255 / (255 & h);
                                    var De, Ve = Math.round((h >> 24 & 255) * lime_math_color__$RGBA_RGBA_$Impl_$.unmult);
                                    Ze = lime_math_color__$RGBA_RGBA_$Impl_$.__clamp[Ve];
                                    var fe = Math.round((h >> 16 & 255) * lime_math_color__$RGBA_RGBA_$Impl_$.unmult);
                                    De = lime_math_color__$RGBA_RGBA_$Impl_$.__clamp[fe];
                                    var Re = Math.round((h >> 8 & 255) * lime_math_color__$RGBA_RGBA_$Impl_$.unmult);
                                    h = (255 & Ze) << 24 | (255 & De) << 16 | (255 & lime_math_color__$RGBA_RGBA_$Impl_$.__clamp[Re]) << 8 | 255 & h
                                }
                                switch (B && (0 == (255 & h) ? 0 != h && (h = 0) : 255 != (255 & h) && (lime_math_color__$RGBA_RGBA_$Impl_$.a16 = lime_math_color__$RGBA_RGBA_$Impl_$.__alpha16[255 & h], h = ((h >> 24 & 255) * lime_math_color__$RGBA_RGBA_$Impl_$.a16 >> 16 & 255) << 24 | ((h >> 16 & 255) * lime_math_color__$RGBA_RGBA_$Impl_$.a16 >> 16 & 255) << 16 | ((h >> 8 & 255) * lime_math_color__$RGBA_RGBA_$Impl_$.a16 >> 16 & 255) << 8 | 255 & h)), S) {
                                    case 2:
                                        o[_] = h >> 8 & 255, o[_ + 1] = h >> 16 & 255, o[_ + 2] = h >> 24 & 255, o[_ + 3] = 255 & h;
                                        break;
                                    case 0:
                                        o[_] = h >> 24 & 255, o[_ + 1] = h >> 16 & 255, o[_ + 2] = h >> 8 & 255, o[_ + 3] = 255 & h;
                                        break;
                                    case 1:
                                        o[_] = 255 & h, o[_ + 1] = h >> 24 & 255, o[_ + 2] = h >> 16 & 255, o[_ + 3] = h >> 8 & 255
                                }
                                d += 4, _ += 4
                            }
                        }
            e.dirty = !0, e.version++
        }
    }, lime_graphics_utils_ImageDataUtil.fillRect = function(e, t, n, l) {
        var i;
        switch (l) {
            case 1:
                i = (255 & n >> 16) << 24 | (255 & n >> 8) << 16 | (255 & n) << 8 | 255 & n >> 24;
                break;
            case 2:
                i = (255 & n >> 8) << 24 | (255 & n >> 16) << 16 | (255 & n >> 24) << 8 | 255 & n;
                break;
            default:
                i = n
        }
        e.get_transparent() || (i = (255 & i >> 24) << 24 | (255 & i >> 16) << 16 | (255 & i >> 8) << 8 | 255);
        var s = e.buffer.data;
        if (null != s) {
            var a = e.buffer.format;
            e.buffer.premultiplied && (0 == (255 & i) ? 0 != i && (i = 0) : 255 != (255 & i) && (lime_math_color__$RGBA_RGBA_$Impl_$.a16 = lime_math_color__$RGBA_RGBA_$Impl_$.__alpha16[255 & i], i = ((i >> 24 & 255) * lime_math_color__$RGBA_RGBA_$Impl_$.a16 >> 16 & 255) << 24 | ((i >> 16 & 255) * lime_math_color__$RGBA_RGBA_$Impl_$.a16 >> 16 & 255) << 16 | ((i >> 8 & 255) * lime_math_color__$RGBA_RGBA_$Impl_$.a16 >> 16 & 255) << 8 | 255 & i));
            for (var r, o = new lime_graphics_utils__$ImageDataUtil_ImageDataView(e, t), d = 0, _ = o.height; d < _;) {
                var h = d++;
                r = o.offset + o.stride * h;
                for (var p = 0, c = o.width; p < c;) {
                    var Q = r + 4 * p++;
                    switch (a) {
                        case 2:
                            s[Q] = i >> 8 & 255, s[Q + 1] = i >> 16 & 255, s[Q + 2] = i >> 24 & 255, s[Q + 3] = 255 & i;
                            break;
                        case 0:
                            s[Q] = i >> 24 & 255, s[Q + 1] = i >> 16 & 255, s[Q + 2] = i >> 8 & 255, s[Q + 3] = 255 & i;
                            break;
                        case 1:
                            s[Q] = 255 & i, s[Q + 1] = i >> 24 & 255, s[Q + 2] = i >> 16 & 255, s[Q + 3] = i >> 8 & 255
                    }
                }
            }
            e.dirty = !0, e.version++
        }
    }, lime_graphics_utils_ImageDataUtil.getPixel32 = function(e, t, n, l) {
        var i, s = e.buffer.data,
            a = 4 * (n + e.offsetY) * e.buffer.width + 4 * (t + e.offsetX);
        switch (e.buffer.format) {
            case 2:
                i = (255 & s[a + 2]) << 24 | (255 & s[a + 1]) << 16 | (255 & s[a]) << 8 | 255 & s[a + 3];
                break;
            case 0:
                i = (255 & s[a]) << 24 | (255 & s[a + 1]) << 16 | (255 & s[a + 2]) << 8 | 255 & s[a + 3];
                break;
            case 1:
                i = (255 & s[a + 1]) << 24 | (255 & s[a + 2]) << 16 | (255 & s[a + 3]) << 8 | 255 & s[a]
        }
        if (e.buffer.premultiplied && 0 != (255 & i) && 255 != (255 & i)) {
            var r;
            lime_math_color__$RGBA_RGBA_$Impl_$.unmult = 255 / (255 & i);
            var o, d = Math.round((i >> 24 & 255) * lime_math_color__$RGBA_RGBA_$Impl_$.unmult);
            r = lime_math_color__$RGBA_RGBA_$Impl_$.__clamp[d];
            var _, h = Math.round((i >> 16 & 255) * lime_math_color__$RGBA_RGBA_$Impl_$.unmult);
            o = lime_math_color__$RGBA_RGBA_$Impl_$.__clamp[h];
            var p = Math.round((i >> 8 & 255) * lime_math_color__$RGBA_RGBA_$Impl_$.unmult);
            _ = lime_math_color__$RGBA_RGBA_$Impl_$.__clamp[p], i = (255 & r) << 24 | (255 & o) << 16 | (255 & _) << 8 | 255 & i
        }
        switch (l) {
            case 1:
                return (255 & i) << 24 | (255 & i >> 24) << 16 | (255 & i >> 16) << 8 | 255 & i >> 8;
            case 2:
                return (255 & i >> 8) << 24 | (255 & i >> 16) << 16 | (255 & i >> 24) << 8 | 255 & i;
            default:
                return i
        }
    }, lime_graphics_utils_ImageDataUtil.multiplyAlpha = function(e) {
        var t = e.buffer.data;
        if (null != t && e.buffer.transparent) {
            for (var n, l = e.buffer.format, i = t.length / 4 | 0, s = 0; s < i;) {
                var a = s++,
                    r = 4 * a;
                switch (l) {
                    case 2:
                        n = (255 & t[r + 2]) << 24 | (255 & t[r + 1]) << 16 | (255 & t[r]) << 8 | 255 & t[r + 3];
                        break;
                    case 0:
                        n = (255 & t[r]) << 24 | (255 & t[r + 1]) << 16 | (255 & t[r + 2]) << 8 | 255 & t[r + 3];
                        break;
                    case 1:
                        n = (255 & t[r + 1]) << 24 | (255 & t[r + 2]) << 16 | (255 & t[r + 3]) << 8 | 255 & t[r]
                }
                var o = 4 * a;
                switch (0 == (255 & n) ? 0 != n && (n = 0) : 255 != (255 & n) && (lime_math_color__$RGBA_RGBA_$Impl_$.a16 = lime_math_color__$RGBA_RGBA_$Impl_$.__alpha16[255 & n], n = ((n >> 24 & 255) * lime_math_color__$RGBA_RGBA_$Impl_$.a16 >> 16 & 255) << 24 | ((n >> 16 & 255) * lime_math_color__$RGBA_RGBA_$Impl_$.a16 >> 16 & 255) << 16 | ((n >> 8 & 255) * lime_math_color__$RGBA_RGBA_$Impl_$.a16 >> 16 & 255) << 8 | 255 & n), l) {
                    case 2:
                        t[o] = n >> 8 & 255, t[o + 1] = n >> 16 & 255, t[o + 2] = n >> 24 & 255, t[o + 3] = 255 & n;
                        break;
                    case 0:
                        t[o] = n >> 24 & 255, t[o + 1] = n >> 16 & 255, t[o + 2] = n >> 8 & 255, t[o + 3] = 255 & n;
                        break;
                    case 1:
                        t[o] = 255 & n, t[o + 1] = n >> 24 & 255, t[o + 2] = n >> 16 & 255, t[o + 3] = n >> 8 & 255
                }
            }
            e.buffer.premultiplied = !0, e.dirty = !0, e.version++
        }
    }, lime_graphics_utils_ImageDataUtil.setFormat = function(e, t) {
        var n = e.buffer.data;
        if (null != n) {
            var l, i, s, a, r, o, d, _, h, p, c, Q, U, m = n.length / 4 | 0;
            switch (e.get_format()) {
                case 0:
                    i = 0, s = 1, a = 2, r = 3;
                    break;
                case 1:
                    i = 1, s = 2, a = 3, r = 0;
                    break;
                case 2:
                    i = 2, s = 1, a = 0, r = 3
            }
            switch (t) {
                case 0:
                    o = 0, d = 1, _ = 2, h = 3;
                    break;
                case 1:
                    o = 1, d = 2, _ = 3, h = 0;
                    break;
                case 2:
                    o = 2, d = 1, _ = 0, h = 3
            }
            for (var u = 0; u < m;) {
                p = n[(l = 4 * u++) + i], c = n[l + s], Q = n[l + a], U = n[l + r], n[l + o] = p, n[l + d] = c, n[l + _] = Q, n[l + h] = U
            }
            e.buffer.format = t, e.dirty = !0, e.version++
        }
    }, lime_graphics_utils_ImageDataUtil.setPixel32 = function(e, t, n, l, i) {
        var s;
        switch (i) {
            case 1:
                s = (255 & l >> 16) << 24 | (255 & l >> 8) << 16 | (255 & l) << 8 | 255 & l >> 24;
                break;
            case 2:
                s = (255 & l >> 8) << 24 | (255 & l >> 16) << 16 | (255 & l >> 24) << 8 | 255 & l;
                break;
            default:
                s = l
        }
        e.get_transparent() || (s = (255 & s >> 24) << 24 | (255 & s >> 16) << 16 | (255 & s >> 8) << 8 | 255);
        var a = e.buffer.data,
            r = 4 * (n + e.offsetY) * e.buffer.width + 4 * (t + e.offsetX);
        switch (e.buffer.premultiplied && (0 == (255 & s) ? 0 != s && (s = 0) : 255 != (255 & s) && (lime_math_color__$RGBA_RGBA_$Impl_$.a16 = lime_math_color__$RGBA_RGBA_$Impl_$.__alpha16[255 & s], s = ((s >> 24 & 255) * lime_math_color__$RGBA_RGBA_$Impl_$.a16 >> 16 & 255) << 24 | ((s >> 16 & 255) * lime_math_color__$RGBA_RGBA_$Impl_$.a16 >> 16 & 255) << 16 | ((s >> 8 & 255) * lime_math_color__$RGBA_RGBA_$Impl_$.a16 >> 16 & 255) << 8 | 255 & s)), e.buffer.format) {
            case 2:
                a[r] = s >> 8 & 255, a[r + 1] = s >> 16 & 255, a[r + 2] = s >> 24 & 255, a[r + 3] = 255 & s;
                break;
            case 0:
                a[r] = s >> 24 & 255, a[r + 1] = s >> 16 & 255, a[r + 2] = s >> 8 & 255, a[r + 3] = 255 & s;
                break;
            case 1:
                a[r] = 255 & s, a[r + 1] = s >> 24 & 255, a[r + 2] = s >> 16 & 255, a[r + 3] = s >> 8 & 255
        }
        e.dirty = !0, e.version++
    }, lime_graphics_utils_ImageDataUtil.unmultiplyAlpha = function(e) {
        var t = e.buffer.data;
        if (null != t) {
            for (var n, l = e.buffer.format, i = t.length / 4 | 0, s = 0; s < i;) {
                var a = s++,
                    r = 4 * a;
                switch (l) {
                    case 2:
                        n = (255 & t[r + 2]) << 24 | (255 & t[r + 1]) << 16 | (255 & t[r]) << 8 | 255 & t[r + 3];
                        break;
                    case 0:
                        n = (255 & t[r]) << 24 | (255 & t[r + 1]) << 16 | (255 & t[r + 2]) << 8 | 255 & t[r + 3];
                        break;
                    case 1:
                        n = (255 & t[r + 1]) << 24 | (255 & t[r + 2]) << 16 | (255 & t[r + 3]) << 8 | 255 & t[r]
                }
                if (0 != (255 & n) && 255 != (255 & n)) {
                    var o;
                    lime_math_color__$RGBA_RGBA_$Impl_$.unmult = 255 / (255 & n);
                    var d, _ = Math.round((n >> 24 & 255) * lime_math_color__$RGBA_RGBA_$Impl_$.unmult);
                    o = lime_math_color__$RGBA_RGBA_$Impl_$.__clamp[_];
                    var h = Math.round((n >> 16 & 255) * lime_math_color__$RGBA_RGBA_$Impl_$.unmult);
                    d = lime_math_color__$RGBA_RGBA_$Impl_$.__clamp[h];
                    var p = Math.round((n >> 8 & 255) * lime_math_color__$RGBA_RGBA_$Impl_$.unmult);
                    n = (255 & o) << 24 | (255 & d) << 16 | (255 & lime_math_color__$RGBA_RGBA_$Impl_$.__clamp[p]) << 8 | 255 & n
                }
                var c = 4 * a;
                switch (l) {
                    case 2:
                        t[c] = n >> 8 & 255, t[c + 1] = n >> 16 & 255, t[c + 2] = n >> 24 & 255, t[c + 3] = 255 & n;
                        break;
                    case 0:
                        t[c] = n >> 24 & 255, t[c + 1] = n >> 16 & 255, t[c + 2] = n >> 8 & 255, t[c + 3] = 255 & n;
                        break;
                    case 1:
                        t[c] = 255 & n, t[c + 1] = n >> 24 & 255, t[c + 2] = n >> 16 & 255, t[c + 3] = n >> 8 & 255
                }
            }
            e.buffer.premultiplied = !1, e.dirty = !0, e.version++
        }
    };
    var lime_graphics_utils__$ImageDataUtil_ImageDataView = function(e, t) {
        this.image = e, null == t ? this.rect = e.get_rect() : (t.x < 0 && (t.x = 0), t.y < 0 && (t.y = 0), t.x + t.width > e.width && (t.width = e.width - t.x), t.y + t.height > e.height && (t.height = e.height - t.y), t.width < 0 && (t.width = 0), t.height < 0 && (t.height = 0), this.rect = t), this.stride = e.buffer.get_stride(), this.x = Math.ceil(this.rect.x), this.y = Math.ceil(this.rect.y), this.width = Math.floor(this.rect.width), this.height = Math.floor(this.rect.height), this.offset = this.stride * (this.y + e.offsetY) + 4 * (this.x + e.offsetX)
    };
    $hxClasses["lime.graphics.utils._ImageDataUtil.ImageDataView"] = lime_graphics_utils__$ImageDataUtil_ImageDataView, lime_graphics_utils__$ImageDataUtil_ImageDataView.__name__ = ["lime", "graphics", "utils", "_ImageDataUtil", "ImageDataView"], lime_graphics_utils__$ImageDataUtil_ImageDataView.prototype = {
        x: null,
        y: null,
        height: null,
        width: null,
        image: null,
        offset: null,
        rect: null,
        stride: null,
        __class__: lime_graphics_utils__$ImageDataUtil_ImageDataView
    };
    var lime_math__$ColorMatrix_ColorMatrix_$Impl_$ = {};
    $hxClasses["lime.math._ColorMatrix.ColorMatrix_Impl_"] = lime_math__$ColorMatrix_ColorMatrix_$Impl_$, lime_math__$ColorMatrix_ColorMatrix_$Impl_$.__name__ = ["lime", "math", "_ColorMatrix", "ColorMatrix_Impl_"], lime_math__$ColorMatrix_ColorMatrix_$Impl_$.getAlphaTable = function(e) {
        var t, n;
        null == lime_math__$ColorMatrix_ColorMatrix_$Impl_$.__alphaTable && (t = new Uint8Array(256), lime_math__$ColorMatrix_ColorMatrix_$Impl_$.__alphaTable = t);
        lime_math__$ColorMatrix_ColorMatrix_$Impl_$.__alphaTable[0] = 0;
        for (var l = 1; l < 256;) {
            var i = l++;
            (n = Math.floor(i * e[18] + 255 * e[19])) > 255 && (n = 255), n < 0 && (n = 0), lime_math__$ColorMatrix_ColorMatrix_$Impl_$.__alphaTable[i] = n
        }
        return lime_math__$ColorMatrix_ColorMatrix_$Impl_$.__alphaTable
    }, lime_math__$ColorMatrix_ColorMatrix_$Impl_$.getBlueTable = function(e) {
        var t, n;
        null == lime_math__$ColorMatrix_ColorMatrix_$Impl_$.__blueTable && (t = new Uint8Array(256), lime_math__$ColorMatrix_ColorMatrix_$Impl_$.__blueTable = t);
        for (var l = 0; l < 256;) {
            var i = l++;
            (n = Math.floor(i * e[12] + 255 * e[14])) > 255 && (n = 255), n < 0 && (n = 0), lime_math__$ColorMatrix_ColorMatrix_$Impl_$.__blueTable[i] = n
        }
        return lime_math__$ColorMatrix_ColorMatrix_$Impl_$.__blueTable
    }, lime_math__$ColorMatrix_ColorMatrix_$Impl_$.getGreenTable = function(e) {
        var t, n;
        null == lime_math__$ColorMatrix_ColorMatrix_$Impl_$.__greenTable && (t = new Uint8Array(256), lime_math__$ColorMatrix_ColorMatrix_$Impl_$.__greenTable = t);
        for (var l = 0; l < 256;) {
            var i = l++;
            (n = Math.floor(i * e[6] + 255 * e[9])) > 255 && (n = 255), n < 0 && (n = 0), lime_math__$ColorMatrix_ColorMatrix_$Impl_$.__greenTable[i] = n
        }
        return lime_math__$ColorMatrix_ColorMatrix_$Impl_$.__greenTable
    }, lime_math__$ColorMatrix_ColorMatrix_$Impl_$.getRedTable = function(e) {
        var t, n;
        null == lime_math__$ColorMatrix_ColorMatrix_$Impl_$.__redTable && (t = new Uint8Array(256), lime_math__$ColorMatrix_ColorMatrix_$Impl_$.__redTable = t);
        for (var l = 0; l < 256;) {
            var i = l++;
            (n = Math.floor(i * e[0] + 255 * e[4])) > 255 && (n = 255), n < 0 && (n = 0), lime_math__$ColorMatrix_ColorMatrix_$Impl_$.__redTable[i] = n
        }
        return lime_math__$ColorMatrix_ColorMatrix_$Impl_$.__redTable
    }, lime_math__$ColorMatrix_ColorMatrix_$Impl_$.__toFlashColorTransform = function(e) {
        return null
    };
    var lime_math__$Matrix4_Matrix4_$Impl_$ = {};
    $hxClasses["lime.math._Matrix4.Matrix4_Impl_"] = lime_math__$Matrix4_Matrix4_$Impl_$, lime_math__$Matrix4_Matrix4_$Impl_$.__name__ = ["lime", "math", "_Matrix4", "Matrix4_Impl_"], lime_math__$Matrix4_Matrix4_$Impl_$._new = function(e) {
        var t;
        if (null != e && 16 == e.length) t = e;
        else {
            var n = lime_math__$Matrix4_Matrix4_$Impl_$.__identity;
            t = null != n ? new Float32Array(n) : null
        }
        return t
    }, lime_math__$Matrix4_Matrix4_$Impl_$.append = function(e, t) {
        var n = e[0],
            l = e[4],
            i = e[8],
            s = e[12],
            a = e[1],
            r = e[5],
            o = e[9],
            d = e[13],
            _ = e[2],
            h = e[6],
            p = e[10],
            c = e[14],
            Q = e[3],
            U = e[7],
            m = e[11],
            u = e[15],
            F = lime_math__$Matrix4_Matrix4_$Impl_$.get(t, 0),
            N = lime_math__$Matrix4_Matrix4_$Impl_$.get(t, 4),
            S = lime_math__$Matrix4_Matrix4_$Impl_$.get(t, 8),
            W = lime_math__$Matrix4_Matrix4_$Impl_$.get(t, 12),
            B = lime_math__$Matrix4_Matrix4_$Impl_$.get(t, 1),
            Z = lime_math__$Matrix4_Matrix4_$Impl_$.get(t, 5),
            D = lime_math__$Matrix4_Matrix4_$Impl_$.get(t, 9),
            V = lime_math__$Matrix4_Matrix4_$Impl_$.get(t, 13),
            f = lime_math__$Matrix4_Matrix4_$Impl_$.get(t, 2),
            R = lime_math__$Matrix4_Matrix4_$Impl_$.get(t, 6),
            T = lime_math__$Matrix4_Matrix4_$Impl_$.get(t, 10),
            J = lime_math__$Matrix4_Matrix4_$Impl_$.get(t, 14),
            g = lime_math__$Matrix4_Matrix4_$Impl_$.get(t, 3),
            b = lime_math__$Matrix4_Matrix4_$Impl_$.get(t, 7),
            E = lime_math__$Matrix4_Matrix4_$Impl_$.get(t, 11),
            v = lime_math__$Matrix4_Matrix4_$Impl_$.get(t, 15);
        e[0] = n * F + a * N + _ * S + Q * W, e[1] = n * B + a * Z + _ * D + Q * V, e[2] = n * f + a * R + _ * T + Q * J, e[3] = n * g + a * b + _ * E + Q * v, e[4] = l * F + r * N + h * S + U * W, e[5] = l * B + r * Z + h * D + U * V, e[6] = l * f + r * R + h * T + U * J, e[7] = l * g + r * b + h * E + U * v, e[8] = i * F + o * N + p * S + m * W, e[9] = i * B + o * Z + p * D + m * V, e[10] = i * f + o * R + p * T + m * J, e[11] = i * g + o * b + p * E + m * v, e[12] = s * F + d * N + c * S + u * W, e[13] = s * B + d * Z + c * D + u * V, e[14] = s * f + d * R + c * T + u * J, e[15] = s * g + d * b + c * E + u * v
    }, lime_math__$Matrix4_Matrix4_$Impl_$.createOrtho = function(e, t, n, l, i, s) {
        var a, r = 1 / (t - e),
            o = 1 / (l - n),
            d = 1 / (s - i);
        return lime_math__$Matrix4_Matrix4_$Impl_$._new(null != (a = [2 * r, 0, 0, 0, 0, 2 * o, 0, 0, 0, 0, -2 * d, 0, -(e + t) * r, -(n + l) * o, -(i + s) * d, 1]) ? new Float32Array(a) : null)
    }, lime_math__$Matrix4_Matrix4_$Impl_$.identity = function(e) {
        e[0] = 1, e[1] = 0, e[2] = 0, e[3] = 0, e[4] = 0, e[5] = 1, e[6] = 0, e[7] = 0, e[8] = 0, e[9] = 0, e[10] = 1, e[11] = 0, e[12] = 0, e[13] = 0, e[14] = 0, e[15] = 1
    }, lime_math__$Matrix4_Matrix4_$Impl_$.get = function(e, t) {
        return e[t]
    }, lime_math__$Matrix4_Matrix4_$Impl_$.set = function(e, t, n) {
        return e[t] = n, n
    };
    var lime_math_Rectangle = function(e, t, n, l) {
        null == l && (l = 0), null == n && (n = 0), null == t && (t = 0), null == e && (e = 0), this.x = e, this.y = t, this.width = n, this.height = l
    };
    $hxClasses["lime.math.Rectangle"] = lime_math_Rectangle, lime_math_Rectangle.__name__ = ["lime", "math", "Rectangle"], lime_math_Rectangle.prototype = {
        height: null,
        width: null,
        x: null,
        y: null,
        offset: function(e, t) {
            this.x += e, this.y += t
        },
        setTo: function(e, t, n, l) {
            this.x = e, this.y = t, this.width = n, this.height = l
        },
        __toFlashRectangle: function() {
            return null
        },
        __class__: lime_math_Rectangle
    };
    var lime_math_Vector2 = function(e, t) {
        null == t && (t = 0), null == e && (e = 0), this.x = e, this.y = t
    };
    $hxClasses["lime.math.Vector2"] = lime_math_Vector2, lime_math_Vector2.__name__ = ["lime", "math", "Vector2"], lime_math_Vector2.prototype = {
        x: null,
        y: null,
        offset: function(e, t) {
            this.x += e, this.y += t
        },
        setTo: function(e, t) {
            this.x = e, this.y = t
        },
        __toFlashPoint: function() {
            return null
        },
        __class__: lime_math_Vector2
    };
    var lime_math_Vector4 = function() {};
    $hxClasses["lime.math.Vector4"] = lime_math_Vector4, lime_math_Vector4.__name__ = ["lime", "math", "Vector4"], lime_math_Vector4.prototype = {
        w: null,
        x: null,
        y: null,
        z: null,
        __class__: lime_math_Vector4
    };
    var lime_math_color__$RGBA_RGBA_$Impl_$ = {};
    $hxClasses["lime.math.color._RGBA.RGBA_Impl_"] = lime_math_color__$RGBA_RGBA_$Impl_$, lime_math_color__$RGBA_RGBA_$Impl_$.__name__ = ["lime", "math", "color", "_RGBA", "RGBA_Impl_"];
    var lime_media_ALAudioContext = function() {};
    $hxClasses["lime.media.ALAudioContext"] = lime_media_ALAudioContext, lime_media_ALAudioContext.__name__ = ["lime", "media", "ALAudioContext"];
    var lime_media_ALCAudioContext = function() {};
    $hxClasses["lime.media.ALCAudioContext"] = lime_media_ALCAudioContext, lime_media_ALCAudioContext.__name__ = ["lime", "media", "ALCAudioContext"];
    var lime_media_AudioBuffer = function() {};
    $hxClasses["lime.media.AudioBuffer"] = lime_media_AudioBuffer, lime_media_AudioBuffer.__name__ = ["lime", "media", "AudioBuffer"], lime_media_AudioBuffer.fromBytes = function(e) {
        return null
    }, lime_media_AudioBuffer.fromFile = function(e) {
        if (null == e) return null;
        var t = new lime_media_AudioBuffer;
        return t.__srcHowl = new Howl({
            src: [e]
        }), t
    }, lime_media_AudioBuffer.fromFiles = function(e) {
        var t = new lime_media_AudioBuffer;
        return t.__srcHowl = new Howl({
            src: e
        }), t
    }, lime_media_AudioBuffer.loadFromFile = function(e) {
        var t = new lime_app_Promise,
            n = lime_media_AudioBuffer.fromFile(e);
        return null != n ? null != n && (n.__srcHowl.on("load", function() {
            t.complete(n)
        }), n.__srcHowl.on("loaderror", function() {
            t.error(null)
        }), n.__srcHowl.load()) : t.error(null), t.future
    }, lime_media_AudioBuffer.loadFromFiles = function(e) {
        var t = new lime_app_Promise,
            n = lime_media_AudioBuffer.fromFiles(e);
        return null != n ? (n.__srcHowl.on("load", function() {
            t.complete(n)
        }), n.__srcHowl.on("loaderror", function() {
            t.error(null)
        }), n.__srcHowl.load()) : t.error(null), t.future
    }, lime_media_AudioBuffer.prototype = {
        __srcHowl: null,
        __class__: lime_media_AudioBuffer
    };
    var lime_media_AudioContext = $hxClasses["lime.media.AudioContext"] = {
        __ename__: ["lime", "media", "AudioContext"],
        __constructs__: ["OPENAL", "HTML5", "WEB", "FLASH", "CUSTOM"]
    };
    lime_media_AudioContext.OPENAL = function(e, t) {
        var n = ["OPENAL", 0, e, t];
        return n.__enum__ = lime_media_AudioContext, n.toString = $estr, n
    }, lime_media_AudioContext.HTML5 = function(e) {
        var t = ["HTML5", 1, e];
        return t.__enum__ = lime_media_AudioContext, t.toString = $estr, t
    }, lime_media_AudioContext.WEB = function(e) {
        var t = ["WEB", 2, e];
        return t.__enum__ = lime_media_AudioContext, t.toString = $estr, t
    }, lime_media_AudioContext.FLASH = function(e) {
        var t = ["FLASH", 3, e];
        return t.__enum__ = lime_media_AudioContext, t.toString = $estr, t
    }, lime_media_AudioContext.CUSTOM = function(e) {
        var t = ["CUSTOM", 4, e];
        return t.__enum__ = lime_media_AudioContext, t.toString = $estr, t
    };
    var lime_media_AudioManager = function() {};
    $hxClasses["lime.media.AudioManager"] = lime_media_AudioManager, lime_media_AudioManager.__name__ = ["lime", "media", "AudioManager"], lime_media_AudioManager.init = function(e) {
        if (null == lime_media_AudioManager.context)
            if (null == e) try {
                window.AudioContext = window.AudioContext || window.webkitAudioContext, lime_media_AudioManager.context = lime_media_AudioContext.WEB(new AudioContext)
            } catch (e) {
                e instanceof js__$Boot_HaxeError && (e = e.val), lime_media_AudioManager.context = lime_media_AudioContext.HTML5(new lime_media_HTML5AudioContext)
            } else lime_media_AudioManager.context = e
    };
    var lime_media_AudioSource = function() {
        this.onComplete = new lime_app__$Event_$Void_$Void
    };
    $hxClasses["lime.media.AudioSource"] = lime_media_AudioSource, lime_media_AudioSource.__name__ = ["lime", "media", "AudioSource"], lime_media_AudioSource.prototype = {
        onComplete: null,
        buffer: null,
        offset: null,
        backend: null,
        dispose: function() {
            this.backend.dispose()
        },
        play: function() {
            this.backend.play()
        },
        stop: function() {
            this.backend.stop()
        },
        get_currentTime: function() {
            return this.backend.getCurrentTime()
        },
        set_currentTime: function(e) {
            return this.backend.setCurrentTime(e)
        },
        get_gain: function() {
            return this.backend.getGain()
        },
        set_gain: function(e) {
            return this.backend.setGain(e)
        },
        get_position: function() {
            return this.backend.getPosition()
        },
        set_position: function(e) {
            return this.backend.setPosition(e)
        },
        __class__: lime_media_AudioSource,
        __properties__: {
            set_position: "set_position",
            get_position: "get_position",
            set_gain: "set_gain",
            get_gain: "get_gain",
            set_currentTime: "set_currentTime",
            get_currentTime: "get_currentTime"
        }
    };
    var lime_media_FlashAudioContext = function() {};
    $hxClasses["lime.media.FlashAudioContext"] = lime_media_FlashAudioContext, lime_media_FlashAudioContext.__name__ = ["lime", "media", "FlashAudioContext"];
    var lime_media_HTML5AudioContext = function() {};
    $hxClasses["lime.media.HTML5AudioContext"] = lime_media_HTML5AudioContext, lime_media_HTML5AudioContext.__name__ = ["lime", "media", "HTML5AudioContext"], lime_media_HTML5AudioContext.prototype = {
        __class__: lime_media_HTML5AudioContext
    };
    var lime_net__$IHTTPRequest = function() {};
    $hxClasses["lime.net._IHTTPRequest"] = lime_net__$IHTTPRequest, lime_net__$IHTTPRequest.__name__ = ["lime", "net", "_IHTTPRequest"], lime_net__$IHTTPRequest.prototype = {
        contentType: null,
        data: null,
        enableResponseHeaders: null,
        formData: null,
        headers: null,
        method: null,
        responseHeaders: null,
        responseStatus: null,
        timeout: null,
        __class__: lime_net__$IHTTPRequest
    };
    var lime_net__$HTTPRequest_AbstractHTTPRequest = function(e) {
        this.uri = e, this.contentType = "application/x-www-form-urlencoded", this.followRedirects = !0, this.formData = new haxe_ds_StringMap, this.headers = [], this.method = "GET", this.timeout = 3e4, this.backend = new lime__$backend_html5_HTML5HTTPRequest, this.backend.init(this)
    };
    $hxClasses["lime.net._HTTPRequest.AbstractHTTPRequest"] = lime_net__$HTTPRequest_AbstractHTTPRequest, lime_net__$HTTPRequest_AbstractHTTPRequest.__name__ = ["lime", "net", "_HTTPRequest", "AbstractHTTPRequest"], lime_net__$HTTPRequest_AbstractHTTPRequest.__interfaces__ = [lime_net__$IHTTPRequest], lime_net__$HTTPRequest_AbstractHTTPRequest.prototype = {
        contentType: null,
        data: null,
        enableResponseHeaders: null,
        followRedirects: null,
        formData: null,
        headers: null,
        method: null,
        responseData: null,
        responseHeaders: null,
        responseStatus: null,
        timeout: null,
        uri: null,
        backend: null,
        __class__: lime_net__$HTTPRequest_AbstractHTTPRequest
    };
    var lime_net__$HTTPRequest_$Bytes = function(e) {
        lime_net__$HTTPRequest_AbstractHTTPRequest.call(this, e)
    };
    $hxClasses["lime.net._HTTPRequest_Bytes"] = lime_net__$HTTPRequest_$Bytes, lime_net__$HTTPRequest_$Bytes.__name__ = ["lime", "net", "_HTTPRequest_Bytes"], lime_net__$HTTPRequest_$Bytes.__super__ = lime_net__$HTTPRequest_AbstractHTTPRequest, lime_net__$HTTPRequest_$Bytes.prototype = $extend(lime_net__$HTTPRequest_AbstractHTTPRequest.prototype, {
        fromBytes: function(e) {
            return e
        },
        load: function(e) {
            var t = this;
            null != e && (this.uri = e);
            var n = new lime_app_Promise,
                l = this.backend.loadData(this.uri);
            return l.onProgress($bind(n, n.progress)), l.onError($bind(n, n.error)), l.onComplete(function(e) {
                t.responseData = t.fromBytes(e), n.complete(t.responseData)
            }), n.future
        },
        __class__: lime_net__$HTTPRequest_$Bytes
    });
    var lime_net_HTTPRequestHeader = function(e, t) {
        null == t && (t = ""), this.name = e, this.value = t
    };
    $hxClasses["lime.net.HTTPRequestHeader"] = lime_net_HTTPRequestHeader, lime_net_HTTPRequestHeader.__name__ = ["lime", "net", "HTTPRequestHeader"], lime_net_HTTPRequestHeader.prototype = {
        name: null,
        value: null,
        __class__: lime_net_HTTPRequestHeader
    };
    var lime_net__$HTTPRequest_$lime_$utils_$Bytes = function(e) {
        lime_net__$HTTPRequest_$Bytes.call(this, e)
    };
    $hxClasses["lime.net._HTTPRequest_lime_utils_Bytes"] = lime_net__$HTTPRequest_$lime_$utils_$Bytes, lime_net__$HTTPRequest_$lime_$utils_$Bytes.__name__ = ["lime", "net", "_HTTPRequest_lime_utils_Bytes"], lime_net__$HTTPRequest_$lime_$utils_$Bytes.__super__ = lime_net__$HTTPRequest_$Bytes, lime_net__$HTTPRequest_$lime_$utils_$Bytes.prototype = $extend(lime_net__$HTTPRequest_$Bytes.prototype, {
        fromBytes: function(e) {
            return lime_utils__$Bytes_Bytes_$Impl_$.fromBytes(e)
        },
        __class__: lime_net__$HTTPRequest_$lime_$utils_$Bytes
    });
    var lime_system_Clipboard = function() {};
    $hxClasses["lime.system.Clipboard"] = lime_system_Clipboard, lime_system_Clipboard.__name__ = ["lime", "system", "Clipboard"], lime_system_Clipboard.__properties__ = {
        set_text: "set_text",
        get_text: "get_text"
    }, lime_system_Clipboard.get_text = function() {
        return lime_system_Clipboard._text
    }, lime_system_Clipboard.set_text = function(e) {
        lime_system_Clipboard._text = e;
        var t = lime_app_Application.current.__windows[0];
        return null != t && t.backend.setClipboard(e), e
    };
    var lime_system_System = function() {};
    $hxClasses["lime.system.System"] = lime_system_System, lime_system_System.__name__ = ["lime", "system", "System"], lime_system_System.exit = function(e) {}, lime_system_System.getTimer = function() {
        return (new Date).getTime()
    }, lime_system_System.openURL = function(e, t) {
        null == t && (t = "_blank"), null != e && window.open(e, t)
    };
    var lime_system_ThreadPool = function(e, t) {
        null == t && (t = 1), null == e && (e = 0), this.onError = new lime_app__$Event_$Dynamic_$Void, this.onComplete = new lime_app__$Event_$Dynamic_$Void, this.doWork = new lime_app__$Event_$Dynamic_$Void, this.minThreads = e, this.maxThreads = t, this.currentThreads = 0
    };
    $hxClasses["lime.system.ThreadPool"] = lime_system_ThreadPool, lime_system_ThreadPool.__name__ = ["lime", "system", "ThreadPool"], lime_system_ThreadPool.prototype = {
        currentThreads: null,
        doWork: null,
        maxThreads: null,
        minThreads: null,
        onComplete: null,
        onError: null,
        queue: function(e) {
            this.doWork.dispatch(e)
        },
        sendComplete: function(e) {
            this.onComplete.dispatch(e)
        },
        sendError: function(e) {
            this.onError.dispatch(e)
        },
        __class__: lime_system_ThreadPool
    };
    var lime_text_Font = function(e) {
        null != e && (this.name = e), null != this.__fontPath && this.__fromFile(this.__fontPath)
    };
    $hxClasses["lime.text.Font"] = lime_text_Font, lime_text_Font.__name__ = ["lime", "text", "Font"], lime_text_Font.fromFile = function(e) {
        if (null == e) return null;
        var t = new lime_text_Font;
        return t.__fromFile(e), t
    }, lime_text_Font.loadFromName = function(e) {
        return (new lime_text_Font).__loadFromName(e)
    }, lime_text_Font.__makeLoaderNode = function(e) {
        var t = window.document.createElement("span");
        t.innerHTML = "giItT1WQy@!-/#";
        var n = t.style;
        return n.position = "absolute", n.left = "-10000px", n.top = "-10000px", n.fontSize = "300px", n.fontFamily = e, n.fontVariant = "normal", n.fontStyle = "normal", n.fontWeight = "normal", n.letterSpacing = "0", window.document.body.appendChild(t), t
    }, lime_text_Font.prototype = {
        name: null,
        __fontPath: null,
        __fromFile: function(e) {
            this.__fontPath = e
        },
        __loadFromName: function(e) {
            var t = this,
                n = new lime_app_Promise;
            this.name = e;
            var l = e,
                i = window.navigator.userAgent.toLowerCase();
            if (i.indexOf(" safari/") >= 0 && i.indexOf(" chrome/") < 0 || !window.document.fonts || !$bind($_ = window.document.fonts, $_.load)) {
                var s = lime_text_Font.__makeLoaderNode("sans-serif"),
                    a = lime_text_Font.__makeLoaderNode("serif"),
                    r = s.offsetWidth,
                    o = a.offsetWidth;
                s.style.fontFamily = "'" + e + "', sans-serif", a.style.fontFamily = "'" + e + "', serif";
                var d = null,
                    _ = !1,
                    h = function() {
                        return (s.offsetWidth != r || a.offsetWidth != o) && (_ ? (null != d && window.clearInterval(d), s.parentNode.removeChild(s), a.parentNode.removeChild(a), s = null, a = null, n.complete(t), !0) : (_ = !0, !1))
                    };
                h() || (d = window.setInterval(h, 50))
            } else window.document.fonts.load("1em '" + l + "'").then(function(e) {
                n.complete(t)
            });
            return n.future
        },
        __class__: lime_text_Font
    };
    var lime_ui_Gamepad = function(e) {
        this.onDisconnect = new lime_app__$Event_$Void_$Void, this.onButtonUp = new lime_app__$Event_$lime_$ui_$GamepadButton_$Void, this.onButtonDown = new lime_app__$Event_$lime_$ui_$GamepadButton_$Void, this.onAxisMove = new lime_app__$Event_$lime_$ui_$GamepadAxis_$Float_$Void, this.id = e, this.connected = !0
    };
    $hxClasses["lime.ui.Gamepad"] = lime_ui_Gamepad, lime_ui_Gamepad.__name__ = ["lime", "ui", "Gamepad"], lime_ui_Gamepad.__connect = function(e) {
        if (!lime_ui_Gamepad.devices.h.hasOwnProperty(e)) {
            var t = new lime_ui_Gamepad(e);
            lime_ui_Gamepad.devices.h[e] = t, lime_ui_Gamepad.onConnect.dispatch(t)
        }
    }, lime_ui_Gamepad.__disconnect = function(e) {
        var t = lime_ui_Gamepad.devices.h[e];
        null != t && (t.connected = !1), lime_ui_Gamepad.devices.remove(e), null != t && t.onDisconnect.dispatch()
    }, lime_ui_Gamepad.prototype = {
        connected: null,
        id: null,
        onAxisMove: null,
        onButtonDown: null,
        onButtonUp: null,
        onDisconnect: null,
        get_guid: function() {
            return lime_ui_Joystick.__getDeviceData()[this.id].id
        },
        get_name: function() {
            return lime_ui_Joystick.__getDeviceData()[this.id].id
        },
        __class__: lime_ui_Gamepad,
        __properties__: {
            get_name: "get_name",
            get_guid: "get_guid"
        }
    };
    var lime_ui_Joystick = function(e) {
        this.onTrackballMove = new lime_app__$Event_$Int_$Float_$Void, this.onHatMove = new lime_app__$Event_$Int_$lime_$ui_$JoystickHatPosition_$Void, this.onDisconnect = new lime_app__$Event_$Void_$Void, this.onButtonUp = new lime_app__$Event_$Int_$Void, this.onButtonDown = new lime_app__$Event_$Int_$Void, this.onAxisMove = new lime_app__$Event_$Int_$Float_$Void, this.id = e, this.connected = !0
    };
    $hxClasses["lime.ui.Joystick"] = lime_ui_Joystick, lime_ui_Joystick.__name__ = ["lime", "ui", "Joystick"], lime_ui_Joystick.__connect = function(e) {
        if (!lime_ui_Joystick.devices.h.hasOwnProperty(e)) {
            var t = new lime_ui_Joystick(e);
            lime_ui_Joystick.devices.h[e] = t, lime_ui_Joystick.onConnect.dispatch(t)
        }
    }, lime_ui_Joystick.__disconnect = function(e) {
        var t = lime_ui_Joystick.devices.h[e];
        null != t && (t.connected = !1), lime_ui_Joystick.devices.remove(e), null != t && t.onDisconnect.dispatch()
    }, lime_ui_Joystick.__getDeviceData = function() {
        return navigator.getGamepads ? navigator.getGamepads() : navigator.webkitGetGamepads ? navigator.webkitGetGamepads() : null
    }, lime_ui_Joystick.prototype = {
        connected: null,
        id: null,
        onAxisMove: null,
        onButtonDown: null,
        onButtonUp: null,
        onDisconnect: null,
        onHatMove: null,
        onTrackballMove: null,
        __class__: lime_ui_Joystick
    };
    var lime_ui__$KeyModifier_KeyModifier_$Impl_$ = {};
    $hxClasses["lime.ui._KeyModifier.KeyModifier_Impl_"] = lime_ui__$KeyModifier_KeyModifier_$Impl_$, lime_ui__$KeyModifier_KeyModifier_$Impl_$.__name__ = ["lime", "ui", "_KeyModifier", "KeyModifier_Impl_"], lime_ui__$KeyModifier_KeyModifier_$Impl_$.__properties__ = {
        get_shiftKey: "get_shiftKey",
        get_metaKey: "get_metaKey",
        get_ctrlKey: "get_ctrlKey",
        get_altKey: "get_altKey"
    }, lime_ui__$KeyModifier_KeyModifier_$Impl_$.get_altKey = function(e) {
        return (256 & e) > 0 || (512 & e) > 0
    }, lime_ui__$KeyModifier_KeyModifier_$Impl_$.get_ctrlKey = function(e) {
        return (64 & e) > 0 || (128 & e) > 0
    }, lime_ui__$KeyModifier_KeyModifier_$Impl_$.get_metaKey = function(e) {
        return (1024 & e) > 0 || (2048 & e) > 0
    }, lime_ui__$KeyModifier_KeyModifier_$Impl_$.get_shiftKey = function(e) {
        return (1 & e) > 0 || (2 & e) > 0
    };
    var lime_ui_Mouse = function() {};
    $hxClasses["lime.ui.Mouse"] = lime_ui_Mouse, lime_ui_Mouse.__name__ = ["lime", "ui", "Mouse"], lime_ui_Mouse.__properties__ = {
        set_cursor: "set_cursor"
    }, lime_ui_Mouse.set_cursor = function(e) {
        return lime__$backend_html5_HTML5Mouse.set_cursor(e)
    };
    var lime_ui_MouseCursor = $hxClasses["lime.ui.MouseCursor"] = {
        __ename__: ["lime", "ui", "MouseCursor"],
        __constructs__: ["ARROW", "CROSSHAIR", "DEFAULT", "MOVE", "POINTER", "RESIZE_NESW", "RESIZE_NS", "RESIZE_NWSE", "RESIZE_WE", "TEXT", "WAIT", "WAIT_ARROW", "CUSTOM"]
    };
    lime_ui_MouseCursor.ARROW = ["ARROW", 0], lime_ui_MouseCursor.ARROW.toString = $estr, lime_ui_MouseCursor.ARROW.__enum__ = lime_ui_MouseCursor, lime_ui_MouseCursor.CROSSHAIR = ["CROSSHAIR", 1], lime_ui_MouseCursor.CROSSHAIR.toString = $estr, lime_ui_MouseCursor.CROSSHAIR.__enum__ = lime_ui_MouseCursor, lime_ui_MouseCursor.DEFAULT = ["DEFAULT", 2], lime_ui_MouseCursor.DEFAULT.toString = $estr, lime_ui_MouseCursor.DEFAULT.__enum__ = lime_ui_MouseCursor, lime_ui_MouseCursor.MOVE = ["MOVE", 3], lime_ui_MouseCursor.MOVE.toString = $estr, lime_ui_MouseCursor.MOVE.__enum__ = lime_ui_MouseCursor, lime_ui_MouseCursor.POINTER = ["POINTER", 4], lime_ui_MouseCursor.POINTER.toString = $estr, lime_ui_MouseCursor.POINTER.__enum__ = lime_ui_MouseCursor, lime_ui_MouseCursor.RESIZE_NESW = ["RESIZE_NESW", 5], lime_ui_MouseCursor.RESIZE_NESW.toString = $estr, lime_ui_MouseCursor.RESIZE_NESW.__enum__ = lime_ui_MouseCursor, lime_ui_MouseCursor.RESIZE_NS = ["RESIZE_NS", 6], lime_ui_MouseCursor.RESIZE_NS.toString = $estr, lime_ui_MouseCursor.RESIZE_NS.__enum__ = lime_ui_MouseCursor, lime_ui_MouseCursor.RESIZE_NWSE = ["RESIZE_NWSE", 7], lime_ui_MouseCursor.RESIZE_NWSE.toString = $estr, lime_ui_MouseCursor.RESIZE_NWSE.__enum__ = lime_ui_MouseCursor, lime_ui_MouseCursor.RESIZE_WE = ["RESIZE_WE", 8], lime_ui_MouseCursor.RESIZE_WE.toString = $estr, lime_ui_MouseCursor.RESIZE_WE.__enum__ = lime_ui_MouseCursor, lime_ui_MouseCursor.TEXT = ["TEXT", 9], lime_ui_MouseCursor.TEXT.toString = $estr, lime_ui_MouseCursor.TEXT.__enum__ = lime_ui_MouseCursor, lime_ui_MouseCursor.WAIT = ["WAIT", 10], lime_ui_MouseCursor.WAIT.toString = $estr, lime_ui_MouseCursor.WAIT.__enum__ = lime_ui_MouseCursor, lime_ui_MouseCursor.WAIT_ARROW = ["WAIT_ARROW", 11], lime_ui_MouseCursor.WAIT_ARROW.toString = $estr, lime_ui_MouseCursor.WAIT_ARROW.__enum__ = lime_ui_MouseCursor, lime_ui_MouseCursor.CUSTOM = ["CUSTOM", 12], lime_ui_MouseCursor.CUSTOM.toString = $estr, lime_ui_MouseCursor.CUSTOM.__enum__ = lime_ui_MouseCursor;
    var lime_ui_Touch = function(e, t, n, l, i, s, a) {
        this.x = e, this.y = t, this.id = n, this.dx = l, this.dy = i, this.pressure = s, this.device = a
    };
    $hxClasses["lime.ui.Touch"] = lime_ui_Touch, lime_ui_Touch.__name__ = ["lime", "ui", "Touch"], lime_ui_Touch.prototype = {
        device: null,
        dx: null,
        dy: null,
        id: null,
        pressure: null,
        x: null,
        y: null,
        __class__: lime_ui_Touch
    };
    var lime_ui_Window = function(e) {
        this.onTextInput = new lime_app__$Event_$String_$Void, this.onTextEdit = new lime_app__$Event_$String_$Int_$Int_$Void, this.onRestore = new lime_app__$Event_$Void_$Void, this.onResize = new lime_app__$Event_$Int_$Int_$Void, this.onMove = new lime_app__$Event_$Float_$Float_$Void, this.onMouseWheel = new lime_app__$Event_$Float_$Float_$Void, this.onMouseUp = new lime_app__$Event_$Float_$Float_$Int_$Void, this.onMouseMoveRelative = new lime_app__$Event_$Float_$Float_$Void, this.onMouseMove = new lime_app__$Event_$Float_$Float_$Void, this.onMouseDown = new lime_app__$Event_$Float_$Float_$Int_$Void, this.onMinimize = new lime_app__$Event_$Void_$Void, this.onLeave = new lime_app__$Event_$Void_$Void, this.onKeyUp = new lime_app__$Event_$lime_$ui_$KeyCode_$lime_$ui_$KeyModifier_$Void, this.onKeyDown = new lime_app__$Event_$lime_$ui_$KeyCode_$lime_$ui_$KeyModifier_$Void, this.onFullscreen = new lime_app__$Event_$Void_$Void, this.onFocusOut = new lime_app__$Event_$Void_$Void, this.onFocusIn = new lime_app__$Event_$Void_$Void, this.onEnter = new lime_app__$Event_$Void_$Void, this.onDropFile = new lime_app__$Event_$String_$Void, this.onDeactivate = new lime_app__$Event_$Void_$Void, this.onCreate = new lime_app__$Event_$Void_$Void, this.onClose = new lime_app__$Event_$Void_$Void, this.onActivate = new lime_app__$Event_$Void_$Void, this.config = e, this.__width = 0, this.__height = 0, this.__fullscreen = !1, this.__scale = 1, this.__x = 0, this.__y = 0, this.__title = "", this.id = -1, null != e && (Object.prototype.hasOwnProperty.call(e, "width") && (this.__width = e.width), Object.prototype.hasOwnProperty.call(e, "height") && (this.__height = e.height), Object.prototype.hasOwnProperty.call(e, "x") && (this.__x = e.x), Object.prototype.hasOwnProperty.call(e, "y") && (this.__y = e.y), Object.prototype.hasOwnProperty.call(e, "fullscreen") && (this.__fullscreen = e.fullscreen), Object.prototype.hasOwnProperty.call(e, "borderless") && (this.__borderless = e.borderless), Object.prototype.hasOwnProperty.call(e, "resizable") && (this.__resizable = e.resizable), Object.prototype.hasOwnProperty.call(e, "title") && (this.__title = e.title)), this.backend = new lime__$backend_html5_HTML5Window(this)
    };
    $hxClasses["lime.ui.Window"] = lime_ui_Window, lime_ui_Window.__name__ = ["lime", "ui", "Window"], lime_ui_Window.prototype = {
        application: null,
        config: null,
        id: null,
        onActivate: null,
        onClose: null,
        onCreate: null,
        onDeactivate: null,
        onDropFile: null,
        onEnter: null,
        onFocusIn: null,
        onFocusOut: null,
        onFullscreen: null,
        onKeyDown: null,
        onKeyUp: null,
        onLeave: null,
        onMinimize: null,
        onMouseDown: null,
        onMouseMove: null,
        onMouseMoveRelative: null,
        onMouseUp: null,
        onMouseWheel: null,
        onMove: null,
        onResize: null,
        onRestore: null,
        onTextEdit: null,
        onTextInput: null,
        renderer: null,
        stage: null,
        backend: null,
        __borderless: null,
        __fullscreen: null,
        __height: null,
        __resizable: null,
        __scale: null,
        __title: null,
        __width: null,
        __x: null,
        __y: null,
        close: function() {
            this.backend.close()
        },
        create: function(e) {
            this.application = e, this.backend.create(e), null != this.renderer && this.renderer.create()
        },
        resize: function(e, t) {
            this.backend.resize(e, t), this.__width = e, this.__height = t
        },
        set_fullscreen: function(e) {
            return this.__fullscreen = this.backend.setFullscreen(e)
        },
        set_height: function(e) {
            return this.resize(this.__width, e), this.__height
        },
        set_width: function(e) {
            return this.resize(e, this.__height), this.__width
        },
        __class__: lime_ui_Window,
        __properties__: {
            set_width: "set_width",
            set_height: "set_height",
            set_fullscreen: "set_fullscreen"
        }
    };
    var lime_utils_AssetCache = function() {
        this.enabled = !0, this.audio = new haxe_ds_StringMap, this.font = new haxe_ds_StringMap, this.image = new haxe_ds_StringMap, this.version = 682541
    };
    $hxClasses["lime.utils.AssetCache"] = lime_utils_AssetCache, lime_utils_AssetCache.__name__ = ["lime", "utils", "AssetCache"], lime_utils_AssetCache.prototype = {
        audio: null,
        enabled: null,
        image: null,
        font: null,
        version: null,
        set: function(e, t, n) {
            switch (t) {
                case "FONT":
                    var l = n;
                    this.font.set(e, l);
                    break;
                case "IMAGE":
                    if (!js_Boot.__instanceof(n, lime_graphics_Image)) throw new js__$Boot_HaxeError("Cannot cache non-Image asset: " + Std.string(n) + " as Image");
                    var i = n;
                    this.image.set(e, i);
                    break;
                case "SOUND":
                case "MUSIC":
                    if (!js_Boot.__instanceof(n, lime_media_AudioBuffer)) throw new js__$Boot_HaxeError("Cannot cache non-AudioBuffer asset: " + Std.string(n) + " as AudioBuffer");
                    var s = n;
                    this.audio.set(e, s);
                    break;
                default:
                    throw new js__$Boot_HaxeError(t + " assets are not cachable")
            }
        },
        clear: function(e) {
            if (null == e) this.audio = new haxe_ds_StringMap, this.font = new haxe_ds_StringMap, this.image = new haxe_ds_StringMap;
            else {
                for (var t = this.audio.keys(); t.hasNext();) {
                    var n = t.next();
                    StringTools.startsWith(n, e) && this.audio.remove(n)
                }
                for (var l = this.font.keys(); l.hasNext();) {
                    var i = l.next();
                    StringTools.startsWith(i, e) && this.font.remove(i)
                }
                for (var s = this.image.keys(); s.hasNext();) {
                    var a = s.next();
                    StringTools.startsWith(a, e) && this.image.remove(a)
                }
            }
        },
        __class__: lime_utils_AssetCache
    };
    var lime_utils_AssetManifest = function() {
        this.assets = [], this.basePath = "", this.libraryArgs = [], this.version = 2
    };
    $hxClasses["lime.utils.AssetManifest"] = lime_utils_AssetManifest, lime_utils_AssetManifest.__name__ = ["lime", "utils", "AssetManifest"], lime_utils_AssetManifest.fromBytes = function(e) {
        return null != e ? lime_utils_AssetManifest.parse(e.getString(0, e.length)) : null
    }, lime_utils_AssetManifest.fromFile = function(e) {
        return lime_utils_AssetManifest.fromBytes(lime_utils__$Bytes_Bytes_$Impl_$.fromFile(e))
    }, lime_utils_AssetManifest.parse = function(e) {
        if (null == e || "" == e) return null;
        var t = JSON.parse(e),
            n = new lime_utils_AssetManifest;
        return n.name = t.name, n.libraryType = t.libraryType, n.libraryArgs = t.libraryArgs, n.assets = haxe_Unserializer.run(t.assets), n
    }, lime_utils_AssetManifest.prototype = {
        assets: null,
        basePath: null,
        libraryArgs: null,
        libraryType: null,
        name: null,
        version: null,
        __class__: lime_utils_AssetManifest
    };
    var lime_utils_Assets = function() {};
    $hxClasses["lime.utils.Assets"] = lime_utils_Assets, lime_utils_Assets.__name__ = ["lime", "utils", "Assets"], lime_utils_Assets.exists = function(e, t) {
        null == t && (t = "BINARY");
        var n = new lime_utils__$Assets_LibrarySymbol(e);
        return null != n.library && n.library.exists(n.symbolName, t)
    }, lime_utils_Assets.getAsset = function(e, t, n) {
        if (n && lime_utils_Assets.cache.enabled) switch (t) {
            case "BINARY":
            case "TEXT":
                n = !1;
                break;
            case "FONT":
                var l = lime_utils_Assets.cache.font.get(e);
                if (null != l) return l;
                break;
            case "IMAGE":
                var i = lime_utils_Assets.cache.image.get(e);
                if (lime_utils_Assets.isValidImage(i)) return i;
                break;
            case "MUSIC":
            case "SOUND":
                var s = lime_utils_Assets.cache.audio.get(e);
                if (lime_utils_Assets.isValidAudio(s)) return s;
                break;
            case "TEMPLATE":
                throw new js__$Boot_HaxeError("Not sure how to get template: " + e)
        }
        var a = new lime_utils__$Assets_LibrarySymbol(e);
        if (null != a.library)
            if (a.library.exists(a.symbolName, t)) {
                if (a.library.isLocal(a.symbolName, t)) {
                    var r = a.library.getAsset(a.symbolName, t);
                    return n && lime_utils_Assets.cache.enabled && lime_utils_Assets.cache.set(e, t, r), r
                }
                lime_utils_Log.info(t + ' asset "' + e + '" exists, but only asynchronously', {
                    fileName: "Assets.hx",
                    lineNumber: 154,
                    className: "lime.utils.Assets",
                    methodName: "getAsset"
                })
            } else lime_utils_Log.info("There is no " + t + ' asset with an ID of "' + e + '"', {
                fileName: "Assets.hx",
                lineNumber: 160,
                className: "lime.utils.Assets",
                methodName: "getAsset"
            });
        else lime_utils_Log.info('There is no asset library named "' + a.libraryName + '"', {
            fileName: "Assets.hx",
            lineNumber: 166,
            className: "lime.utils.Assets",
            methodName: "getAsset"
        });
        return null
    }, lime_utils_Assets.getImage = function(e, t) {
        return null == t && (t = !0), lime_utils_Assets.getAsset(e, "IMAGE", t)
    }, lime_utils_Assets.getLibrary = function(e) {
        return null != e && "" != e || (e = "default"), lime_utils_Assets.libraries.get(e)
    }, lime_utils_Assets.getText = function(e) {
        return lime_utils_Assets.getAsset(e, "TEXT", !1)
    }, lime_utils_Assets.isValidAudio = function(e) {
        return null != e
    }, lime_utils_Assets.isValidImage = function(e) {
        return null != e && null != e.buffer
    }, lime_utils_Assets.loadAsset = function(e, t, n) {
        if (n && lime_utils_Assets.cache.enabled) switch (t) {
            case "BINARY":
            case "TEXT":
                n = !1;
                break;
            case "FONT":
                var l = lime_utils_Assets.cache.font.get(e);
                if (null != l) return lime_app_Future.withValue(l);
                break;
            case "IMAGE":
                var i = lime_utils_Assets.cache.image.get(e);
                if (lime_utils_Assets.isValidImage(i)) return lime_app_Future.withValue(i);
                break;
            case "MUSIC":
            case "SOUND":
                var s = lime_utils_Assets.cache.audio.get(e);
                if (lime_utils_Assets.isValidAudio(s)) return lime_app_Future.withValue(s);
                break;
            case "TEMPLATE":
                throw new js__$Boot_HaxeError("Not sure how to get template: " + e)
        }
        var a = new lime_utils__$Assets_LibrarySymbol(e);
        if (null != a.library) {
            if (a.library.exists(a.symbolName, t)) {
                var r = a.library.loadAsset(a.symbolName, t);
                return n && lime_utils_Assets.cache.enabled && r.onComplete(function(n) {
                    lime_utils_Assets.cache.set(e, t, n)
                }), r
            }
            return lime_app_Future.withError("[Assets] There is no " + t + ' asset with an ID of "' + e + '"')
        }
        return lime_app_Future.withError('[Assets] There is no asset library named "' + a.libraryName + '"')
    }, lime_utils_Assets.loadLibrary = function(e) {
        var t = new lime_app_Promise;
        return lime_utils_Assets.loadText("libraries/" + e + ".json").onComplete(function(n) {
            var l = lime_utils_AssetManifest.parse(n);
            if (null != l) {
                var i = lime_utils_AssetLibrary.fromManifest(l);
                null == i ? t.error('[Assets] Cannot open library "' + e + '"') : (lime_utils_Assets.libraries.set(e, i), i.onChange.add($bind($_ = lime_utils_Assets.onChange, $_.dispatch)), t.completeWith(i.load()))
            } else t.error('[Assets] Cannot parse asset manifest for library "' + e + '"')
        }).onError(function(n) {
            t.error('[Assets] There is no asset library named "' + e + '"')
        }), t.future
    }, lime_utils_Assets.loadText = function(e) {
        return lime_utils_Assets.loadAsset(e, "TEXT", !1)
    }, lime_utils_Assets.registerLibrary = function(e, t) {
        if (lime_utils_Assets.libraries.exists(e)) {
            if (lime_utils_Assets.libraries.get(e) == t) return;
            lime_utils_Assets.unloadLibrary(e)
        }
        null != t && t.onChange.add(lime_utils_Assets.library_onChange), lime_utils_Assets.libraries.set(e, t)
    }, lime_utils_Assets.unloadLibrary = function(e) {
        var t = lime_utils_Assets.libraries.get(e);
        null != t && (lime_utils_Assets.cache.clear(e + ":"), t.onChange.remove(lime_utils_Assets.library_onChange), t.unload()), lime_utils_Assets.libraries.remove(e)
    }, lime_utils_Assets.library_onChange = function() {
        lime_utils_Assets.cache.clear(), lime_utils_Assets.onChange.dispatch()
    };
    var lime_utils__$Assets_LibrarySymbol = function(e) {
        var t = e.indexOf(":");
        this.libraryName = e.substring(0, t), this.symbolName = e.substring(t + 1), this.library = lime_utils_Assets.getLibrary(this.libraryName)
    };
    $hxClasses["lime.utils._Assets.LibrarySymbol"] = lime_utils__$Assets_LibrarySymbol, lime_utils__$Assets_LibrarySymbol.__name__ = ["lime", "utils", "_Assets", "LibrarySymbol"], lime_utils__$Assets_LibrarySymbol.prototype = {
        library: null,
        libraryName: null,
        symbolName: null,
        __class__: lime_utils__$Assets_LibrarySymbol
    };
    var lime_utils__$Bytes_Bytes_$Impl_$ = {};
    $hxClasses["lime.utils._Bytes.Bytes_Impl_"] = lime_utils__$Bytes_Bytes_$Impl_$, lime_utils__$Bytes_Bytes_$Impl_$.__name__ = ["lime", "utils", "_Bytes", "Bytes_Impl_"], lime_utils__$Bytes_Bytes_$Impl_$._new = function(e, t) {
        return new haxe_io_Bytes(t)
    }, lime_utils__$Bytes_Bytes_$Impl_$.fromBytes = function(e) {
        return null == e ? null : lime_utils__$Bytes_Bytes_$Impl_$._new(e.length, e.b.bufferValue)
    }, lime_utils__$Bytes_Bytes_$Impl_$.fromFile = function(e) {
        return null
    }, lime_utils__$Bytes_Bytes_$Impl_$.loadFromFile = function(e) {
        return (new lime_net__$HTTPRequest_$lime_$utils_$Bytes).load(e)
    }, lime_utils__$Bytes_Bytes_$Impl_$.ofString = function(e) {
        var t = haxe_io_Bytes.ofString(e);
        return lime_utils__$Bytes_Bytes_$Impl_$._new(t.length, t.b.bufferValue)
    };
    var lime_utils_GLUtils = function() {};
    $hxClasses["lime.utils.GLUtils"] = lime_utils_GLUtils, lime_utils_GLUtils.__name__ = ["lime", "utils", "GLUtils"], lime_utils_GLUtils.compileShader = function(e, t) {
        var n = lime_graphics_opengl_GL.context.createShader(t);
        if (lime_graphics_opengl_GL.context.shaderSource(n, e), lime_graphics_opengl_GL.context.compileShader(n), 0 == lime_graphics_opengl_GL.context.getShaderParameter(n, 35713)) {
            var l;
            switch (t) {
                case 35633:
                    l = "Error compiling vertex shader";
                    break;
                case 35632:
                    l = "Error compiling fragment shader";
                    break;
                default:
                    l = "Error compiling unknown shader type"
            }
            l += "\n" + lime_graphics_opengl_GL.context.getShaderInfoLog(n), lime_utils_Log.error(l, {
                fileName: "GLUtils.hx",
                lineNumber: 35,
                className: "lime.utils.GLUtils",
                methodName: "compileShader"
            })
        }
        return n
    }, lime_utils_GLUtils.createProgram = function(e, t) {
        var n = lime_utils_GLUtils.compileShader(e, 35633),
            l = lime_utils_GLUtils.compileShader(t, 35632),
            i = lime_graphics_opengl_GL.context.createProgram();
        return lime_graphics_opengl_GL.context.attachShader(i, n), lime_graphics_opengl_GL.context.attachShader(i, l), lime_graphics_opengl_GL.context.linkProgram(i), 0 == lime_graphics_opengl_GL.context.getProgramParameter(i, 35714) && lime_utils_Log.error("Unable to initialize the shader program", {
            fileName: "GLUtils.hx",
            lineNumber: 56,
            className: "lime.utils.GLUtils",
            methodName: "createProgram"
        }), i
    };
    var lime_utils_Log = function() {};
    $hxClasses["lime.utils.Log"] = lime_utils_Log, lime_utils_Log.__name__ = ["lime", "utils", "Log"], lime_utils_Log.error = function(e, t) {
        lime_utils_Log.level >= 1 && console.log("[" + t.className + "] ERROR: " + e)
    }, lime_utils_Log.info = function(e, t) {
        lime_utils_Log.level >= 3 && console.log("[" + t.className + "] " + e)
    }, lime_utils_Log.warn = function(e, t) {
        lime_utils_Log.level >= 2 && console.log("[" + t.className + "] WARNING: " + e)
    };
    var motion_actuators_IGenericActuator = function() {};
    $hxClasses["motion.actuators.IGenericActuator"] = motion_actuators_IGenericActuator, motion_actuators_IGenericActuator.__name__ = ["motion", "actuators", "IGenericActuator"], motion_actuators_IGenericActuator.prototype = {
        onComplete: null,
        pause: null,
        resume: null,
        stop: null,
        __class__: motion_actuators_IGenericActuator
    };
    var motion_actuators_GenericActuator = function(e, t, n) {
        this._autoVisible = !0, this._delay = 0, this._reflect = !1, this._repeat = 0, this._reverse = !1, this._smartRotation = !1, this._snapping = !1, this.special = !1, this.target = e, this.properties = n, this.duration = t, this._ease = motion_Actuate.defaultEase
    };
    $hxClasses["motion.actuators.GenericActuator"] = motion_actuators_GenericActuator, motion_actuators_GenericActuator.__name__ = ["motion", "actuators", "GenericActuator"], motion_actuators_GenericActuator.__interfaces__ = [motion_actuators_IGenericActuator], motion_actuators_GenericActuator.prototype = {
        duration: null,
        id: null,
        properties: null,
        target: null,
        _autoVisible: null,
        _delay: null,
        _ease: null,
        _onComplete: null,
        _onCompleteParams: null,
        _onRepeat: null,
        _onRepeatParams: null,
        _onUpdate: null,
        _onUpdateParams: null,
        _onResume: null,
        _onResumeParams: null,
        _onPause: null,
        _onPauseParams: null,
        _reflect: null,
        _repeat: null,
        _reverse: null,
        _smartRotation: null,
        _snapping: null,
        special: null,
        apply: function() {
            for (var e = 0, t = Reflect.fields(this.properties); e < t.length;) {
                var n = t[e];
                ++e, Object.prototype.hasOwnProperty.call(this.target, n) ? Reflect.setField(this.target, n, Reflect.field(this.properties, n)) : Reflect.setProperty(this.target, n, Reflect.field(this.properties, n))
            }
        },
        autoVisible: function(e) {
            return null == e && (e = !0), this._autoVisible = e, this
        },
        callMethod: function(e, t) {
            return null == t && (t = []), Reflect.callMethod(e, e, t)
        },
        change: function() {
            null != this._onUpdate && this.callMethod(this._onUpdate, this._onUpdateParams)
        },
        complete: function(e) {
            null == e && (e = !0), e && (this.change(), null != this._onComplete && this.callMethod(this._onComplete, this._onCompleteParams)), motion_Actuate.unload(this)
        },
        delay: function(e) {
            return this._delay = e, this
        },
        ease: function(e) {
            return this._ease = e, this
        },
        move: function() {},
        onComplete: function(e, t) {
            return this._onComplete = e, this._onCompleteParams = null == t ? [] : t, 0 == this.duration && this.complete(), this
        },
        onRepeat: function(e, t) {
            return this._onRepeat = e, this._onRepeatParams = null == t ? [] : t, this
        },
        onUpdate: function(e, t) {
            return this._onUpdate = e, this._onUpdateParams = null == t ? [] : t, this
        },
        onPause: function(e, t) {
            return this._onPause = e, this._onPauseParams = null == t ? [] : t, this
        },
        onResume: function(e, t) {
            return this._onResume = e, this._onResumeParams = null == t ? [] : t, this
        },
        pause: function() {
            null != this._onPause && this.callMethod(this._onPause, this._onPauseParams)
        },
        reflect: function(e) {
            return null == e && (e = !0), this._reflect = e, this.special = !0, this
        },
        repeat: function(e) {
            return null == e && (e = -1), this._repeat = e, this
        },
        resume: function() {
            null != this._onResume && this.callMethod(this._onResume, this._onResumeParams)
        },
        reverse: function(e) {
            return null == e && (e = !0), this._reverse = e, this.special = !0, this
        },
        smartRotation: function(e) {
            return null == e && (e = !0), this._smartRotation = e, this.special = !0, this
        },
        snapping: function(e) {
            return null == e && (e = !0), this._snapping = e, this.special = !0, this
        },
        stop: function(e, t, n) {},
        __class__: motion_actuators_GenericActuator
    };
    var motion_actuators_SimpleActuator = function(e, t, n) {
        this.active = !0, this.propertyDetails = [], this.sendChange = !1, this.paused = !1, this.cacheVisible = !1, this.initialized = !1, this.setVisible = !1, this.toggleVisible = !1, this.startTime = openfl_Lib.getTimer() / 1e3, motion_actuators_GenericActuator.call(this, e, t, n), motion_actuators_SimpleActuator.addedEvent || (motion_actuators_SimpleActuator.addedEvent = !0, openfl_Lib.current.stage.addEventListener("enterFrame", motion_actuators_SimpleActuator.stage_onEnterFrame))
    };
    $hxClasses["motion.actuators.SimpleActuator"] = motion_actuators_SimpleActuator, motion_actuators_SimpleActuator.__name__ = ["motion", "actuators", "SimpleActuator"], motion_actuators_SimpleActuator.stage_onEnterFrame = function(e) {
        for (var t, n = openfl_Lib.getTimer() / 1e3, l = 0, i = 0, s = motion_actuators_SimpleActuator.actuatorsLength; i < s;) {
            i++;
            null != (t = motion_actuators_SimpleActuator.actuators[l]) && t.active ? (n >= t.timeOffset && t.update(n), l++) : (motion_actuators_SimpleActuator.actuators.splice(l, 1), --motion_actuators_SimpleActuator.actuatorsLength)
        }
    }, motion_actuators_SimpleActuator.__super__ = motion_actuators_GenericActuator, motion_actuators_SimpleActuator.prototype = $extend(motion_actuators_GenericActuator.prototype, {
        setField_openfl_geom_Transform: function(e, t, n) {
            Object.prototype.hasOwnProperty.call(e, t) ? e[t] = n : Reflect.setProperty(e, t, n)
        },
        setField_motion_actuators_TransformActuator_T: function(e, t, n) {
            Object.prototype.hasOwnProperty.call(e, t) ? e[t] = n : Reflect.setProperty(e, t, n)
        },
        setField_motion_actuators_MotionPathActuator_T: function(e, t, n) {
            Object.prototype.hasOwnProperty.call(e, t) ? e[t] = n : Reflect.setProperty(e, t, n)
        },
        setField_openfl_display_DisplayObject: function(e, t, n) {
            Object.prototype.hasOwnProperty.call(e, t) ? e[t] = n : Reflect.setProperty(e, t, n)
        },
        setField_motion_actuators_SimpleActuator_T: function(e, t, n) {
            Object.prototype.hasOwnProperty.call(e, t) ? e[t] = n : Reflect.setProperty(e, t, n)
        },
        timeOffset: null,
        active: null,
        cacheVisible: null,
        detailsLength: null,
        initialized: null,
        paused: null,
        pauseTime: null,
        propertyDetails: null,
        sendChange: null,
        setVisible: null,
        startTime: null,
        toggleVisible: null,
        autoVisible: function(e) {
            return null == e && (e = !0), this._autoVisible = e, e || (this.toggleVisible = !1, this.setVisible && this.setField_motion_actuators_SimpleActuator_T(this.target, "visible", this.cacheVisible)), this
        },
        delay: function(e) {
            return this._delay = e, this.timeOffset = this.startTime + e, this
        },
        getField: function(e, t) {
            return Object.prototype.hasOwnProperty.call(e, t) ? Reflect.field(e, t) : Reflect.getProperty(e, t)
        },
        initialize: function() {
            for (var e, t, n = 0, l = Reflect.fields(this.properties); n < l.length;) {
                var i = l[n];
                ++n;
                var s = !0;
                if (!Object.prototype.hasOwnProperty.call(this.target, i) || this.target.__properties__ && this.target.__properties__["set_" + i] ? (s = !1, t = Reflect.getProperty(this.target, i)) : t = Reflect.field(this.target, i), "number" == typeof t) {
                    var a = this.getField(this.properties, i);
                    null == t && (t = 0), null == a && (a = 0), e = new motion_actuators_PropertyDetails(this.target, i, t, a - t, s), this.propertyDetails.push(e)
                }
            }
            this.detailsLength = this.propertyDetails.length, this.initialized = !0
        },
        move: function() {
            this.toggleVisible = Object.prototype.hasOwnProperty.call(this.properties, "alpha") && js_Boot.__instanceof(this.target, openfl_display_DisplayObject), this.toggleVisible && 0 != this.properties.alpha && !this.getField(this.target, "visible") && (this.setVisible = !0, this.cacheVisible = this.getField(this.target, "visible"), this.setField_motion_actuators_SimpleActuator_T(this.target, "visible", !0)), this.timeOffset = this.startTime, motion_actuators_SimpleActuator.actuators.push(this), ++motion_actuators_SimpleActuator.actuatorsLength
        },
        onUpdate: function(e, t) {
            return this._onUpdate = e, this._onUpdateParams = null == t ? [] : t, this.sendChange = !0, this
        },
        pause: function() {
            this.paused || (this.paused = !0, motion_actuators_GenericActuator.prototype.pause.call(this), this.pauseTime = openfl_Lib.getTimer())
        },
        resume: function() {
            this.paused && (this.paused = !1, this.timeOffset += (openfl_Lib.getTimer() - this.pauseTime) / 1e3, motion_actuators_GenericActuator.prototype.resume.call(this))
        },
        setProperty: function(e, t) {
            e.isField ? e.target[e.propertyName] = t : Reflect.setProperty(e.target, e.propertyName, t)
        },
        stop: function(e, t, n) {
            if (this.active) {
                if (null == e) return this.active = !1, t && this.apply(), void this.complete(n);
                for (var l = 0, i = Reflect.fields(e); l < i.length;) {
                    var s = i[l];
                    if (++l, Object.prototype.hasOwnProperty.call(this.properties, s)) return this.active = !1, t && this.apply(), void this.complete(n)
                }
            }
        },
        update: function(e) {
            if (!this.paused) {
                var t, n, l = (e - this.timeOffset) / this.duration;
                if (l > 1 && (l = 1), this.initialized || this.initialize(), this.special) {
                    var i;
                    n = this._reverse ? this._ease.calculate(1 - l) : this._ease.calculate(l);
                    for (var s = 0, a = this.detailsLength; s < a;) {
                        var r = s++;
                        if (t = this.propertyDetails[r], !this._smartRotation || "rotation" != t.propertyName && "rotationX" != t.propertyName && "rotationY" != t.propertyName && "rotationZ" != t.propertyName) i = t.start + t.change * n;
                        else {
                            var o = t.change % 360;
                            o > 180 ? o -= 360 : o < -180 && (o += 360), i = t.start + o * n
                        }
                        this._snapping ? this.setProperty(t, Math.round(i)) : t.isField ? t.target[t.propertyName] = i : Reflect.setProperty(t.target, t.propertyName, i)
                    }
                } else {
                    n = this._ease.calculate(l);
                    for (var d = 0, _ = this.detailsLength; d < _;) {
                        var h = d++;
                        t = this.propertyDetails[h], this.setProperty(t, t.start + t.change * n)
                    }
                }
                if (1 == l) {
                    if (0 == this._repeat) return this.active = !1, this.toggleVisible && 0 == this.getField(this.target, "alpha") && this.setField_motion_actuators_SimpleActuator_T(this.target, "visible", !1), void this.complete(!0);
                    null != this._onRepeat && this.callMethod(this._onRepeat, this._onRepeatParams), this._reflect && (this._reverse = !this._reverse), this.startTime = e, this.timeOffset = this.startTime + this._delay, this._repeat > 0 && this._repeat--
                }
                this.sendChange && this.change()
            }
        },
        __class__: motion_actuators_SimpleActuator
    });
    var motion_easing_Expo = function() {};
    $hxClasses["motion.easing.Expo"] = motion_easing_Expo, motion_easing_Expo.__name__ = ["motion", "easing", "Expo"], motion_easing_Expo.__properties__ = {
        get_easeOut: "get_easeOut"
    }, motion_easing_Expo.get_easeOut = function() {
        return new motion_easing_ExpoEaseOut
    };
    var motion_easing_ExpoEaseOut = function() {};
    $hxClasses["motion.easing.ExpoEaseOut"] = motion_easing_ExpoEaseOut, motion_easing_ExpoEaseOut.__name__ = ["motion", "easing", "ExpoEaseOut"], motion_easing_ExpoEaseOut.__interfaces__ = [motion_easing_IEasing], motion_easing_ExpoEaseOut.prototype = {
        calculate: function(e) {
            return 1 == e ? 1 : 1 - Math.pow(2, -10 * e)
        },
        __class__: motion_easing_ExpoEaseOut
    };
    var motion_Actuate = function() {};
    $hxClasses["motion.Actuate"] = motion_Actuate, motion_Actuate.__name__ = ["motion", "Actuate"], motion_Actuate.apply = function(e, t, n) {
        motion_Actuate.stop(e, t), null == n && (n = motion_Actuate.defaultActuator);
        var l = Type.createInstance(n, [e, 0, t]);
        return l.apply(), l
    }, motion_Actuate.getLibrary = function(e, t) {
        return null == t && (t = !0), null == motion_Actuate.targetLibraries.h.__keys__[e.__id__] && t && motion_Actuate.targetLibraries.set(e, []), motion_Actuate.targetLibraries.h[e.__id__]
    }, motion_Actuate.motionPath = function(e, t, n, l) {
        return null == l && (l = !0), motion_Actuate.tween(e, t, n, l, motion_actuators_MotionPathActuator)
    }, motion_Actuate.pauseAll = function() {
        for (var e = motion_Actuate.targetLibraries.iterator(); e.hasNext();)
            for (var t = e.next(), n = 0; n < t.length;) {
                var l = t[n];
                ++n, l.pause()
            }
    }, motion_Actuate.reset = function() {
        for (var e = motion_Actuate.targetLibraries.iterator(); e.hasNext();)
            for (var t = e.next(), n = t.length - 1; n >= 0;) t[n].stop(null, !1, !1), n--;
        motion_Actuate.targetLibraries = new haxe_ds_ObjectMap
    }, motion_Actuate.resumeAll = function() {
        for (var e = motion_Actuate.targetLibraries.iterator(); e.hasNext();)
            for (var t = e.next(), n = 0; n < t.length;) {
                var l = t[n];
                ++n, l.resume()
            }
    }, motion_Actuate.stop = function(e, t, n, l) {
        if (null == l && (l = !0), null == n && (n = !1), null != e)
            if (js_Boot.__instanceof(e, motion_actuators_IGenericActuator)) {
                e.stop(null, n, l)
            } else {
                var i = motion_Actuate.getLibrary(e, !1);
                if (null != i) {
                    if ("string" == typeof t) {
                        var s = {};
                        Reflect.setField(s, t, null), t = s
                    } else if (t instanceof Array && null == t.__enum__) {
                        var a, r = {},
                            o = 0;
                        for (a = js_Boot.__cast(t, Array); o < a.length;) {
                            var d = a[o];
                            ++o, Reflect.setField(r, d, null)
                        }
                        t = r
                    }
                    for (var _ = i.length - 1; _ >= 0;) i[_].stop(t, n, l), _--
                }
            }
    }, motion_Actuate.timer = function(e, t) {
        return motion_Actuate.tween(new motion__$Actuate_TweenTimer(0), e, new motion__$Actuate_TweenTimer(1), !1, t)
    }, motion_Actuate.tween = function(e, t, n, l, i) {
        if (null == l && (l = !0), null != e) {
            if (t > 0) {
                null == i && (i = motion_Actuate.defaultActuator);
                var s = Type.createInstance(i, [e, t, n]),
                    a = motion_Actuate.getLibrary(s.target);
                if (l) {
                    for (var r = a.length - 1; r >= 0;) a[r].stop(s.properties, !1, !1), r--;
                    a = motion_Actuate.getLibrary(s.target)
                }
                return a.push(s), s.move(), s
            }
            return motion_Actuate.apply(e, n, i)
        }
        return null
    }, motion_Actuate.unload = function(e) {
        var t = e.target;
        null != motion_Actuate.targetLibraries.h.__keys__[t.__id__] && (HxOverrides.remove(motion_Actuate.targetLibraries.h[t.__id__], e), 0 == motion_Actuate.targetLibraries.h[t.__id__].length && motion_Actuate.targetLibraries.remove(t))
    }, motion_Actuate.update = function(e, t, n, l, i) {
        null == i && (i = !0);
        var s = {
            start: n,
            end: l
        };
        return motion_Actuate.tween(e, t, s, i, motion_actuators_MethodActuator)
    };
    var motion__$Actuate_TweenTimer = function(e) {
        this.progress = e
    };
    $hxClasses["motion._Actuate.TweenTimer"] = motion__$Actuate_TweenTimer, motion__$Actuate_TweenTimer.__name__ = ["motion", "_Actuate", "TweenTimer"], motion__$Actuate_TweenTimer.prototype = {
        progress: null,
        __class__: motion__$Actuate_TweenTimer
    };
    var motion_MotionPath = function() {
        this._x = new motion_ComponentPath, this._y = new motion_ComponentPath, this._rotation = null
    };
    $hxClasses["motion.MotionPath"] = motion_MotionPath, motion_MotionPath.__name__ = ["motion", "MotionPath"], motion_MotionPath.prototype = {
        _rotation: null,
        _x: null,
        _y: null,
        bezier: function(e, t, n, l, i) {
            return null == i && (i = 1), this._x.addPath(new motion_BezierPath(e, n, i)), this._y.addPath(new motion_BezierPath(t, l, i)), this
        },
        get_x: function() {
            return this._x
        },
        get_y: function() {
            return this._y
        },
        __class__: motion_MotionPath,
        __properties__: {
            get_y: "get_y",
            get_x: "get_x"
        }
    };
    var motion_IComponentPath = function() {};
    $hxClasses["motion.IComponentPath"] = motion_IComponentPath, motion_IComponentPath.__name__ = ["motion", "IComponentPath"], motion_IComponentPath.prototype = {
        get_end: null,
        start: null,
        calculate: null,
        __class__: motion_IComponentPath,
        __properties__: {
            get_end: "get_end"
        }
    };
    var motion_ComponentPath = function() {
        this.paths = [], this.start = 0, this.totalStrength = 0
    };
    $hxClasses["motion.ComponentPath"] = motion_ComponentPath, motion_ComponentPath.__name__ = ["motion", "ComponentPath"], motion_ComponentPath.__interfaces__ = [motion_IComponentPath], motion_ComponentPath.prototype = {
        start: null,
        paths: null,
        totalStrength: null,
        addPath: function(e) {
            this.paths.push(e), this.totalStrength += e.strength
        },
        calculate: function(e) {
            if (1 == this.paths.length) return this.paths[0].calculate(this.start, e);
            for (var t = e * this.totalStrength, n = this.start, l = 0, i = this.paths; l < i.length;) {
                var s = i[l];
                if (++l, !(t > s.strength)) return s.calculate(n, t / s.strength);
                t -= s.strength, n = s.end
            }
            return 0
        },
        get_end: function() {
            return this.paths.length > 0 ? this.paths[this.paths.length - 1].end : this.start
        },
        __class__: motion_ComponentPath,
        __properties__: {
            get_end: "get_end"
        }
    };
    var motion_BezierPath = function(e, t, n) {
        this.end = e, this.control = t, this.strength = n
    };
    $hxClasses["motion.BezierPath"] = motion_BezierPath, motion_BezierPath.__name__ = ["motion", "BezierPath"], motion_BezierPath.prototype = {
        control: null,
        end: null,
        strength: null,
        calculate: function(e, t) {
            return (1 - t) * (1 - t) * e + 2 * (1 - t) * t * this.control + t * t * this.end
        },
        __class__: motion_BezierPath
    };
    var motion_RotationPath = function() {
        this.step = .01
    };
    $hxClasses["motion.RotationPath"] = motion_RotationPath, motion_RotationPath.__name__ = ["motion", "RotationPath"], motion_RotationPath.__interfaces__ = [motion_IComponentPath], motion_RotationPath.prototype = {
        offset: null,
        start: null,
        step: null,
        _x: null,
        _y: null,
        calculate: function(e) {
            var t = this._x.calculate(e) - this._x.calculate(e + this.step),
                n = this._y.calculate(e) - this._y.calculate(e + this.step),
                l = Math.atan2(n, t) * (180 / Math.PI);
            return l = (l + this.offset) % 360
        },
        get_end: function() {
            return this.calculate(1)
        },
        __class__: motion_RotationPath,
        __properties__: {
            get_end: "get_end"
        }
    };
    var motion_actuators_FilterActuator = function(e, t, n) {
        if (this.filterIndex = -1, motion_actuators_SimpleActuator.call(this, e, t, n), js_Boot.__instanceof(n.filter, Class)) {
            this.filterClass = n.filter, 0 == e.get_filters().length && e.set_filters([Type.createInstance(this.filterClass, [])]);
            for (var l = 0, i = e.get_filters(); l < i.length;) {
                var s = i[l];
                ++l, js_Boot.__instanceof(s, this.filterClass) && (this.filter = s)
            }
        } else this.filterIndex = n.filter, this.filter = e.get_filters()[this.filterIndex]
    };
    $hxClasses["motion.actuators.FilterActuator"] = motion_actuators_FilterActuator, motion_actuators_FilterActuator.__name__ = ["motion", "actuators", "FilterActuator"], motion_actuators_FilterActuator.__super__ = motion_actuators_SimpleActuator, motion_actuators_FilterActuator.prototype = $extend(motion_actuators_SimpleActuator.prototype, {
        filter: null,
        filterClass: null,
        filterIndex: null,
        apply: function() {
            for (var e = 0, t = Reflect.fields(this.properties); e < t.length;) {
                var n = t[e];
                ++e, "filter" != n && Reflect.setField(this.filter, n, Reflect.field(this.properties, n))
            }
            var l = this.getField(this.target, "filters");
            Reflect.setField(l, this.properties.filter, this.filter), this.setField_openfl_display_DisplayObject(this.target, "filters", l)
        },
        initialize: function() {
            for (var e, t, n = 0, l = Reflect.fields(this.properties); n < l.length;) {
                var i = l[n];
                ++n, "filter" != i && (t = this.getField(this.filter, i), e = new motion_actuators_PropertyDetails(this.filter, i, t, Reflect.field(this.properties, i) - t), this.propertyDetails.push(e))
            }
            this.detailsLength = this.propertyDetails.length, this.initialized = !0
        },
        update: function(e) {
            motion_actuators_SimpleActuator.prototype.update.call(this, e);
            var t = this.target.get_filters();
            if (this.filterIndex > -1) Reflect.setField(t, this.properties.filter, this.filter);
            else
                for (var n = 0, l = t.length; n < l;) {
                    var i = n++;
                    js_Boot.__instanceof(t[i], this.filterClass) && (t[i] = this.filter)
                }
            this.setField_openfl_display_DisplayObject(this.target, "filters", t)
        },
        __class__: motion_actuators_FilterActuator
    });
    var motion_actuators_MethodActuator = function(e, t, n) {
        this.currentParameters = [], this.tweenProperties = {}, motion_actuators_SimpleActuator.call(this, e, t, n), Object.prototype.hasOwnProperty.call(n, "start") || (this.properties.start = []), Object.prototype.hasOwnProperty.call(n, "end") || (this.properties.end = this.properties.start);
        for (var l = 0, i = this.properties.start.length; l < i;) {
            var s = l++;
            this.currentParameters.push(this.properties.start[s])
        }
    };
    $hxClasses["motion.actuators.MethodActuator"] = motion_actuators_MethodActuator, motion_actuators_MethodActuator.__name__ = ["motion", "actuators", "MethodActuator"], motion_actuators_MethodActuator.__super__ = motion_actuators_SimpleActuator, motion_actuators_MethodActuator.prototype = $extend(motion_actuators_SimpleActuator.prototype, {
        currentParameters: null,
        tweenProperties: null,
        apply: function() {
            this.callMethod(this.target, this.properties.end)
        },
        complete: function(e) {
            null == e && (e = !0);
            for (var t = 0, n = this.properties.start.length; t < n;) {
                var l = t++;
                this.currentParameters[l] = Reflect.field(this.tweenProperties, "param" + l)
            }
            this.callMethod(this.target, this.currentParameters), motion_actuators_SimpleActuator.prototype.complete.call(this, e)
        },
        initialize: function() {
            for (var e, t, n, l = 0, i = this.properties.start.length; l < i;) {
                var s = l++;
                t = "param" + s, n = this.properties.start[s], this.tweenProperties[t] = n, "number" != typeof n && (0 | n) !== n || (e = new motion_actuators_PropertyDetails(this.tweenProperties, t, n, this.properties.end[s] - n), this.propertyDetails.push(e))
            }
            this.detailsLength = this.propertyDetails.length, this.initialized = !0
        },
        update: function(e) {
            if (motion_actuators_SimpleActuator.prototype.update.call(this, e), this.active && !this.paused) {
                for (var t = 0, n = this.properties.start.length; t < n;) {
                    var l = t++;
                    this.currentParameters[l] = Reflect.field(this.tweenProperties, "param" + l)
                }
                this.callMethod(this.target, this.currentParameters)
            }
        },
        __class__: motion_actuators_MethodActuator
    });
    var motion_actuators_MotionPathActuator = function(e, t, n) {
        motion_actuators_SimpleActuator.call(this, e, t, n)
    };
    $hxClasses["motion.actuators.MotionPathActuator"] = motion_actuators_MotionPathActuator, motion_actuators_MotionPathActuator.__name__ = ["motion", "actuators", "MotionPathActuator"], motion_actuators_MotionPathActuator.__super__ = motion_actuators_SimpleActuator, motion_actuators_MotionPathActuator.prototype = $extend(motion_actuators_SimpleActuator.prototype, {
        apply: function() {
            for (var e = 0, t = Reflect.fields(this.properties); e < t.length;) {
                var n = t[e];
                ++e, Object.prototype.hasOwnProperty.call(this.target, n) ? Reflect.setField(this.target, n, js_Boot.__cast(Reflect.field(this.properties, n), motion_IComponentPath).get_end()) : Reflect.setProperty(this.target, n, js_Boot.__cast(Reflect.field(this.properties, n), motion_IComponentPath).get_end())
            }
        },
        initialize: function() {
            for (var e, t, n = 0, l = Reflect.fields(this.properties); n < l.length;) {
                var i = l[n];
                if (++n, null != (t = js_Boot.__cast(Reflect.field(this.properties, i), motion_IComponentPath))) {
                    var s = !0;
                    Object.prototype.hasOwnProperty.call(this.target, i) ? t.start = Reflect.field(this.target, i) : (s = !1, t.start = Reflect.getProperty(this.target, i)), e = new motion_actuators_PropertyPathDetails(this.target, i, t, s), this.propertyDetails.push(e)
                }
            }
            this.detailsLength = this.propertyDetails.length, this.initialized = !0
        },
        update: function(e) {
            if (!this.paused) {
                var t, n = (e - this.timeOffset) / this.duration;
                if (n > 1 && (n = 1), this.initialized || this.initialize(), this.special) {
                    t = this._reverse ? this._ease.calculate(1 - n) : this._ease.calculate(n);
                    for (var l = 0, i = this.propertyDetails; l < i.length;) {
                        var s = i[l];
                        ++l, this._snapping ? s.isField ? Reflect.setField(s.target, s.propertyName, Math.round(js_Boot.__cast(s, motion_actuators_PropertyPathDetails).path.calculate(t))) : Reflect.setProperty(s.target, s.propertyName, Math.round(js_Boot.__cast(s, motion_actuators_PropertyPathDetails).path.calculate(t))) : s.isField ? Reflect.setField(s.target, s.propertyName, js_Boot.__cast(s, motion_actuators_PropertyPathDetails).path.calculate(t)) : Reflect.setProperty(s.target, s.propertyName, js_Boot.__cast(s, motion_actuators_PropertyPathDetails).path.calculate(t))
                    }
                } else {
                    t = this._ease.calculate(n);
                    for (var a = 0, r = this.propertyDetails; a < r.length;) {
                        var o = r[a];
                        ++a, o.isField ? Reflect.setField(o.target, o.propertyName, js_Boot.__cast(o, motion_actuators_PropertyPathDetails).path.calculate(t)) : Reflect.setProperty(o.target, o.propertyName, js_Boot.__cast(o, motion_actuators_PropertyPathDetails).path.calculate(t))
                    }
                }
                if (1 == n) {
                    if (0 == this._repeat) return this.active = !1, this.toggleVisible && 0 == this.getField(this.target, "alpha") && this.setField_motion_actuators_MotionPathActuator_T(this.target, "visible", !1), void this.complete(!0);
                    null != this._onRepeat && this.callMethod(this._onRepeat, this._onRepeatParams), this._reflect && (this._reverse = !this._reverse), this.startTime = e, this.timeOffset = this.startTime + this._delay, this._repeat > 0 && this._repeat--
                }
                this.sendChange && this.change()
            }
        },
        __class__: motion_actuators_MotionPathActuator
    });
    var motion_actuators_PropertyDetails = function(e, t, n, l, i) {
        null == i && (i = !0), this.target = e, this.propertyName = t, this.start = n, this.change = l, this.isField = i
    };
    $hxClasses["motion.actuators.PropertyDetails"] = motion_actuators_PropertyDetails, motion_actuators_PropertyDetails.__name__ = ["motion", "actuators", "PropertyDetails"], motion_actuators_PropertyDetails.prototype = {
        change: null,
        isField: null,
        propertyName: null,
        start: null,
        target: null,
        __class__: motion_actuators_PropertyDetails
    };
    var motion_actuators_PropertyPathDetails = function(e, t, n, l) {
        null == l && (l = !0), motion_actuators_PropertyDetails.call(this, e, t, 0, 0, l), this.path = n
    };
    $hxClasses["motion.actuators.PropertyPathDetails"] = motion_actuators_PropertyPathDetails, motion_actuators_PropertyPathDetails.__name__ = ["motion", "actuators", "PropertyPathDetails"], motion_actuators_PropertyPathDetails.__super__ = motion_actuators_PropertyDetails, motion_actuators_PropertyPathDetails.prototype = $extend(motion_actuators_PropertyDetails.prototype, {
        path: null,
        __class__: motion_actuators_PropertyPathDetails
    });
    var motion_actuators_TransformActuator = function(e, t, n) {
        motion_actuators_SimpleActuator.call(this, e, t, n)
    };
    $hxClasses["motion.actuators.TransformActuator"] = motion_actuators_TransformActuator, motion_actuators_TransformActuator.__name__ = ["motion", "actuators", "TransformActuator"], motion_actuators_TransformActuator.__super__ = motion_actuators_SimpleActuator, motion_actuators_TransformActuator.prototype = $extend(motion_actuators_SimpleActuator.prototype, {
        endColorTransform: null,
        endSoundTransform: null,
        tweenColorTransform: null,
        tweenSoundTransform: null,
        apply: function() {
            if (this.initialize(), null != this.endColorTransform) {
                var e = this.getField(this.target, "transform");
                this.setField_openfl_geom_Transform(e, "colorTransform", this.endColorTransform)
            }
            null != this.endSoundTransform && this.setField_motion_actuators_TransformActuator_T(this.target, "soundTransform", this.endSoundTransform)
        },
        initialize: function() {
            Object.prototype.hasOwnProperty.call(this.properties, "colorValue") && js_Boot.__instanceof(this.target, openfl_display_DisplayObject) && this.initializeColor(), (Object.prototype.hasOwnProperty.call(this.properties, "soundVolume") || Object.prototype.hasOwnProperty.call(this.properties, "soundPan")) && this.initializeSound(), this.detailsLength = this.propertyDetails.length, this.initialized = !0
        },
        initializeColor: function() {
            this.endColorTransform = new openfl_geom_ColorTransform;
            var e, t, n = this.properties.colorValue,
                l = this.properties.colorStrength;
            l < 1 ? (l < .5 ? (e = 1, t = 2 * l) : (e = 1 - 2 * (l - .5), t = 1), this.endColorTransform.redMultiplier = e, this.endColorTransform.greenMultiplier = e, this.endColorTransform.blueMultiplier = e, this.endColorTransform.redOffset = t * (n >> 16 & 255), this.endColorTransform.greenOffset = t * (n >> 8 & 255), this.endColorTransform.blueOffset = t * (255 & n)) : (this.endColorTransform.redMultiplier = 0, this.endColorTransform.greenMultiplier = 0, this.endColorTransform.blueMultiplier = 0, this.endColorTransform.redOffset = n >> 16 & 255, this.endColorTransform.greenOffset = n >> 8 & 255, this.endColorTransform.blueOffset = 255 & n);
            var i = ["redMultiplier", "greenMultiplier", "blueMultiplier", "redOffset", "greenOffset", "blueOffset"];
            Object.prototype.hasOwnProperty.call(this.properties, "colorAlpha") ? (this.endColorTransform.alphaMultiplier = this.properties.colorAlpha, i.push("alphaMultiplier")) : this.endColorTransform.alphaMultiplier = this.getField(this.target, "alpha");
            var s, a, r = this.getField(this.target, "transform"),
                o = this.getField(r, "colorTransform");
            this.tweenColorTransform = new openfl_geom_ColorTransform;
            for (var d = 0; d < i.length;) {
                var _ = i[d];
                ++d, a = this.getField(o, _), s = new motion_actuators_PropertyDetails(this.tweenColorTransform, _, a, this.getField(this.endColorTransform, _) - a), this.propertyDetails.push(s)
            }
        },
        initializeSound: function() {
            null == this.getField(this.target, "soundTransform") && this.setField_motion_actuators_TransformActuator_T(this.target, "soundTransform", new openfl_media_SoundTransform);
            var e = this.getField(this.target, "soundTransform");
            this.endSoundTransform = this.getField(this.target, "soundTransform"), this.tweenSoundTransform = new openfl_media_SoundTransform, Object.prototype.hasOwnProperty.call(this.properties, "soundVolume") && (this.endSoundTransform.volume = this.properties.soundVolume, this.propertyDetails.push(new motion_actuators_PropertyDetails(this.tweenSoundTransform, "volume", e.volume, this.endSoundTransform.volume - e.volume))), Object.prototype.hasOwnProperty.call(this.properties, "soundPan") && (this.endSoundTransform.pan = this.properties.soundPan, this.propertyDetails.push(new motion_actuators_PropertyDetails(this.tweenSoundTransform, "pan", e.pan, this.endSoundTransform.pan - e.pan)))
        },
        update: function(e) {
            if (motion_actuators_SimpleActuator.prototype.update.call(this, e), null != this.endColorTransform) {
                var t = this.getField(this.target, "transform");
                this.setField_openfl_geom_Transform(t, "colorTransform", this.tweenColorTransform)
            }
            null != this.endSoundTransform && this.setField_motion_actuators_TransformActuator_T(this.target, "soundTransform", this.tweenSoundTransform)
        },
        __class__: motion_actuators_TransformActuator
    });
    var motion_easing_Back = function() {};
    $hxClasses["motion.easing.Back"] = motion_easing_Back, motion_easing_Back.__name__ = ["motion", "easing", "Back"], motion_easing_Back.__properties__ = {
        get_easeOut: "get_easeOut",
        get_easeIn: "get_easeIn"
    }, motion_easing_Back.get_easeIn = function() {
        return new motion_easing_BackEaseIn(1.70158)
    }, motion_easing_Back.get_easeOut = function() {
        return new motion_easing_BackEaseOut(1.70158)
    };
    var motion_easing_Linear = function() {};
    $hxClasses["motion.easing.Linear"] = motion_easing_Linear, motion_easing_Linear.__name__ = ["motion", "easing", "Linear"], motion_easing_Linear.__properties__ = {
        get_easeNone: "get_easeNone"
    }, motion_easing_Linear.get_easeNone = function() {
        return new motion_easing_LinearEaseNone
    };
    var motion_easing_LinearEaseNone = function() {};
    $hxClasses["motion.easing.LinearEaseNone"] = motion_easing_LinearEaseNone, motion_easing_LinearEaseNone.__name__ = ["motion", "easing", "LinearEaseNone"], motion_easing_LinearEaseNone.__interfaces__ = [motion_easing_IEasing], motion_easing_LinearEaseNone.prototype = {
        calculate: function(e) {
            return e
        },
        __class__: motion_easing_LinearEaseNone
    };
    var motion_easing_Quad = function() {};
    $hxClasses["motion.easing.Quad"] = motion_easing_Quad, motion_easing_Quad.__name__ = ["motion", "easing", "Quad"], motion_easing_Quad.__properties__ = {
        get_easeOut: "get_easeOut",
        get_easeInOut: "get_easeInOut",
        get_easeIn: "get_easeIn"
    }, motion_easing_Quad.get_easeIn = function() {
        return new motion_easing_QuadEaseIn
    }, motion_easing_Quad.get_easeInOut = function() {
        return new motion_easing_QuadEaseInOut
    }, motion_easing_Quad.get_easeOut = function() {
        return new motion_easing_QuadEaseOut
    };
    var motion_easing_QuadEaseIn = function() {};
    $hxClasses["motion.easing.QuadEaseIn"] = motion_easing_QuadEaseIn, motion_easing_QuadEaseIn.__name__ = ["motion", "easing", "QuadEaseIn"], motion_easing_QuadEaseIn.__interfaces__ = [motion_easing_IEasing], motion_easing_QuadEaseIn.prototype = {
        calculate: function(e) {
            return e * e
        },
        __class__: motion_easing_QuadEaseIn
    };
    var motion_easing_QuadEaseInOut = function() {};
    $hxClasses["motion.easing.QuadEaseInOut"] = motion_easing_QuadEaseInOut, motion_easing_QuadEaseInOut.__name__ = ["motion", "easing", "QuadEaseInOut"], motion_easing_QuadEaseInOut.__interfaces__ = [motion_easing_IEasing], motion_easing_QuadEaseInOut.prototype = {
        calculate: function(e) {
            return (e *= 2) < 1 ? .5 * e * e : -.5 * ((e - 1) * (e - 3) - 1)
        },
        __class__: motion_easing_QuadEaseInOut
    };
    var motion_easing_QuadEaseOut = function() {};
    $hxClasses["motion.easing.QuadEaseOut"] = motion_easing_QuadEaseOut, motion_easing_QuadEaseOut.__name__ = ["motion", "easing", "QuadEaseOut"], motion_easing_QuadEaseOut.__interfaces__ = [motion_easing_IEasing], motion_easing_QuadEaseOut.prototype = {
        calculate: function(e) {
            return -e * (e - 2)
        },
        __class__: motion_easing_QuadEaseOut
    };
    var motion_easing_SineEaseIn = function() {};
    $hxClasses["motion.easing.SineEaseIn"] = motion_easing_SineEaseIn, motion_easing_SineEaseIn.__name__ = ["motion", "easing", "SineEaseIn"], motion_easing_SineEaseIn.__interfaces__ = [motion_easing_IEasing], motion_easing_SineEaseIn.prototype = {
        calculate: function(e) {
            return 1 - Math.cos(e * (Math.PI / 2))
        },
        __class__: motion_easing_SineEaseIn
    };
    var motion_easing_SineEaseInOut = function() {};
    $hxClasses["motion.easing.SineEaseInOut"] = motion_easing_SineEaseInOut, motion_easing_SineEaseInOut.__name__ = ["motion", "easing", "SineEaseInOut"], motion_easing_SineEaseInOut.__interfaces__ = [motion_easing_IEasing], motion_easing_SineEaseInOut.prototype = {
        calculate: function(e) {
            return -(Math.cos(Math.PI * e) - 1) / 2
        },
        __class__: motion_easing_SineEaseInOut
    };
    var openfl_IAssetCache = function() {};
    $hxClasses["openfl.IAssetCache"] = openfl_IAssetCache, openfl_IAssetCache.__name__ = ["openfl", "IAssetCache"], openfl_IAssetCache.prototype = {
        get_enabled: null,
        getBitmapData: null,
        hasBitmapData: null,
        removeBitmapData: null,
        setBitmapData: null,
        __class__: openfl_IAssetCache,
        __properties__: {
            get_enabled: "get_enabled"
        }
    };
    var openfl_AssetCache = function() {
        this.__enabled = !0, this.bitmapData = new haxe_ds_StringMap, this.font = new haxe_ds_StringMap, this.sound = new haxe_ds_StringMap
    };
    $hxClasses["openfl.AssetCache"] = openfl_AssetCache, openfl_AssetCache.__name__ = ["openfl", "AssetCache"], openfl_AssetCache.__interfaces__ = [openfl_IAssetCache], openfl_AssetCache.prototype = {
        bitmapData: null,
        font: null,
        sound: null,
        __enabled: null,
        getBitmapData: function(e) {
            return this.bitmapData.get(e)
        },
        hasBitmapData: function(e) {
            return this.bitmapData.exists(e)
        },
        removeBitmapData: function(e) {
            return lime_utils_Assets.cache.image.remove(e), this.bitmapData.remove(e)
        },
        setBitmapData: function(e, t) {
            this.bitmapData.set(e, t)
        },
        get_enabled: function() {
            return this.__enabled
        },
        __class__: openfl_AssetCache,
        __properties__: {
            get_enabled: "get_enabled"
        }
    };
    var openfl_Assets = function() {};
    $hxClasses["openfl.Assets"] = openfl_Assets, openfl_Assets.__name__ = ["openfl", "Assets"], openfl_Assets.exists = function(e, t) {
        return lime_utils_Assets.exists(e, t)
    }, openfl_Assets.getBitmapData = function(e, t) {
        if (null == t && (t = !0), t && openfl_Assets.cache.get_enabled() && openfl_Assets.cache.hasBitmapData(e)) {
            var n = openfl_Assets.cache.getBitmapData(e);
            if (openfl_Assets.isValidBitmapData(n)) return n
        }
        var l = lime_utils_Assets.getImage(e, !1);
        if (null != l) {
            var i = openfl_display_BitmapData.fromImage(l);
            return t && openfl_Assets.cache.get_enabled() && openfl_Assets.cache.setBitmapData(e, i), i
        }
        return null
    }, openfl_Assets.getText = function(e) {
        return lime_utils_Assets.getText(e)
    }, openfl_Assets.isValidBitmapData = function(e) {
        return null != e && null != e.image
    };
    var openfl_AssetLibrary = function() {
        lime_utils_AssetLibrary.call(this)
    };
    $hxClasses["openfl.AssetLibrary"] = openfl_AssetLibrary, openfl_AssetLibrary.__name__ = ["openfl", "AssetLibrary"], openfl_AssetLibrary.__super__ = lime_utils_AssetLibrary, openfl_AssetLibrary.prototype = $extend(lime_utils_AssetLibrary.prototype, {
        __class__: openfl_AssetLibrary
    });
    var openfl_display_MovieClip = function() {
        openfl_display_Sprite.call(this), this.__currentFrame = 0, this.__currentLabels = [], this.__totalFrames = 0, this.enabled = !0, null != openfl_display_MovieClip.__initSymbol && (this.__swf = openfl_display_MovieClip.__initSWF, this.__symbol = openfl_display_MovieClip.__initSymbol, openfl_display_MovieClip.__initSWF = null, openfl_display_MovieClip.__initSymbol = null, this.__fromSymbol(this.__swf, this.__symbol))
    };
    $hxClasses["openfl.display.MovieClip"] = openfl_display_MovieClip, openfl_display_MovieClip.__name__ = ["openfl", "display", "MovieClip"], openfl_display_MovieClip.__super__ = openfl_display_Sprite, openfl_display_MovieClip.prototype = $extend(openfl_display_Sprite.prototype, {
        enabled: null,
        __currentFrame: null,
        __currentFrameLabel: null,
        __currentLabel: null,
        __currentLabels: null,
        __frameScripts: null,
        __frameTime: null,
        __lastUpdate: null,
        __objectDepths: null,
        __objects: null,
        __playing: null,
        __swf: null,
        __symbol: null,
        __timeElapsed: null,
        __totalFrames: null,
        __zeroSymbol: null,
        play: function() {
            null != this.__symbol && !this.__playing && this.__totalFrames > 1 && (this.__playing = !0, this.__frameTime = 1e3 / this.__swf.frameRate | 0, this.__timeElapsed = 0)
        },
        __enterFrame: function(e) {
            if (null != this.__symbol && this.__playing) {
                this.__timeElapsed += e;
                var t = Math.floor(this.__timeElapsed / this.__frameTime);
                if (this.__timeElapsed = this.__timeElapsed % this.__frameTime, null != this.__frameScripts)
                    for (var n = 0; n < t;) {
                        n++;
                        if (this.__currentFrame++, this.__currentFrame > this.__totalFrames && (this.__currentFrame = 1), this.__frameScripts.h.hasOwnProperty(this.__currentFrame - 1) && (this.__frameScripts.h[this.__currentFrame - 1](), !this.__playing)) break
                    } else
                        for (this.__currentFrame += t; this.__currentFrame > this.__totalFrames;) this.__currentFrame -= this.__totalFrames;
                this.__updateFrame()
            }
            openfl_display_Sprite.prototype.__enterFrame.call(this, e)
        },
        __fromSymbol: function(e, t) {
            if (null == this.__objects) {
                this.__swf = e, this.__symbol = t, this.__lastUpdate = -1, this.__objectDepths = [], this.__objects = new haxe_ds_IntMap, this.__zeroSymbol = -1, this.__currentFrame = 1, this.__totalFrames = this.__symbol.frames.length;
                for (var n = 0, l = this.__symbol.frames.length; n < l;) {
                    var i = n++;
                    null != this.__symbol.frames[i].label && this.__currentLabels.push(new openfl_display_FrameLabel(this.__symbol.frames[i].label, i + 1))
                }
                this.__updateFrame();
                for (var s = 0, a = Type.getInstanceFields(js_Boot.getClass(this)); s < a.length;) {
                    var r = a[s];
                    ++s;
                    for (var o = 0, d = this.__children; o < d.length;) {
                        var _ = d[o];
                        ++o, _.get_name() == r && (this[r] = _)
                    }
                }
                this.__totalFrames > 1 && this.play()
            }
        },
        __placeObject: function(e, t) {
            if (null != t.name && e.set_name(t.name), null != t.matrix && e.get_transform().set_matrix(t.matrix), null != t.colorTransform && e.get_transform().set_colorTransform(t.colorTransform), null != t.filters) {
                for (var n = [], l = 0, i = t.filters; l < i.length;) {
                    var s = i[l];
                    switch (++l, s[1]) {
                        case 0:
                            var a = s[4],
                                r = s[3],
                                o = s[2];
                            n.push(new openfl_filters_BlurFilter(o, r, a));
                            break;
                        case 1:
                            var d = s[2];
                            n.push(new openfl_filters_ColorMatrixFilter(d));
                            break;
                        case 2:
                            var _ = s[12],
                                h = s[11],
                                p = s[10],
                                c = s[9],
                                Q = s[8],
                                U = s[7],
                                m = s[6],
                                u = s[5],
                                F = s[4],
                                N = s[3],
                                S = s[2];
                            n.push(new openfl_filters_DropShadowFilter(S, N, F, u, m, U, Q, c, p, h, _));
                            break;
                        case 3:
                            var W = s[9],
                                B = s[8],
                                Z = s[7],
                                D = s[6],
                                V = s[5],
                                f = s[4],
                                R = s[3],
                                T = s[2];
                            n.push(new openfl_filters_GlowFilter(T, R, f, V, D, Z, B, W))
                    }
                }
                e.set_filters(n)
            }
            e.set_visible(t.visible)
        },
        __renderFrame: function(e) {
            var t, n, l = this.__lastUpdate - 1;
            if (l > e) {
                for (var i, s, a = 0; a < this.__objectDepths.length;) {
                    i = this.__objectDepths[a], s = !1;
                    for (var r = 0, o = this.__symbol.frames[0].objects; r < o.length;) {
                        var d = o[r];
                        if (++r, d.id == i.id) {
                            s = !0;
                            break
                        }
                    }
                    s ? a++ : (i.displayObject.parent == this && this.removeChild(i.displayObject), this.__objectDepths.splice(a, 1))
                }
                l = 0
            }
            for (var _ = null, h = null, p = !1, c = l, Q = e + 1; c < Q;) {
                var U = c++;
                if (!(U < 0))
                    for (var m = 0, u = this.__symbol.frames[U].objects; m < u.length;) {
                        var F = u[m];
                        if (++m, F.type != openfl__$internal_timeline_FrameObjectType.DESTROY) {
                            if (0 == F.id && F.symbol != this.__zeroSymbol) {
                                null != (t = this.__objects.h[0]) && t.displayObject.parent == this && this.removeChild(t.displayObject);
                                var N = this.__objects.h[0];
                                HxOverrides.remove(this.__objectDepths, N), t = null, this.__zeroSymbol = F.symbol
                            }
                            n = null, this.__objects.h.hasOwnProperty(F.id) ? (n = (t = this.__objects.h[F.id]).displayObject, null == t.displayObject.parent && (this.__objectDepths.push(t), p = !0)) : (this.__swf.symbols.h.hasOwnProperty(F.symbol) && (n = this.__swf.symbols.h[F.symbol].__createObject(this.__swf)), null != n && (t = new openfl_display__$MovieClip_TimelineObject(F.id, F.depth, n), this.__objectDepths.push(t), p = !0, this.__objects.h[F.id] = t)), null != n && (this.__placeObject(n, F), null != _ ? _.clipDepth < F.depth ? _ = null : n.set_mask(h) : n.set_mask(null), 0 != F.clipDepth && (_ = F, n.set_visible(!1), h = n))
                        } else this.__objects.h.hasOwnProperty(F.id) && (null != (t = this.__objects.h[F.id]) && t.displayObject.parent == this && this.removeChild(t.displayObject), HxOverrides.remove(this.__objectDepths, t), p = !0)
                    }
            }
            if (p) {
                this.__objectDepths.sort($bind(this, this.__sortTimelineDepth));
                for (var S = this.__objectDepths.length - 1; S >= 0;) t = this.__objectDepths[S], this.addChildAt(t.displayObject, 0), S--
            }
        },
        __sortTimelineDepth: function(e, t) {
            return e.depth - t.depth
        },
        __updateFrame: function() {
            if (this.__currentFrame != this.__lastUpdate) {
                var e = this.__currentFrame - 1;
                if (e > -1) {
                    if (this.__symbol.frames.length > e && null != this.__symbol.frames[e] ? this.__currentFrameLabel = this.__symbol.frames[e].label : this.__currentFrameLabel = null, null != this.__currentFrameLabel) this.__currentLabel = this.__currentFrameLabel;
                    else if (this.__currentFrame != this.__lastUpdate + 1) {
                        this.__currentLabel = null;
                        for (var t = 0, n = this.__currentLabels; t < n.length;) {
                            var l = n[t];
                            if (++t, !(l.get_frame() <= this.__currentFrame)) break;
                            this.__currentLabel = l.get_name()
                        }
                    }
                    this.__renderFrame(e)
                }
                this.__renderDirty = !0, openfl_display_DisplayObject.__worldRenderDirty++
            }
            this.__lastUpdate = this.__currentFrame
        },
        __class__: openfl_display_MovieClip
    });
    var openfl__$Vector_Vector_$Impl_$ = {};
    $hxClasses["openfl._Vector.Vector_Impl_"] = openfl__$Vector_Vector_$Impl_$, openfl__$Vector_Vector_$Impl_$.__name__ = ["openfl", "_Vector", "Vector_Impl_"], openfl__$Vector_Vector_$Impl_$.toIntVector = function(e, t, n) {
        return new openfl__$Vector_IntVector(t, n)
    }, openfl__$Vector_Vector_$Impl_$.toFloatVector = function(e, t, n) {
        return new openfl__$Vector_FloatVector(t, n)
    }, openfl__$Vector_Vector_$Impl_$.toObjectVector = function(e, t, n) {
        return new openfl__$Vector_ObjectVector(t, n)
    };
    var openfl_geom_ColorTransform = function(e, t, n, l, i, s, a, r) {
        null == r && (r = 0), null == a && (a = 0), null == s && (s = 0), null == i && (i = 0), null == l && (l = 1), null == n && (n = 1), null == t && (t = 1), null == e && (e = 1), this.redMultiplier = e, this.greenMultiplier = t, this.blueMultiplier = n, this.alphaMultiplier = l, this.redOffset = i, this.greenOffset = s, this.blueOffset = a, this.alphaOffset = r
    };
    $hxClasses["openfl.geom.ColorTransform"] = openfl_geom_ColorTransform, openfl_geom_ColorTransform.__name__ = ["openfl", "geom", "ColorTransform"], openfl_geom_ColorTransform.prototype = {
        alphaMultiplier: null,
        alphaOffset: null,
        blueMultiplier: null,
        blueOffset: null,
        greenMultiplier: null,
        greenOffset: null,
        redMultiplier: null,
        redOffset: null,
        __clone: function() {
            return new openfl_geom_ColorTransform(this.redMultiplier, this.greenMultiplier, this.blueMultiplier, this.alphaMultiplier, this.redOffset, this.greenOffset, this.blueOffset, this.alphaOffset)
        },
        __combine: function(e) {
            this.redMultiplier *= e.redMultiplier, this.greenMultiplier *= e.greenMultiplier, this.blueMultiplier *= e.blueMultiplier, this.alphaMultiplier *= e.alphaMultiplier, this.redOffset += e.redOffset, this.greenOffset += e.greenOffset, this.blueOffset += e.blueOffset, this.alphaOffset += e.alphaOffset
        },
        __equals: function(e, t) {
            return null == t && (t = !1), null != e && this.redMultiplier == e.redMultiplier && this.greenMultiplier == e.greenMultiplier && this.blueMultiplier == e.blueMultiplier && (t || this.alphaMultiplier == e.alphaMultiplier) && this.redOffset == e.redOffset && this.greenOffset == e.greenOffset && this.blueOffset == e.blueOffset && this.alphaOffset == e.alphaOffset
        },
        __toLimeColorMatrix: function() {
            var e;
            null == openfl_geom_ColorTransform.__limeColorMatrix && (e = new Float32Array(20), openfl_geom_ColorTransform.__limeColorMatrix = e);
            return openfl_geom_ColorTransform.__limeColorMatrix[0] = this.redMultiplier, openfl_geom_ColorTransform.__limeColorMatrix[4] = this.redOffset / 255, openfl_geom_ColorTransform.__limeColorMatrix[6] = this.greenMultiplier, openfl_geom_ColorTransform.__limeColorMatrix[9] = this.greenOffset / 255, openfl_geom_ColorTransform.__limeColorMatrix[12] = this.blueMultiplier, openfl_geom_ColorTransform.__limeColorMatrix[14] = this.blueOffset / 255, openfl_geom_ColorTransform.__limeColorMatrix[18] = this.alphaMultiplier, openfl_geom_ColorTransform.__limeColorMatrix[19] = this.alphaOffset / 255, openfl_geom_ColorTransform.__limeColorMatrix
        },
        __class__: openfl_geom_ColorTransform
    };
    var openfl_Lib = function() {};
    $hxClasses["openfl.Lib"] = openfl_Lib, openfl_Lib.__name__ = ["openfl", "Lib"], openfl_Lib.getTimer = function() {
        return lime_system_System.getTimer()
    }, openfl_Lib.getURL = function(e, t) {
        null == t && (t = "_blank"), lime_system_System.openURL(e.url, t)
    };
    var openfl__$Vector_IVector = function() {};
    $hxClasses["openfl._Vector.IVector"] = openfl__$Vector_IVector, openfl__$Vector_IVector.__name__ = ["openfl", "_Vector", "IVector"], openfl__$Vector_IVector.prototype = {
        __class__: openfl__$Vector_IVector
    };
    var openfl__$Vector_FloatVector = function(e, t, n) {
        null == n && (n = []), this.__array = n, null != e && this.set_length(e), this.fixed = 1 == t
    };
    $hxClasses["openfl._Vector.FloatVector"] = openfl__$Vector_FloatVector, openfl__$Vector_FloatVector.__name__ = ["openfl", "_Vector", "FloatVector"], openfl__$Vector_FloatVector.__interfaces__ = [openfl__$Vector_IVector], openfl__$Vector_FloatVector.prototype = {
        fixed: null,
        __array: null,
        get: function(e) {
            return this.__array[e]
        },
        push: function(e) {
            return this.fixed ? this.__array.length : this.__array.push(e)
        },
        set: function(e, t) {
            return !this.fixed || e < this.__array.length ? this.__array[e] = t : t
        },
        get_length: function() {
            return this.__array.length
        },
        set_length: function(e) {
            if (!this.fixed) {
                var t = this.__array.length;
                if (e < 0 && (e = 0), e > t)
                    for (var n = t; n < e;) {
                        var l = n++;
                        this.__array[l] = 0
                    } else
                        for (; this.__array.length > e;) this.__array.pop()
            }
            return this.__array.length
        },
        __class__: openfl__$Vector_FloatVector,
        __properties__: {
            set_length: "set_length",
            get_length: "get_length"
        }
    };
    var openfl__$Vector_IntVector = function(e, t, n) {
        null == n && (n = []), this.__array = n, null != e && this.set_length(e), this.fixed = 1 == t
    };
    $hxClasses["openfl._Vector.IntVector"] = openfl__$Vector_IntVector, openfl__$Vector_IntVector.__name__ = ["openfl", "_Vector", "IntVector"], openfl__$Vector_IntVector.__interfaces__ = [openfl__$Vector_IVector], openfl__$Vector_IntVector.prototype = {
        fixed: null,
        __array: null,
        get: function(e) {
            return this.__array[e]
        },
        set: function(e, t) {
            return !this.fixed || e < this.__array.length ? this.__array[e] = t : t
        },
        get_length: function() {
            return this.__array.length
        },
        set_length: function(e) {
            if (!this.fixed) {
                var t = this.__array.length;
                if (e < 0 && (e = 0), e > t)
                    for (var n = t; n < e;) {
                        var l = n++;
                        this.__array[l] = 0
                    } else
                        for (; this.__array.length > e;) this.__array.pop()
            }
            return this.__array.length
        },
        __class__: openfl__$Vector_IntVector,
        __properties__: {
            set_length: "set_length",
            get_length: "get_length"
        }
    };
    var openfl__$Vector_ObjectVector = function(e, t, n) {
        null == n && (n = []), this.__array = n, null != e && this.set_length(e), this.fixed = 1 == t
    };
    $hxClasses["openfl._Vector.ObjectVector"] = openfl__$Vector_ObjectVector, openfl__$Vector_ObjectVector.__name__ = ["openfl", "_Vector", "ObjectVector"], openfl__$Vector_ObjectVector.__interfaces__ = [openfl__$Vector_IVector], openfl__$Vector_ObjectVector.prototype = {
        fixed: null,
        __array: null,
        get: function(e) {
            return this.__array[e]
        },
        push: function(e) {
            return this.fixed ? this.__array.length : this.__array.push(e)
        },
        splice: function(e, t) {
            return new openfl__$Vector_ObjectVector(null, null, this.__array.splice(e, t))
        },
        get_length: function() {
            return this.__array.length
        },
        set_length: function(e) {
            if (!this.fixed) {
                var t = this.__array.length;
                if (e < 0 && (e = 0), e > t)
                    for (var n = t; n < e;) {
                        n++;
                        this.__array.push(null)
                    } else
                        for (; this.__array.length > e;) this.__array.pop()
            }
            return this.__array.length
        },
        __class__: openfl__$Vector_ObjectVector,
        __properties__: {
            set_length: "set_length",
            get_length: "get_length"
        }
    };
    var openfl__$internal_renderer_AbstractBlendModeManager = function() {};
    $hxClasses["openfl._internal.renderer.AbstractBlendModeManager"] = openfl__$internal_renderer_AbstractBlendModeManager, openfl__$internal_renderer_AbstractBlendModeManager.__name__ = ["openfl", "_internal", "renderer", "AbstractBlendModeManager"], openfl__$internal_renderer_AbstractBlendModeManager.prototype = {
        setBlendMode: function(e) {},
        __class__: openfl__$internal_renderer_AbstractBlendModeManager
    };
    var openfl__$internal_renderer_AbstractFilterManager = function(e) {
        this.renderSession = e
    };
    $hxClasses["openfl._internal.renderer.AbstractFilterManager"] = openfl__$internal_renderer_AbstractFilterManager, openfl__$internal_renderer_AbstractFilterManager.__name__ = ["openfl", "_internal", "renderer", "AbstractFilterManager"], openfl__$internal_renderer_AbstractFilterManager.prototype = {
        renderSession: null,
        pushObject: function(e) {
            return null
        },
        popObject: function(e) {},
        __class__: openfl__$internal_renderer_AbstractFilterManager
    };
    var openfl__$internal_renderer_AbstractMaskManager = function(e) {
        this.renderSession = e
    };
    $hxClasses["openfl._internal.renderer.AbstractMaskManager"] = openfl__$internal_renderer_AbstractMaskManager, openfl__$internal_renderer_AbstractMaskManager.__name__ = ["openfl", "_internal", "renderer", "AbstractMaskManager"], openfl__$internal_renderer_AbstractMaskManager.prototype = {
        renderSession: null,
        pushMask: function(e) {},
        pushObject: function(e, t) {
            null == t && (t = !0)
        },
        pushRect: function(e, t) {},
        popMask: function() {},
        popObject: function(e, t) {
            null == t && (t = !0)
        },
        popRect: function() {},
        saveState: function() {},
        restoreState: function() {},
        __class__: openfl__$internal_renderer_AbstractMaskManager
    };
    var openfl__$internal_renderer_AbstractRenderer = function(e) {
        this.stage = e, this.width = e.stageWidth, this.height = e.stageHeight
    };
    $hxClasses["openfl._internal.renderer.AbstractRenderer"] = openfl__$internal_renderer_AbstractRenderer, openfl__$internal_renderer_AbstractRenderer.__name__ = ["openfl", "_internal", "renderer", "AbstractRenderer"], openfl__$internal_renderer_AbstractRenderer.prototype = {
        height: null,
        width: null,
        renderSession: null,
        stage: null,
        clear: function() {},
        render: function() {},
        resize: function(e, t) {
            this.width = e, this.height = t
        },
        __class__: openfl__$internal_renderer_AbstractRenderer
    };
    var openfl__$internal_renderer_AbstractShaderManager = function() {};
    $hxClasses["openfl._internal.renderer.AbstractShaderManager"] = openfl__$internal_renderer_AbstractShaderManager, openfl__$internal_renderer_AbstractShaderManager.__name__ = ["openfl", "_internal", "renderer", "AbstractShaderManager"], openfl__$internal_renderer_AbstractShaderManager.prototype = {
        currentShader: null,
        defaultShader: null,
        setShader: function(e) {},
        __class__: openfl__$internal_renderer_AbstractShaderManager
    };
    var openfl__$internal_renderer_DrawCommandBuffer = function() {
        null == openfl__$internal_renderer_DrawCommandBuffer.empty ? (this.types = [], this.b = [], this.i = [], this.f = [], this.o = [], this.ff = [], this.ii = [], this.copyOnWrite = !0) : this.clear()
    };
    $hxClasses["openfl._internal.renderer.DrawCommandBuffer"] = openfl__$internal_renderer_DrawCommandBuffer, openfl__$internal_renderer_DrawCommandBuffer.__name__ = ["openfl", "_internal", "renderer", "DrawCommandBuffer"], openfl__$internal_renderer_DrawCommandBuffer.prototype = {
        types: null,
        b: null,
        copyOnWrite: null,
        f: null,
        ff: null,
        i: null,
        ii: null,
        o: null,
        append: function(e) {
            if (0 == this.get_length()) return this.types = e.types, this.b = e.b, this.i = e.i, this.f = e.f, this.o = e.o, this.ff = e.ff, this.ii = e.ii, this.copyOnWrite = e.copyOnWrite = !0, e;
            for (var t = new openfl__$internal_renderer_DrawCommandReader(e), n = 0, l = e.types; n < l.length;) {
                var i = l[n];
                switch (++n, i[1]) {
                    case 0:
                        var s;
                        t.advance(), t.prev = openfl__$internal_renderer_DrawCommandType.BEGIN_BITMAP_FILL, s = t, this.beginBitmapFill(s.buffer.o[s.oPos], s.buffer.o[s.oPos + 1], s.buffer.b[s.bPos], s.buffer.b[s.bPos + 1]);
                        break;
                    case 1:
                        var a;
                        t.advance(), t.prev = openfl__$internal_renderer_DrawCommandType.BEGIN_FILL, a = t, this.beginFill(a.buffer.i[a.iPos], a.buffer.f[a.fPos]);
                        break;
                    case 2:
                        var r;
                        t.advance(), t.prev = openfl__$internal_renderer_DrawCommandType.BEGIN_GRADIENT_FILL, r = t, this.beginGradientFill(r.buffer.o[r.oPos], r.buffer.ii[r.iiPos], r.buffer.ff[r.ffPos], r.buffer.ii[r.iiPos + 1], r.buffer.o[r.oPos + 1], r.buffer.o[r.oPos + 2], r.buffer.o[r.oPos + 3], r.buffer.f[r.fPos]);
                        break;
                    case 3:
                        var o;
                        t.advance(), t.prev = openfl__$internal_renderer_DrawCommandType.CUBIC_CURVE_TO, o = t, this.cubicCurveTo(o.buffer.f[o.fPos], o.buffer.f[o.fPos + 1], o.buffer.f[o.fPos + 2], o.buffer.f[o.fPos + 3], o.buffer.f[o.fPos + 4], o.buffer.f[o.fPos + 5]);
                        break;
                    case 4:
                        var d;
                        t.advance(), t.prev = openfl__$internal_renderer_DrawCommandType.CURVE_TO, d = t, this.curveTo(d.buffer.f[d.fPos], d.buffer.f[d.fPos + 1], d.buffer.f[d.fPos + 2], d.buffer.f[d.fPos + 3]);
                        break;
                    case 5:
                        var _;
                        t.advance(), t.prev = openfl__$internal_renderer_DrawCommandType.DRAW_CIRCLE, _ = t, this.drawCircle(_.buffer.f[_.fPos], _.buffer.f[_.fPos + 1], _.buffer.f[_.fPos + 2]);
                        break;
                    case 6:
                        var h;
                        t.advance(), t.prev = openfl__$internal_renderer_DrawCommandType.DRAW_ELLIPSE, h = t, this.drawEllipse(h.buffer.f[h.fPos], h.buffer.f[h.fPos + 1], h.buffer.f[h.fPos + 2], h.buffer.f[h.fPos + 3]);
                        break;
                    case 7:
                        var p;
                        t.advance(), t.prev = openfl__$internal_renderer_DrawCommandType.DRAW_RECT, p = t, this.drawRect(p.buffer.f[p.fPos], p.buffer.f[p.fPos + 1], p.buffer.f[p.fPos + 2], p.buffer.f[p.fPos + 3]);
                        break;
                    case 8:
                        var c;
                        t.advance(), t.prev = openfl__$internal_renderer_DrawCommandType.DRAW_ROUND_RECT, c = t, this.drawRoundRect(c.buffer.f[c.fPos], c.buffer.f[c.fPos + 1], c.buffer.f[c.fPos + 2], c.buffer.f[c.fPos + 3], c.buffer.f[c.fPos + 4], c.buffer.o[c.oPos]);
                        break;
                    case 10:
                        var Q;
                        t.advance(), t.prev = openfl__$internal_renderer_DrawCommandType.DRAW_TRIANGLES, Q = t, this.drawTriangles(Q.buffer.o[Q.oPos], Q.buffer.o[Q.oPos + 1], Q.buffer.o[Q.oPos + 2], Q.buffer.o[Q.oPos + 3]);
                        break;
                    case 11:
                        t.advance(), t.prev = openfl__$internal_renderer_DrawCommandType.END_FILL, t, this.endFill();
                        break;
                    case 12:
                        var U;
                        t.advance(), t.prev = openfl__$internal_renderer_DrawCommandType.LINE_BITMAP_STYLE, U = t, this.lineBitmapStyle(U.buffer.o[U.oPos], U.buffer.o[U.oPos + 1], U.buffer.b[U.bPos], U.buffer.b[U.bPos + 1]);
                        break;
                    case 13:
                        var m;
                        t.advance(), t.prev = openfl__$internal_renderer_DrawCommandType.LINE_GRADIENT_STYLE, m = t, this.lineGradientStyle(m.buffer.o[m.oPos], m.buffer.ii[m.iiPos], m.buffer.ff[m.ffPos], m.buffer.ii[m.iiPos + 1], m.buffer.o[m.oPos + 1], m.buffer.o[m.oPos + 2], m.buffer.o[m.oPos + 3], m.buffer.f[m.fPos]);
                        break;
                    case 14:
                        var u;
                        t.advance(), t.prev = openfl__$internal_renderer_DrawCommandType.LINE_STYLE, u = t, this.lineStyle(u.buffer.o[u.oPos], u.buffer.i[u.iPos], u.buffer.f[u.fPos], u.buffer.b[u.bPos], u.buffer.o[u.oPos + 1], u.buffer.o[u.oPos + 2], u.buffer.o[u.oPos + 3], u.buffer.f[u.fPos + 1]);
                        break;
                    case 15:
                        var F;
                        t.advance(), t.prev = openfl__$internal_renderer_DrawCommandType.LINE_TO, F = t, this.lineTo(F.buffer.f[F.fPos], F.buffer.f[F.fPos + 1]);
                        break;
                    case 16:
                        var N;
                        t.advance(), t.prev = openfl__$internal_renderer_DrawCommandType.MOVE_TO, N = t, this.moveTo(N.buffer.f[N.fPos], N.buffer.f[N.fPos + 1]);
                        break;
                    case 17:
                        var S;
                        t.advance(), t.prev = openfl__$internal_renderer_DrawCommandType.OVERRIDE_MATRIX, S = t, this.overrideMatrix(S.buffer.o[S.oPos])
                }
            }
            return t.destroy(), e
        },
        beginBitmapFill: function(e, t, n, l) {
            this.prepareWrite(), this.types.push(openfl__$internal_renderer_DrawCommandType.BEGIN_BITMAP_FILL), this.o.push(e), this.o.push(t), this.b.push(n), this.b.push(l)
        },
        beginFill: function(e, t) {
            this.prepareWrite(), this.types.push(openfl__$internal_renderer_DrawCommandType.BEGIN_FILL), this.i.push(e), this.f.push(t)
        },
        beginGradientFill: function(e, t, n, l, i, s, a, r) {
            this.prepareWrite(), this.types.push(openfl__$internal_renderer_DrawCommandType.BEGIN_GRADIENT_FILL), this.o.push(e), this.ii.push(t), this.ff.push(n), this.ii.push(l), this.o.push(i), this.o.push(s), this.o.push(a), this.f.push(r)
        },
        clear: function() {
            this.types = openfl__$internal_renderer_DrawCommandBuffer.empty.types, this.b = openfl__$internal_renderer_DrawCommandBuffer.empty.b, this.i = openfl__$internal_renderer_DrawCommandBuffer.empty.i, this.f = openfl__$internal_renderer_DrawCommandBuffer.empty.f, this.o = openfl__$internal_renderer_DrawCommandBuffer.empty.o, this.ff = openfl__$internal_renderer_DrawCommandBuffer.empty.ff, this.ii = openfl__$internal_renderer_DrawCommandBuffer.empty.ii, this.copyOnWrite = !0
        },
        copy: function() {
            var e = new openfl__$internal_renderer_DrawCommandBuffer;
            return e.append(this), e
        },
        cubicCurveTo: function(e, t, n, l, i, s) {
            this.prepareWrite(), this.types.push(openfl__$internal_renderer_DrawCommandType.CUBIC_CURVE_TO), this.f.push(e), this.f.push(t), this.f.push(n), this.f.push(l), this.f.push(i), this.f.push(s)
        },
        curveTo: function(e, t, n, l) {
            this.prepareWrite(), this.types.push(openfl__$internal_renderer_DrawCommandType.CURVE_TO), this.f.push(e), this.f.push(t), this.f.push(n), this.f.push(l)
        },
        drawCircle: function(e, t, n) {
            this.prepareWrite(), this.types.push(openfl__$internal_renderer_DrawCommandType.DRAW_CIRCLE), this.f.push(e), this.f.push(t), this.f.push(n)
        },
        drawEllipse: function(e, t, n, l) {
            this.prepareWrite(), this.types.push(openfl__$internal_renderer_DrawCommandType.DRAW_ELLIPSE), this.f.push(e), this.f.push(t), this.f.push(n), this.f.push(l)
        },
        drawRect: function(e, t, n, l) {
            this.prepareWrite(), this.types.push(openfl__$internal_renderer_DrawCommandType.DRAW_RECT), this.f.push(e), this.f.push(t), this.f.push(n), this.f.push(l)
        },
        drawRoundRect: function(e, t, n, l, i, s) {
            this.prepareWrite(), this.types.push(openfl__$internal_renderer_DrawCommandType.DRAW_ROUND_RECT), this.f.push(e), this.f.push(t), this.f.push(n), this.f.push(l), this.f.push(i), this.o.push(s)
        },
        drawTriangles: function(e, t, n, l) {
            this.prepareWrite(), this.types.push(openfl__$internal_renderer_DrawCommandType.DRAW_TRIANGLES), this.o.push(e), this.o.push(t), this.o.push(n), this.o.push(l)
        },
        endFill: function() {
            this.prepareWrite(), this.types.push(openfl__$internal_renderer_DrawCommandType.END_FILL)
        },
        lineBitmapStyle: function(e, t, n, l) {
            this.prepareWrite(), this.types.push(openfl__$internal_renderer_DrawCommandType.LINE_BITMAP_STYLE), this.o.push(e), this.o.push(t), this.b.push(n), this.b.push(l)
        },
        lineGradientStyle: function(e, t, n, l, i, s, a, r) {
            this.prepareWrite(), this.types.push(openfl__$internal_renderer_DrawCommandType.LINE_GRADIENT_STYLE), this.o.push(e), this.ii.push(t), this.ff.push(n), this.ii.push(l), this.o.push(i), this.o.push(s), this.o.push(a), this.f.push(r)
        },
        lineStyle: function(e, t, n, l, i, s, a, r) {
            this.prepareWrite(), this.types.push(openfl__$internal_renderer_DrawCommandType.LINE_STYLE), this.o.push(e), this.i.push(t), this.f.push(n), this.b.push(l), this.o.push(i), this.o.push(s), this.o.push(a), this.f.push(r)
        },
        lineTo: function(e, t) {
            this.prepareWrite(), this.types.push(openfl__$internal_renderer_DrawCommandType.LINE_TO), this.f.push(e), this.f.push(t)
        },
        moveTo: function(e, t) {
            this.prepareWrite(), this.types.push(openfl__$internal_renderer_DrawCommandType.MOVE_TO), this.f.push(e), this.f.push(t)
        },
        prepareWrite: function() {
            this.copyOnWrite && (this.types = this.types.slice(), this.b = this.b.slice(), this.i = this.i.slice(), this.f = this.f.slice(), this.o = this.o.slice(), this.ff = this.ff.slice(), this.ii = this.ii.slice(), this.copyOnWrite = !1)
        },
        overrideMatrix: function(e) {
            this.prepareWrite(), this.types.push(openfl__$internal_renderer_DrawCommandType.OVERRIDE_MATRIX), this.o.push(e)
        },
        get_length: function() {
            return this.types.length
        },
        __class__: openfl__$internal_renderer_DrawCommandBuffer,
        __properties__: {
            get_length: "get_length"
        }
    };
    var openfl__$internal_renderer_DrawCommandReader = function(e) {
        this.buffer = e, this.bPos = this.iPos = this.fPos = this.oPos = this.ffPos = this.iiPos = this.tsPos = 0, this.prev = openfl__$internal_renderer_DrawCommandType.UNKNOWN
    };
    $hxClasses["openfl._internal.renderer.DrawCommandReader"] = openfl__$internal_renderer_DrawCommandReader, openfl__$internal_renderer_DrawCommandReader.__name__ = ["openfl", "_internal", "renderer", "DrawCommandReader"], openfl__$internal_renderer_DrawCommandReader.prototype = {
        buffer: null,
        bPos: null,
        iiPos: null,
        iPos: null,
        ffPos: null,
        fPos: null,
        oPos: null,
        prev: null,
        tsPos: null,
        advance: function() {
            switch (this.prev[1]) {
                case 0:
                    this.oPos += 2, this.bPos += 2;
                    break;
                case 1:
                    this.iPos += 1, this.fPos += 1;
                    break;
                case 2:
                    this.oPos += 4, this.iiPos += 2, this.ffPos += 1, this.fPos += 1;
                    break;
                case 3:
                    this.fPos += 6;
                    break;
                case 4:
                    this.fPos += 4;
                    break;
                case 5:
                    this.fPos += 3;
                    break;
                case 6:
                case 7:
                    this.fPos += 4;
                    break;
                case 8:
                    this.fPos += 5, this.oPos += 1;
                    break;
                case 10:
                    this.oPos += 4;
                    break;
                case 11:
                    break;
                case 12:
                    this.oPos += 2, this.bPos += 2;
                    break;
                case 13:
                    this.oPos += 4, this.iiPos += 2, this.ffPos += 1, this.fPos += 1;
                    break;
                case 14:
                    this.oPos += 4, this.iPos += 1, this.fPos += 2, this.bPos += 1;
                    break;
                case 15:
                case 16:
                    this.fPos += 2;
                    break;
                case 17:
                    this.oPos += 1
            }
        },
        destroy: function() {
            this.buffer = null, this.reset()
        },
        reset: function() {
            this.bPos = this.iPos = this.fPos = this.oPos = this.ffPos = this.iiPos = this.tsPos = 0
        },
        __class__: openfl__$internal_renderer_DrawCommandReader
    };
    var openfl__$internal_renderer_DrawCommandType = $hxClasses["openfl._internal.renderer.DrawCommandType"] = {
        __ename__: ["openfl", "_internal", "renderer", "DrawCommandType"],
        __constructs__: ["BEGIN_BITMAP_FILL", "BEGIN_FILL", "BEGIN_GRADIENT_FILL", "CUBIC_CURVE_TO", "CURVE_TO", "DRAW_CIRCLE", "DRAW_ELLIPSE", "DRAW_RECT", "DRAW_ROUND_RECT", "DRAW_TILES", "DRAW_TRIANGLES", "END_FILL", "LINE_BITMAP_STYLE", "LINE_GRADIENT_STYLE", "LINE_STYLE", "LINE_TO", "MOVE_TO", "OVERRIDE_MATRIX", "UNKNOWN"]
    };
    openfl__$internal_renderer_DrawCommandType.BEGIN_BITMAP_FILL = ["BEGIN_BITMAP_FILL", 0], openfl__$internal_renderer_DrawCommandType.BEGIN_BITMAP_FILL.toString = $estr, openfl__$internal_renderer_DrawCommandType.BEGIN_BITMAP_FILL.__enum__ = openfl__$internal_renderer_DrawCommandType, openfl__$internal_renderer_DrawCommandType.BEGIN_FILL = ["BEGIN_FILL", 1], openfl__$internal_renderer_DrawCommandType.BEGIN_FILL.toString = $estr, openfl__$internal_renderer_DrawCommandType.BEGIN_FILL.__enum__ = openfl__$internal_renderer_DrawCommandType, openfl__$internal_renderer_DrawCommandType.BEGIN_GRADIENT_FILL = ["BEGIN_GRADIENT_FILL", 2], openfl__$internal_renderer_DrawCommandType.BEGIN_GRADIENT_FILL.toString = $estr, openfl__$internal_renderer_DrawCommandType.BEGIN_GRADIENT_FILL.__enum__ = openfl__$internal_renderer_DrawCommandType, openfl__$internal_renderer_DrawCommandType.CUBIC_CURVE_TO = ["CUBIC_CURVE_TO", 3], openfl__$internal_renderer_DrawCommandType.CUBIC_CURVE_TO.toString = $estr, openfl__$internal_renderer_DrawCommandType.CUBIC_CURVE_TO.__enum__ = openfl__$internal_renderer_DrawCommandType, openfl__$internal_renderer_DrawCommandType.CURVE_TO = ["CURVE_TO", 4], openfl__$internal_renderer_DrawCommandType.CURVE_TO.toString = $estr, openfl__$internal_renderer_DrawCommandType.CURVE_TO.__enum__ = openfl__$internal_renderer_DrawCommandType, openfl__$internal_renderer_DrawCommandType.DRAW_CIRCLE = ["DRAW_CIRCLE", 5], openfl__$internal_renderer_DrawCommandType.DRAW_CIRCLE.toString = $estr, openfl__$internal_renderer_DrawCommandType.DRAW_CIRCLE.__enum__ = openfl__$internal_renderer_DrawCommandType, openfl__$internal_renderer_DrawCommandType.DRAW_ELLIPSE = ["DRAW_ELLIPSE", 6], openfl__$internal_renderer_DrawCommandType.DRAW_ELLIPSE.toString = $estr, openfl__$internal_renderer_DrawCommandType.DRAW_ELLIPSE.__enum__ = openfl__$internal_renderer_DrawCommandType, openfl__$internal_renderer_DrawCommandType.DRAW_RECT = ["DRAW_RECT", 7], openfl__$internal_renderer_DrawCommandType.DRAW_RECT.toString = $estr, openfl__$internal_renderer_DrawCommandType.DRAW_RECT.__enum__ = openfl__$internal_renderer_DrawCommandType, openfl__$internal_renderer_DrawCommandType.DRAW_ROUND_RECT = ["DRAW_ROUND_RECT", 8], openfl__$internal_renderer_DrawCommandType.DRAW_ROUND_RECT.toString = $estr, openfl__$internal_renderer_DrawCommandType.DRAW_ROUND_RECT.__enum__ = openfl__$internal_renderer_DrawCommandType, openfl__$internal_renderer_DrawCommandType.DRAW_TILES = ["DRAW_TILES", 9], openfl__$internal_renderer_DrawCommandType.DRAW_TILES.toString = $estr, openfl__$internal_renderer_DrawCommandType.DRAW_TILES.__enum__ = openfl__$internal_renderer_DrawCommandType, openfl__$internal_renderer_DrawCommandType.DRAW_TRIANGLES = ["DRAW_TRIANGLES", 10], openfl__$internal_renderer_DrawCommandType.DRAW_TRIANGLES.toString = $estr, openfl__$internal_renderer_DrawCommandType.DRAW_TRIANGLES.__enum__ = openfl__$internal_renderer_DrawCommandType, openfl__$internal_renderer_DrawCommandType.END_FILL = ["END_FILL", 11], openfl__$internal_renderer_DrawCommandType.END_FILL.toString = $estr, openfl__$internal_renderer_DrawCommandType.END_FILL.__enum__ = openfl__$internal_renderer_DrawCommandType, openfl__$internal_renderer_DrawCommandType.LINE_BITMAP_STYLE = ["LINE_BITMAP_STYLE", 12], openfl__$internal_renderer_DrawCommandType.LINE_BITMAP_STYLE.toString = $estr, openfl__$internal_renderer_DrawCommandType.LINE_BITMAP_STYLE.__enum__ = openfl__$internal_renderer_DrawCommandType, openfl__$internal_renderer_DrawCommandType.LINE_GRADIENT_STYLE = ["LINE_GRADIENT_STYLE", 13], openfl__$internal_renderer_DrawCommandType.LINE_GRADIENT_STYLE.toString = $estr, openfl__$internal_renderer_DrawCommandType.LINE_GRADIENT_STYLE.__enum__ = openfl__$internal_renderer_DrawCommandType, openfl__$internal_renderer_DrawCommandType.LINE_STYLE = ["LINE_STYLE", 14], openfl__$internal_renderer_DrawCommandType.LINE_STYLE.toString = $estr, openfl__$internal_renderer_DrawCommandType.LINE_STYLE.__enum__ = openfl__$internal_renderer_DrawCommandType, openfl__$internal_renderer_DrawCommandType.LINE_TO = ["LINE_TO", 15], openfl__$internal_renderer_DrawCommandType.LINE_TO.toString = $estr, openfl__$internal_renderer_DrawCommandType.LINE_TO.__enum__ = openfl__$internal_renderer_DrawCommandType, openfl__$internal_renderer_DrawCommandType.MOVE_TO = ["MOVE_TO", 16], openfl__$internal_renderer_DrawCommandType.MOVE_TO.toString = $estr, openfl__$internal_renderer_DrawCommandType.MOVE_TO.__enum__ = openfl__$internal_renderer_DrawCommandType, openfl__$internal_renderer_DrawCommandType.OVERRIDE_MATRIX = ["OVERRIDE_MATRIX", 17], openfl__$internal_renderer_DrawCommandType.OVERRIDE_MATRIX.toString = $estr, openfl__$internal_renderer_DrawCommandType.OVERRIDE_MATRIX.__enum__ = openfl__$internal_renderer_DrawCommandType, openfl__$internal_renderer_DrawCommandType.UNKNOWN = ["UNKNOWN", 18], openfl__$internal_renderer_DrawCommandType.UNKNOWN.toString = $estr, openfl__$internal_renderer_DrawCommandType.UNKNOWN.__enum__ = openfl__$internal_renderer_DrawCommandType;
    var openfl__$internal_renderer_RenderSession = function() {
        this.allowSmoothing = !0
    };
    $hxClasses["openfl._internal.renderer.RenderSession"] = openfl__$internal_renderer_RenderSession, openfl__$internal_renderer_RenderSession.__name__ = ["openfl", "_internal", "renderer", "RenderSession"], openfl__$internal_renderer_RenderSession.prototype = {
        allowSmoothing: null,
        context: null,
        element: null,
        gl: null,
        renderer: null,
        roundPixels: null,
        transformOriginProperty: null,
        upscaled: null,
        blendModeManager: null,
        filterManager: null,
        maskManager: null,
        shaderManager: null,
        __class__: openfl__$internal_renderer_RenderSession
    };
    var openfl__$internal_renderer_canvas_CanvasBitmap = function() {};
    $hxClasses["openfl._internal.renderer.canvas.CanvasBitmap"] = openfl__$internal_renderer_canvas_CanvasBitmap, openfl__$internal_renderer_canvas_CanvasBitmap.__name__ = ["openfl", "_internal", "renderer", "canvas", "CanvasBitmap"], openfl__$internal_renderer_canvas_CanvasBitmap.render = function(e, t) {
        if (e.__renderable && !(e.__worldAlpha <= 0)) {
            var n = t.context;
            if (null != e.bitmapData && e.bitmapData.__isValid) {
                t.maskManager.pushObject(e, !1), lime_graphics_utils_ImageCanvasUtil.convertToCanvas(e.bitmapData.image), n.globalAlpha = e.__worldAlpha;
                var l = e.__renderTransform,
                    i = e.__scrollRect;
                t.roundPixels ? n.setTransform(l.a, l.b, l.c, l.d, 0 | l.tx, 0 | l.ty) : n.setTransform(l.a, l.b, l.c, l.d, l.tx, l.ty), t.allowSmoothing && e.smoothing || (n.imageSmoothingEnabled = !1, n.msImageSmoothingEnabled = !1, n.imageSmoothingEnabled = !1), null == i ? n.drawImage(e.bitmapData.image.get_src(), 0, 0) : n.drawImage(e.bitmapData.image.get_src(), i.x, i.y, i.width, i.height, i.x, i.y, i.width, i.height), t.allowSmoothing && e.smoothing || (n.imageSmoothingEnabled = !0, n.msImageSmoothingEnabled = !0, n.imageSmoothingEnabled = !0), t.maskManager.popObject(e, !1)
            }
        }
    };
    var openfl__$internal_renderer_canvas_CanvasDisplayObject = function() {};
    $hxClasses["openfl._internal.renderer.canvas.CanvasDisplayObject"] = openfl__$internal_renderer_canvas_CanvasDisplayObject, openfl__$internal_renderer_canvas_CanvasDisplayObject.__name__ = ["openfl", "_internal", "renderer", "canvas", "CanvasDisplayObject"], openfl__$internal_renderer_canvas_CanvasDisplayObject.render = function(e, t) {
        if ((null != e.opaqueBackground || null != e.__graphics) && e.__renderable && !(e.__worldAlpha <= 0)) {
            if (null != e.opaqueBackground && e.get_width() > 0 && e.get_height() > 0) {
                t.maskManager.pushObject(e);
                var n = t.context,
                    l = e.__renderTransform;
                t.roundPixels ? n.setTransform(l.a, l.b, l.c, l.d, 0 | l.tx, 0 | l.ty) : n.setTransform(l.a, l.b, l.c, l.d, l.tx, l.ty);
                var i = e.opaqueBackground;
                n.fillStyle = "rgb(" + (i >> 16 & 255) + "," + (i >> 8 & 255) + "," + (255 & i) + ")", n.fillRect(0, 0, e.get_width(), e.get_height()), t.maskManager.popObject(e)
            }
            null != e.__graphics && openfl__$internal_renderer_canvas_CanvasShape.render(e, t)
        }
    };
    var openfl__$internal_renderer_canvas_CanvasGraphics = function() {};
    $hxClasses["openfl._internal.renderer.canvas.CanvasGraphics"] = openfl__$internal_renderer_canvas_CanvasGraphics, openfl__$internal_renderer_canvas_CanvasGraphics.__name__ = ["openfl", "_internal", "renderer", "canvas", "CanvasGraphics"], openfl__$internal_renderer_canvas_CanvasGraphics.closePath = function(e) {
        null == e && (e = !1), null != openfl__$internal_renderer_canvas_CanvasGraphics.context.strokeStyle && (e || openfl__$internal_renderer_canvas_CanvasGraphics.context.closePath(), openfl__$internal_renderer_canvas_CanvasGraphics.context.stroke(), e && openfl__$internal_renderer_canvas_CanvasGraphics.context.closePath(), openfl__$internal_renderer_canvas_CanvasGraphics.context.beginPath())
    }, openfl__$internal_renderer_canvas_CanvasGraphics.createBitmapFill = function(e, t, n) {
        return lime_graphics_utils_ImageCanvasUtil.convertToCanvas(e.image), openfl__$internal_renderer_canvas_CanvasGraphics.setSmoothing(n), openfl__$internal_renderer_canvas_CanvasGraphics.context.createPattern(e.image.get_src(), t ? "repeat" : "no-repeat")
    }, openfl__$internal_renderer_canvas_CanvasGraphics.createGradientPattern = function(e, t, n, l, i, s, a, r) {
        var o = null;
        switch (e) {
            case 1:
                null == i && (i = new openfl_geom_Matrix);
                var d = i.transformPoint(new openfl_geom_Point(1638.4, 0));
                o = openfl__$internal_renderer_canvas_CanvasGraphics.context.createRadialGradient(i.tx, i.ty, 0, i.tx, i.ty, Math.abs((d.x - i.tx) / 2));
                break;
            case 0:
                var _, h = (_ = null != i ? i : new openfl_geom_Matrix).transformPoint(new openfl_geom_Point(-819.2, 0)),
                    p = _.transformPoint(new openfl_geom_Point(819.2, 0));
                o = openfl__$internal_renderer_canvas_CanvasGraphics.context.createLinearGradient(h.x, h.y, p.x, p.y)
        }
        for (var c = 0, Q = t.length; c < Q;) {
            var U = c++,
                m = t[U],
                u = n[U],
                F = (16711680 & m) >>> 16,
                N = (65280 & m) >>> 8,
                S = 255 & m,
                W = l[U] / 255;
            W < 0 && (W = 0), W > 1 && (W = 1), o.addColorStop(W, "rgba(" + F + ", " + N + ", " + S + ", " + u + ")")
        }
        return o
    }, openfl__$internal_renderer_canvas_CanvasGraphics.createTempPatternCanvas = function(e, t, n, l) {
        var i = window.document.createElement("canvas"),
            s = i.getContext("2d");
        return i.width = n, i.height = l, s.fillStyle = s.createPattern(e.image.get_src(), t ? "repeat" : "no-repeat"), s.beginPath(), s.moveTo(0, 0), s.lineTo(0, l), s.lineTo(n, l), s.lineTo(n, 0), s.lineTo(0, 0), s.closePath(), openfl__$internal_renderer_canvas_CanvasGraphics.hitTesting || s.fill(), i
    }, openfl__$internal_renderer_canvas_CanvasGraphics.drawRoundRect = function(e, t, n, l, i, s) {
        null == s && (s = i), s *= .5, (i *= .5) > n / 2 && (i = n / 2), s > l / 2 && (s = l / 2);
        var a = e + n,
            r = t + l,
            o = -i + i * openfl__$internal_renderer_canvas_CanvasGraphics.SIN45,
            d = -i + i * openfl__$internal_renderer_canvas_CanvasGraphics.TAN22,
            _ = -s + s * openfl__$internal_renderer_canvas_CanvasGraphics.SIN45,
            h = -s + s * openfl__$internal_renderer_canvas_CanvasGraphics.TAN22;
        openfl__$internal_renderer_canvas_CanvasGraphics.context.moveTo(a, r - s), openfl__$internal_renderer_canvas_CanvasGraphics.context.quadraticCurveTo(a, r + h, a + o, r + _), openfl__$internal_renderer_canvas_CanvasGraphics.context.quadraticCurveTo(a + d, r, a - i, r), openfl__$internal_renderer_canvas_CanvasGraphics.context.lineTo(e + i, r), openfl__$internal_renderer_canvas_CanvasGraphics.context.quadraticCurveTo(e - d, r, e - o, r + _), openfl__$internal_renderer_canvas_CanvasGraphics.context.quadraticCurveTo(e, r + h, e, r - s), openfl__$internal_renderer_canvas_CanvasGraphics.context.lineTo(e, t + s), openfl__$internal_renderer_canvas_CanvasGraphics.context.quadraticCurveTo(e, t - h, e - o, t - _), openfl__$internal_renderer_canvas_CanvasGraphics.context.quadraticCurveTo(e - d, t, e + i, t), openfl__$internal_renderer_canvas_CanvasGraphics.context.lineTo(a - i, t), openfl__$internal_renderer_canvas_CanvasGraphics.context.quadraticCurveTo(a + d, t, a + o, t - _), openfl__$internal_renderer_canvas_CanvasGraphics.context.quadraticCurveTo(a, t - h, a, t + s), openfl__$internal_renderer_canvas_CanvasGraphics.context.lineTo(a, r - s)
    }, openfl__$internal_renderer_canvas_CanvasGraphics.endFill = function() {
        openfl__$internal_renderer_canvas_CanvasGraphics.context.beginPath(), openfl__$internal_renderer_canvas_CanvasGraphics.playCommands(openfl__$internal_renderer_canvas_CanvasGraphics.fillCommands, !1), openfl__$internal_renderer_canvas_CanvasGraphics.fillCommands.clear()
    }, openfl__$internal_renderer_canvas_CanvasGraphics.endStroke = function() {
        openfl__$internal_renderer_canvas_CanvasGraphics.context.beginPath(), openfl__$internal_renderer_canvas_CanvasGraphics.playCommands(openfl__$internal_renderer_canvas_CanvasGraphics.strokeCommands, !0), openfl__$internal_renderer_canvas_CanvasGraphics.context.closePath(), openfl__$internal_renderer_canvas_CanvasGraphics.strokeCommands.clear()
    }, openfl__$internal_renderer_canvas_CanvasGraphics.hitTest = function(e, t, n) {
        if (openfl__$internal_renderer_canvas_CanvasGraphics.bounds = e.__bounds, openfl__$internal_renderer_canvas_CanvasGraphics.graphics = e, 0 == e.__commands.get_length() || null == openfl__$internal_renderer_canvas_CanvasGraphics.bounds || openfl__$internal_renderer_canvas_CanvasGraphics.bounds.width <= 0 || openfl__$internal_renderer_canvas_CanvasGraphics.bounds.height <= 0) return !1;
        openfl__$internal_renderer_canvas_CanvasGraphics.hitTesting = !0;
        var l = e.__renderTransform,
            i = t * l.a + n * l.c + l.tx,
            s = t * l.b + n * l.d + l.ty;
        t = i, n = s, t -= openfl__$internal_renderer_canvas_CanvasGraphics.bounds.x * l.a + openfl__$internal_renderer_canvas_CanvasGraphics.bounds.y * l.c + l.tx, n -= openfl__$internal_renderer_canvas_CanvasGraphics.bounds.x * l.b + openfl__$internal_renderer_canvas_CanvasGraphics.bounds.y * l.d + l.ty;
        var a = e.__canvas,
            r = e.__context;
        e.__canvas = openfl__$internal_renderer_canvas_CanvasGraphics.hitTestCanvas, e.__context = openfl__$internal_renderer_canvas_CanvasGraphics.hitTestContext, openfl__$internal_renderer_canvas_CanvasGraphics.context = e.__context, openfl__$internal_renderer_canvas_CanvasGraphics.context.setTransform(l.a, l.b, l.c, l.d, l.tx, l.ty), openfl__$internal_renderer_canvas_CanvasGraphics.fillCommands.clear(), openfl__$internal_renderer_canvas_CanvasGraphics.strokeCommands.clear(), openfl__$internal_renderer_canvas_CanvasGraphics.hasFill = !1, openfl__$internal_renderer_canvas_CanvasGraphics.hasStroke = !1, openfl__$internal_renderer_canvas_CanvasGraphics.bitmapFill = null, openfl__$internal_renderer_canvas_CanvasGraphics.bitmapRepeat = !1;
        for (var o = new openfl__$internal_renderer_DrawCommandReader(e.__commands), d = 0, _ = e.__commands.types; d < _.length;) {
            var h = _[d];
            switch (++d, h[1]) {
                case 3:
                    var p;
                    o.advance(), o.prev = openfl__$internal_renderer_DrawCommandType.CUBIC_CURVE_TO, p = o, openfl__$internal_renderer_canvas_CanvasGraphics.fillCommands.cubicCurveTo(p.buffer.f[p.fPos], p.buffer.f[p.fPos + 1], p.buffer.f[p.fPos + 2], p.buffer.f[p.fPos + 3], p.buffer.f[p.fPos + 4], p.buffer.f[p.fPos + 5]), openfl__$internal_renderer_canvas_CanvasGraphics.strokeCommands.cubicCurveTo(p.buffer.f[p.fPos], p.buffer.f[p.fPos + 1], p.buffer.f[p.fPos + 2], p.buffer.f[p.fPos + 3], p.buffer.f[p.fPos + 4], p.buffer.f[p.fPos + 5]);
                    break;
                case 4:
                    var c;
                    o.advance(), o.prev = openfl__$internal_renderer_DrawCommandType.CURVE_TO, c = o, openfl__$internal_renderer_canvas_CanvasGraphics.fillCommands.curveTo(c.buffer.f[c.fPos], c.buffer.f[c.fPos + 1], c.buffer.f[c.fPos + 2], c.buffer.f[c.fPos + 3]), openfl__$internal_renderer_canvas_CanvasGraphics.strokeCommands.curveTo(c.buffer.f[c.fPos], c.buffer.f[c.fPos + 1], c.buffer.f[c.fPos + 2], c.buffer.f[c.fPos + 3]);
                    break;
                case 15:
                    var Q;
                    o.advance(), o.prev = openfl__$internal_renderer_DrawCommandType.LINE_TO, Q = o, openfl__$internal_renderer_canvas_CanvasGraphics.fillCommands.lineTo(Q.buffer.f[Q.fPos], Q.buffer.f[Q.fPos + 1]), openfl__$internal_renderer_canvas_CanvasGraphics.strokeCommands.lineTo(Q.buffer.f[Q.fPos], Q.buffer.f[Q.fPos + 1]);
                    break;
                case 16:
                    var U;
                    o.advance(), o.prev = openfl__$internal_renderer_DrawCommandType.MOVE_TO, U = o, openfl__$internal_renderer_canvas_CanvasGraphics.fillCommands.moveTo(U.buffer.f[U.fPos], U.buffer.f[U.fPos + 1]), openfl__$internal_renderer_canvas_CanvasGraphics.strokeCommands.moveTo(U.buffer.f[U.fPos], U.buffer.f[U.fPos + 1]);
                    break;
                case 13:
                    var m;
                    o.advance(), o.prev = openfl__$internal_renderer_DrawCommandType.LINE_GRADIENT_STYLE, m = o, openfl__$internal_renderer_canvas_CanvasGraphics.strokeCommands.lineGradientStyle(m.buffer.o[m.oPos], m.buffer.ii[m.iiPos], m.buffer.ff[m.ffPos], m.buffer.ii[m.iiPos + 1], m.buffer.o[m.oPos + 1], m.buffer.o[m.oPos + 2], m.buffer.o[m.oPos + 3], m.buffer.f[m.fPos]);
                    break;
                case 12:
                    var u;
                    o.advance(), o.prev = openfl__$internal_renderer_DrawCommandType.LINE_BITMAP_STYLE, u = o, openfl__$internal_renderer_canvas_CanvasGraphics.strokeCommands.lineBitmapStyle(u.buffer.o[u.oPos], u.buffer.o[u.oPos + 1], u.buffer.b[u.bPos], u.buffer.b[u.bPos + 1]);
                    break;
                case 14:
                    var F;
                    o.advance(), o.prev = openfl__$internal_renderer_DrawCommandType.LINE_STYLE, F = o, openfl__$internal_renderer_canvas_CanvasGraphics.strokeCommands.lineStyle(F.buffer.o[F.oPos], F.buffer.i[F.iPos], 1, F.buffer.b[F.bPos], F.buffer.o[F.oPos + 1], F.buffer.o[F.oPos + 2], F.buffer.o[F.oPos + 3], F.buffer.f[F.fPos + 1]);
                    break;
                case 11:
                    if (o.advance(), o.prev = openfl__$internal_renderer_DrawCommandType.END_FILL, openfl__$internal_renderer_canvas_CanvasGraphics.endFill(), openfl__$internal_renderer_canvas_CanvasGraphics.endStroke(), openfl__$internal_renderer_canvas_CanvasGraphics.hasFill && openfl__$internal_renderer_canvas_CanvasGraphics.context.isPointInPath(t, n)) return o.destroy(), e.__canvas = a, e.__context = r, !0;
                    if (openfl__$internal_renderer_canvas_CanvasGraphics.hasStroke && openfl__$internal_renderer_canvas_CanvasGraphics.context.isPointInStroke(t, n)) return o.destroy(), e.__canvas = a, e.__context = r, !0;
                    openfl__$internal_renderer_canvas_CanvasGraphics.hasFill = !1, openfl__$internal_renderer_canvas_CanvasGraphics.bitmapFill = null;
                    break;
                case 0:
                case 1:
                case 2:
                    if (openfl__$internal_renderer_canvas_CanvasGraphics.endFill(), openfl__$internal_renderer_canvas_CanvasGraphics.endStroke(), openfl__$internal_renderer_canvas_CanvasGraphics.hasFill && openfl__$internal_renderer_canvas_CanvasGraphics.context.isPointInPath(t, n)) return o.destroy(), e.__canvas = a, e.__context = r, !0;
                    if (openfl__$internal_renderer_canvas_CanvasGraphics.hasStroke && openfl__$internal_renderer_canvas_CanvasGraphics.context.isPointInStroke(t, n)) return o.destroy(), e.__canvas = a, e.__context = r, !0;
                    var N;
                    if (h == openfl__$internal_renderer_DrawCommandType.BEGIN_BITMAP_FILL) o.advance(), o.prev = openfl__$internal_renderer_DrawCommandType.BEGIN_BITMAP_FILL, N = o, openfl__$internal_renderer_canvas_CanvasGraphics.fillCommands.beginBitmapFill(N.buffer.o[N.oPos], N.buffer.o[N.oPos + 1], N.buffer.b[N.bPos], N.buffer.b[N.bPos + 1]), openfl__$internal_renderer_canvas_CanvasGraphics.strokeCommands.beginBitmapFill(N.buffer.o[N.oPos], N.buffer.o[N.oPos + 1], N.buffer.b[N.bPos], N.buffer.b[N.bPos + 1]);
                    else if (h == openfl__$internal_renderer_DrawCommandType.BEGIN_GRADIENT_FILL) {
                        var S;
                        o.advance(), o.prev = openfl__$internal_renderer_DrawCommandType.BEGIN_GRADIENT_FILL, S = o, openfl__$internal_renderer_canvas_CanvasGraphics.fillCommands.beginGradientFill(S.buffer.o[S.oPos], S.buffer.ii[S.iiPos], S.buffer.ff[S.ffPos], S.buffer.ii[S.iiPos + 1], S.buffer.o[S.oPos + 1], S.buffer.o[S.oPos + 2], S.buffer.o[S.oPos + 3], S.buffer.f[S.fPos]), openfl__$internal_renderer_canvas_CanvasGraphics.strokeCommands.beginGradientFill(S.buffer.o[S.oPos], S.buffer.ii[S.iiPos], S.buffer.ff[S.ffPos], S.buffer.ii[S.iiPos + 1], S.buffer.o[S.oPos + 1], S.buffer.o[S.oPos + 2], S.buffer.o[S.oPos + 3], S.buffer.f[S.fPos])
                    } else {
                        var W;
                        o.advance(), o.prev = openfl__$internal_renderer_DrawCommandType.BEGIN_FILL, W = o, openfl__$internal_renderer_canvas_CanvasGraphics.fillCommands.beginFill(W.buffer.i[W.iPos], 1), openfl__$internal_renderer_canvas_CanvasGraphics.strokeCommands.beginFill(W.buffer.i[W.iPos], 1)
                    }
                    break;
                case 5:
                    var B;
                    o.advance(), o.prev = openfl__$internal_renderer_DrawCommandType.DRAW_CIRCLE, B = o, openfl__$internal_renderer_canvas_CanvasGraphics.fillCommands.drawCircle(B.buffer.f[B.fPos], B.buffer.f[B.fPos + 1], B.buffer.f[B.fPos + 2]), openfl__$internal_renderer_canvas_CanvasGraphics.strokeCommands.drawCircle(B.buffer.f[B.fPos], B.buffer.f[B.fPos + 1], B.buffer.f[B.fPos + 2]);
                    break;
                case 6:
                    var Z;
                    o.advance(), o.prev = openfl__$internal_renderer_DrawCommandType.DRAW_ELLIPSE, Z = o, openfl__$internal_renderer_canvas_CanvasGraphics.fillCommands.drawEllipse(Z.buffer.f[Z.fPos], Z.buffer.f[Z.fPos + 1], Z.buffer.f[Z.fPos + 2], Z.buffer.f[Z.fPos + 3]), openfl__$internal_renderer_canvas_CanvasGraphics.strokeCommands.drawEllipse(Z.buffer.f[Z.fPos], Z.buffer.f[Z.fPos + 1], Z.buffer.f[Z.fPos + 2], Z.buffer.f[Z.fPos + 3]);
                    break;
                case 7:
                    var D;
                    o.advance(), o.prev = openfl__$internal_renderer_DrawCommandType.DRAW_RECT, D = o, openfl__$internal_renderer_canvas_CanvasGraphics.fillCommands.drawRect(D.buffer.f[D.fPos], D.buffer.f[D.fPos + 1], D.buffer.f[D.fPos + 2], D.buffer.f[D.fPos + 3]), openfl__$internal_renderer_canvas_CanvasGraphics.strokeCommands.drawRect(D.buffer.f[D.fPos], D.buffer.f[D.fPos + 1], D.buffer.f[D.fPos + 2], D.buffer.f[D.fPos + 3]);
                    break;
                case 8:
                    var V;
                    o.advance(), o.prev = openfl__$internal_renderer_DrawCommandType.DRAW_ROUND_RECT, V = o, openfl__$internal_renderer_canvas_CanvasGraphics.fillCommands.drawRoundRect(V.buffer.f[V.fPos], V.buffer.f[V.fPos + 1], V.buffer.f[V.fPos + 2], V.buffer.f[V.fPos + 3], V.buffer.f[V.fPos + 4], V.buffer.o[V.oPos]), openfl__$internal_renderer_canvas_CanvasGraphics.strokeCommands.drawRoundRect(V.buffer.f[V.fPos], V.buffer.f[V.fPos + 1], V.buffer.f[V.fPos + 2], V.buffer.f[V.fPos + 3], V.buffer.f[V.fPos + 4], V.buffer.o[V.oPos]);
                    break;
                default:
                    o.advance(), o.prev = h
            }
        }
        return openfl__$internal_renderer_canvas_CanvasGraphics.fillCommands.get_length() > 0 && openfl__$internal_renderer_canvas_CanvasGraphics.endFill(), openfl__$internal_renderer_canvas_CanvasGraphics.strokeCommands.get_length() > 0 && openfl__$internal_renderer_canvas_CanvasGraphics.endStroke(), o.destroy(), openfl__$internal_renderer_canvas_CanvasGraphics.hasFill && openfl__$internal_renderer_canvas_CanvasGraphics.context.isPointInPath(t, n) ? (e.__canvas = a, e.__context = r, !0) : openfl__$internal_renderer_canvas_CanvasGraphics.hasStroke && openfl__$internal_renderer_canvas_CanvasGraphics.context.isPointInStroke(t, n) ? (e.__canvas = a, e.__context = r, !0) : (e.__canvas = a, e.__context = r, !1)
    }, openfl__$internal_renderer_canvas_CanvasGraphics.normalizeUVT = function(e, t) {
        null == t && (t = !1);
        for (var n = -1 / 0, l = -1 / 0, i = e.get_length(), s = 1, a = i + 1; s < a;) {
            var r = s++;
            t && r % 3 == 0 || n < (l = e.get(r - 1)) && (n = l)
        }
        if (!t) return {
            max: n,
            uvt: e
        };
        for (var o = openfl__$Vector_Vector_$Impl_$.toFloatVector(null), d = 1, _ = i + 1; d < _;) {
            var h = d++;
            if (!t || h % 3 != 0) {
                var p = e.get(h - 1);
                o.push(p)
            }
        }
        return {
            max: n,
            uvt: o
        }
    }, openfl__$internal_renderer_canvas_CanvasGraphics.playCommands = function(e, t) {
        null == t && (t = !1), openfl__$internal_renderer_canvas_CanvasGraphics.bounds = openfl__$internal_renderer_canvas_CanvasGraphics.graphics.__bounds;
        var n = openfl__$internal_renderer_canvas_CanvasGraphics.bounds.x,
            l = openfl__$internal_renderer_canvas_CanvasGraphics.bounds.y,
            i = 0,
            s = 0,
            a = !1,
            r = 0,
            o = 0;
        openfl__$internal_renderer_canvas_CanvasGraphics.setSmoothing(!0);
        for (var d = new openfl__$internal_renderer_DrawCommandReader(e), _ = 0, h = e.types; _ < h.length;) {
            var p = h[_];
            switch (++_, p[1]) {
                case 3:
                    var c;
                    d.advance(), d.prev = openfl__$internal_renderer_DrawCommandType.CUBIC_CURVE_TO, c = d, openfl__$internal_renderer_canvas_CanvasGraphics.context.bezierCurveTo(c.buffer.f[c.fPos] - n, c.buffer.f[c.fPos + 1] - l, c.buffer.f[c.fPos + 2] - n, c.buffer.f[c.fPos + 3] - l, c.buffer.f[c.fPos + 4] - n, c.buffer.f[c.fPos + 5] - l);
                    break;
                case 4:
                    var Q;
                    d.advance(), d.prev = openfl__$internal_renderer_DrawCommandType.CURVE_TO, Q = d, openfl__$internal_renderer_canvas_CanvasGraphics.context.quadraticCurveTo(Q.buffer.f[Q.fPos] - n, Q.buffer.f[Q.fPos + 1] - l, Q.buffer.f[Q.fPos + 2] - n, Q.buffer.f[Q.fPos + 3] - l);
                    break;
                case 5:
                    var U;
                    d.advance(), d.prev = openfl__$internal_renderer_DrawCommandType.DRAW_CIRCLE, U = d, openfl__$internal_renderer_canvas_CanvasGraphics.context.moveTo(U.buffer.f[U.fPos] - n + U.buffer.f[U.fPos + 2], U.buffer.f[U.fPos + 1] - l), openfl__$internal_renderer_canvas_CanvasGraphics.context.arc(U.buffer.f[U.fPos] - n, U.buffer.f[U.fPos + 1] - l, U.buffer.f[U.fPos + 2], 0, 2 * Math.PI, !0);
                    break;
                case 6:
                    var m;
                    d.advance(), d.prev = openfl__$internal_renderer_DrawCommandType.DRAW_ELLIPSE;
                    var u = (m = d).buffer.f[m.fPos],
                        F = m.buffer.f[m.fPos + 1],
                        N = m.buffer.f[m.fPos + 2],
                        S = m.buffer.f[m.fPos + 3],
                        W = N / 2 * .5522848,
                        B = S / 2 * .5522848,
                        Z = (u -= n) + N,
                        D = (F -= l) + S,
                        V = u + N / 2,
                        f = F + S / 2;
                    openfl__$internal_renderer_canvas_CanvasGraphics.context.moveTo(u, f), openfl__$internal_renderer_canvas_CanvasGraphics.context.bezierCurveTo(u, f - B, V - W, F, V, F), openfl__$internal_renderer_canvas_CanvasGraphics.context.bezierCurveTo(V + W, F, Z, f - B, Z, f), openfl__$internal_renderer_canvas_CanvasGraphics.context.bezierCurveTo(Z, f + B, V + W, D, V, D), openfl__$internal_renderer_canvas_CanvasGraphics.context.bezierCurveTo(V - W, D, u, f + B, u, f);
                    break;
                case 8:
                    var R;
                    d.advance(), d.prev = openfl__$internal_renderer_DrawCommandType.DRAW_ROUND_RECT, R = d, openfl__$internal_renderer_canvas_CanvasGraphics.drawRoundRect(R.buffer.f[R.fPos] - n, R.buffer.f[R.fPos + 1] - l, R.buffer.f[R.fPos + 2], R.buffer.f[R.fPos + 3], R.buffer.f[R.fPos + 4], R.buffer.o[R.oPos]);
                    break;
                case 15:
                    var T;
                    d.advance(), d.prev = openfl__$internal_renderer_DrawCommandType.LINE_TO, T = d, openfl__$internal_renderer_canvas_CanvasGraphics.context.lineTo(T.buffer.f[T.fPos] - n, T.buffer.f[T.fPos + 1] - l), i = T.buffer.f[T.fPos], s = T.buffer.f[T.fPos + 1];
                    break;
                case 16:
                    var J;
                    d.advance(), d.prev = openfl__$internal_renderer_DrawCommandType.MOVE_TO, J = d, openfl__$internal_renderer_canvas_CanvasGraphics.context.moveTo(J.buffer.f[J.fPos] - n, J.buffer.f[J.fPos + 1] - l), i = J.buffer.f[J.fPos], s = J.buffer.f[J.fPos + 1], a = !0, r = J.buffer.f[J.fPos], o = J.buffer.f[J.fPos + 1];
                    break;
                case 14:
                    var g;
                    if (d.advance(), d.prev = openfl__$internal_renderer_DrawCommandType.LINE_STYLE, g = d, t && openfl__$internal_renderer_canvas_CanvasGraphics.hasStroke && openfl__$internal_renderer_canvas_CanvasGraphics.closePath(!0), openfl__$internal_renderer_canvas_CanvasGraphics.context.moveTo(i - n, s - l), null == g.buffer.o[g.oPos]) openfl__$internal_renderer_canvas_CanvasGraphics.hasStroke = !1;
                    else {
                        if (g.buffer.o[g.oPos] > 0 ? openfl__$internal_renderer_canvas_CanvasGraphics.context.lineWidth = g.buffer.o[g.oPos] : openfl__$internal_renderer_canvas_CanvasGraphics.context.lineWidth = 1, null == g.buffer.o[g.oPos + 3] ? openfl__$internal_renderer_canvas_CanvasGraphics.context.lineJoin = "round" : openfl__$internal_renderer_canvas_CanvasGraphics.context.lineJoin = openfl_display__$JointStyle_JointStyle_$Impl_$.toString(g.buffer.o[g.oPos + 3]).toLowerCase(), null == g.buffer.o[g.oPos + 2]) openfl__$internal_renderer_canvas_CanvasGraphics.context.lineCap = "round";
                        else switch (g.buffer.o[g.oPos + 2]) {
                            case 0:
                                openfl__$internal_renderer_canvas_CanvasGraphics.context.lineCap = "butt";
                                break;
                            default:
                                openfl__$internal_renderer_canvas_CanvasGraphics.context.lineCap = openfl_display__$CapsStyle_CapsStyle_$Impl_$.toString(g.buffer.o[g.oPos + 2]).toLowerCase()
                        }
                        if (openfl__$internal_renderer_canvas_CanvasGraphics.context.miterLimit = g.buffer.f[g.fPos + 1], 1 == g.buffer.f[g.fPos]) openfl__$internal_renderer_canvas_CanvasGraphics.context.strokeStyle = "#" + StringTools.hex(16777215 & g.buffer.i[g.iPos], 6);
                        else {
                            var b = (16711680 & g.buffer.i[g.iPos]) >>> 16,
                                E = (65280 & g.buffer.i[g.iPos]) >>> 8,
                                v = 255 & g.buffer.i[g.iPos];
                            openfl__$internal_renderer_canvas_CanvasGraphics.context.strokeStyle = "rgba(" + b + ", " + E + ", " + v + ", " + g.buffer.f[g.fPos] + ")"
                        }
                        openfl__$internal_renderer_canvas_CanvasGraphics.setSmoothing(!0), openfl__$internal_renderer_canvas_CanvasGraphics.hasStroke = !0
                    }
                    break;
                case 13:
                    var k;
                    d.advance(), d.prev = openfl__$internal_renderer_DrawCommandType.LINE_GRADIENT_STYLE, k = d, t && openfl__$internal_renderer_canvas_CanvasGraphics.hasStroke && openfl__$internal_renderer_canvas_CanvasGraphics.closePath(), openfl__$internal_renderer_canvas_CanvasGraphics.context.moveTo(i - n, s - l), openfl__$internal_renderer_canvas_CanvasGraphics.context.strokeStyle = openfl__$internal_renderer_canvas_CanvasGraphics.createGradientPattern(k.buffer.o[k.oPos], k.buffer.ii[k.iiPos], k.buffer.ff[k.ffPos], k.buffer.ii[k.iiPos + 1], k.buffer.o[k.oPos + 1], k.buffer.o[k.oPos + 2], k.buffer.o[k.oPos + 3], k.buffer.f[k.fPos]), openfl__$internal_renderer_canvas_CanvasGraphics.setSmoothing(!0), openfl__$internal_renderer_canvas_CanvasGraphics.hasStroke = !0;
                    break;
                case 12:
                    var M;
                    d.advance(), d.prev = openfl__$internal_renderer_DrawCommandType.LINE_BITMAP_STYLE, M = d, t && openfl__$internal_renderer_canvas_CanvasGraphics.hasStroke && openfl__$internal_renderer_canvas_CanvasGraphics.closePath(), openfl__$internal_renderer_canvas_CanvasGraphics.context.moveTo(i - n, s - l), openfl__$internal_renderer_canvas_CanvasGraphics.context.strokeStyle = openfl__$internal_renderer_canvas_CanvasGraphics.createBitmapFill(M.buffer.o[M.oPos], M.buffer.b[M.bPos], M.buffer.b[M.bPos + 1]), openfl__$internal_renderer_canvas_CanvasGraphics.hasStroke = !0;
                    break;
                case 0:
                    var y;
                    d.advance(), d.prev = openfl__$internal_renderer_DrawCommandType.BEGIN_BITMAP_FILL, y = d, openfl__$internal_renderer_canvas_CanvasGraphics.bitmapFill = y.buffer.o[y.oPos], openfl__$internal_renderer_canvas_CanvasGraphics.context.fillStyle = openfl__$internal_renderer_canvas_CanvasGraphics.createBitmapFill(y.buffer.o[y.oPos], !0, y.buffer.b[y.bPos + 1]), openfl__$internal_renderer_canvas_CanvasGraphics.hasFill = !0, null != y.buffer.o[y.oPos + 1] ? (openfl__$internal_renderer_canvas_CanvasGraphics.pendingMatrix = y.buffer.o[y.oPos + 1], openfl__$internal_renderer_canvas_CanvasGraphics.inversePendingMatrix = y.buffer.o[y.oPos + 1].clone(), openfl__$internal_renderer_canvas_CanvasGraphics.inversePendingMatrix.invert()) : (openfl__$internal_renderer_canvas_CanvasGraphics.pendingMatrix = null, openfl__$internal_renderer_canvas_CanvasGraphics.inversePendingMatrix = null);
                    break;
                case 1:
                    var x;
                    if (d.advance(), d.prev = openfl__$internal_renderer_DrawCommandType.BEGIN_FILL, (x = d).buffer.f[x.fPos] < .005) openfl__$internal_renderer_canvas_CanvasGraphics.hasFill = !1;
                    else {
                        if (1 == x.buffer.f[x.fPos]) openfl__$internal_renderer_canvas_CanvasGraphics.context.fillStyle = "#" + StringTools.hex(16777215 & x.buffer.i[x.iPos], 6);
                        else {
                            var w = (16711680 & x.buffer.i[x.iPos]) >>> 16,
                                G = (65280 & x.buffer.i[x.iPos]) >>> 8,
                                H = 255 & x.buffer.i[x.iPos];
                            openfl__$internal_renderer_canvas_CanvasGraphics.context.fillStyle = "rgba(" + w + ", " + G + ", " + H + ", " + x.buffer.f[x.fPos] + ")"
                        }
                        openfl__$internal_renderer_canvas_CanvasGraphics.bitmapFill = null, openfl__$internal_renderer_canvas_CanvasGraphics.setSmoothing(!0), openfl__$internal_renderer_canvas_CanvasGraphics.hasFill = !0
                    }
                    break;
                case 2:
                    var C;
                    d.advance(), d.prev = openfl__$internal_renderer_DrawCommandType.BEGIN_GRADIENT_FILL, C = d, openfl__$internal_renderer_canvas_CanvasGraphics.context.fillStyle = openfl__$internal_renderer_canvas_CanvasGraphics.createGradientPattern(C.buffer.o[C.oPos], C.buffer.ii[C.iiPos], C.buffer.ff[C.ffPos], C.buffer.ii[C.iiPos + 1], C.buffer.o[C.oPos + 1], C.buffer.o[C.oPos + 2], C.buffer.o[C.oPos + 3], C.buffer.f[C.fPos]), openfl__$internal_renderer_canvas_CanvasGraphics.bitmapFill = null, openfl__$internal_renderer_canvas_CanvasGraphics.setSmoothing(!0), openfl__$internal_renderer_canvas_CanvasGraphics.hasFill = !0;
                    break;
                case 7:
                    var Y;
                    d.advance(), d.prev = openfl__$internal_renderer_DrawCommandType.DRAW_RECT, Y = d;
                    var O = !1;
                    if (null != openfl__$internal_renderer_canvas_CanvasGraphics.bitmapFill && !openfl__$internal_renderer_canvas_CanvasGraphics.hitTesting) {
                        var X = 0,
                            z = 0,
                            I = 0,
                            j = 0,
                            L = !0;
                        if (null != openfl__$internal_renderer_canvas_CanvasGraphics.pendingMatrix)
                            if (0 != openfl__$internal_renderer_canvas_CanvasGraphics.pendingMatrix.b || 0 != openfl__$internal_renderer_canvas_CanvasGraphics.pendingMatrix.c) L = !1;
                            else {
                                var A = openfl__$internal_renderer_canvas_CanvasGraphics.inversePendingMatrix.transformPoint(new openfl_geom_Point(Y.buffer.f[Y.fPos], Y.buffer.f[Y.fPos + 1])),
                                    P = openfl__$internal_renderer_canvas_CanvasGraphics.inversePendingMatrix.transformPoint(new openfl_geom_Point(Y.buffer.f[Y.fPos] + Y.buffer.f[Y.fPos + 2], Y.buffer.f[Y.fPos + 1] + Y.buffer.f[Y.fPos + 3]));
                                X = A.y, j = A.x, I = P.y, z = P.x
                            }
                        else X = Y.buffer.f[Y.fPos + 1], j = Y.buffer.f[Y.fPos], I = Y.buffer.f[Y.fPos + 1] + Y.buffer.f[Y.fPos + 3], z = Y.buffer.f[Y.fPos] + Y.buffer.f[Y.fPos + 2];
                        L && X >= 0 && j >= 0 && z <= openfl__$internal_renderer_canvas_CanvasGraphics.bitmapFill.width && I <= openfl__$internal_renderer_canvas_CanvasGraphics.bitmapFill.height && (O = !0, openfl__$internal_renderer_canvas_CanvasGraphics.hitTesting || openfl__$internal_renderer_canvas_CanvasGraphics.context.drawImage(openfl__$internal_renderer_canvas_CanvasGraphics.bitmapFill.image.get_src(), j, X, z - j, I - X, Y.buffer.f[Y.fPos] - n, Y.buffer.f[Y.fPos + 1] - l, Y.buffer.f[Y.fPos + 2], Y.buffer.f[Y.fPos + 3]))
                    }
                    O || openfl__$internal_renderer_canvas_CanvasGraphics.context.rect(Y.buffer.f[Y.fPos] - n, Y.buffer.f[Y.fPos + 1] - l, Y.buffer.f[Y.fPos + 2], Y.buffer.f[Y.fPos + 3]);
                    break;
                default:
                    d.advance(), d.prev = p
            }
        }
        d.destroy(), t && openfl__$internal_renderer_canvas_CanvasGraphics.hasStroke && (openfl__$internal_renderer_canvas_CanvasGraphics.hasFill && a ? openfl__$internal_renderer_canvas_CanvasGraphics.context.lineTo(r - n, o - l) : a && i == r && s == o && openfl__$internal_renderer_canvas_CanvasGraphics.closePath(!0), openfl__$internal_renderer_canvas_CanvasGraphics.hitTesting || openfl__$internal_renderer_canvas_CanvasGraphics.context.stroke()), t || (openfl__$internal_renderer_canvas_CanvasGraphics.hasFill || null != openfl__$internal_renderer_canvas_CanvasGraphics.bitmapFill) && (openfl__$internal_renderer_canvas_CanvasGraphics.context.translate(-openfl__$internal_renderer_canvas_CanvasGraphics.bounds.x, -openfl__$internal_renderer_canvas_CanvasGraphics.bounds.y), null != openfl__$internal_renderer_canvas_CanvasGraphics.pendingMatrix ? (openfl__$internal_renderer_canvas_CanvasGraphics.context.transform(openfl__$internal_renderer_canvas_CanvasGraphics.pendingMatrix.a, openfl__$internal_renderer_canvas_CanvasGraphics.pendingMatrix.b, openfl__$internal_renderer_canvas_CanvasGraphics.pendingMatrix.c, openfl__$internal_renderer_canvas_CanvasGraphics.pendingMatrix.d, openfl__$internal_renderer_canvas_CanvasGraphics.pendingMatrix.tx, openfl__$internal_renderer_canvas_CanvasGraphics.pendingMatrix.ty), openfl__$internal_renderer_canvas_CanvasGraphics.hitTesting || openfl__$internal_renderer_canvas_CanvasGraphics.context.fill(), openfl__$internal_renderer_canvas_CanvasGraphics.context.transform(openfl__$internal_renderer_canvas_CanvasGraphics.inversePendingMatrix.a, openfl__$internal_renderer_canvas_CanvasGraphics.inversePendingMatrix.b, openfl__$internal_renderer_canvas_CanvasGraphics.inversePendingMatrix.c, openfl__$internal_renderer_canvas_CanvasGraphics.inversePendingMatrix.d, openfl__$internal_renderer_canvas_CanvasGraphics.inversePendingMatrix.tx, openfl__$internal_renderer_canvas_CanvasGraphics.inversePendingMatrix.ty)) : openfl__$internal_renderer_canvas_CanvasGraphics.hitTesting || openfl__$internal_renderer_canvas_CanvasGraphics.context.fill(), openfl__$internal_renderer_canvas_CanvasGraphics.context.translate(openfl__$internal_renderer_canvas_CanvasGraphics.bounds.x, openfl__$internal_renderer_canvas_CanvasGraphics.bounds.y), openfl__$internal_renderer_canvas_CanvasGraphics.context.closePath())
    }, openfl__$internal_renderer_canvas_CanvasGraphics.render = function(e, t, n) {
        if (e.__update(), e.__dirty) {
            openfl__$internal_renderer_canvas_CanvasGraphics.hitTesting = !1, openfl__$internal_renderer_canvas_CanvasGraphics.graphics = e, openfl__$internal_renderer_canvas_CanvasGraphics.allowSmoothing = t.allowSmoothing, openfl__$internal_renderer_canvas_CanvasGraphics.bounds = e.__bounds;
            var l = e.__width,
                i = e.__height;
            if (!e.__visible || 0 == e.__commands.get_length() || null == openfl__$internal_renderer_canvas_CanvasGraphics.bounds || l < 1 || i < 1) e.__canvas = null, e.__context = null, e.__bitmap = null;
            else {
                null == e.__canvas && (e.__canvas = window.document.createElement("canvas"), e.__context = e.__canvas.getContext("2d")), openfl__$internal_renderer_canvas_CanvasGraphics.context = e.__context;
                var s = e.__renderTransform,
                    a = e.__canvas,
                    r = window.devicePixelRatio || 1,
                    o = l * r | 0,
                    d = i * r | 0;
                a.width == o && a.height == d ? openfl__$internal_renderer_canvas_CanvasGraphics.context.clearRect(0, 0, o, d) : (a.width = l, a.height = i), openfl__$internal_renderer_canvas_CanvasGraphics.context.setTransform(s.a, s.b, s.c, s.d, s.tx, s.ty), openfl__$internal_renderer_canvas_CanvasGraphics.fillCommands.clear(), openfl__$internal_renderer_canvas_CanvasGraphics.strokeCommands.clear(), openfl__$internal_renderer_canvas_CanvasGraphics.hasFill = !1, openfl__$internal_renderer_canvas_CanvasGraphics.hasStroke = !1, openfl__$internal_renderer_canvas_CanvasGraphics.bitmapFill = null, openfl__$internal_renderer_canvas_CanvasGraphics.bitmapRepeat = !1;
                var _ = new openfl__$internal_renderer_DrawCommandReader(e.__commands),
                    h = 0,
                    p = e.__commands.types;
                try {
                    for (; h < p.length;) {
                        var c = p[h];
                        switch (++h, c[1]) {
                            case 3:
                                var Q;
                                _.advance(), _.prev = openfl__$internal_renderer_DrawCommandType.CUBIC_CURVE_TO, Q = _, openfl__$internal_renderer_canvas_CanvasGraphics.fillCommands.cubicCurveTo(Q.buffer.f[Q.fPos], Q.buffer.f[Q.fPos + 1], Q.buffer.f[Q.fPos + 2], Q.buffer.f[Q.fPos + 3], Q.buffer.f[Q.fPos + 4], Q.buffer.f[Q.fPos + 5]), openfl__$internal_renderer_canvas_CanvasGraphics.strokeCommands.cubicCurveTo(Q.buffer.f[Q.fPos], Q.buffer.f[Q.fPos + 1], Q.buffer.f[Q.fPos + 2], Q.buffer.f[Q.fPos + 3], Q.buffer.f[Q.fPos + 4], Q.buffer.f[Q.fPos + 5]);
                                break;
                            case 4:
                                var U;
                                _.advance(), _.prev = openfl__$internal_renderer_DrawCommandType.CURVE_TO, U = _, openfl__$internal_renderer_canvas_CanvasGraphics.fillCommands.curveTo(U.buffer.f[U.fPos], U.buffer.f[U.fPos + 1], U.buffer.f[U.fPos + 2], U.buffer.f[U.fPos + 3]), openfl__$internal_renderer_canvas_CanvasGraphics.strokeCommands.curveTo(U.buffer.f[U.fPos], U.buffer.f[U.fPos + 1], U.buffer.f[U.fPos + 2], U.buffer.f[U.fPos + 3]);
                                break;
                            case 15:
                                var m;
                                _.advance(), _.prev = openfl__$internal_renderer_DrawCommandType.LINE_TO, m = _, openfl__$internal_renderer_canvas_CanvasGraphics.fillCommands.lineTo(m.buffer.f[m.fPos], m.buffer.f[m.fPos + 1]), openfl__$internal_renderer_canvas_CanvasGraphics.strokeCommands.lineTo(m.buffer.f[m.fPos], m.buffer.f[m.fPos + 1]);
                                break;
                            case 16:
                                var u;
                                _.advance(), _.prev = openfl__$internal_renderer_DrawCommandType.MOVE_TO, u = _, openfl__$internal_renderer_canvas_CanvasGraphics.fillCommands.moveTo(u.buffer.f[u.fPos], u.buffer.f[u.fPos + 1]), openfl__$internal_renderer_canvas_CanvasGraphics.strokeCommands.moveTo(u.buffer.f[u.fPos], u.buffer.f[u.fPos + 1]);
                                break;
                            case 11:
                                _.advance(), _.prev = openfl__$internal_renderer_DrawCommandType.END_FILL, openfl__$internal_renderer_canvas_CanvasGraphics.endFill(), openfl__$internal_renderer_canvas_CanvasGraphics.endStroke(), openfl__$internal_renderer_canvas_CanvasGraphics.hasFill = !1, openfl__$internal_renderer_canvas_CanvasGraphics.bitmapFill = null;
                                break;
                            case 14:
                                var F;
                                _.advance(), _.prev = openfl__$internal_renderer_DrawCommandType.LINE_STYLE, F = _, openfl__$internal_renderer_canvas_CanvasGraphics.strokeCommands.lineStyle(F.buffer.o[F.oPos], F.buffer.i[F.iPos], F.buffer.f[F.fPos], F.buffer.b[F.bPos], F.buffer.o[F.oPos + 1], F.buffer.o[F.oPos + 2], F.buffer.o[F.oPos + 3], F.buffer.f[F.fPos + 1]);
                                break;
                            case 13:
                                var N;
                                _.advance(), _.prev = openfl__$internal_renderer_DrawCommandType.LINE_GRADIENT_STYLE, N = _, openfl__$internal_renderer_canvas_CanvasGraphics.strokeCommands.lineGradientStyle(N.buffer.o[N.oPos], N.buffer.ii[N.iiPos], N.buffer.ff[N.ffPos], N.buffer.ii[N.iiPos + 1], N.buffer.o[N.oPos + 1], N.buffer.o[N.oPos + 2], N.buffer.o[N.oPos + 3], N.buffer.f[N.fPos]);
                                break;
                            case 12:
                                var S;
                                _.advance(), _.prev = openfl__$internal_renderer_DrawCommandType.LINE_BITMAP_STYLE, S = _, openfl__$internal_renderer_canvas_CanvasGraphics.strokeCommands.lineBitmapStyle(S.buffer.o[S.oPos], S.buffer.o[S.oPos + 1], S.buffer.b[S.bPos], S.buffer.b[S.bPos + 1]);
                                break;
                            case 0:
                            case 1:
                            case 2:
                                var W;
                                if (openfl__$internal_renderer_canvas_CanvasGraphics.endFill(), openfl__$internal_renderer_canvas_CanvasGraphics.endStroke(), c == openfl__$internal_renderer_DrawCommandType.BEGIN_BITMAP_FILL) _.advance(), _.prev = openfl__$internal_renderer_DrawCommandType.BEGIN_BITMAP_FILL, W = _, openfl__$internal_renderer_canvas_CanvasGraphics.fillCommands.beginBitmapFill(W.buffer.o[W.oPos], W.buffer.o[W.oPos + 1], W.buffer.b[W.bPos], W.buffer.b[W.bPos + 1]), openfl__$internal_renderer_canvas_CanvasGraphics.strokeCommands.beginBitmapFill(W.buffer.o[W.oPos], W.buffer.o[W.oPos + 1], W.buffer.b[W.bPos], W.buffer.b[W.bPos + 1]);
                                else if (c == openfl__$internal_renderer_DrawCommandType.BEGIN_GRADIENT_FILL) {
                                    var B;
                                    _.advance(), _.prev = openfl__$internal_renderer_DrawCommandType.BEGIN_GRADIENT_FILL, B = _, openfl__$internal_renderer_canvas_CanvasGraphics.fillCommands.beginGradientFill(B.buffer.o[B.oPos], B.buffer.ii[B.iiPos], B.buffer.ff[B.ffPos], B.buffer.ii[B.iiPos + 1], B.buffer.o[B.oPos + 1], B.buffer.o[B.oPos + 2], B.buffer.o[B.oPos + 3], B.buffer.f[B.fPos]), openfl__$internal_renderer_canvas_CanvasGraphics.strokeCommands.beginGradientFill(B.buffer.o[B.oPos], B.buffer.ii[B.iiPos], B.buffer.ff[B.ffPos], B.buffer.ii[B.iiPos + 1], B.buffer.o[B.oPos + 1], B.buffer.o[B.oPos + 2], B.buffer.o[B.oPos + 3], B.buffer.f[B.fPos])
                                } else {
                                    var Z;
                                    _.advance(), _.prev = openfl__$internal_renderer_DrawCommandType.BEGIN_FILL, Z = _, openfl__$internal_renderer_canvas_CanvasGraphics.fillCommands.beginFill(Z.buffer.i[Z.iPos], Z.buffer.f[Z.fPos]), openfl__$internal_renderer_canvas_CanvasGraphics.strokeCommands.beginFill(Z.buffer.i[Z.iPos], Z.buffer.f[Z.fPos])
                                }
                                break;
                            case 5:
                                var D;
                                _.advance(), _.prev = openfl__$internal_renderer_DrawCommandType.DRAW_CIRCLE, D = _, openfl__$internal_renderer_canvas_CanvasGraphics.fillCommands.drawCircle(D.buffer.f[D.fPos], D.buffer.f[D.fPos + 1], D.buffer.f[D.fPos + 2]), openfl__$internal_renderer_canvas_CanvasGraphics.strokeCommands.drawCircle(D.buffer.f[D.fPos], D.buffer.f[D.fPos + 1], D.buffer.f[D.fPos + 2]);
                                break;
                            case 6:
                                var V;
                                _.advance(), _.prev = openfl__$internal_renderer_DrawCommandType.DRAW_ELLIPSE, V = _, openfl__$internal_renderer_canvas_CanvasGraphics.fillCommands.drawEllipse(V.buffer.f[V.fPos], V.buffer.f[V.fPos + 1], V.buffer.f[V.fPos + 2], V.buffer.f[V.fPos + 3]), openfl__$internal_renderer_canvas_CanvasGraphics.strokeCommands.drawEllipse(V.buffer.f[V.fPos], V.buffer.f[V.fPos + 1], V.buffer.f[V.fPos + 2], V.buffer.f[V.fPos + 3]);
                                break;
                            case 7:
                                var f;
                                _.advance(), _.prev = openfl__$internal_renderer_DrawCommandType.DRAW_RECT, f = _, openfl__$internal_renderer_canvas_CanvasGraphics.fillCommands.drawRect(f.buffer.f[f.fPos], f.buffer.f[f.fPos + 1], f.buffer.f[f.fPos + 2], f.buffer.f[f.fPos + 3]), openfl__$internal_renderer_canvas_CanvasGraphics.strokeCommands.drawRect(f.buffer.f[f.fPos], f.buffer.f[f.fPos + 1], f.buffer.f[f.fPos + 2], f.buffer.f[f.fPos + 3]);
                                break;
                            case 8:
                                var R;
                                _.advance(), _.prev = openfl__$internal_renderer_DrawCommandType.DRAW_ROUND_RECT, R = _, openfl__$internal_renderer_canvas_CanvasGraphics.fillCommands.drawRoundRect(R.buffer.f[R.fPos], R.buffer.f[R.fPos + 1], R.buffer.f[R.fPos + 2], R.buffer.f[R.fPos + 3], R.buffer.f[R.fPos + 4], R.buffer.o[R.oPos]), openfl__$internal_renderer_canvas_CanvasGraphics.strokeCommands.drawRoundRect(R.buffer.f[R.fPos], R.buffer.f[R.fPos + 1], R.buffer.f[R.fPos + 2], R.buffer.f[R.fPos + 3], R.buffer.f[R.fPos + 4], R.buffer.o[R.oPos]);
                                break;
                            case 10:
                                var T;
                                openfl__$internal_renderer_canvas_CanvasGraphics.endFill(), openfl__$internal_renderer_canvas_CanvasGraphics.endStroke(), _.advance(), _.prev = openfl__$internal_renderer_DrawCommandType.DRAW_TRIANGLES;
                                var J = (T = _).buffer.o[T.oPos],
                                    g = T.buffer.o[T.oPos + 1],
                                    b = T.buffer.o[T.oPos + 2],
                                    E = null,
                                    v = null == openfl__$internal_renderer_canvas_CanvasGraphics.bitmapFill;
                                if (v && null != b) throw "__break__";
                                if (!v) {
                                    if (null == b) {
                                        b = openfl__$Vector_Vector_$Impl_$.toFloatVector(null);
                                        for (var k = 0, M = Std.int(J.get_length() / 2); k < M;) {
                                            var y = k++,
                                                x = J.get(2 * y) / openfl__$internal_renderer_canvas_CanvasGraphics.bitmapFill.width;
                                            b.push(x);
                                            var w = J.get(2 * y + 1) / openfl__$internal_renderer_canvas_CanvasGraphics.bitmapFill.height;
                                            b.push(w)
                                        }
                                    }
                                    var G = b.get_length() != J.get_length(),
                                        H = openfl__$internal_renderer_canvas_CanvasGraphics.normalizeUVT(b, G),
                                        C = H.max;
                                    b = H.uvt, E = C > 1 ? openfl__$internal_renderer_canvas_CanvasGraphics.createTempPatternCanvas(openfl__$internal_renderer_canvas_CanvasGraphics.bitmapFill, openfl__$internal_renderer_canvas_CanvasGraphics.bitmapRepeat, 0 | openfl__$internal_renderer_canvas_CanvasGraphics.bounds.width, 0 | openfl__$internal_renderer_canvas_CanvasGraphics.bounds.height) : openfl__$internal_renderer_canvas_CanvasGraphics.createTempPatternCanvas(openfl__$internal_renderer_canvas_CanvasGraphics.bitmapFill, openfl__$internal_renderer_canvas_CanvasGraphics.bitmapRepeat, openfl__$internal_renderer_canvas_CanvasGraphics.bitmapFill.width, openfl__$internal_renderer_canvas_CanvasGraphics.bitmapFill.height)
                                }
                                for (var Y, O, X, z, I, j, L, A, P, $, K, q, ee, te, ne, le, ie, se, ae, re, oe, de, _e, he, pe, ce, Qe, Ue, me = 0, ue = g.get_length(); me < ue;) {
                                    switch (Y = me, O = me + 1, X = me + 2, z = 2 * g.get(Y), I = 2 * g.get(Y) + 1, j = 2 * g.get(O), L = 2 * g.get(O) + 1, A = 2 * g.get(X), P = 2 * g.get(X) + 1, $ = J.get(z), K = J.get(I), q = J.get(j), ee = J.get(L), te = J.get(A), ne = J.get(P), T.buffer.o[T.oPos + 3]) {
                                        case 2:
                                            if (!((q - $) * (ne - K) - (ee - K) * (te - $) < 0)) {
                                                me += 3;
                                                continue
                                            }
                                            break;
                                        case 0:
                                            if ((q - $) * (ne - K) - (ee - K) * (te - $) < 0) {
                                                me += 3;
                                                continue
                                            }
                                    }
                                    v ? (openfl__$internal_renderer_canvas_CanvasGraphics.context.beginPath(), openfl__$internal_renderer_canvas_CanvasGraphics.context.moveTo($, K), openfl__$internal_renderer_canvas_CanvasGraphics.context.lineTo(q, ee), openfl__$internal_renderer_canvas_CanvasGraphics.context.lineTo(te, ne), openfl__$internal_renderer_canvas_CanvasGraphics.context.closePath(), openfl__$internal_renderer_canvas_CanvasGraphics.hitTesting || openfl__$internal_renderer_canvas_CanvasGraphics.context.fill(), me += 3) : (openfl__$internal_renderer_canvas_CanvasGraphics.context.save(), openfl__$internal_renderer_canvas_CanvasGraphics.context.beginPath(), openfl__$internal_renderer_canvas_CanvasGraphics.context.moveTo($, K), openfl__$internal_renderer_canvas_CanvasGraphics.context.lineTo(q, ee), openfl__$internal_renderer_canvas_CanvasGraphics.context.lineTo(te, ne), openfl__$internal_renderer_canvas_CanvasGraphics.context.closePath(), openfl__$internal_renderer_canvas_CanvasGraphics.context.clip(), le = b.get(z) * E.width, se = b.get(j) * E.width, re = b.get(A) * E.width, ie = b.get(I) * E.height, ae = b.get(L) * E.height, 0 != (de = le * ((oe = b.get(P) * E.height) - ae) - se * oe + re * ae + (se - re) * ie) ? (_e = -(ie * (te - q) - ae * te + oe * q + (ae - oe) * $) / de, he = (ae * ne + ie * (ee - ne) - oe * ee + (oe - ae) * K) / de, pe = (le * (te - q) - se * te + re * q + (se - re) * $) / de, ce = -(se * ne + le * (ee - ne) - re * ee + (re - se) * K) / de, Qe = (le * (oe * q - ae * te) + ie * (se * te - re * q) + (re * ae - se * oe) * $) / de, Ue = (le * (oe * ee - ae * ne) + ie * (se * ne - re * ee) + (re * ae - se * oe) * K) / de, openfl__$internal_renderer_canvas_CanvasGraphics.context.transform(_e, he, pe, ce, Qe, Ue), openfl__$internal_renderer_canvas_CanvasGraphics.context.drawImage(E, 0, 0), openfl__$internal_renderer_canvas_CanvasGraphics.context.restore(), me += 3) : me += 3)
                                }
                                break;
                            default:
                                _.advance(), _.prev = c
                        }
                    }
                } catch (e) {
                    if ("__break__" != e) throw e
                }
                openfl__$internal_renderer_canvas_CanvasGraphics.fillCommands.get_length() > 0 && openfl__$internal_renderer_canvas_CanvasGraphics.endFill(), openfl__$internal_renderer_canvas_CanvasGraphics.strokeCommands.get_length() > 0 && openfl__$internal_renderer_canvas_CanvasGraphics.endStroke(), _.destroy(), e.__bitmap = openfl_display_BitmapData.fromCanvas(e.__canvas)
            }
            e.set___dirty(!1)
        }
    }, openfl__$internal_renderer_canvas_CanvasGraphics.renderMask = function(e, t) {
        if (0 != e.__commands.get_length()) {
            openfl__$internal_renderer_canvas_CanvasGraphics.context = t.context;
            for (var n = new openfl__$internal_renderer_DrawCommandReader(e.__commands), l = 0, i = e.__commands.types; l < i.length;) {
                var s = i[l];
                switch (++l, s[1]) {
                    case 3:
                        var a;
                        n.advance(), n.prev = openfl__$internal_renderer_DrawCommandType.CUBIC_CURVE_TO, a = n, openfl__$internal_renderer_canvas_CanvasGraphics.context.bezierCurveTo(a.buffer.f[a.fPos] - 0, a.buffer.f[a.fPos + 1] - 0, a.buffer.f[a.fPos + 2] - 0, a.buffer.f[a.fPos + 3] - 0, a.buffer.f[a.fPos + 4] - 0, a.buffer.f[a.fPos + 5] - 0), a.buffer.f[a.fPos + 4], a.buffer.f[a.fPos + 5];
                        break;
                    case 4:
                        var r;
                        n.advance(), n.prev = openfl__$internal_renderer_DrawCommandType.CURVE_TO, r = n, openfl__$internal_renderer_canvas_CanvasGraphics.context.quadraticCurveTo(r.buffer.f[r.fPos] - 0, r.buffer.f[r.fPos + 1] - 0, r.buffer.f[r.fPos + 2] - 0, r.buffer.f[r.fPos + 3] - 0), r.buffer.f[r.fPos + 2], r.buffer.f[r.fPos + 3];
                        break;
                    case 5:
                        var o;
                        n.advance(), n.prev = openfl__$internal_renderer_DrawCommandType.DRAW_CIRCLE, o = n, openfl__$internal_renderer_canvas_CanvasGraphics.context.arc(o.buffer.f[o.fPos] - 0, o.buffer.f[o.fPos + 1] - 0, o.buffer.f[o.fPos + 2], 0, 2 * Math.PI, !0);
                        break;
                    case 6:
                        var d;
                        n.advance(), n.prev = openfl__$internal_renderer_DrawCommandType.DRAW_ELLIPSE;
                        var _ = (d = n).buffer.f[d.fPos],
                            h = d.buffer.f[d.fPos + 1],
                            p = d.buffer.f[d.fPos + 2],
                            c = d.buffer.f[d.fPos + 3],
                            Q = p / 2 * .5522848,
                            U = c / 2 * .5522848,
                            m = (_ -= 0) + p,
                            u = (h -= 0) + c,
                            F = _ + p / 2,
                            N = h + c / 2;
                        openfl__$internal_renderer_canvas_CanvasGraphics.context.moveTo(_, N), openfl__$internal_renderer_canvas_CanvasGraphics.context.bezierCurveTo(_, N - U, F - Q, h, F, h), openfl__$internal_renderer_canvas_CanvasGraphics.context.bezierCurveTo(F + Q, h, m, N - U, m, N), openfl__$internal_renderer_canvas_CanvasGraphics.context.bezierCurveTo(m, N + U, F + Q, u, F, u), openfl__$internal_renderer_canvas_CanvasGraphics.context.bezierCurveTo(F - Q, u, _, N + U, _, N);
                        break;
                    case 7:
                        var S;
                        n.advance(), n.prev = openfl__$internal_renderer_DrawCommandType.DRAW_RECT, S = n, openfl__$internal_renderer_canvas_CanvasGraphics.context.rect(S.buffer.f[S.fPos] - 0, S.buffer.f[S.fPos + 1] - 0, S.buffer.f[S.fPos + 2], S.buffer.f[S.fPos + 3]);
                        break;
                    case 8:
                        var W;
                        n.advance(), n.prev = openfl__$internal_renderer_DrawCommandType.DRAW_ROUND_RECT, W = n, openfl__$internal_renderer_canvas_CanvasGraphics.drawRoundRect(W.buffer.f[W.fPos] - 0, W.buffer.f[W.fPos + 1] - 0, W.buffer.f[W.fPos + 2], W.buffer.f[W.fPos + 3], W.buffer.f[W.fPos + 4], W.buffer.o[W.oPos]);
                        break;
                    case 15:
                        var B;
                        n.advance(), n.prev = openfl__$internal_renderer_DrawCommandType.LINE_TO, B = n, openfl__$internal_renderer_canvas_CanvasGraphics.context.lineTo(B.buffer.f[B.fPos] - 0, B.buffer.f[B.fPos + 1] - 0), B.buffer.f[B.fPos], B.buffer.f[B.fPos + 1];
                        break;
                    case 16:
                        var Z;
                        n.advance(), n.prev = openfl__$internal_renderer_DrawCommandType.MOVE_TO, Z = n, openfl__$internal_renderer_canvas_CanvasGraphics.context.moveTo(Z.buffer.f[Z.fPos] - 0, Z.buffer.f[Z.fPos + 1] - 0), Z.buffer.f[Z.fPos], Z.buffer.f[Z.fPos + 1];
                        break;
                    default:
                        n.advance(), n.prev = s
                }
            }
            n.destroy()
        }
    }, openfl__$internal_renderer_canvas_CanvasGraphics.setSmoothing = function(e) {
        openfl__$internal_renderer_canvas_CanvasGraphics.allowSmoothing || (e = !1), openfl__$internal_renderer_canvas_CanvasGraphics.context.imageSmoothingEnabled != e && (openfl__$internal_renderer_canvas_CanvasGraphics.context.imageSmoothingEnabled = e, openfl__$internal_renderer_canvas_CanvasGraphics.context.msImageSmoothingEnabled = e, openfl__$internal_renderer_canvas_CanvasGraphics.context.imageSmoothingEnabled = e)
    };
    var openfl__$internal_renderer_canvas_CanvasMaskManager = function(e) {
        openfl__$internal_renderer_AbstractMaskManager.call(this, e)
    };
    $hxClasses["openfl._internal.renderer.canvas.CanvasMaskManager"] = openfl__$internal_renderer_canvas_CanvasMaskManager, openfl__$internal_renderer_canvas_CanvasMaskManager.__name__ = ["openfl", "_internal", "renderer", "canvas", "CanvasMaskManager"], openfl__$internal_renderer_canvas_CanvasMaskManager.__super__ = openfl__$internal_renderer_AbstractMaskManager, openfl__$internal_renderer_canvas_CanvasMaskManager.prototype = $extend(openfl__$internal_renderer_AbstractMaskManager.prototype, {
        pushMask: function(e) {
            var t = this.renderSession.context;
            t.save();
            var n = e.__getRenderTransform();
            t.setTransform(n.a, n.b, n.c, n.d, n.tx, n.ty), t.beginPath(), e.__renderCanvasMask(this.renderSession), t.clip()
        },
        pushObject: function(e, t) {
            null == t && (t = !0), t && null != e.__scrollRect && this.pushRect(e.__scrollRect, e.__renderTransform), null != e.__mask && this.pushMask(e.__mask)
        },
        pushRect: function(e, t) {
            var n = this.renderSession.context;
            n.save(), n.setTransform(t.a, t.b, t.c, t.d, t.tx, t.ty), n.beginPath(), n.rect(e.x, e.y, e.width, e.height), n.clip()
        },
        popMask: function() {
            this.renderSession.context.restore()
        },
        popObject: function(e, t) {
            null == t && (t = !0), null != e.__mask && this.popMask(), t && null != e.__scrollRect && this.popRect()
        },
        popRect: function() {
            this.renderSession.context.restore()
        },
        __class__: openfl__$internal_renderer_canvas_CanvasMaskManager
    });
    var openfl__$internal_renderer_canvas_CanvasRenderer = function(e, t) {
        openfl__$internal_renderer_AbstractRenderer.call(this, e), this.context = t, this.renderSession = new openfl__$internal_renderer_RenderSession, this.renderSession.context = t, this.renderSession.renderer = this, this.renderSession.maskManager = new openfl__$internal_renderer_canvas_CanvasMaskManager(this.renderSession)
    };
    $hxClasses["openfl._internal.renderer.canvas.CanvasRenderer"] = openfl__$internal_renderer_canvas_CanvasRenderer, openfl__$internal_renderer_canvas_CanvasRenderer.__name__ = ["openfl", "_internal", "renderer", "canvas", "CanvasRenderer"], openfl__$internal_renderer_canvas_CanvasRenderer.__super__ = openfl__$internal_renderer_AbstractRenderer, openfl__$internal_renderer_canvas_CanvasRenderer.prototype = $extend(openfl__$internal_renderer_AbstractRenderer.prototype, {
        context: null,
        clear: function() {
            for (var e = 0, t = this.stage.stage3Ds; e < t.get_length();) {
                var n = t.get(e);
                ++e, n.__renderCanvas(this.stage, this.renderSession)
            }
        },
        render: function() {
            this.renderSession.allowSmoothing = 2 != this.stage.quality, this.context.setTransform(1, 0, 0, 1, 0, 0), this.context.globalAlpha = 1, !this.stage.__transparent && this.stage.__clearBeforeRender ? (this.context.fillStyle = this.stage.__colorString, this.context.fillRect(0, 0, this.stage.stageWidth * this.stage.window.__scale, this.stage.stageHeight * this.stage.window.__scale)) : this.stage.__transparent && this.stage.__clearBeforeRender && this.context.clearRect(0, 0, this.stage.stageWidth * this.stage.window.__scale, this.stage.stageHeight * this.stage.window.__scale), this.stage.__renderCanvas(this.renderSession)
        },
        __class__: openfl__$internal_renderer_canvas_CanvasRenderer
    });
    var openfl__$internal_renderer_canvas_CanvasShape = function() {};
    $hxClasses["openfl._internal.renderer.canvas.CanvasShape"] = openfl__$internal_renderer_canvas_CanvasShape, openfl__$internal_renderer_canvas_CanvasShape.__name__ = ["openfl", "_internal", "renderer", "canvas", "CanvasShape"], openfl__$internal_renderer_canvas_CanvasShape.render = function(e, t) {
        if (e.__renderable && !(e.__worldAlpha <= 0)) {
            var n = e.__graphics;
            if (null != n) {
                openfl__$internal_renderer_canvas_CanvasGraphics.render(n, t, e.__renderTransform);
                n.__bounds;
                var l = n.__width,
                    i = n.__height;
                if (null != n.__canvas) {
                    var s = t.context,
                        a = e.__scrollRect;
                    if (l > 0 && i > 0 && (null == a || a.width > 0 && a.height > 0)) {
                        t.maskManager.pushObject(e), s.globalAlpha = e.__worldAlpha;
                        var r = n.__worldTransform;
                        t.roundPixels ? s.setTransform(r.a, r.b, r.c, r.d, 0 | r.tx, 0 | r.ty) : s.setTransform(r.a, r.b, r.c, r.d, r.tx, r.ty), s.drawImage(n.__canvas, 0, 0), t.maskManager.popObject(e)
                    }
                }
            }
        }
    };
    var openfl__$internal_renderer_canvas_CanvasTextField = function() {};
    $hxClasses["openfl._internal.renderer.canvas.CanvasTextField"] = openfl__$internal_renderer_canvas_CanvasTextField, openfl__$internal_renderer_canvas_CanvasTextField.__name__ = ["openfl", "_internal", "renderer", "canvas", "CanvasTextField"], openfl__$internal_renderer_canvas_CanvasTextField.render = function(e, t, n) {
        var l = e.__textEngine,
            i = l.bounds,
            s = e.__graphics;
        if (e.__dirty && (e.__updateLayout(), null == s.__bounds && (s.__bounds = new openfl_geom_Rectangle), s.__bounds.copyFrom(i)), s.__update(), e.__dirty || s.__dirty) {
            var a = s.__width,
                r = s.__height;
            if ((null != l.text && "" != l.text || l.background || l.border || l.__hasFocus || 1 == l.type && l.selectable) && (!(l.width <= 0 || l.height <= 0) || 2 == l.autoSize)) {
                null == e.__graphics.__canvas && (e.__graphics.__canvas = window.document.createElement("canvas"), e.__graphics.__context = e.__graphics.__canvas.getContext("2d")), openfl__$internal_renderer_canvas_CanvasTextField.context = s.__context;
                var o = s.__renderTransform;
                if (s.__canvas.width = a, s.__canvas.height = r, openfl__$internal_renderer_canvas_CanvasTextField.context.setTransform(o.a, o.b, o.c, o.d, o.tx, o.ty), null == openfl__$internal_renderer_canvas_CanvasTextField.clearRect && (openfl__$internal_renderer_canvas_CanvasTextField.clearRect = "undefined" != typeof navigator && void 0 !== navigator.isCocoonJS), openfl__$internal_renderer_canvas_CanvasTextField.clearRect && openfl__$internal_renderer_canvas_CanvasTextField.context.clearRect(0, 0, s.__canvas.width, s.__canvas.height), null != l.text && "" != l.text || l.__hasFocus) {
                    var d = l.text;
                    !t.allowSmoothing || 0 == l.antiAliasType && 400 == l.sharpness ? (s.__context.imageSmoothingEnabled = !1, s.__context.msImageSmoothingEnabled = !1, s.__context.imageSmoothingEnabled = !1) : (s.__context.imageSmoothingEnabled = !0, s.__context.msImageSmoothingEnabled = !0, s.__context.imageSmoothingEnabled = !0), (l.border || l.background) && (openfl__$internal_renderer_canvas_CanvasTextField.context.rect(.5, .5, i.width - 1, i.height - 1), l.background && (openfl__$internal_renderer_canvas_CanvasTextField.context.fillStyle = "#" + StringTools.hex(16777215 & l.backgroundColor, 6), openfl__$internal_renderer_canvas_CanvasTextField.context.fill()), l.border && (openfl__$internal_renderer_canvas_CanvasTextField.context.lineWidth = 1, openfl__$internal_renderer_canvas_CanvasTextField.context.strokeStyle = "#" + StringTools.hex(16777215 & l.borderColor, 6), openfl__$internal_renderer_canvas_CanvasTextField.context.stroke())), openfl__$internal_renderer_canvas_CanvasTextField.context.textBaseline = "top", openfl__$internal_renderer_canvas_CanvasTextField.context.textAlign = "start";
                    for (var _, h = -e.get_scrollH(), p = 0, c = 0, Q = e.get_scrollV() - 1; c < Q;) {
                        var U = c++;
                        p -= l.lineHeights.get(U)
                    }
                    for (var m = 0, u = new EReg("(iPad|iPhone|iPod|Firefox)", "g").match(window.navigator.userAgent), F = 0, N = l.layoutGroups; F < N.get_length();) {
                        var S = N.get(F);
                        if (++F, !(S.lineIndex < e.get_scrollV() - 1)) {
                            if (S.lineIndex > e.get_scrollV() + l.bottomScrollV - 2) break;
                            if (openfl__$internal_renderer_canvas_CanvasTextField.context.font = openfl__$internal_text_TextEngine.getFont(S.format), openfl__$internal_renderer_canvas_CanvasTextField.context.fillStyle = "#" + StringTools.hex(16777215 & S.format.color, 6), u && (m = .185 * S.format.size), openfl__$internal_renderer_canvas_CanvasTextField.context.fillText(d.substring(S.startIndex, S.endIndex), S.offsetX + h, S.offsetY + m + p), e.__caretIndex > -1 && l.selectable)
                                if (e.__selectionIndex == e.__caretIndex) {
                                    if (e.__showCursor && S.startIndex <= e.__caretIndex && S.endIndex >= e.__caretIndex) {
                                        _ = 0;
                                        for (var W = 0, B = e.__caretIndex - S.startIndex; W < B;) {
                                            var Z = W++;
                                            if (S.advances.length <= Z) break;
                                            _ += S.advances[Z]
                                        }
                                        openfl__$internal_renderer_canvas_CanvasTextField.context.fillRect(S.offsetX + _, S.offsetY, 1, S.height)
                                    }
                                } else if (S.startIndex <= e.__caretIndex && S.endIndex >= e.__caretIndex || S.startIndex <= e.__selectionIndex && S.endIndex >= e.__selectionIndex || S.startIndex > e.__caretIndex && S.endIndex < e.__selectionIndex || S.startIndex > e.__selectionIndex && S.endIndex < e.__caretIndex) {
                                var D, V, f = Std.int(Math.min(e.__selectionIndex, e.__caretIndex)),
                                    R = Std.int(Math.max(e.__selectionIndex, e.__caretIndex));
                                S.startIndex > f && (f = S.startIndex), S.endIndex < R && (R = S.endIndex), D = e.getCharBoundaries(f), R >= l.text.length ? (V = e.getCharBoundaries(l.text.length - 1)).x += V.width + 2 : V = e.getCharBoundaries(R), null != D && null != V && (openfl__$internal_renderer_canvas_CanvasTextField.context.fillStyle = "#000000", openfl__$internal_renderer_canvas_CanvasTextField.context.fillRect(D.x, D.y, V.x - D.x, S.height), openfl__$internal_renderer_canvas_CanvasTextField.context.fillStyle = "#FFFFFF", openfl__$internal_renderer_canvas_CanvasTextField.context.fillText(d.substring(f, R), h + D.x, S.offsetY + m + p))
                            }
                        }
                    }
                } else if ((l.border || l.background) && (l.border ? openfl__$internal_renderer_canvas_CanvasTextField.context.rect(.5, .5, i.width - 1, i.height - 1) : openfl__$internal_renderer_canvas_CanvasTextField.context.rect(0, 0, i.width, i.height), l.background && (openfl__$internal_renderer_canvas_CanvasTextField.context.fillStyle = "#" + StringTools.hex(16777215 & l.backgroundColor, 6), openfl__$internal_renderer_canvas_CanvasTextField.context.fill()), l.border && (openfl__$internal_renderer_canvas_CanvasTextField.context.lineWidth = 1, openfl__$internal_renderer_canvas_CanvasTextField.context.lineCap = "square", openfl__$internal_renderer_canvas_CanvasTextField.context.strokeStyle = "#" + StringTools.hex(16777215 & l.borderColor, 6), openfl__$internal_renderer_canvas_CanvasTextField.context.stroke())), e.__caretIndex > -1 && l.selectable && e.__showCursor) {
                    for (var T = -e.get_scrollH(), J = 0, g = 0, b = e.get_scrollV() - 1; g < b;) {
                        var E = g++;
                        J -= l.lineHeights.get(E)
                    }
                    openfl__$internal_renderer_canvas_CanvasTextField.context.beginPath(), openfl__$internal_renderer_canvas_CanvasTextField.context.strokeStyle = "#" + StringTools.hex(16777215 & e.get_defaultTextFormat().color, 6), openfl__$internal_renderer_canvas_CanvasTextField.context.moveTo(T + 2.5, J + 2.5), openfl__$internal_renderer_canvas_CanvasTextField.context.lineWidth = 1, openfl__$internal_renderer_canvas_CanvasTextField.context.lineTo(T + 2.5, J + openfl__$internal_text_TextEngine.getFormatHeight(e.get_defaultTextFormat()) - 1), openfl__$internal_renderer_canvas_CanvasTextField.context.stroke(), openfl__$internal_renderer_canvas_CanvasTextField.context.closePath()
                }
                s.__bitmap = openfl_display_BitmapData.fromCanvas(e.__graphics.__canvas), s.__visible = !0, e.__dirty = !1, s.set___dirty(!1)
            } else e.__graphics.__canvas = null, e.__graphics.__context = null, e.__graphics.__bitmap = null, e.__graphics.set___dirty(!1), e.__dirty = !1
        }
    };
    var openfl__$internal_renderer_canvas_CanvasTilemap = function() {};
    $hxClasses["openfl._internal.renderer.canvas.CanvasTilemap"] = openfl__$internal_renderer_canvas_CanvasTilemap, openfl__$internal_renderer_canvas_CanvasTilemap.__name__ = ["openfl", "_internal", "renderer", "canvas", "CanvasTilemap"], openfl__$internal_renderer_canvas_CanvasTilemap.render = function(e, t) {
        if (e.__renderable && 0 != e.__tiles.length && !(e.__worldAlpha <= 0)) {
            var n = t.context;
            t.maskManager.pushObject(e);
            var l = openfl_geom_Rectangle.__temp;
            l.setTo(0, 0, e.__width, e.__height), t.maskManager.pushRect(l, e.__renderTransform);
            var i = e.__renderTransform,
                s = t.roundPixels;
            t.allowSmoothing && e.smoothing || (n.imageSmoothingEnabled = !1, n.msImageSmoothingEnabled = !1, n.imageSmoothingEnabled = !1);
            var a, r, o, d, _, h, p, c = e.tileset,
                Q = null,
                U = null;
            r = (a = e.__tiles).length;
            for (var m = openfl_geom_Matrix.__temp, u = 0; u < r;) {
                d = (o = a[u++]).alpha, !o.visible || d <= 0 || null != (_ = null != o.tileset ? o.tileset : c) && null != (h = _.__data[o.id]) && null != (p = _.bitmapData) && (p != Q && (null == p.image.buffer.__srcImage && lime_graphics_utils_ImageCanvasUtil.convertToCanvas(p.image), U = p.image.get_src(), Q = p), n.globalAlpha = e.__worldAlpha * d, m.setTo(1, 0, 0, 1, -o.originX, -o.originY), m.concat(o.matrix), m.concat(i), s ? n.setTransform(m.a, m.b, m.c, m.d, 0 | m.tx, 0 | m.ty) : n.setTransform(m.a, m.b, m.c, m.d, m.tx, m.ty), n.drawImage(U, h.x, h.y, h.width, h.height, 0, 0, h.width, h.height))
            }
            t.allowSmoothing && e.smoothing || (n.imageSmoothingEnabled = !0, n.msImageSmoothingEnabled = !0, n.imageSmoothingEnabled = !0), t.maskManager.popRect(), t.maskManager.popObject(e)
        }
    };
    var openfl__$internal_renderer_dom_DOMMaskManager = function(e) {
        openfl__$internal_renderer_AbstractMaskManager.call(this, e), this.clipRects = [], this.numClipRects = 0
    };
    $hxClasses["openfl._internal.renderer.dom.DOMMaskManager"] = openfl__$internal_renderer_dom_DOMMaskManager, openfl__$internal_renderer_dom_DOMMaskManager.__name__ = ["openfl", "_internal", "renderer", "dom", "DOMMaskManager"], openfl__$internal_renderer_dom_DOMMaskManager.__super__ = openfl__$internal_renderer_AbstractMaskManager, openfl__$internal_renderer_dom_DOMMaskManager.prototype = $extend(openfl__$internal_renderer_AbstractMaskManager.prototype, {
        currentClipRect: null,
        clipRects: null,
        numClipRects: null,
        pushMask: function(e) {
            this.pushRect(e.getBounds(e), e.__getRenderTransform())
        },
        pushObject: function(e, t) {
            null == t && (t = !0), t && null != e.__scrollRect && this.pushRect(e.__scrollRect, e.__renderTransform), null != e.__mask && this.pushMask(e.__mask)
        },
        pushRect: function(e, t) {
            this.numClipRects == this.clipRects.length && (this.clipRects[this.numClipRects] = new openfl_geom_Rectangle);
            var n = this.clipRects[this.numClipRects];
            if (e.__transform(n, t), this.numClipRects > 0) {
                var l = this.clipRects[this.numClipRects - 1];
                n.__contract(l.x, l.y, l.width, l.height)
            }
            n.height < 0 && (n.height = 0), n.width < 0 && (n.width = 0), this.currentClipRect = n, this.numClipRects++
        },
        popMask: function() {
            this.popRect()
        },
        popObject: function(e, t) {
            null == t && (t = !0), null != e.__mask && this.popMask(), t && null != e.__scrollRect && this.popRect()
        },
        popRect: function() {
            this.numClipRects > 0 && (this.numClipRects--, this.numClipRects > 0 ? this.currentClipRect = this.clipRects[this.numClipRects - 1] : this.currentClipRect = null)
        },
        updateClip: function(e) {
            if (null == this.currentClipRect) e.__worldClipChanged = null != e.__worldClip, e.__worldClip = null;
            else {
                null == e.__worldClip && (e.__worldClip = new openfl_geom_Rectangle);
                var t = openfl_geom_Rectangle.__temp,
                    n = openfl_geom_Matrix.__temp;
                n.copyFrom(e.__renderTransform), n.invert(), this.currentClipRect.__transform(t, n), t.equals(e.__worldClip) ? e.__worldClipChanged = !1 : (e.__worldClip.copyFrom(t), e.__worldClipChanged = !0)
            }
        },
        __class__: openfl__$internal_renderer_dom_DOMMaskManager
    });
    var openfl_geom_Rectangle = function(e, t, n, l) {
        null == l && (l = 0), null == n && (n = 0), null == t && (t = 0), null == e && (e = 0), this.x = e, this.y = t, this.width = n, this.height = l
    };
    $hxClasses["openfl.geom.Rectangle"] = openfl_geom_Rectangle, openfl_geom_Rectangle.__name__ = ["openfl", "geom", "Rectangle"], openfl_geom_Rectangle.prototype = {
        height: null,
        width: null,
        x: null,
        y: null,
        clone: function() {
            return new openfl_geom_Rectangle(this.x, this.y, this.width, this.height)
        },
        contains: function(e, t) {
            return e >= this.x && t >= this.y && e < this.get_right() && t < this.get_bottom()
        },
        containsPoint: function(e) {
            return this.contains(e.x, e.y)
        },
        copyFrom: function(e) {
            this.x = e.x, this.y = e.y, this.width = e.width, this.height = e.height
        },
        equals: function(e) {
            return e == this || null != e && this.x == e.x && this.y == e.y && this.width == e.width && this.height == e.height
        },
        intersection: function(e) {
            var t, n, l, i;
            return t = this.x < e.x ? e.x : this.x, (n = this.get_right() > e.get_right() ? e.get_right() : this.get_right()) <= t ? new openfl_geom_Rectangle : (l = this.y < e.y ? e.y : this.y, (i = this.get_bottom() > e.get_bottom() ? e.get_bottom() : this.get_bottom()) <= l ? new openfl_geom_Rectangle : new openfl_geom_Rectangle(t, l, n - t, i - l))
        },
        intersects: function(e) {
            var t, n;
            return t = this.x < e.x ? e.x : this.x, !((this.get_right() > e.get_right() ? e.get_right() : this.get_right()) <= t) && (n = this.y < e.y ? e.y : this.y, (this.get_bottom() > e.get_bottom() ? e.get_bottom() : this.get_bottom()) > n)
        },
        setTo: function(e, t, n, l) {
            this.x = e, this.y = t, this.width = n, this.height = l
        },
        union: function(e) {
            return 0 == this.width || 0 == this.height ? e.clone() : 0 == e.width || 0 == e.height ? this.clone() : (t = this.x > e.x ? e.x : this.x, n = this.get_right() < e.get_right() ? e.get_right() : this.get_right(), l = this.y > e.y ? e.y : this.y, i = this.get_bottom() < e.get_bottom() ? e.get_bottom() : this.get_bottom(), new openfl_geom_Rectangle(t, l, n - t, i - l));
            var t, n, l, i
        },
        __contract: function(e, t, n, l) {
            if (0 != this.width || 0 != this.height) {
                var i = 0,
                    s = 0,
                    a = 0,
                    r = 0;
                this.x < e && (i = e - this.x), this.y < t && (s = t - this.y), this.get_right() > e + n && (a = e + n - this.get_right()), this.get_bottom() > t + l && (r = t + l - this.get_bottom()), this.x += i, this.y += s, this.width += a - i, this.height += r - s
            }
        },
        __expand: function(e, t, n, l) {
            if (0 == this.width && 0 == this.height) return this.x = e, this.y = t, this.width = n, void(this.height = l);
            var i = this.get_right(),
                s = this.get_bottom();
            this.x > e && (this.x = e, this.width = i - e), this.y > t && (this.y = t, this.height = s - t), i < e + n && (this.width = e + n - this.x), s < t + l && (this.height = t + l - this.y)
        },
        __toLimeRectangle: function() {
            return null == openfl_geom_Rectangle.__limeRectangle && (openfl_geom_Rectangle.__limeRectangle = new lime_math_Rectangle), openfl_geom_Rectangle.__limeRectangle.setTo(this.x, this.y, this.width, this.height), openfl_geom_Rectangle.__limeRectangle
        },
        __transform: function(e, t) {
            var n = t.a * this.x + t.c * this.y,
                l = n,
                i = t.b * this.x + t.d * this.y,
                s = i,
                a = t.a * (this.x + this.width) + t.c * this.y,
                r = t.b * (this.x + this.width) + t.d * this.y;
            a < n && (n = a), r < i && (i = r), a > l && (l = a), r > s && (s = r), a = t.a * (this.x + this.width) + t.c * (this.y + this.height), r = t.b * (this.x + this.width) + t.d * (this.y + this.height), a < n && (n = a), r < i && (i = r), a > l && (l = a), r > s && (s = r), a = t.a * this.x + t.c * (this.y + this.height), r = t.b * this.x + t.d * (this.y + this.height), a < n && (n = a), r < i && (i = r), a > l && (l = a), r > s && (s = r), e.setTo(n + t.tx, i + t.ty, l - n, s - i)
        },
        get_bottom: function() {
            return this.y + this.height
        },
        get_left: function() {
            return this.x
        },
        get_right: function() {
            return this.x + this.width
        },
        get_top: function() {
            return this.y
        },
        __class__: openfl_geom_Rectangle,
        __properties__: {
            get_top: "get_top",
            get_right: "get_right",
            get_left: "get_left",
            get_bottom: "get_bottom"
        }
    };
    var openfl__$internal_renderer_opengl_GLBitmap = function() {};
    $hxClasses["openfl._internal.renderer.opengl.GLBitmap"] = openfl__$internal_renderer_opengl_GLBitmap, openfl__$internal_renderer_opengl_GLBitmap.__name__ = ["openfl", "_internal", "renderer", "opengl", "GLBitmap"], openfl__$internal_renderer_opengl_GLBitmap.render = function(e, t) {
        if (BitmapBatch.renderGLStack(), e.__renderable && !(e.__worldAlpha <= 0) && null != e.bitmapData && e.bitmapData.__isValid) {
            var n = t.renderer,
                l = t.gl;
            t.blendModeManager.setBlendMode(e.get_blendMode()), t.maskManager.pushObject(e);
            var i = t.filterManager.pushObject(e);
            i.get_data().uImage0.input = e.bitmapData, i.get_data().uImage0.smoothing = t.allowSmoothing && (e.smoothing || t.upscaled), i.get_data().uMatrix.value = n.getMatrix(e.__renderTransform), t.shaderManager.setShader(i), l.bindBuffer(l.ARRAY_BUFFER, e.bitmapData.getBuffer(l, e.__worldAlpha)), l.vertexAttribPointer(i.get_data().aPosition.index, 3, l.FLOAT, !1, 24, 0), l.vertexAttribPointer(i.get_data().aTexCoord.index, 2, l.FLOAT, !1, 24, 12), l.vertexAttribPointer(i.get_data().aAlpha.index, 1, l.FLOAT, !1, 24, 20), l.drawArrays(l.TRIANGLE_STRIP, 0, 4), t.filterManager.popObject(e), t.maskManager.popObject(e)
        }
    };
    var openfl__$internal_renderer_opengl_GLBlendModeManager = function(e) {
        openfl__$internal_renderer_AbstractBlendModeManager.call(this), this.gl = e, this.setBlendMode(10), e.enable(e.BLEND)
    };
    $hxClasses["openfl._internal.renderer.opengl.GLBlendModeManager"] = openfl__$internal_renderer_opengl_GLBlendModeManager, openfl__$internal_renderer_opengl_GLBlendModeManager.__name__ = ["openfl", "_internal", "renderer", "opengl", "GLBlendModeManager"], openfl__$internal_renderer_opengl_GLBlendModeManager.__super__ = openfl__$internal_renderer_AbstractBlendModeManager, openfl__$internal_renderer_opengl_GLBlendModeManager.prototype = $extend(openfl__$internal_renderer_AbstractBlendModeManager.prototype, {
        currentBlendMode: null,
        gl: null,
        setBlendMode: function(e) {
            if (this.currentBlendMode != e) switch (this.currentBlendMode = e, e) {
                case 0:
                    this.gl.blendEquation(this.gl.FUNC_ADD), this.gl.blendFunc(this.gl.ONE, this.gl.ONE);
                    break;
                case 9:
                    this.gl.blendEquation(this.gl.FUNC_ADD), this.gl.blendFunc(this.gl.DST_COLOR, this.gl.ONE_MINUS_SRC_ALPHA);
                    break;
                case 12:
                    this.gl.blendEquation(this.gl.FUNC_ADD), this.gl.blendFunc(this.gl.ONE, this.gl.ONE_MINUS_SRC_COLOR);
                    break;
                case 14:
                    this.gl.blendEquation(this.gl.FUNC_REVERSE_SUBTRACT), this.gl.blendFunc(this.gl.ONE, this.gl.ONE);
                    break;
                default:
                    this.gl.blendEquation(this.gl.FUNC_ADD), this.gl.blendFunc(this.gl.ONE, this.gl.ONE_MINUS_SRC_ALPHA)
            }
        },
        __class__: openfl__$internal_renderer_opengl_GLBlendModeManager
    });
    var openfl__$internal_renderer_opengl_GLDisplayObject = function() {};
    $hxClasses["openfl._internal.renderer.opengl.GLDisplayObject"] = openfl__$internal_renderer_opengl_GLDisplayObject, openfl__$internal_renderer_opengl_GLDisplayObject.__name__ = ["openfl", "_internal", "renderer", "opengl", "GLDisplayObject"], openfl__$internal_renderer_opengl_GLDisplayObject.render = function(e, t) {
        if ((null != e.opaqueBackground || null != e.__graphics) && e.__renderable && !(e.__worldAlpha <= 0)) {
            if (null != e.opaqueBackground && e.get_width() > 0 && e.get_height() > 0) {
                t.maskManager.pushObject(e);
                var n = t.gl,
                    l = openfl_geom_Rectangle.__temp;
                l.setTo(0, 0, e.get_width(), e.get_height()), t.maskManager.pushRect(l, e.__renderTransform);
                var i = e.opaqueBackground;
                n.clearColor((i >> 16 & 255) / 255, (i >> 8 & 255) / 255, (255 & i) / 255, 1), n.clear(n.COLOR_BUFFER_BIT), t.maskManager.popRect(), t.maskManager.popObject(e)
            }
            null != e.__graphics && openfl__$internal_renderer_opengl_GLShape.render(e, t)
        }
    };
    var openfl__$internal_renderer_opengl_GLFilterManager = function(e, t) {
        openfl__$internal_renderer_AbstractFilterManager.call(this, t), this.renderer = e, this.gl = t.gl, this.filterDepth = 0, this.matrix = new openfl_geom_Matrix
    };
    $hxClasses["openfl._internal.renderer.opengl.GLFilterManager"] = openfl__$internal_renderer_opengl_GLFilterManager, openfl__$internal_renderer_opengl_GLFilterManager.__name__ = ["openfl", "_internal", "renderer", "opengl", "GLFilterManager"], openfl__$internal_renderer_opengl_GLFilterManager.__super__ = openfl__$internal_renderer_AbstractFilterManager, openfl__$internal_renderer_opengl_GLFilterManager.prototype = $extend(openfl__$internal_renderer_AbstractFilterManager.prototype, {
        filterDepth: null,
        gl: null,
        matrix: null,
        renderer: null,
        pushObject: function(e) {
            if (null != e.__filters && e.__filters.length > 0) {
                if (1 == e.__filters.length && 0 == e.__filters[0].__numPasses) return e.__filters[0].__initShader(this.renderSession, 0);
                this.renderer.getRenderTarget(!0), this.filterDepth++
            }
            return this.renderSession.shaderManager.defaultShader
        },
        popObject: function(e) {
            if (null != e.__filters && e.__filters.length > 0) {
                var t = 0;
                if (e.__filters.length > 1 || e.__filters[0].__numPasses > 0) {
                    t = e.__filters.length;
                    for (var n = 0, l = e.__filters; n < l.length;) {
                        var i = l[n];
                        ++n, i.__numPasses > 0 ? t += i.__numPasses - 1 : t += 0
                    }
                }
                if (t > 0)
                    for (var s, a, r = 0, o = e.__filters; r < o.length;) {
                        var d = o[r];
                        if (++r, d.__numPasses > 0)
                            for (var _ = 0, h = d.__numPasses; _ < h;) {
                                var p = _++;
                                s = this.renderer.currentRenderTarget, this.renderer.getRenderTarget(!0), a = d.__initShader(this.renderSession, p), this.renderPass(s, a)
                            } else s = this.renderer.currentRenderTarget, this.renderer.getRenderTarget(!0), a = d.__initShader(this.renderSession, 0), this.renderPass(s, a);
                        this.filterDepth--, this.renderer.getRenderTarget(this.filterDepth > 0), this.renderPass(this.renderer.currentRenderTarget, this.renderSession.shaderManager.defaultShader)
                    } else this.filterDepth--
            }
        },
        renderPass: function(e, t) {
            t.get_data().uImage0.input = e, t.get_data().uImage0.smoothing = this.renderSession.allowSmoothing && this.renderSession.upscaled, t.get_data().uMatrix.value = this.renderer.getMatrix(this.matrix), this.renderSession.shaderManager.setShader(t), this.gl.bindBuffer(this.gl.ARRAY_BUFFER, e.getBuffer(this.gl, 1)), this.gl.vertexAttribPointer(t.get_data().aPosition.index, 3, this.gl.FLOAT, !1, 24, 0), this.gl.vertexAttribPointer(t.get_data().aTexCoord.index, 2, this.gl.FLOAT, !1, 24, 12), this.gl.vertexAttribPointer(t.get_data().aAlpha.index, 1, this.gl.FLOAT, !1, 24, 20), this.gl.drawArrays(this.gl.TRIANGLE_STRIP, 0, 4)
        },
        __class__: openfl__$internal_renderer_opengl_GLFilterManager
    });
    var openfl__$internal_renderer_opengl_GLMaskManager = function(e) {
        openfl__$internal_renderer_AbstractMaskManager.call(this, e), this.gl = e.gl, this.clipRects = [], this.numClipRects = 0, this.tempRect = new openfl_geom_Rectangle
    };
    $hxClasses["openfl._internal.renderer.opengl.GLMaskManager"] = openfl__$internal_renderer_opengl_GLMaskManager, openfl__$internal_renderer_opengl_GLMaskManager.__name__ = ["openfl", "_internal", "renderer", "opengl", "GLMaskManager"], openfl__$internal_renderer_opengl_GLMaskManager.__super__ = openfl__$internal_renderer_AbstractMaskManager, openfl__$internal_renderer_opengl_GLMaskManager.prototype = $extend(openfl__$internal_renderer_AbstractMaskManager.prototype, {
        clipRects: null,
        gl: null,
        numClipRects: null,
        tempRect: null,
        pushMask: function(e) {
            this.pushRect(e.getBounds(e), e.__getRenderTransform())
        },
        pushObject: function(e, t) {
            null == t && (t = !0), t && null != e.__scrollRect && this.pushRect(e.__scrollRect, e.__renderTransform), null != e.__mask && this.pushMask(e.__mask)
        },
        pushRect: function(e, t) {
            openfl_Lib.current.stage;
            this.numClipRects == this.clipRects.length && (this.clipRects[this.numClipRects] = new openfl_geom_Rectangle);
            var n = this.clipRects[this.numClipRects];
            if (e.__transform(n, t), this.numClipRects > 0) {
                var l = this.clipRects[this.numClipRects - 1];
                n.__contract(l.x, l.y, l.width, l.height)
            }
            n.height < 0 && (n.height = 0), n.width < 0 && (n.width = 0), this.scissorRect(n), this.numClipRects++
        },
        popMask: function() {
            this.popRect()
        },
        popObject: function(e, t) {
            null == t && (t = !0), null != e.__mask && this.popMask(), t && null != e.__scrollRect && this.popRect()
        },
        popRect: function() {
            this.numClipRects > 0 && (this.numClipRects--, this.numClipRects > 0 ? this.scissorRect(this.clipRects[this.numClipRects - 1]) : this.scissorRect())
        },
        scissorRect: function(e) {
            if (null != e) {
                var t = this.renderSession.renderer;
                this.gl.enable(this.gl.SCISSOR_TEST);
                var n = Math.floor(e.x),
                    l = Math.floor(t.height - e.y - e.height),
                    i = Math.ceil(e.width),
                    s = Math.ceil(e.height);
                i < 0 && (i = 0), s < 0 && (s = 0), this.gl.scissor(n, l, i, s)
            } else this.gl.disable(this.gl.SCISSOR_TEST)
        },
        __class__: openfl__$internal_renderer_opengl_GLMaskManager
    });
    var openfl__$internal_renderer_opengl_GLRenderer = function(e, t, n) {
        null == n && (n = !0), openfl__$internal_renderer_AbstractRenderer.call(this, e), this.gl = t, this.flipped = n, this.matrix = lime_math__$Matrix4_Matrix4_$Impl_$._new(), this.values = [], this.renderSession = new openfl__$internal_renderer_RenderSession, this.renderSession.gl = t, this.renderSession.renderer = this, this.renderSession.blendModeManager = new openfl__$internal_renderer_opengl_GLBlendModeManager(t), this.renderSession.filterManager = new openfl__$internal_renderer_opengl_GLFilterManager(this, this.renderSession), this.renderSession.shaderManager = new openfl__$internal_renderer_opengl_GLShaderManager(t), this.renderSession.maskManager = new openfl__$internal_renderer_opengl_GLMaskManager(this.renderSession), null != e.window && (null == e.stage3Ds.get(0).context3D && e.stage3Ds.get(0).__createContext(e, this.renderSession), this.resize(Math.ceil(e.window.__width * e.window.__scale), Math.ceil(e.window.__height * e.window.__scale)))
    };
    $hxClasses["openfl._internal.renderer.opengl.GLRenderer"] = openfl__$internal_renderer_opengl_GLRenderer, openfl__$internal_renderer_opengl_GLRenderer.__name__ = ["openfl", "_internal", "renderer", "opengl", "GLRenderer"], openfl__$internal_renderer_opengl_GLRenderer.__super__ = openfl__$internal_renderer_AbstractRenderer, openfl__$internal_renderer_opengl_GLRenderer.prototype = $extend(openfl__$internal_renderer_AbstractRenderer.prototype, {
        projection: null,
        projectionFlipped: null,
        currentRenderTarget: null,
        displayHeight: null,
        displayMatrix: null,
        displayWidth: null,
        flipped: null,
        gl: null,
        matrix: null,
        renderTargetA: null,
        renderTargetB: null,
        offsetX: null,
        offsetY: null,
        values: null,
        clear: function() {
            this.stage.__transparent ? this.gl.clearColor(0, 0, 0, 0) : this.gl.clearColor(this.stage.__colorSplit[0], this.stage.__colorSplit[1], this.stage.__colorSplit[2], 1), this.gl.clear(this.gl.COLOR_BUFFER_BIT);
            for (var e = 0, t = this.stage.stage3Ds; e < t.get_length();) {
                var n = t.get(e);
                ++e, n.__renderGL(this.stage, this.renderSession)
            }
        },
        getMatrix: function(e) {
            var t = openfl_geom_Matrix.__temp;
            t.copyFrom(e), t.concat(this.displayMatrix), this.renderSession.roundPixels && (t.tx = Math.round(t.tx), t.ty = Math.round(t.ty)), lime_math__$Matrix4_Matrix4_$Impl_$.identity(this.matrix), lime_math__$Matrix4_Matrix4_$Impl_$.set(this.matrix, 0, t.a), lime_math__$Matrix4_Matrix4_$Impl_$.set(this.matrix, 1, t.b), lime_math__$Matrix4_Matrix4_$Impl_$.set(this.matrix, 4, t.c), lime_math__$Matrix4_Matrix4_$Impl_$.set(this.matrix, 5, t.d), lime_math__$Matrix4_Matrix4_$Impl_$.set(this.matrix, 12, t.tx), lime_math__$Matrix4_Matrix4_$Impl_$.set(this.matrix, 13, t.ty), lime_math__$Matrix4_Matrix4_$Impl_$.append(this.matrix, this.flipped ? this.projectionFlipped : this.projection);
            for (var n = 0; n < 16;) {
                var l = n++;
                this.values[l] = lime_math__$Matrix4_Matrix4_$Impl_$.get(this.matrix, l)
            }
            return this.values
        },
        getRenderTarget: function(e) {
            e ? (null == this.renderTargetA && (this.renderTargetA = openfl_display_BitmapData.fromTexture(this.stage.stage3Ds.get(0).context3D.createRectangleTexture(this.width, this.height, 1, !0)), this.gl.bindTexture(this.gl.TEXTURE_2D, this.renderTargetA.getTexture(this.gl)), this.gl.texParameteri(this.gl.TEXTURE_2D, this.gl.TEXTURE_WRAP_S, this.gl.CLAMP_TO_EDGE), this.gl.texParameteri(this.gl.TEXTURE_2D, this.gl.TEXTURE_WRAP_T, this.gl.CLAMP_TO_EDGE)), null == this.renderTargetB && (this.renderTargetB = openfl_display_BitmapData.fromTexture(this.stage.stage3Ds.get(0).context3D.createRectangleTexture(this.width, this.height, 1, !0)), this.gl.bindTexture(this.gl.TEXTURE_2D, this.renderTargetB.getTexture(this.gl)), this.gl.texParameteri(this.gl.TEXTURE_2D, this.gl.TEXTURE_WRAP_S, this.gl.CLAMP_TO_EDGE), this.gl.texParameteri(this.gl.TEXTURE_2D, this.gl.TEXTURE_WRAP_T, this.gl.CLAMP_TO_EDGE)), this.currentRenderTarget == this.renderTargetA ? this.currentRenderTarget = this.renderTargetB : this.currentRenderTarget = this.renderTargetA, this.gl.bindFramebuffer(this.gl.FRAMEBUFFER, this.currentRenderTarget.__getFramebuffer(this.gl)), this.gl.viewport(0, 0, this.width, this.height), this.gl.clearColor(0, 0, 0, 0), this.gl.clear(this.gl.COLOR_BUFFER_BIT), this.flipped = !1) : (this.gl.bindFramebuffer(this.gl.FRAMEBUFFER, null), this.flipped = !0)
        },
        render: function() {
            this.gl.viewport(this.offsetX, this.offsetY, this.displayWidth, this.displayHeight), this.renderSession.allowSmoothing = 2 != this.stage.quality, this.renderSession.upscaled = 1 != this.displayMatrix.a || 1 != this.displayMatrix.d, this.stage.__renderGL(this.renderSession), (this.offsetX > 0 || this.offsetY > 0) && (this.gl.clearColor(0, 0, 0, 1), this.gl.enable(this.gl.SCISSOR_TEST), this.offsetX > 0 && (this.gl.scissor(0, 0, this.offsetX, this.height), this.gl.clear(this.gl.COLOR_BUFFER_BIT), this.gl.scissor(this.offsetX + this.displayWidth, 0, this.width, this.height), this.gl.clear(this.gl.COLOR_BUFFER_BIT)), this.offsetY > 0 && (this.gl.scissor(0, 0, this.width, this.offsetY), this.gl.clear(this.gl.COLOR_BUFFER_BIT), this.gl.scissor(0, this.offsetY + this.displayHeight, this.width, this.height), this.gl.clear(this.gl.COLOR_BUFFER_BIT)), this.gl.disable(this.gl.SCISSOR_TEST))
        },
        resize: function(e, t) {
            openfl__$internal_renderer_AbstractRenderer.prototype.resize.call(this, e, t), null == this.renderTargetA || this.renderTargetA.width == e && this.renderTargetA.height == t || (this.renderTargetA = openfl_display_BitmapData.fromTexture(this.stage.stage3Ds.get(0).context3D.createRectangleTexture(e, t, 1, !0)), this.gl.bindTexture(this.gl.TEXTURE_2D, this.renderTargetA.getTexture(this.gl)), this.gl.texParameteri(this.gl.TEXTURE_2D, this.gl.TEXTURE_WRAP_S, this.gl.CLAMP_TO_EDGE), this.gl.texParameteri(this.gl.TEXTURE_2D, this.gl.TEXTURE_WRAP_T, this.gl.CLAMP_TO_EDGE)), null == this.renderTargetB || this.renderTargetB.width == e && this.renderTargetB.height == t || (this.renderTargetB = openfl_display_BitmapData.fromTexture(this.stage.stage3Ds.get(0).context3D.createRectangleTexture(e, t, 1, !0)), this.gl.bindTexture(this.gl.TEXTURE_2D, this.renderTargetB.getTexture(this.gl)), this.gl.texParameteri(this.gl.TEXTURE_2D, this.gl.TEXTURE_WRAP_S, this.gl.CLAMP_TO_EDGE), this.gl.texParameteri(this.gl.TEXTURE_2D, this.gl.TEXTURE_WRAP_T, this.gl.CLAMP_TO_EDGE)), this.displayMatrix = this.stage.__displayMatrix, this.offsetX = Math.round(this.displayMatrix.__transformX(0, 0)), this.offsetY = Math.round(this.displayMatrix.__transformY(0, 0)), this.displayWidth = Math.round(this.displayMatrix.__transformX(this.stage.stageWidth, 0) - this.offsetX), this.displayHeight = Math.round(this.displayMatrix.__transformY(0, this.stage.stageHeight) - this.offsetY), this.projection = lime_math__$Matrix4_Matrix4_$Impl_$.createOrtho(this.offsetX, this.displayWidth + this.offsetX, this.offsetY, this.displayHeight + this.offsetY, -1e3, 1e3), this.projectionFlipped = lime_math__$Matrix4_Matrix4_$Impl_$.createOrtho(this.offsetX, this.displayWidth + this.offsetX, this.displayHeight + this.offsetY, this.offsetY, -1e3, 1e3)
        },
        __class__: openfl__$internal_renderer_opengl_GLRenderer
    });
    var openfl__$internal_renderer_opengl_GLShaderManager = function(e) {
        openfl__$internal_renderer_AbstractShaderManager.call(this), this.gl = e, this.defaultShader = new openfl_display_Shader, this.defaultShader.gl = e, this.defaultShader.__init()
    };
    $hxClasses["openfl._internal.renderer.opengl.GLShaderManager"] = openfl__$internal_renderer_opengl_GLShaderManager, openfl__$internal_renderer_opengl_GLShaderManager.__name__ = ["openfl", "_internal", "renderer", "opengl", "GLShaderManager"], openfl__$internal_renderer_opengl_GLShaderManager.__super__ = openfl__$internal_renderer_AbstractShaderManager, openfl__$internal_renderer_opengl_GLShaderManager.prototype = $extend(openfl__$internal_renderer_AbstractShaderManager.prototype, {
        gl: null,
        setShader: function(e) {
            if (this.currentShader != e) {
                if (null != this.currentShader && this.currentShader.__disable(), null == e) return this.currentShader = null, void this.gl.useProgram(null);
                this.currentShader = e, null == this.currentShader.gl && (this.currentShader.gl = this.gl, this.currentShader.__init()), this.gl.useProgram(e.glProgram), this.currentShader.__enable(), this.currentShader.__update()
            } else null != this.currentShader && this.currentShader.__update()
        },
        __class__: openfl__$internal_renderer_opengl_GLShaderManager
    });
    var openfl__$internal_renderer_opengl_GLShape = function() {};
    $hxClasses["openfl._internal.renderer.opengl.GLShape"] = openfl__$internal_renderer_opengl_GLShape, openfl__$internal_renderer_opengl_GLShape.__name__ = ["openfl", "_internal", "renderer", "opengl", "GLShape"], openfl__$internal_renderer_opengl_GLShape.render = function(e, t) {
        if (BitmapBatch.renderGLStack(), e.__renderable && !(e.__worldAlpha <= 0)) {
            var n = e.__graphics;
            if (null != n) {
                openfl__$internal_renderer_canvas_CanvasGraphics.render(n, t, e.__renderTransform);
                n.__bounds;
                if (null != n.__bitmap && n.__visible) {
                    var l = t.renderer,
                        i = t.gl;
                    t.blendModeManager.setBlendMode(e.get_blendMode()), t.maskManager.pushObject(e);
                    var s = t.filterManager.pushObject(e);
                    s.get_data().uImage0.input = n.__bitmap, s.get_data().uImage0.smoothing = t.allowSmoothing, s.get_data().uMatrix.value = l.getMatrix(n.__worldTransform), t.shaderManager.setShader(s), i.bindBuffer(i.ARRAY_BUFFER, n.__bitmap.getBuffer(i, e.__worldAlpha)), i.vertexAttribPointer(s.get_data().aPosition.index, 3, i.FLOAT, !1, 24, 0), i.vertexAttribPointer(s.get_data().aTexCoord.index, 2, i.FLOAT, !1, 24, 12), i.vertexAttribPointer(s.get_data().aAlpha.index, 1, i.FLOAT, !1, 24, 20), i.drawArrays(i.TRIANGLE_STRIP, 0, 4), t.filterManager.popObject(e), t.maskManager.popObject(e)
                }
            }
        }
    };
    var openfl__$internal_renderer_opengl_GLTilemap = function() {};
    $hxClasses["openfl._internal.renderer.opengl.GLTilemap"] = openfl__$internal_renderer_opengl_GLTilemap, openfl__$internal_renderer_opengl_GLTilemap.__name__ = ["openfl", "_internal", "renderer", "opengl", "GLTilemap"], openfl__$internal_renderer_opengl_GLTilemap.render = function(e, t) {
        if (BitmapBatch.renderGLStack(), e.__renderable && 0 != e.__tiles.length && !(e.__worldAlpha <= 0)) {
            var n = t.renderer,
                l = t.gl;
            t.blendModeManager.setBlendMode(e.get_blendMode()), t.maskManager.pushObject(e);
            var i = t.filterManager.pushObject(e),
                s = openfl_geom_Rectangle.__temp;
            s.setTo(0, 0, e.__width, e.__height), t.maskManager.pushRect(s, e.__renderTransform), i.get_data().uMatrix.value = n.getMatrix(e.__renderTransform), i.get_data().uImage0.smoothing = t.allowSmoothing && e.smoothing;
            var a, r, o, d, _, h, p, c, Q, U, m, u, F, N, S, W, B, Z, D = e.tileset,
                V = e.__worldAlpha,
                f = e.__worldAlpha != e.__cacheAlpha,
                R = 0,
                T = 0;
            if (r = (a = e.__tiles).length, null == (o = e.__bufferData) || e.__dirty || o.length != 30 * r) {
                if (d = 0, null == o) {
                    var J = 30 * r;
                    o = null != J ? new Float32Array(J) : null
                } else if (o.length != 30 * r) {
                    var g;
                    e.__dirty || (d = o.length / 30 | 0);
                    var b = 30 * r;
                    g = null != b ? new Float32Array(b) : null, o.length <= g.length ? g.set(o) : g.set(o.subarray(0, g.length)), o = g
                }
                for (var E = d; E < r;) {
                    var v = E++;
                    openfl__$internal_renderer_opengl_GLTilemap.__updateTileAlpha(a[v], V, 30 * v, o), null != (c = null != a[v].tileset ? a[v].tileset : e.tileset) && openfl__$internal_renderer_opengl_GLTilemap.__updateTileUV(a[v], c, 30 * v, o)
                }
                e.__bufferData = o
            }
            null == e.__buffer && (e.__buffer = l.createBuffer()), l.bindBuffer(l.ARRAY_BUFFER, e.__buffer);
            for (var k = 0, M = 0; M < r;) {
                var y = M++;
                _ = 30 * y, p = (h = a[y]).alpha, !h.visible || p <= 0 ? openfl__$internal_renderer_opengl_GLTilemap.__skipTile(h, y, _, o) : null != (c = null != h.tileset ? h.tileset : D) && null != (Q = c.__data[h.id]) ? (R = Q.width, T = Q.height, (f || h.__alphaDirty) && openfl__$internal_renderer_opengl_GLTilemap.__updateTileAlpha(h, V, _, o), h.__sourceDirty && openfl__$internal_renderer_opengl_GLTilemap.__updateTileUV(h, c, _, o), h.__transformDirty ? ((U = openfl_geom_Matrix.__temp).setTo(1, 0, 0, 1, -h.originX, -h.originY), U.concat(h.matrix), m = h.__transform[0] = 0 * U.a + 0 * U.c + U.tx, u = h.__transform[1] = 0 * U.b + 0 * U.d + U.ty, F = h.__transform[2] = R * U.a + 0 * U.c + U.tx, N = h.__transform[3] = R * U.b + 0 * U.d + U.ty, S = h.__transform[4] = 0 * U.a + T * U.c + U.tx, W = h.__transform[5] = 0 * U.b + T * U.d + U.ty, B = h.__transform[6] = R * U.a + T * U.c + U.tx, Z = h.__transform[7] = R * U.b + T * U.d + U.ty, h.__transformDirty = !1) : (m = h.__transform[0], u = h.__transform[1], F = h.__transform[2], N = h.__transform[3], S = h.__transform[4], W = h.__transform[5], B = h.__transform[6], Z = h.__transform[7]), o[_] = m, o[_ + 1] = u, o[_ + 5] = F, o[_ + 6] = N, o[_ + 10] = S, o[_ + 11] = W, o[_ + 15] = S, o[_ + 16] = W, o[_ + 20] = F, o[_ + 21] = N, o[_ + 25] = B, o[_ + 26] = Z, k = y, openfl__$internal_renderer_opengl_GLTilemap.__skippedTiles.h[y] = !1) : openfl__$internal_renderer_opengl_GLTilemap.__skipTile(h, y, _, o)
            }
            l.bufferData(l.ARRAY_BUFFER, o, l.DYNAMIC_DRAW), l.vertexAttribPointer(i.get_data().aPosition.index, 2, l.FLOAT, !1, 20, 0), l.vertexAttribPointer(i.get_data().aTexCoord.index, 2, l.FLOAT, !1, 20, 8), l.vertexAttribPointer(i.get_data().aAlpha.index, 1, l.FLOAT, !1, 20, 16);
            for (var x = null, w = 0, G = 0, H = k + 1; G < H;) {
                var C = G++;
                openfl__$internal_renderer_opengl_GLTilemap.__skippedTiles.h[C] || ((c = null != (h = a[C]).tileset ? h.tileset : D).bitmapData != x && (null != x && (i.get_data().uImage0.input = x, t.shaderManager.setShader(i), l.drawArrays(l.TRIANGLES, 6 * w, 6 * (C - w))), x = c.bitmapData, w = C), C == k && null != c.bitmapData && (i.get_data().uImage0.input = c.bitmapData, t.shaderManager.setShader(i), l.drawArrays(l.TRIANGLES, 6 * w, 6 * (C + 1 - w))))
            }
            l.disableVertexAttribArray(i.get_data().aAlpha.index), e.__dirty = !1, e.__cacheAlpha = V, t.filterManager.popObject(e), t.maskManager.popRect(), t.maskManager.popObject(e)
        }
    }, openfl__$internal_renderer_opengl_GLTilemap.__skipTile = function(e, t, n, l) {
        var i = 30 * t;
        l[i + 4] = 0, l[i + 9] = 0, l[i + 14] = 0, l[i + 19] = 0, l[i + 24] = 0, l[i + 29] = 0, openfl__$internal_renderer_opengl_GLTilemap.__skippedTiles.h[t] = !0, e.__alphaDirty = !0
    }, openfl__$internal_renderer_opengl_GLTilemap.__updateTileAlpha = function(e, t, n, l) {
        var i = t * e.alpha;
        l[n + 4] = i, l[n + 9] = i, l[n + 14] = i, l[n + 19] = i, l[n + 24] = i, l[n + 29] = i, e.__alphaDirty = !1
    }, openfl__$internal_renderer_opengl_GLTilemap.__updateTileUV = function(e, t, n, l) {
        var i = t.__data[e.id];
        if (null != i) {
            var s = i.__uvX,
                a = i.__uvY,
                r = i.__uvWidth,
                o = i.__uvHeight;
            l[n + 2] = s, l[n + 3] = a, l[n + 7] = r, l[n + 8] = a, l[n + 12] = s, l[n + 13] = o, l[n + 17] = s, l[n + 18] = o, l[n + 22] = r, l[n + 23] = a, l[n + 27] = r, l[n + 28] = o, e.__sourceDirty = !1
        }
    };
    var openfl__$internal_stage3D_Context3DStateCache = function() {
        this._registers = openfl__$Vector_Vector_$Impl_$.toFloatVector(null, 4096), this.clearSettings()
    };
    $hxClasses["openfl._internal.stage3D.Context3DStateCache"] = openfl__$internal_stage3D_Context3DStateCache, openfl__$internal_stage3D_Context3DStateCache.__name__ = ["openfl", "_internal", "stage3D", "Context3DStateCache"], openfl__$internal_stage3D_Context3DStateCache.prototype = {
        _activeTexture: null,
        _activeVertexArray: null,
        _cullingMode: null,
        _depthTestCompareMode: null,
        _depthTestEnabled: null,
        _depthTestMask: null,
        _destBlendFactor: null,
        _program: null,
        _registers: null,
        _srcBlendFactor: null,
        _viewportHeight: null,
        _viewportOriginX: null,
        _viewportOriginY: null,
        _viewportWidth: null,
        clearRegisters: function() {
            for (var e = 0; e < 4096;) {
                var t = e++;
                this._registers.set(t, -999999999)
            }
        },
        clearSettings: function() {
            this._srcBlendFactor = null, this._destBlendFactor = null, this._depthTestEnabled = !1, this._depthTestMask = !1, this._depthTestCompareMode = null, this._program = null, this._cullingMode = null, this._activeTexture = -1, this._activeVertexArray = -1, this._viewportOriginX = -1, this._viewportOriginY = -1, this._viewportWidth = -1, this._viewportHeight = -1, this.clearRegisters()
        },
        updateViewport: function(e, t, n, l) {
            return this._viewportOriginX = e, this._viewportOriginY = t, this._viewportWidth = n, this._viewportHeight = l, !0
        },
        __class__: openfl__$internal_stage3D_Context3DStateCache
    };
    var openfl__$internal_stage3D_GLUtils = function() {};
    $hxClasses["openfl._internal.stage3D.GLUtils"] = openfl__$internal_stage3D_GLUtils, openfl__$internal_stage3D_GLUtils.__name__ = ["openfl", "_internal", "stage3D", "GLUtils"], openfl__$internal_stage3D_GLUtils.CheckGLError = function() {
        if (openfl__$internal_stage3D_GLUtils.debug) {
            var e = lime_graphics_opengl_GL.context.getError();
            if (0 != e) throw new js__$Boot_HaxeError(new openfl_errors_IllegalOperationError("Error calling openGL api. Error: " + e + "\n"))
        }
    };
    var openfl__$internal_stage3D_SamplerState = function(e, t, n, l, i, s, a, r, o) {
        null == o && (o = !1), null == r && (r = !1), null == a && (a = !1), null == s && (s = 0), null == i && (i = 0), this.set_minFilter(e), this.set_magFilter(t), this.set_wrapModeS(n), this.set_wrapModeT(l), this.set_lodBias(i), this.set_maxAniso(s), this.ignoreSampler = a, this.centroid = r, this.mipmapGenerated = o, this.__samplerDirty = !0
    };
    $hxClasses["openfl._internal.stage3D.SamplerState"] = openfl__$internal_stage3D_SamplerState, openfl__$internal_stage3D_SamplerState.__name__ = ["openfl", "_internal", "stage3D", "SamplerState"], openfl__$internal_stage3D_SamplerState.prototype = {
        lodBias: null,
        magFilter: null,
        maxAniso: null,
        minFilter: null,
        wrapModeS: null,
        wrapModeT: null,
        centroid: null,
        ignoreSampler: null,
        mipmapGenerated: null,
        __samplerDirty: null,
        set_lodBias: function(e) {
            return this.lodBias != e && (this.__samplerDirty = !0), this.lodBias = e
        },
        set_magFilter: function(e) {
            return this.magFilter != e && (this.__samplerDirty = !0), this.magFilter = e
        },
        set_maxAniso: function(e) {
            return this.maxAniso != e && (this.__samplerDirty = !0), this.maxAniso = e
        },
        set_minFilter: function(e) {
            return this.minFilter != e && (this.__samplerDirty = !0), this.minFilter = e
        },
        set_wrapModeS: function(e) {
            return this.wrapModeS != e && (this.__samplerDirty = !0), this.wrapModeS = e
        },
        set_wrapModeT: function(e) {
            return this.wrapModeT != e && (this.__samplerDirty = !0), this.wrapModeT = e
        },
        __class__: openfl__$internal_stage3D_SamplerState,
        __properties__: {
            set_wrapModeT: "set_wrapModeT",
            set_wrapModeS: "set_wrapModeS",
            set_minFilter: "set_minFilter",
            set_maxAniso: "set_maxAniso",
            set_magFilter: "set_magFilter",
            set_lodBias: "set_lodBias"
        }
    };
    var openfl__$internal_swf_FilterType = $hxClasses["openfl._internal.swf.FilterType"] = {
        __ename__: ["openfl", "_internal", "swf", "FilterType"],
        __constructs__: ["BlurFilter", "ColorMatrixFilter", "DropShadowFilter", "GlowFilter"]
    };
    openfl__$internal_swf_FilterType.BlurFilter = function(e, t, n) {
        var l = ["BlurFilter", 0, e, t, n];
        return l.__enum__ = openfl__$internal_swf_FilterType, l.toString = $estr, l
    }, openfl__$internal_swf_FilterType.ColorMatrixFilter = function(e) {
        var t = ["ColorMatrixFilter", 1, e];
        return t.__enum__ = openfl__$internal_swf_FilterType, t.toString = $estr, t
    }, openfl__$internal_swf_FilterType.DropShadowFilter = function(e, t, n, l, i, s, a, r, o, d, _) {
        var h = ["DropShadowFilter", 2, e, t, n, l, i, s, a, r, o, d, _];
        return h.__enum__ = openfl__$internal_swf_FilterType, h.toString = $estr, h
    }, openfl__$internal_swf_FilterType.GlowFilter = function(e, t, n, l, i, s, a, r) {
        var o = ["GlowFilter", 3, e, t, n, l, i, s, a, r];
        return o.__enum__ = openfl__$internal_swf_FilterType, o.toString = $estr, o
    };
    var openfl__$internal_swf_SWFLite = function() {
        this.symbols = new haxe_ds_IntMap
    };
    $hxClasses["openfl._internal.swf.SWFLite"] = openfl__$internal_swf_SWFLite, openfl__$internal_swf_SWFLite.__name__ = ["openfl", "_internal", "swf", "SWFLite"], openfl__$internal_swf_SWFLite.resolveClass = function(e) {
        var t = Type.resolveClass(e);
        return null == t && (t = Type.resolveClass(StringTools.replace(e, "openfl._legacy", "openfl"))), null == t && (t = Type.resolveClass(StringTools.replace(e, "openfl._v2", "openfl"))), t
    }, openfl__$internal_swf_SWFLite.resolveEnum = function(e) {
        var t = Type.resolveEnum(e);
        return null == t && (t = Type.resolveEnum(StringTools.replace(e, "openfl._legacy", "openfl"))), null == t && (t = Type.resolveEnum(StringTools.replace(e, "openfl._v2", "openfl"))), t
    }, openfl__$internal_swf_SWFLite.unserialize = function(e) {
        if (null == e) return null;
        var t = new haxe_Unserializer(e);
        return t.setResolver({
            resolveClass: openfl__$internal_swf_SWFLite.resolveClass,
            resolveEnum: openfl__$internal_swf_SWFLite.resolveEnum
        }), t.unserialize()
    }, openfl__$internal_swf_SWFLite.prototype = {
        frameRate: null,
        library: null,
        root: null,
        symbols: null,
        createButton: function(e) {
            return null
        },
        createMovieClip: function(e) {
            if (null == e && (e = ""), "" == e) return this.root.__createObject(this);
            for (var t = this.symbols.iterator(); t.hasNext();) {
                var n = t.next();
                if (n.className == e && js_Boot.__instanceof(n, openfl__$internal_symbols_SpriteSymbol)) return js_Boot.__cast(n, openfl__$internal_symbols_SpriteSymbol).__createObject(this)
            }
            return null
        },
        getBitmapData: function(e) {
            for (var t = this.symbols.iterator(); t.hasNext();) {
                var n = t.next();
                if (n.className == e && js_Boot.__instanceof(n, openfl__$internal_symbols_BitmapSymbol)) {
                    var l = n;
                    return openfl_Assets.getBitmapData(l.path)
                }
            }
            return null
        },
        hasSymbol: function(e) {
            for (var t = this.symbols.iterator(); t.hasNext();) {
                if (t.next().className == e) return !0
            }
            return !1
        },
        serialize: function() {
            var e = new haxe_Serializer;
            return e.serialize(this), e.toString()
        },
        __class__: openfl__$internal_swf_SWFLite
    };
    var openfl__$internal_swf_SWFLiteLibrary = function(e) {
        openfl_AssetLibrary.call(this), this.id = e, this.alphaCheck = new haxe_ds_StringMap, this.rootPath = ""
    };
    $hxClasses["openfl._internal.swf.SWFLiteLibrary"] = openfl__$internal_swf_SWFLiteLibrary, openfl__$internal_swf_SWFLiteLibrary.__name__ = ["openfl", "_internal", "swf", "SWFLiteLibrary"], openfl__$internal_swf_SWFLiteLibrary.__super__ = openfl_AssetLibrary, openfl__$internal_swf_SWFLiteLibrary.prototype = $extend(openfl_AssetLibrary.prototype, {
        alphaCheck: null,
        id: null,
        preloading: null,
        rootPath: null,
        swf: null,
        exists: function(e, t) {
            return null != this.swf && ("" == e && "MOVIE_CLIP" == t || ("IMAGE" == t || "MOVIE_CLIP" == t) && (null != this.swf && this.swf.hasSymbol(e)))
        },
        getImage: function(e) {
            if (!this.alphaCheck.exists(e))
                for (var t = this.swf.symbols.iterator(); t.hasNext();) {
                    var n = t.next();
                    if (js_Boot.__instanceof(n, openfl__$internal_symbols_BitmapSymbol) && js_Boot.__cast(n, openfl__$internal_symbols_BitmapSymbol).path == e) {
                        var l = n;
                        if (null != l.alpha) {
                            var i = openfl_AssetLibrary.prototype.getImage.call(this, e),
                                s = openfl_AssetLibrary.prototype.getImage.call(this, l.alpha);
                            return this.__copyChannel(i, s), this.cachedImages.set(e, i), this.alphaCheck.set(e, !0), i
                        }
                    }
                }
            return openfl_AssetLibrary.prototype.getImage.call(this, e)
        },
        getMovieClip: function(e) {
            return null != this.swf ? this.swf.createMovieClip(e) : null
        },
        isLocal: function(e, t) {
            return !0
        },
        load: function() {
            var e = this;
            null != this.id && this.preload.set(this.id, !0);
            for (var t = this.paths.keys(); t.hasNext();) {
                var n = t.next();
                this.preload.set(n, !0)
            }
            var l = new lime_app_Promise;
            return this.preloading = !0, this.loadText(this.id).onError($bind(l, l.error)).onComplete(function(t) {
                e.swf = openfl__$internal_swf_SWFLite.unserialize(t), e.swf.library = e, openfl__$internal_swf_SWFLite.instances.set(e.id, e.swf), e.__load().onProgress($bind(l, l.progress)).onError($bind(l, l.error)).onComplete(function(t) {
                    e.preloading = !1, l.complete(e)
                })
            }), l.future
        },
        loadImage: function(e) {
            var t = this;
            if (!this.preloading && !this.alphaCheck.exists(e))
                for (var n = this.swf.symbols.iterator(); n.hasNext();) {
                    var l = n.next();
                    if (js_Boot.__instanceof(l, openfl__$internal_symbols_BitmapSymbol) && js_Boot.__cast(l, openfl__$internal_symbols_BitmapSymbol).path == e) {
                        var i = [l];
                        if (null != i[0].alpha) {
                            var s = [new lime_app_Promise];
                            return this.__loadImage(e).onError(($_ = s[0], $bind($_, $_.error))).onComplete(function(n, l) {
                                return function(i) {
                                    t.__loadImage(l[0].alpha).onError(($_ = n[0], $bind($_, $_.error))).onComplete(function(n) {
                                        return function(l) {
                                            t.__copyChannel(i, l), t.cachedImages.set(e, i), t.alphaCheck.set(e, !0), n[0].complete(i)
                                        }
                                    }(n))
                                }
                            }(s, i)), s[0].future
                        }
                    }
                }
            return openfl_AssetLibrary.prototype.loadImage.call(this, e)
        },
        unload: function() {
            for (var e, t = this.swf.symbols.iterator(); t.hasNext();) {
                var n = t.next();
                js_Boot.__instanceof(n, openfl__$internal_symbols_BitmapSymbol) && (e = n, openfl_Assets.cache.removeBitmapData(e.path))
            }
        },
        __copyChannel: function(e, t) {
            null != t && e.copyChannel(t, t.get_rect(), new lime_math_Vector2, lime_graphics_ImageChannel.RED, lime_graphics_ImageChannel.ALPHA), e.buffer.premultiplied = !0, e.set_premultiplied(!1)
        },
        __load: function() {
            return openfl_AssetLibrary.prototype.load.call(this)
        },
        __loadImage: function(e) {
            return openfl_AssetLibrary.prototype.loadImage.call(this, e)
        },
        __class__: openfl__$internal_swf_SWFLiteLibrary
    });
    var openfl__$internal_swf_ShapeCommand = $hxClasses["openfl._internal.swf.ShapeCommand"] = {
        __ename__: ["openfl", "_internal", "swf", "ShapeCommand"],
        __constructs__: ["BeginBitmapFill", "BeginFill", "BeginGradientFill", "CurveTo", "EndFill", "LineStyle", "LineTo", "MoveTo"]
    };
    openfl__$internal_swf_ShapeCommand.BeginBitmapFill = function(e, t, n, l) {
        var i = ["BeginBitmapFill", 0, e, t, n, l];
        return i.__enum__ = openfl__$internal_swf_ShapeCommand, i.toString = $estr, i
    }, openfl__$internal_swf_ShapeCommand.BeginFill = function(e, t) {
        var n = ["BeginFill", 1, e, t];
        return n.__enum__ = openfl__$internal_swf_ShapeCommand, n.toString = $estr, n
    }, openfl__$internal_swf_ShapeCommand.BeginGradientFill = function(e, t, n, l, i, s, a, r) {
        var o = ["BeginGradientFill", 2, e, t, n, l, i, s, a, r];
        return o.__enum__ = openfl__$internal_swf_ShapeCommand, o.toString = $estr, o
    }, openfl__$internal_swf_ShapeCommand.CurveTo = function(e, t, n, l) {
        var i = ["CurveTo", 3, e, t, n, l];
        return i.__enum__ = openfl__$internal_swf_ShapeCommand, i.toString = $estr, i
    }, openfl__$internal_swf_ShapeCommand.EndFill = ["EndFill", 4], openfl__$internal_swf_ShapeCommand.EndFill.toString = $estr, openfl__$internal_swf_ShapeCommand.EndFill.__enum__ = openfl__$internal_swf_ShapeCommand, openfl__$internal_swf_ShapeCommand.LineStyle = function(e, t, n, l, i, s, a, r) {
        var o = ["LineStyle", 5, e, t, n, l, i, s, a, r];
        return o.__enum__ = openfl__$internal_swf_ShapeCommand, o.toString = $estr, o
    }, openfl__$internal_swf_ShapeCommand.LineTo = function(e, t) {
        var n = ["LineTo", 6, e, t];
        return n.__enum__ = openfl__$internal_swf_ShapeCommand, n.toString = $estr, n
    }, openfl__$internal_swf_ShapeCommand.MoveTo = function(e, t) {
        var n = ["MoveTo", 7, e, t];
        return n.__enum__ = openfl__$internal_swf_ShapeCommand, n.toString = $estr, n
    };
    var openfl__$internal_symbols_SWFSymbol = function() {};
    $hxClasses["openfl._internal.symbols.SWFSymbol"] = openfl__$internal_symbols_SWFSymbol, openfl__$internal_symbols_SWFSymbol.__name__ = ["openfl", "_internal", "symbols", "SWFSymbol"], openfl__$internal_symbols_SWFSymbol.prototype = {
        className: null,
        id: null,
        __createObject: function(e) {
            return null
        },
        __class__: openfl__$internal_symbols_SWFSymbol
    };
    var openfl__$internal_symbols_BitmapSymbol = function() {
        openfl__$internal_symbols_SWFSymbol.call(this)
    };
    $hxClasses["openfl._internal.symbols.BitmapSymbol"] = openfl__$internal_symbols_BitmapSymbol, openfl__$internal_symbols_BitmapSymbol.__name__ = ["openfl", "_internal", "symbols", "BitmapSymbol"], openfl__$internal_symbols_BitmapSymbol.__super__ = openfl__$internal_symbols_SWFSymbol, openfl__$internal_symbols_BitmapSymbol.prototype = $extend(openfl__$internal_symbols_SWFSymbol.prototype, {
        alpha: null,
        path: null,
        __createObject: function(e) {
            return new openfl_display_Bitmap(openfl_display_BitmapData.fromImage(e.library.getImage(this.path)), 1, !0)
        },
        __class__: openfl__$internal_symbols_BitmapSymbol
    });
    var openfl__$internal_symbols_ButtonSymbol = function() {
        openfl__$internal_symbols_SWFSymbol.call(this)
    };
    $hxClasses["openfl._internal.symbols.ButtonSymbol"] = openfl__$internal_symbols_ButtonSymbol, openfl__$internal_symbols_ButtonSymbol.__name__ = ["openfl", "_internal", "symbols", "ButtonSymbol"], openfl__$internal_symbols_ButtonSymbol.__super__ = openfl__$internal_symbols_SWFSymbol, openfl__$internal_symbols_ButtonSymbol.prototype = $extend(openfl__$internal_symbols_SWFSymbol.prototype, {
        downState: null,
        hitState: null,
        overState: null,
        upState: null,
        __createObject: function(e) {
            var t = null;
            if (openfl_display_SimpleButton.__initSWF = e, openfl_display_SimpleButton.__initSymbol = this, null != this.className) {
                var n = Type.resolveClass(this.className);
                null != n && (t = Type.createInstance(n, []))
            }
            return null == t && (t = new openfl_display_SimpleButton), t
        },
        __class__: openfl__$internal_symbols_ButtonSymbol
    });
    var openfl__$internal_symbols_DynamicTextSymbol = function() {
        openfl__$internal_symbols_SWFSymbol.call(this)
    };
    $hxClasses["openfl._internal.symbols.DynamicTextSymbol"] = openfl__$internal_symbols_DynamicTextSymbol, openfl__$internal_symbols_DynamicTextSymbol.__name__ = ["openfl", "_internal", "symbols", "DynamicTextSymbol"], openfl__$internal_symbols_DynamicTextSymbol.__super__ = openfl__$internal_symbols_SWFSymbol, openfl__$internal_symbols_DynamicTextSymbol.prototype = $extend(openfl__$internal_symbols_SWFSymbol.prototype, {
        align: null,
        border: null,
        color: null,
        fontHeight: null,
        fontID: null,
        fontName: null,
        height: null,
        html: null,
        indent: null,
        input: null,
        leading: null,
        leftMargin: null,
        multiline: null,
        password: null,
        rightMargin: null,
        selectable: null,
        text: null,
        width: null,
        wordWrap: null,
        x: null,
        y: null,
        __createObject: function(e) {
            var t = new openfl_text_TextField;
            return t.__fromSymbol(e, this), t
        },
        __class__: openfl__$internal_symbols_DynamicTextSymbol
    });
    var openfl__$internal_symbols_FontSymbol = function() {
        openfl__$internal_symbols_SWFSymbol.call(this)
    };
    $hxClasses["openfl._internal.symbols.FontSymbol"] = openfl__$internal_symbols_FontSymbol, openfl__$internal_symbols_FontSymbol.__name__ = ["openfl", "_internal", "symbols", "FontSymbol"], openfl__$internal_symbols_FontSymbol.__super__ = openfl__$internal_symbols_SWFSymbol, openfl__$internal_symbols_FontSymbol.prototype = $extend(openfl__$internal_symbols_SWFSymbol.prototype, {
        advances: null,
        bold: null,
        codes: null,
        glyphs: null,
        italic: null,
        leading: null,
        name: null,
        __class__: openfl__$internal_symbols_FontSymbol
    });
    var openfl__$internal_symbols_ShapeSymbol = function() {
        openfl__$internal_symbols_SWFSymbol.call(this)
    };
    $hxClasses["openfl._internal.symbols.ShapeSymbol"] = openfl__$internal_symbols_ShapeSymbol, openfl__$internal_symbols_ShapeSymbol.__name__ = ["openfl", "_internal", "symbols", "ShapeSymbol"], openfl__$internal_symbols_ShapeSymbol.__super__ = openfl__$internal_symbols_SWFSymbol, openfl__$internal_symbols_ShapeSymbol.prototype = $extend(openfl__$internal_symbols_SWFSymbol.prototype, {
        commands: null,
        rendered: null,
        __createObject: function(e) {
            var t = new openfl_display_Shape,
                n = t.get_graphics();
            if (null != this.rendered) return n.copyFrom(this.rendered.get_graphics()), t;
            for (var l = 0, i = this.commands; l < i.length;) {
                var s = i[l];
                switch (++l, s[1]) {
                    case 1:
                        var a = s[3],
                            r = s[2];
                        n.beginFill(r, a);
                        break;
                    case 0:
                        var o = s[5],
                            d = s[4],
                            _ = s[3],
                            h = s[2],
                            p = e.symbols.h[h],
                            c = e.library.getImage(p.path);
                        null != c && n.beginBitmapFill(openfl_display_BitmapData.fromImage(c), _, d, o);
                        break;
                    case 2:
                        var Q = s[9],
                            U = s[8],
                            m = s[7],
                            u = s[6],
                            F = s[5],
                            N = s[4],
                            S = s[3],
                            W = s[2];
                        n.beginGradientFill(W, S, N, F, u, m, U, Q);
                        break;
                    case 3:
                        var B = s[5],
                            Z = s[4],
                            D = s[3],
                            V = s[2];
                        n.curveTo(V, D, Z, B);
                        break;
                    case 4:
                        n.endFill();
                        break;
                    case 5:
                        var f = s[9],
                            R = s[8],
                            T = s[7],
                            J = s[6],
                            g = s[5],
                            b = s[4],
                            E = s[3],
                            v = s[2];
                        null != v ? n.lineStyle(v, E, b, g, J, T, R, f) : n.lineStyle();
                        break;
                    case 6:
                        var k = s[3],
                            M = s[2];
                        n.lineTo(M, k);
                        break;
                    case 7:
                        var y = s[3],
                            x = s[2];
                        n.moveTo(x, y)
                }
            }
            return this.commands = null, this.rendered = new openfl_display_Shape, this.rendered.get_graphics().copyFrom(t.get_graphics()), t
        },
        __class__: openfl__$internal_symbols_ShapeSymbol
    });
    var openfl__$internal_symbols_SpriteSymbol = function() {
        openfl__$internal_symbols_SWFSymbol.call(this), this.frames = []
    };
    $hxClasses["openfl._internal.symbols.SpriteSymbol"] = openfl__$internal_symbols_SpriteSymbol, openfl__$internal_symbols_SpriteSymbol.__name__ = ["openfl", "_internal", "symbols", "SpriteSymbol"], openfl__$internal_symbols_SpriteSymbol.__super__ = openfl__$internal_symbols_SWFSymbol, openfl__$internal_symbols_SpriteSymbol.prototype = $extend(openfl__$internal_symbols_SWFSymbol.prototype, {
        frames: null,
        __createObject: function(e) {
            var t = null;
            if (openfl_display_MovieClip.__initSWF = e, openfl_display_MovieClip.__initSymbol = this, null != this.className) {
                var n = Type.resolveClass(this.className);
                null != n && (t = Type.createInstance(n, []))
            }
            return null == t && (t = new openfl_display_MovieClip), t
        },
        __class__: openfl__$internal_symbols_SpriteSymbol
    });
    var openfl__$internal_symbols_StaticTextSymbol = function() {
        openfl__$internal_symbols_SWFSymbol.call(this)
    };
    $hxClasses["openfl._internal.symbols.StaticTextSymbol"] = openfl__$internal_symbols_StaticTextSymbol, openfl__$internal_symbols_StaticTextSymbol.__name__ = ["openfl", "_internal", "symbols", "StaticTextSymbol"], openfl__$internal_symbols_StaticTextSymbol.__super__ = openfl__$internal_symbols_SWFSymbol, openfl__$internal_symbols_StaticTextSymbol.prototype = $extend(openfl__$internal_symbols_SWFSymbol.prototype, {
        matrix: null,
        records: null,
        rendered: null,
        __createObject: function(e) {
            var t = new openfl_display_Shape,
                n = t.get_graphics();
            if (null != this.rendered) return n.copyFrom(this.rendered.get_graphics()), t;
            if (null != this.records)
                for (var l = null, i = 16777215, s = this.matrix.tx, a = this.matrix.ty, r = 0, o = this.records; r < o.length;) {
                    var d = o[r];
                    if (++r, null != d.fontID && (l = e.symbols.h[d.fontID]), null != d.offsetX && (s = this.matrix.tx + .05 * d.offsetX), null != d.offsetY && (a = this.matrix.ty + .05 * d.offsetY), null != d.color && (i = d.color), null != l)
                        for (var _, h = d.fontHeight / 1024 * .05, p = 0, c = d.glyphs.length; p < c;) {
                            var Q = p++;
                            _ = d.glyphs[Q];
                            for (var U = 0, m = l.glyphs[_]; U < m.length;) {
                                var u = m[U];
                                switch (++U, u[1]) {
                                    case 1:
                                        u[3];
                                        n.beginFill(16777215 & i, (i >> 24 & 255) / 255);
                                        break;
                                    case 3:
                                        var F = u[5],
                                            N = u[4],
                                            S = u[3],
                                            W = u[2];
                                        n.curveTo(W * h + s, S * h + a, N * h + s, F * h + a);
                                        break;
                                    case 4:
                                        n.endFill();
                                        break;
                                    case 5:
                                        var B = u[9],
                                            Z = u[8],
                                            D = u[7],
                                            V = u[6],
                                            f = u[5],
                                            R = u[4],
                                            T = u[3],
                                            J = u[2];
                                        null != J ? n.lineStyle(J, T, R, f, V, D, Z, B) : n.lineStyle();
                                        break;
                                    case 6:
                                        var g = u[3],
                                            b = u[2];
                                        n.lineTo(b * h + s, g * h + a);
                                        break;
                                    case 7:
                                        var E = u[3],
                                            v = u[2];
                                        n.moveTo(v * h + s, E * h + a)
                                }
                            }
                            s += .05 * d.advances[Q]
                        }
                }
            return this.records = null, this.rendered = new openfl_display_Shape, this.rendered.get_graphics().copyFrom(t.get_graphics()), t
        },
        __class__: openfl__$internal_symbols_StaticTextSymbol
    });
    var openfl__$internal_symbols_StaticTextRecord = function() {};
    $hxClasses["openfl._internal.symbols.StaticTextRecord"] = openfl__$internal_symbols_StaticTextRecord, openfl__$internal_symbols_StaticTextRecord.__name__ = ["openfl", "_internal", "symbols", "StaticTextRecord"], openfl__$internal_symbols_StaticTextRecord.prototype = {
        advances: null,
        color: null,
        fontHeight: null,
        fontID: null,
        glyphs: null,
        offsetX: null,
        offsetY: null,
        __class__: openfl__$internal_symbols_StaticTextRecord
    };
    var openfl__$internal_text_TextEngine = function(e) {
        this.textField = e, this.width = 100, this.height = 100, this.text = "", this.bounds = new openfl_geom_Rectangle(0, 0, 0, 0), this.type = 0, this.autoSize = 2, this.embedFonts = !1, this.selectable = !0, this.borderColor = 0, this.border = !1, this.backgroundColor = 16777215, this.background = !1, this.gridFitType = 1, this.maxChars = 0, this.multiline = !1, this.sharpness = 0, this.scrollH = 0, this.scrollV = 1, this.wordWrap = !1, this.lineAscents = openfl__$Vector_Vector_$Impl_$.toFloatVector(null), this.lineBreaks = openfl__$Vector_Vector_$Impl_$.toIntVector(null), this.lineDescents = openfl__$Vector_Vector_$Impl_$.toFloatVector(null), this.lineLeadings = openfl__$Vector_Vector_$Impl_$.toFloatVector(null), this.lineHeights = openfl__$Vector_Vector_$Impl_$.toFloatVector(null), this.lineWidths = openfl__$Vector_Vector_$Impl_$.toFloatVector(null), this.layoutGroups = openfl__$Vector_Vector_$Impl_$.toObjectVector(null), this.textFormatRanges = openfl__$Vector_Vector_$Impl_$.toObjectVector(null), openfl__$internal_text_TextEngine.__canvas = window.document.createElement("canvas"), openfl__$internal_text_TextEngine.__context = openfl__$internal_text_TextEngine.__canvas.getContext("2d")
    };
    $hxClasses["openfl._internal.text.TextEngine"] = openfl__$internal_text_TextEngine, openfl__$internal_text_TextEngine.__name__ = ["openfl", "_internal", "text", "TextEngine"], openfl__$internal_text_TextEngine.getFormatHeight = function(e) {
        return openfl__$internal_text_TextEngine.__context.font = openfl__$internal_text_TextEngine.getFont(e), e.size + .185 * e.size + e.leading
    }, openfl__$internal_text_TextEngine.getFont = function(e) {
        var t, n;
        return t = e.italic ? "italic " : "normal ", t += "normal ", e.bold ? t += "bold " : t += "normal ", t += e.size + "px", t += "/" + (e.leading + e.size + 3) + "px ", t += "" + (n = e.font, function(t) {
            var l;
            switch (n) {
                case "_sans":
                    l = "sans-serif";
                    break;
                case "_serif":
                    l = "serif";
                    break;
                case "_typewriter":
                    l = "monospace";
                    break;
                default:
                    l = "'" + new EReg("^[\\s'\"]+(.*)[\\s'\"]+$", "").replace(e.font, "$1") + "'"
            }
            return l
        }())
    }, openfl__$internal_text_TextEngine.prototype = {
        antiAliasType: null,
        autoSize: null,
        background: null,
        backgroundColor: null,
        border: null,
        borderColor: null,
        bottomScrollV: null,
        bounds: null,
        embedFonts: null,
        gridFitType: null,
        height: null,
        layoutGroups: null,
        lineAscents: null,
        lineBreaks: null,
        lineDescents: null,
        lineLeadings: null,
        lineHeights: null,
        lineWidths: null,
        maxChars: null,
        maxScrollH: null,
        maxScrollV: null,
        multiline: null,
        numLines: null,
        scrollH: null,
        scrollV: null,
        selectable: null,
        sharpness: null,
        text: null,
        textHeight: null,
        textFormatRanges: null,
        textWidth: null,
        type: null,
        width: null,
        wordWrap: null,
        textField: null,
        __hasFocus: null,
        __useIntAdvances: null,
        getBounds: function() {
            var e;
            e = this.border ? 1 : 0, this.bounds.width = this.width + e, this.bounds.height = this.height + e
        },
        getLineBreakIndex: function(e) {
            null == e && (e = 0);
            var t = this.text.indexOf("\n", e),
                n = this.text.indexOf("\r", e);
            return -1 == t ? n : -1 == n ? t : t < n ? t : n
        },
        getLineMeasurements: function() {
            this.lineAscents.set_length(0), this.lineDescents.set_length(0), this.lineLeadings.set_length(0), this.lineHeights.set_length(0), this.lineWidths.set_length(0);
            var e = 0,
                t = 0,
                n = null,
                l = 0,
                i = 0;
            this.textWidth = 0, this.textHeight = 0, this.numLines = 1, this.bottomScrollV = 0, this.maxScrollH = 0;
            for (var s = 0, a = this.layoutGroups; s < a.get_length();) {
                var r = a.get(s);
                for (++s; r.lineIndex > this.numLines - 1;) this.lineAscents.push(e), this.lineDescents.push(t), this.lineLeadings.push(null != n ? n : 0), this.lineHeights.push(l), this.lineWidths.push(i), e = 0, t = 0, n = null, l = 0, i = 0, this.numLines++, this.textHeight <= this.height - 2 && this.bottomScrollV++;
                e = Math.max(e, r.ascent), t = Math.max(t, r.descent), n = null == n ? r.leading : Std.int(Math.max(n, r.leading)), l = Math.max(l, r.height), (i = r.offsetX - 2 + r.width) > this.textWidth && (this.textWidth = i), this.textHeight = r.offsetY - 2 + r.ascent + r.descent
            }
            if (this.lineAscents.push(e), this.lineDescents.push(t), this.lineLeadings.push(null != n ? n : 0), this.lineHeights.push(l), this.lineWidths.push(i), 1 == this.numLines ? (this.bottomScrollV = 1, n > 0 && (this.textHeight += n)) : this.textHeight <= this.height - 2 && this.bottomScrollV++, 2 != this.autoSize) switch (this.autoSize) {
                case 1:
                case 3:
                case 0:
                    this.wordWrap || (this.width = this.textWidth + 4), this.height = this.textHeight + 4, this.bottomScrollV = this.numLines
            }
            this.textWidth > this.width - 4 ? this.maxScrollH = this.textWidth - this.width + 4 | 0 : this.maxScrollH = 0, this.maxScrollV = this.numLines - this.bottomScrollV + 1
        },
        getLayoutGroups: function() {
            var e = this;
            this.layoutGroups.set_length(0);
            var t, n, l = -1,
                i = null,
                s = openfl_text_TextField.__defaultTextFormat.clone(),
                a = 0,
                r = 0,
                o = 0,
                d = null,
                _ = null,
                h = 0,
                p = 0,
                c = 0,
                Q = this.text.indexOf(" "),
                U = this.getLineBreakIndex(),
                m = 0,
                u = 2,
                F = 2,
                N = 0,
                S = 0,
                W = null;
            l < e.textFormatRanges.get_length() - 1 && (l++, i = e.textFormatRanges.get(l), s.__merge(i.format), openfl__$internal_text_TextEngine.__context.font = openfl__$internal_text_TextEngine.getFont(s), h = (r = s.size) + (o = .185 * s.size) + (a = s.leading)), W = i.format;
            var B, Z, D = this.text.length;
            for (this.multiline && D++; N < D;)
                if (U > -1 && (-1 == Q || U < Q) && i.end >= U) {
                    d = new openfl__$internal_text_TextLayoutGroup(i.format, N, U);
                    var V = this.text,
                        f = [];
                    if (null == e.__useIntAdvances && (e.__useIntAdvances = new EReg("Trident/7.0", "").match(window.navigator.userAgent)), e.__useIntAdvances)
                        for (var R, T = 0, J = N; J < U;) {
                            var g = J++;
                            R = openfl__$internal_text_TextEngine.__context.measureText(V.substring(N, g + 1)).width, f.push(R - T), T = R
                        } else
                            for (var b = N; b < U;) {
                                var E = b++;
                                f.push(openfl__$internal_text_TextEngine.__context.measureText(V.charAt(E)).width)
                            }
                    d.advances = f, d.offsetX = u, d.ascent = r, d.descent = o, d.leading = a, d.lineIndex = S, d.offsetY = F;
                    for (var v = d.advances, k = 0, M = 0; M < v.length;) {
                        var y = v[M];
                        ++M, k += y
                    }
                    d.width = k, d.height = h, this.layoutGroups.push(d), F += h, u = 2, i.end == U && (l < e.textFormatRanges.get_length() - 1 && (l++, i = e.textFormatRanges.get(l), s.__merge(i.format), openfl__$internal_text_TextEngine.__context.font = openfl__$internal_text_TextEngine.getFont(s), h = (r = s.size) + (o = .185 * s.size) + (a = s.leading)), W = i.format), N = U + 1, c = U, U = this.getLineBreakIndex(N), S++, d = null
                } else if (i.end >= Q && Q > -1 && N < i.end)
                for (null != d && p != c && p == N - 1 && N == i.start && Q <= i.end && (d.endIndex = N, d.width += d.advances[d.advances.length - 1]), d = null, n = !1; N != i.end;) {
                    -1 == Q && (Q = i.end);
                    var x = this.text,
                        w = Q + 1,
                        G = [];
                    if (null == e.__useIntAdvances && (e.__useIntAdvances = new EReg("Trident/7.0", "").match(window.navigator.userAgent)), e.__useIntAdvances)
                        for (var H, C = 0, Y = N; Y < w;) {
                            var O = Y++;
                            H = openfl__$internal_text_TextEngine.__context.measureText(x.substring(N, O + 1)).width, G.push(H - C), C = H
                        } else
                            for (var X = N; X < w;) {
                                var z = X++;
                                G.push(openfl__$internal_text_TextEngine.__context.measureText(x.charAt(z)).width)
                            }
                    var I = (_ = G)[_.length - 1];
                    if (t = function(e) {
                            for (var t = 0, n = 0; n < _.length;) {
                                var l = _[n];
                                ++n, t += l
                            }
                            return t
                        }() - I, this.wordWrap && u + t > this.width - 2 && (n = !0), n) {
                        F += h;
                        for (var j = this.layoutGroups.get_length() - 1, L = 0; d = this.layoutGroups.get(j), j > 0 && d.startIndex > p;) L++, j--;
                        if (S++, u = 2, L > 0) {
                            var A;
                            A = (B = this, void 0, Z = B.layoutGroups.get_length() - L, B.layoutGroups.get(Z)).offsetX;
                            for (var P = this.layoutGroups.get_length() - L, $ = this.layoutGroups.get_length(); P < $;) {
                                var K = P++;
                                (d = this.layoutGroups.get(K)).offsetX -= A, d.offsetY = F, d.lineIndex = S, u += d.width
                            }
                        }(d = new openfl__$internal_text_TextLayoutGroup(i.format, N, Q)).advances = _, d.offsetX = u, d.ascent = r, d.descent = o, d.leading = a, d.lineIndex = S, d.offsetY = F, d.width = t, d.height = h, this.layoutGroups.push(d), u = t + I, m = I, n = !1
                    } else {
                        if (i.start == p && N - 1 == p && (t += (_ = function(t) {
                                var n = t.text,
                                    l = [];
                                if (null == e.__useIntAdvances && (e.__useIntAdvances = new EReg("Trident/7.0", "").match(window.navigator.userAgent)), e.__useIntAdvances)
                                    for (var i, s = 0, a = p; a < N;) {
                                        var r = a++;
                                        i = openfl__$internal_text_TextEngine.__context.measureText(n.substring(p, r + 1)).width, l.push(i - s), s = i
                                    } else
                                        for (var o = p; o < N;) {
                                            var d = o++;
                                            l.push(openfl__$internal_text_TextEngine.__context.measureText(n.charAt(d)).width)
                                        }
                                return l
                            }(this).concat(_))[0], u -= _[0], N = p), null != d && N == Q) 2 != i.format.align && (d.endIndex = Q), m += I;
                        else if (null == d || 2 == W.align)(d = new openfl__$internal_text_TextLayoutGroup(i.format, N, Q)).advances = _, d.offsetX = u, d.ascent = r, d.descent = o, d.leading = a, d.lineIndex = S, d.offsetY = F, d.width = t, d.height = h, this.layoutGroups.push(d), m = I;
                        else {
                            d.endIndex = Q, d.advances = d.advances.concat(_);
                            for (var q = d.advances, ee = 0, te = 0; te < q.length;) {
                                var ne = q[te];
                                ++te, ee += ne
                            }
                            d.width = ee, m = I
                        }
                        u += t + I
                    }
                    N = Q + 1, p = Q;
                    var le = this.text.indexOf(" ", p + 1);
                    if (p != U && U > -1 && (-1 == le || le > U) ? Q = U : (U == p && (N = U), Q = le), i.end <= p && (d = null, l < e.textFormatRanges.get_length() - 1 && (l++, i = e.textFormatRanges.get(l), s.__merge(i.format), openfl__$internal_text_TextEngine.__context.font = openfl__$internal_text_TextEngine.getFont(s), h = (r = s.size) + (o = .185 * s.size) + (a = s.leading))), Q > U && U > -1 || N > this.text.length || Q > i.end || -1 == Q && U > -1) break
                } else {
                    if (N > i.end) break;
                    if (N < i.end || N == this.text.length) {
                        if (null == d) {
                            d = new openfl__$internal_text_TextLayoutGroup(i.format, N, i.end);
                            var ie = this.text,
                                se = i.end,
                                ae = [];
                            if (null == e.__useIntAdvances && (e.__useIntAdvances = new EReg("Trident/7.0", "").match(window.navigator.userAgent)), e.__useIntAdvances)
                                for (var re, oe = 0, de = N; de < se;) {
                                    var _e = de++;
                                    re = openfl__$internal_text_TextEngine.__context.measureText(ie.substring(N, _e + 1)).width, ae.push(re - oe), oe = re
                                } else
                                    for (var he = N; he < se;) {
                                        var pe = he++;
                                        ae.push(openfl__$internal_text_TextEngine.__context.measureText(ie.charAt(pe)).width)
                                    }
                            d.advances = ae, d.offsetX = u, d.ascent = r, d.descent = o, d.leading = a, d.lineIndex = S, d.offsetY = F;
                            for (var ce = d.advances, Qe = 0, Ue = 0; Ue < ce.length;) {
                                var me = ce[Ue];
                                ++Ue, Qe += me
                            }
                            d.width = Qe, d.height = h, this.layoutGroups.push(d), u += d.width
                        } else if (d.startIndex != d.endIndex) {
                            var ue = this.text,
                                Fe = i.end,
                                Ne = [];
                            if (null == e.__useIntAdvances && (e.__useIntAdvances = new EReg("Trident/7.0", "").match(window.navigator.userAgent)), e.__useIntAdvances)
                                for (var Se, We = 0, Be = N; Be < Fe;) {
                                    var Ze = Be++;
                                    Se = openfl__$internal_text_TextEngine.__context.measureText(ue.substring(N, Ze + 1)).width, Ne.push(Se - We), We = Se
                                } else
                                    for (var De = N; De < Fe;) {
                                        var Ve = De++;
                                        Ne.push(openfl__$internal_text_TextEngine.__context.measureText(ue.charAt(Ve)).width)
                                    }
                            _ = Ne;
                            for (var fe = 0, Re = 0; Re < _.length;) {
                                var Te = _[Re];
                                ++Re, fe += Te
                            }
                            t = fe, d.advances = d.advances.concat(_), d.width += m + t, d.endIndex = i.end, u += t
                        }
                        N = i.end
                    }
                    if (l < e.textFormatRanges.get_length() - 1 && (l++, i = e.textFormatRanges.get(l), s.__merge(i.format), openfl__$internal_text_TextEngine.__context.font = openfl__$internal_text_TextEngine.getFont(s), h = (r = s.size) + (o = .185 * s.size) + (a = s.leading)), N == i.end) {
                        N++;
                        break
                    }
                }
        },
        setTextAlignment: function() {
            for (var e, t, n = -1, l = 0, i = 0, s = this.layoutGroups.get_length(); i < s;) {
                var a = i++;
                if ((e = this.layoutGroups.get(a)).lineIndex != n) switch (n = e.lineIndex, e.format.align) {
                    case 0:
                        l = this.lineWidths.get(n) < this.width - 4 ? Math.round((this.width - 4 - this.lineWidths.get(n)) / 2) : 0;
                        break;
                    case 4:
                        l = this.lineWidths.get(n) < this.width - 4 ? Math.round(this.width - 4 - this.lineWidths.get(n)) : 0;
                        break;
                    case 2:
                        if (this.lineWidths.get(n) < this.width - 4) {
                            t = 1;
                            for (var r = a + 1, o = this.layoutGroups.get_length(); r < o;) {
                                var d = r++;
                                if (this.layoutGroups.get(d).lineIndex != n) break;
                                t++
                            }
                            if (t > 1) {
                                e = this.layoutGroups.get(a + t - 1);
                                var _ = this.text.charAt(e.endIndex);
                                if (e.endIndex < this.text.length && "\n" != _ && "\r" != _) {
                                    l = (this.width - 4 - this.lineWidths.get(n)) / (t - 1);
                                    for (var h = 1; h < t;) {
                                        var p = h++;
                                        this.layoutGroups.get(a + p).offsetX += l * p
                                    }
                                }
                            }
                        }
                        l = 0;
                        break;
                    default:
                        l = 0
                }
                l > 0 && (e.offsetX += l)
            }
        },
        update: function() {
            null == this.text || !this.multiline && "" == StringTools.trim(this.text) || 0 == this.textFormatRanges.get_length() ? (this.lineAscents.set_length(0), this.lineBreaks.set_length(0), this.lineDescents.set_length(0), this.lineLeadings.set_length(0), this.lineHeights.set_length(0), this.lineWidths.set_length(0), this.layoutGroups.set_length(0), this.textWidth = 0, this.textHeight = 0, this.numLines = 1, this.maxScrollH = 0, this.maxScrollV = 1, this.bottomScrollV = 1) : (this.getLayoutGroups(), this.getLineMeasurements(), this.setTextAlignment()), this.getBounds()
        },
        __class__: openfl__$internal_text_TextEngine
    };
    var openfl__$internal_text_TextFormatRange = function(e, t, n) {
        this.format = e, this.start = t, this.end = n
    };
    $hxClasses["openfl._internal.text.TextFormatRange"] = openfl__$internal_text_TextFormatRange, openfl__$internal_text_TextFormatRange.__name__ = ["openfl", "_internal", "text", "TextFormatRange"], openfl__$internal_text_TextFormatRange.prototype = {
        end: null,
        format: null,
        start: null,
        __class__: openfl__$internal_text_TextFormatRange
    };
    var openfl__$internal_text_TextLayoutGroup = function(e, t, n) {
        this.format = e, this.startIndex = t, this.endIndex = n
    };
    $hxClasses["openfl._internal.text.TextLayoutGroup"] = openfl__$internal_text_TextLayoutGroup, openfl__$internal_text_TextLayoutGroup.__name__ = ["openfl", "_internal", "text", "TextLayoutGroup"], openfl__$internal_text_TextLayoutGroup.prototype = {
        advances: null,
        ascent: null,
        descent: null,
        endIndex: null,
        format: null,
        height: null,
        leading: null,
        lineIndex: null,
        offsetX: null,
        offsetY: null,
        startIndex: null,
        width: null,
        __class__: openfl__$internal_text_TextLayoutGroup
    };
    var openfl__$internal_timeline_Frame = function() {
        this.objects = []
    };
    $hxClasses["openfl._internal.timeline.Frame"] = openfl__$internal_timeline_Frame, openfl__$internal_timeline_Frame.__name__ = ["openfl", "_internal", "timeline", "Frame"], openfl__$internal_timeline_Frame.prototype = {
        label: null,
        objects: null,
        __class__: openfl__$internal_timeline_Frame
    };
    var openfl__$internal_timeline_FrameObject = function() {};
    $hxClasses["openfl._internal.timeline.FrameObject"] = openfl__$internal_timeline_FrameObject, openfl__$internal_timeline_FrameObject.__name__ = ["openfl", "_internal", "timeline", "FrameObject"], openfl__$internal_timeline_FrameObject.prototype = {
        clipDepth: null,
        colorTransform: null,
        depth: null,
        filters: null,
        id: null,
        matrix: null,
        name: null,
        symbol: null,
        type: null,
        visible: null,
        __class__: openfl__$internal_timeline_FrameObject
    };
    var openfl__$internal_timeline_FrameObjectType = $hxClasses["openfl._internal.timeline.FrameObjectType"] = {
        __ename__: ["openfl", "_internal", "timeline", "FrameObjectType"],
        __constructs__: ["CREATE", "UPDATE", "DESTROY"]
    };
    openfl__$internal_timeline_FrameObjectType.CREATE = ["CREATE", 0], openfl__$internal_timeline_FrameObjectType.CREATE.toString = $estr, openfl__$internal_timeline_FrameObjectType.CREATE.__enum__ = openfl__$internal_timeline_FrameObjectType, openfl__$internal_timeline_FrameObjectType.UPDATE = ["UPDATE", 1], openfl__$internal_timeline_FrameObjectType.UPDATE.toString = $estr, openfl__$internal_timeline_FrameObjectType.UPDATE.__enum__ = openfl__$internal_timeline_FrameObjectType, openfl__$internal_timeline_FrameObjectType.DESTROY = ["DESTROY", 2], openfl__$internal_timeline_FrameObjectType.DESTROY.toString = $estr, openfl__$internal_timeline_FrameObjectType.DESTROY.__enum__ = openfl__$internal_timeline_FrameObjectType;
    var openfl_display_Application = function() {
        lime_app_Application.call(this), null == openfl_Lib.application && (openfl_Lib.application = this)
    };
    $hxClasses["openfl.display.Application"] = openfl_display_Application, openfl_display_Application.__name__ = ["openfl", "display", "Application"], openfl_display_Application.__super__ = lime_app_Application, openfl_display_Application.prototype = $extend(lime_app_Application.prototype, {
        create: function(e) {
            if (this.config = e, this.backend.create(e), openfl_Lib.current.__loaderInfo = openfl_display_LoaderInfo.create(null), openfl_Lib.current.__loaderInfo.content = openfl_Lib.current, null != e) {
                if (Object.prototype.hasOwnProperty.call(e, "fps") && this.backend.setFrameRate(e.fps), Object.prototype.hasOwnProperty.call(e, "windows"))
                    for (var t = 0, n = e.windows; t < n.length;) {
                        var l = n[t];
                        ++t;
                        var i = new openfl_display_Window(l);
                        this.createWindow(i);
                        break
                    }(null == this.__preloader || this.__preloader.complete) && this.onPreloadComplete()
            }
        },
        __class__: openfl_display_Application
    });
    var openfl_display__$CapsStyle_CapsStyle_$Impl_$ = {};
    $hxClasses["openfl.display._CapsStyle.CapsStyle_Impl_"] = openfl_display__$CapsStyle_CapsStyle_$Impl_$, openfl_display__$CapsStyle_CapsStyle_$Impl_$.__name__ = ["openfl", "display", "_CapsStyle", "CapsStyle_Impl_"], openfl_display__$CapsStyle_CapsStyle_$Impl_$.toString = function(e) {
        switch (e) {
            case 0:
                return "none";
            case 1:
                return "round";
            case 2:
                return "square";
            default:
                return null
        }
    };
    var openfl_text_TextField = function() {
        openfl_display_InteractiveObject.call(this), this.__caretIndex = -1, this.__displayAsPassword = !1, this.__graphics = new openfl_display_Graphics(this), this.__textEngine = new openfl__$internal_text_TextEngine(this), this.__layoutDirty = !0, this.__offsetX = 0, this.__offsetY = 0, this.__tabEnabled = !0, this.__mouseWheelEnabled = !0, this.__text = "", null == openfl_text_TextField.__defaultTextFormat && (openfl_text_TextField.__defaultTextFormat = new openfl_text_TextFormat("Times New Roman", 12, 0, !1, !1, !1, "", "", 3, 0, 0, 0, 0), openfl_text_TextField.__defaultTextFormat.blockIndent = 0, openfl_text_TextField.__defaultTextFormat.bullet = !1, openfl_text_TextField.__defaultTextFormat.letterSpacing = 0, openfl_text_TextField.__defaultTextFormat.kerning = !1), this.__textFormat = openfl_text_TextField.__defaultTextFormat.clone();
        var e = new openfl__$internal_text_TextFormatRange(this.__textFormat, 0, 0);
        this.__textEngine.textFormatRanges.push(e), this.addEventListener("mouseDown", $bind(this, this.this_onMouseDown))
    };
    $hxClasses["openfl.text.TextField"] = openfl_text_TextField, openfl_text_TextField.__name__ = ["openfl", "text", "TextField"], openfl_text_TextField.__super__ = openfl_display_InteractiveObject, openfl_text_TextField.prototype = $extend(openfl_display_InteractiveObject.prototype, {
        __caretIndex: null,
        __cursorTimer: null,
        __dirty: null,
        __displayAsPassword: null,
        __inputEnabled: null,
        __isHTML: null,
        __layoutDirty: null,
        __mouseWheelEnabled: null,
        __offsetX: null,
        __offsetY: null,
        __selectionIndex: null,
        __showCursor: null,
        __symbol: null,
        __text: null,
        __textEngine: null,
        __textFormat: null,
        __div: null,
        getCharBoundaries: function(e) {
            if (e < 0 || e > this.__text.length - 1) return null;
            this.__updateLayout();
            for (var t = 0, n = this.__textEngine.layoutGroups; t < n.get_length();) {
                var l = n.get(t);
                if (++t, e >= l.startIndex && e <= l.endIndex) {
                    for (var i = l.offsetX, s = 0, a = e - l.startIndex; s < a;) {
                        var r = s++;
                        i += l.advances[r]
                    }
                    return new openfl_geom_Rectangle(i, l.offsetY, l.advances[e - l.startIndex], l.ascent + l.descent)
                }
            }
            return null
        },
        getLineIndexOfChar: function(e) {
            if (e < 0 || e > this.__text.length) return -1;
            this.__updateLayout();
            for (var t = 0, n = this.__textEngine.layoutGroups; t < n.get_length();) {
                var l = n.get(t);
                if (++t, l.startIndex <= e && l.endIndex >= e) return l.lineIndex
            }
            return -1
        },
        getLineOffset: function(e) {
            if (this.__updateLayout(), e < 0 || e > this.__textEngine.numLines - 1) return -1;
            for (var t = 0, n = this.__textEngine.layoutGroups; t < n.get_length();) {
                var l = n.get(t);
                if (++t, l.lineIndex == e) return l.startIndex
            }
            return 0
        },
        replaceSelectedText: function(e) {
            if ("" != e || this.__selectionIndex != this.__caretIndex) {
                var t, n;
                t = this.__caretIndex < this.__selectionIndex ? this.__caretIndex : this.__selectionIndex, n = this.__caretIndex > this.__selectionIndex ? this.__caretIndex : this.__selectionIndex, this.replaceText(t, n, e);
                var l = t + e.length;
                this.setSelection(l, l)
            }
        },
        replaceText: function(e, t, n) {
            if (!(t < e || e < 0 || t > this.__text.length || null == n)) {
                this.__updateText(this.__text.substring(0, e) + n + this.__text.substring(t));
                for (var l, i = n.length - (t - e), s = 0; s < this.__textEngine.textFormatRanges.get_length();)(l = this.__textEngine.textFormatRanges.get(s)).start <= e && l.end >= t ? (l.end += i, s++) : l.start >= e && l.end <= t ? (s > 0 ? this.__textEngine.textFormatRanges.splice(s, 1) : (l.start = 0, l.end = 0), i -= l.end - l.start) : l.start > e && l.start <= t ? (l.start += i, s++) : s++;
                this.__dirty = !0, this.__layoutDirty = !0
            }
        },
        setSelection: function(e, t) {
            this.__selectionIndex = e, this.__caretIndex = t
        },
        __caretBeginningOfLine: function() {
            this.__selectionIndex == this.__caretIndex || this.__caretIndex < this.__selectionIndex ? this.__caretIndex = this.getLineOffset(this.getLineIndexOfChar(this.__caretIndex)) : this.__selectionIndex = this.getLineOffset(this.getLineIndexOfChar(this.__selectionIndex))
        },
        __caretEndOfLine: function() {
            var e;
            (e = this.__selectionIndex == this.__caretIndex ? this.getLineIndexOfChar(this.__caretIndex) : this.getLineIndexOfChar(Std.int(Math.max(this.__caretIndex, this.__selectionIndex)))) < this.__textEngine.numLines - 1 ? this.__caretIndex = this.getLineOffset(e + 1) - 1 : this.__caretIndex = this.__text.length
        },
        __caretNextCharacter: function() {
            this.__caretIndex < this.__text.length && this.__caretIndex++
        },
        __caretNextLine: function(e, t) {
            null == e && (e = this.getLineIndexOfChar(this.__caretIndex)), e < this.__textEngine.numLines - 1 ? (null == t && (t = this.__caretIndex), this.__caretIndex = this.__getCharIndexOnDifferentLine(t, e + 1)) : this.__caretIndex = this.__text.length
        },
        __caretPreviousCharacter: function() {
            this.__caretIndex > 0 && this.__caretIndex--
        },
        __caretPreviousLine: function(e, t) {
            null == e && (e = this.getLineIndexOfChar(this.__caretIndex)), e > 0 ? (null == t && (t = this.__caretIndex), this.__caretIndex = this.__getCharIndexOnDifferentLine(t, e - 1)) : this.__caretIndex = 0
        },
        __dispatch: function(e) {
            if (2 == e.eventPhase && "mouseUp" == e.type) {
                var t = this.__getGroup(this.get_mouseX(), this.get_mouseY(), !0);
                if (null != t) {
                    var n = t.format.url;
                    "" != n && (StringTools.startsWith(n, "event:") ? this.dispatchEvent(new openfl_events_TextEvent("link", !1, !1, HxOverrides.substr(n, 6, null))) : openfl_Lib.getURL(new openfl_net_URLRequest(n)))
                }
            }
            return openfl_display_InteractiveObject.prototype.__dispatch.call(this, e)
        },
        __fromSymbol: function(e, t) {
            this.__symbol = t, this.set_width(t.width), this.set_height(t.height), this.__offsetX = t.x, this.__offsetY = t.y, this.set_multiline(t.multiline), this.set_wordWrap(t.wordWrap), this.set_displayAsPassword(t.password), t.border && (this.set_border(!0), this.set_background(!0)), this.set_selectable(t.selectable), t.input && this.set_type(1);
            var n = new openfl_text_TextFormat;
            null != t.color && (n.color = 16777215 & t.color), n.size = Math.round(t.fontHeight / 20);
            e.symbols.h[t.fontID];
            n.font = t.fontName;
            var l = !1,
                i = n.font;
            if (null == i) l = !0;
            else switch (i) {
                case "_sans":
                case "_serif":
                case "_typewriter":
                case "":
                    l = !0;
                    break;
                default:
                    for (var s = 0, a = openfl_text_Font.enumerateFonts(); s < a.length;) {
                        var r = a[s];
                        if (++s, r.name == n.font) {
                            l = !0;
                            break
                        }
                    }
            }
            l ? this.set_embedFonts(!0) : lime_utils_Log.warn('Could not find required font "' + n.font + '", it has not been embedded', {
                fileName: "TextField.hx",
                lineNumber: 975,
                className: "openfl.text.TextField",
                methodName: "__fromSymbol"
            }), null != t.align && ("center" == t.align ? n.align = 0 : "right" == t.align ? n.align = 4 : "justify" == t.align && (n.align = 2), n.leftMargin = t.leftMargin / 20 | 0, n.rightMargin = t.rightMargin / 20 | 0, n.indent = t.indent / 20 | 0, n.leading = t.leading / 20 | 0, this.get_embedFonts() && (n.leading += 4)), this.set_defaultTextFormat(n), null != t.text && (t.html ? this.set_htmlText(t.text) : this.set_text(t.text))
        },
        __getAttributeMatch: function(e) {
            return null != e.matched(2) ? e.matched(2) : e.matched(3)
        },
        __getBounds: function(e, t) {
            this.__updateLayout();
            var n = openfl_geom_Rectangle.__temp;
            n.copyFrom(this.__textEngine.bounds), n.x += this.__offsetX, n.y += this.__offsetY, n.__transform(n, t), e.__expand(n.x, n.y, n.width, n.height)
        },
        __getCharIndexOnDifferentLine: function(e, t) {
            if (e < 0 || e > this.__text.length) return -1;
            if (t < 0 || t > this.__textEngine.numLines - 1) return -1;
            for (var n = null, l = null, i = 0, s = this.__textEngine.layoutGroups; i < s.get_length();) {
                var a = s.get(i);
                if (++i, e >= a.startIndex && e <= a.endIndex) {
                    n = a.offsetX;
                    for (var r = 0, o = e - a.startIndex; r < o;) {
                        var d = r++;
                        n += a.advances[d]
                    }
                    if (null != l) return this.__getPosition(n, l)
                }
                if (a.lineIndex == t && (l = a.offsetY + a.height / 2, null != n)) return this.__getPosition(n, l)
            }
            return -1
        },
        __getCursor: function() {
            var e = this.__getGroup(this.get_mouseX(), this.get_mouseY(), !0);
            return null != e && "" != e.format.url ? lime_ui_MouseCursor.POINTER : this.__textEngine.selectable ? lime_ui_MouseCursor.TEXT : null
        },
        __getGroup: function(e, t, n) {
            null == n && (n = !1), this.__updateLayout(), e += this.get_scrollH();
            for (var l = 0, i = this.get_scrollV() - 1; l < i;) {
                var s = l++;
                t += this.__textEngine.lineHeights.get(s)
            }!n && t > this.__textEngine.textHeight && (t = this.__textEngine.textHeight);
            for (var a, r, o = !0, d = 0, _ = this.__textEngine.layoutGroups.get_length(); d < _;) {
                var h = d++;
                if (a = this.__textEngine.layoutGroups.get(h), r = h < this.__textEngine.layoutGroups.get_length() - 1 ? this.__textEngine.layoutGroups.get(h + 1) : null, o && (t < a.offsetY && (t = a.offsetY), e < a.offsetX && (e = a.offsetX), o = !1), (t >= a.offsetY && t <= a.offsetY + a.height || !n && null == r) && (e >= a.offsetX && e <= a.offsetX + a.width || !n && (null == r || r.lineIndex != a.lineIndex))) return a
            }
            return null
        },
        __getPosition: function(e, t) {
            var n = this.__getGroup(e, t);
            if (null == n) return this.__text.length;
            for (var l = 0, i = 0, s = n.advances.length; i < s;) {
                var a = i++;
                if (l += n.advances[a], e <= n.offsetX + l) return e <= n.offsetX + (l - n.advances[a]) + n.advances[a] / 2 ? n.startIndex + a : n.startIndex + a < n.endIndex ? n.startIndex + a + 1 : n.endIndex
            }
            return n.endIndex
        },
        __hitTest: function(e, t, n, l, i, s) {
            if (!s.get_visible() || this.__isMask || i && !this.mouseEnabled) return !1;
            if (null != this.get_mask() && !this.get_mask().__hitTestMask(e, t)) return !1;
            this.__getRenderTransform(), this.__updateLayout();
            var a = this.__renderTransform.__transformInverseX(e, t),
                r = this.__renderTransform.__transformInverseY(e, t);
            return !!this.__textEngine.bounds.contains(a, r) && (null != l && l.push(s), !0)
        },
        __hitTestMask: function(e, t) {
            this.__getRenderTransform(), this.__updateLayout();
            var n = this.__renderTransform.__transformInverseX(e, t),
                l = this.__renderTransform.__transformInverseY(e, t);
            return !!this.__textEngine.bounds.contains(n, l)
        },
        __renderCanvas: function(e) {
            if (openfl__$internal_renderer_canvas_CanvasTextField.render(this, e, this.__worldTransform), 0 == this.__textEngine.antiAliasType && 1 == this.__textEngine.gridFitType) {
                var t = e.context.imageSmoothingEnabled;
                t && (e.context.imageSmoothingEnabled = !1, e.context.msImageSmoothingEnabled = !1, e.context.imageSmoothingEnabled = !1), openfl_display_InteractiveObject.prototype.__renderCanvas.call(this, e), t && (e.context.imageSmoothingEnabled = !0, e.context.msImageSmoothingEnabled = !0, e.context.imageSmoothingEnabled = !0)
            } else openfl_display_InteractiveObject.prototype.__renderCanvas.call(this, e)
        },
        __renderGL: function(e) {
            openfl__$internal_renderer_canvas_CanvasTextField.render(this, e, this.__worldTransform), openfl_display_InteractiveObject.prototype.__renderGL.call(this, e)
        },
        __startCursorTimer: function() {
            this.__cursorTimer = haxe_Timer.delay($bind(this, this.__startCursorTimer), 600), this.__showCursor = !this.__showCursor, this.__dirty = !0
        },
        __startTextInput: function() {
            this.__caretIndex < 0 && (this.__caretIndex = this.__text.length, this.__selectionIndex = this.__caretIndex), null != this.stage && (this.stage.window.backend.setEnableTextEvents(!0), this.__inputEnabled || (this.stage.window.backend.setEnableTextEvents(!0), this.stage.window.onTextInput.has($bind(this, this.window_onTextInput)) || (this.stage.window.onTextInput.add($bind(this, this.window_onTextInput)), this.stage.window.onKeyDown.add($bind(this, this.window_onKeyDown))), this.__inputEnabled = !0, this.__startCursorTimer()))
        },
        __stopCursorTimer: function() {
            null != this.__cursorTimer && (this.__cursorTimer.stop(), this.__cursorTimer = null), this.__showCursor && (this.__showCursor = !1, this.__dirty = !0)
        },
        __stopTextInput: function() {
            this.__inputEnabled && null != this.stage && (this.stage.window.backend.setEnableTextEvents(!1), this.stage.window.onTextInput.remove($bind(this, this.window_onTextInput)), this.stage.window.onKeyDown.remove($bind(this, this.window_onKeyDown)), this.__inputEnabled = !1, this.__stopCursorTimer())
        },
        __updateLayout: function() {
            if (this.__layoutDirty) {
                var e = this.__textEngine.width;
                this.__textEngine.height;
                if (this.__textEngine.update(), 2 != this.__textEngine.autoSize) {
                    if (this.__textEngine.width != e) switch (this.__textEngine.autoSize) {
                        case 3:
                            this.set_x(this.get_x() + (e - this.__textEngine.width));
                            break;
                        case 0:
                            this.set_x(this.get_x() + (e - this.__textEngine.width) / 2)
                    }
                    this.__textEngine.getBounds()
                }
                this.__layoutDirty = !1
            }
        },
        __updateText: function(e) {
            if (this.__text = e, this.__text.length < this.__caretIndex && (this.__selectionIndex = this.__caretIndex = this.__text.length), this.__displayAsPassword) {
                for (var t = this.get_text().length, n = "", l = 0; l < t;) {
                    l++;
                    n += "*"
                }
                this.__textEngine.text = n
            } else this.__textEngine.text = this.__text
        },
        __updateTransforms: function(e) {
            openfl_display_InteractiveObject.prototype.__updateTransforms.call(this, e), this.__renderTransform.__translateTransformed(this.__offsetX, this.__offsetY)
        },
        set_background: function(e) {
            return e != this.__textEngine.background && (this.__dirty = !0), this.__textEngine.background = e
        },
        set_border: function(e) {
            return e != this.__textEngine.border && (this.__dirty = !0), this.__textEngine.border = e
        },
        get_defaultTextFormat: function() {
            return this.__textFormat.clone()
        },
        set_defaultTextFormat: function(e) {
            return this.__textFormat.__merge(e), this.__layoutDirty = !0, this.__dirty = !0, e
        },
        set_displayAsPassword: function(e) {
            return e != this.__displayAsPassword && (this.__dirty = !0, this.__layoutDirty = !0, this.__displayAsPassword = e, this.__updateText(this.__text)), e
        },
        get_embedFonts: function() {
            return this.__textEngine.embedFonts
        },
        set_embedFonts: function(e) {
            return this.__textEngine.embedFonts = e
        },
        get_height: function() {
            return this.__updateLayout(), this.__textEngine.height * Math.abs(this.get_scaleY())
        },
        set_height: function(e) {
            return e != this.__textEngine.height && (this.__transformDirty || (this.__transformDirty = !0, openfl_display_DisplayObject.__worldTransformDirty++), this.__dirty = !0, this.__layoutDirty = !0, this.__textEngine.height = e), this.__textEngine.height * Math.abs(this.get_scaleY())
        },
        set_htmlText: function(e) {
            if (this.__isHTML && this.__text == e || (this.__dirty = !0, this.__layoutDirty = !0), this.__isHTML = !0, null == this.__div) {
                e = openfl_text_TextField.__regexBreakTag.replace(e, "\n"), e = openfl_text_TextField.__regexEntities[0].replace(e, '"'), e = openfl_text_TextField.__regexEntities[1].replace(e, "'");
                var t = (e = openfl_text_TextField.__regexEntities[2].replace(e, "&")).split("<");
                if (1 == t.length) {
                    if (e = openfl_text_TextField.__regexHTMLTag.replace(e, ""), this.__textEngine.textFormatRanges.get_length() > 1) {
                        var n = this.__textEngine.textFormatRanges.get_length() - 1;
                        this.__textEngine.textFormatRanges.splice(1, n)
                    }
                    e = openfl_text_TextField.__regexEntities[3].replace(e, "<"), e = openfl_text_TextField.__regexEntities[4].replace(e, ">");
                    var l = this.__textEngine.textFormatRanges.get(0);
                    return l.format = this.__textFormat, l.start = 0, l.end = e.length, this.__updateText(e), e
                }
                var i, s = this.__textEngine.textFormatRanges.get_length();
                this.__textEngine.textFormatRanges.splice(0, s), e = "";
                for (var a = 0, r = t.length; a < r;) {
                    var o = a++;
                    i = t[o], i = openfl_text_TextField.__regexEntities[3].replace(i, "<"), i = openfl_text_TextField.__regexEntities[4].replace(i, ">"), t[o] = i
                }
                for (var d, _ = [this.__textFormat.clone()], h = !1, p = 0; p < t.length;) {
                    var c = t[p];
                    if (++p, "" != c) {
                        var Q, U = "/" == HxOverrides.substr(c, 0, 1),
                            m = c.indexOf(">"),
                            u = m + 1,
                            F = c.indexOf(" "),
                            N = c.substring(U ? 1 : 0, F > -1 && F < m ? F : m);
                        if (U) {
                            if (_.pop(), Q = _[_.length - 1].clone(), "p" == N.toLowerCase() && this.__textEngine.textFormatRanges.get_length() > 0 && (e += "\n", h = !0), u < c.length) {
                                d = HxOverrides.substr(c, u, null);
                                var S = new openfl__$internal_text_TextFormatRange(Q, e.length, e.length + d.length);
                                this.__textEngine.textFormatRanges.push(S), e += d, h = !1
                            }
                        } else if (Q = _[_.length - 1].clone(), m > -1) {
                            switch (N.toLowerCase()) {
                                case "a":
                                    openfl_text_TextField.__regexHref.match(c) && (Q.url = this.__getAttributeMatch(openfl_text_TextField.__regexHref));
                                    break;
                                case "p":
                                    this.__textEngine.textFormatRanges.get_length() > 0 && !h && (e += "\n"), openfl_text_TextField.__regexAlign.match(c) && (Q.align = openfl_text__$TextFormatAlign_TextFormatAlign_$Impl_$.fromString(this.__getAttributeMatch(openfl_text_TextField.__regexAlign).toLowerCase()));
                                    break;
                                case "font":
                                    if (openfl_text_TextField.__regexFace.match(c) && (Q.font = this.__getAttributeMatch(openfl_text_TextField.__regexFace)), openfl_text_TextField.__regexColor.match(c) && (Q.color = Std.parseInt("0x" + this.__getAttributeMatch(openfl_text_TextField.__regexColor))), openfl_text_TextField.__regexSize.match(c)) {
                                        var W, B = this.__getAttributeMatch(openfl_text_TextField.__regexSize),
                                            Z = HxOverrides.cca(B, 0);
                                        if (43 == Z || 45 == Z) W = _.length >= 2 ? _[_.length - 2] : this.__textFormat, Q.size = W.size + Std.parseInt(B);
                                        else Q.size = Std.parseInt(B)
                                    }
                                    break;
                                case "b":
                                    Q.bold = !0;
                                    break;
                                case "u":
                                    Q.underline = !0;
                                    break;
                                case "i":
                                case "em":
                                    Q.italic = !0;
                                    break;
                                case "textformat":
                                    if (openfl_text_TextField.__regexBlockIndent.match(c) && (Q.blockIndent = Std.parseInt(this.__getAttributeMatch(openfl_text_TextField.__regexBlockIndent))), openfl_text_TextField.__regexIndent.match(c) && (Q.indent = Std.parseInt(this.__getAttributeMatch(openfl_text_TextField.__regexIndent))), openfl_text_TextField.__regexLeading.match(c) && (Q.leading = Std.parseInt(this.__getAttributeMatch(openfl_text_TextField.__regexLeading))), openfl_text_TextField.__regexLeftMargin.match(c) && (Q.leftMargin = Std.parseInt(this.__getAttributeMatch(openfl_text_TextField.__regexLeftMargin))), openfl_text_TextField.__regexRightMargin.match(c) && (Q.rightMargin = Std.parseInt(this.__getAttributeMatch(openfl_text_TextField.__regexRightMargin))), openfl_text_TextField.__regexTabStops.match(c)) {
                                        for (var D = this.__getAttributeMatch(openfl_text_TextField.__regexTabStops).split(" "), V = [], f = 0; f < D.length;) {
                                            var R = D[f];
                                            ++f, V.push(Std.parseInt(R))
                                        }
                                        Q.tabStops = V
                                    }
                            }
                            if (_.push(Q), u < c.length) {
                                d = c.substring(u);
                                var T = new openfl__$internal_text_TextFormatRange(Q, e.length, e.length + d.length);
                                this.__textEngine.textFormatRanges.push(T), e += d, h = !1
                            }
                        } else {
                            var J = new openfl__$internal_text_TextFormatRange(Q, e.length, e.length + c.length);
                            this.__textEngine.textFormatRanges.push(J), e += c, h = !1
                        }
                    }
                }
                if (0 == this.__textEngine.textFormatRanges.get_length()) {
                    var g = new openfl__$internal_text_TextFormatRange(_[0], 0, 0);
                    this.__textEngine.textFormatRanges.push(g)
                }
            }
            return this.__updateText(e), e
        },
        set_multiline: function(e) {
            return e != this.__textEngine.multiline && (this.__dirty = !0, this.__layoutDirty = !0), this.__textEngine.multiline = e
        },
        get_scrollH: function() {
            return this.__textEngine.scrollH
        },
        get_scrollV: function() {
            return this.__textEngine.scrollV
        },
        get_selectable: function() {
            return this.__textEngine.selectable
        },
        set_selectable: function(e) {
            return e != this.__textEngine.selectable && 1 == this.get_type() && (null != this.stage && this.stage.get_focus() == this ? this.__startTextInput() : e || this.__stopTextInput()), this.__textEngine.selectable = e
        },
        get_text: function() {
            return this.__text
        },
        set_text: function(e) {
            if (!this.__isHTML && this.__text == e) return e;
            if (this.__dirty = !0, this.__layoutDirty = !0, this.__textEngine.textFormatRanges.get_length() > 1) {
                var t = this.__textEngine.textFormatRanges.get_length() - 1;
                this.__textEngine.textFormatRanges.splice(1, t)
            }
            var n = this.__textEngine.textFormatRanges.get(0);
            return n.format = this.__textFormat, n.start = 0, n.end = e.length, this.__isHTML = !1, this.__updateText(e), e
        },
        get_type: function() {
            return this.__textEngine.type
        },
        set_type: function(e) {
            return e != this.__textEngine.type && (1 == e ? (this.addEventListener("focusIn", $bind(this, this.this_onFocusIn)), this.addEventListener("focusOut", $bind(this, this.this_onFocusOut)), this.addEventListener("addedToStage", $bind(this, this.this_onAddedToStage)), this.this_onFocusIn(null), this.__textEngine.__useIntAdvances = !0) : (this.removeEventListener("focusIn", $bind(this, this.this_onFocusIn)), this.removeEventListener("focusOut", $bind(this, this.this_onFocusOut)), this.removeEventListener("addedToStage", $bind(this, this.this_onAddedToStage)), this.__stopTextInput(), this.__textEngine.__useIntAdvances = null), this.__dirty = !0), this.__textEngine.type = e
        },
        get_width: function() {
            return this.__updateLayout(), this.__textEngine.width * Math.abs(this.__scaleX)
        },
        set_width: function(e) {
            return e != this.__textEngine.width && (this.__transformDirty || (this.__transformDirty = !0, openfl_display_DisplayObject.__worldTransformDirty++), this.__dirty = !0, this.__layoutDirty = !0, this.__textEngine.width = e), this.__textEngine.width * Math.abs(this.__scaleX)
        },
        set_wordWrap: function(e) {
            return e != this.__textEngine.wordWrap && (this.__dirty = !0, this.__layoutDirty = !0), this.__textEngine.wordWrap = e
        },
        stage_onMouseMove: function(e) {
            if (null != this.stage && this.__textEngine.selectable && this.__selectionIndex >= 0) {
                this.__updateLayout();
                var t = this.__getPosition(this.get_mouseX(), this.get_mouseY());
                t != this.__caretIndex && (this.__caretIndex = t, this.__dirty = !0)
            }
        },
        stage_onMouseUp: function(e) {
            if (null != this.stage && (this.stage.removeEventListener("mouseMove", $bind(this, this.stage_onMouseMove)), this.stage.removeEventListener("mouseUp", $bind(this, this.stage_onMouseUp)), this.stage.get_focus() == this)) {
                this.__getWorldTransform(), this.__updateLayout();
                this.__worldTransform.__transformInverseX(this.get_x(), this.get_y()), this.__worldTransform.__transformInverseY(this.get_x(), this.get_y());
                var t, n, l = this.__getPosition(this.get_mouseX(), this.get_mouseY());
                t = Std.int(Math.min(this.__selectionIndex, l)), n = Std.int(Math.max(this.__selectionIndex, l)), this.__selectionIndex = t, this.__caretIndex = n, this.__inputEnabled && (this.this_onFocusIn(null), this.__stopCursorTimer(), this.__startCursorTimer())
            }
        },
        this_onAddedToStage: function(e) {
            this.this_onFocusIn(null)
        },
        this_onFocusIn: function(e) {
            this.get_selectable() && 1 == this.get_type() && null != this.stage && this.stage.get_focus() == this && this.__startTextInput()
        },
        this_onFocusOut: function(e) {
            this.__stopTextInput()
        },
        this_onMouseDown: function(e) {
            this.get_selectable() && (this.__updateLayout(), this.__caretIndex = this.__getPosition(this.get_mouseX(), this.get_mouseY()), this.__selectionIndex = this.__caretIndex, this.__dirty = !0, this.stage.addEventListener("mouseMove", $bind(this, this.stage_onMouseMove)), this.stage.addEventListener("mouseUp", $bind(this, this.stage_onMouseUp)))
        },
        window_onKeyDown: function(e, t) {
            switch (e) {
                case 13:
                case 1073741912:
                    this.__textEngine.multiline && (this.replaceSelectedText("\n"), this.dispatchEvent(new openfl_events_Event("change", !0)));
                    break;
                case 8:
                    this.__selectionIndex == this.__caretIndex && this.__caretIndex > 0 && (this.__selectionIndex = this.__caretIndex - 1), this.__selectionIndex != this.__caretIndex && (this.replaceSelectedText(""), this.__selectionIndex = this.__caretIndex, this.dispatchEvent(new openfl_events_Event("change", !0)));
                    break;
                case 127:
                    this.__selectionIndex == this.__caretIndex && this.__caretIndex < this.__text.length && (this.__selectionIndex = this.__caretIndex + 1), this.__selectionIndex != this.__caretIndex && (this.replaceSelectedText(""), this.__selectionIndex = this.__caretIndex, this.dispatchEvent(new openfl_events_Event("change", !0)));
                    break;
                case 1073741904:
                    lime_ui__$KeyModifier_KeyModifier_$Impl_$.get_metaKey(t) ? (this.__caretBeginningOfLine(), lime_ui__$KeyModifier_KeyModifier_$Impl_$.get_shiftKey(t) || (this.__selectionIndex = this.__caretIndex)) : lime_ui__$KeyModifier_KeyModifier_$Impl_$.get_shiftKey(t) ? this.__caretPreviousCharacter() : (this.__selectionIndex == this.__caretIndex ? this.__caretPreviousCharacter() : this.__caretIndex = Std.int(Math.min(this.__caretIndex, this.__selectionIndex)), this.__selectionIndex = this.__caretIndex), this.__stopCursorTimer(), this.__startCursorTimer();
                    break;
                case 1073741903:
                    lime_ui__$KeyModifier_KeyModifier_$Impl_$.get_metaKey(t) ? (this.__caretEndOfLine(), lime_ui__$KeyModifier_KeyModifier_$Impl_$.get_shiftKey(t) || (this.__selectionIndex = this.__caretIndex)) : lime_ui__$KeyModifier_KeyModifier_$Impl_$.get_shiftKey(t) ? this.__caretNextCharacter() : (this.__selectionIndex == this.__caretIndex ? this.__caretNextCharacter() : this.__caretIndex = Std.int(Math.max(this.__caretIndex, this.__selectionIndex)), this.__selectionIndex = this.__caretIndex), this.__stopCursorTimer(), this.__startCursorTimer();
                    break;
                case 1073741905:
                    if (lime_ui__$KeyModifier_KeyModifier_$Impl_$.get_shiftKey(t)) this.__caretNextLine();
                    else {
                        if (this.__selectionIndex == this.__caretIndex) this.__caretNextLine();
                        else {
                            var n = this.getLineIndexOfChar(Std.int(Math.max(this.__caretIndex, this.__selectionIndex)));
                            this.__caretNextLine(n, Std.int(Math.min(this.__caretIndex, this.__selectionIndex)))
                        }
                        this.__selectionIndex = this.__caretIndex
                    }
                    this.__stopCursorTimer(), this.__startCursorTimer();
                    break;
                case 1073741906:
                    if (lime_ui__$KeyModifier_KeyModifier_$Impl_$.get_shiftKey(t)) this.__caretPreviousLine();
                    else {
                        if (this.__selectionIndex == this.__caretIndex) this.__caretPreviousLine();
                        else {
                            var l = this.getLineIndexOfChar(Std.int(Math.min(this.__caretIndex, this.__selectionIndex)));
                            this.__caretPreviousLine(l, Std.int(Math.min(this.__caretIndex, this.__selectionIndex)))
                        }
                        this.__selectionIndex = this.__caretIndex
                    }
                    this.__stopCursorTimer(), this.__startCursorTimer();
                    break;
                case 1073741898:
                    this.__caretBeginningOfLine(), this.__stopCursorTimer(), this.__startCursorTimer();
                    break;
                case 1073741901:
                    this.__caretEndOfLine(), this.__stopCursorTimer(), this.__startCursorTimer();
                    break;
                case 99:
                    (lime_ui__$KeyModifier_KeyModifier_$Impl_$.get_metaKey(t) || lime_ui__$KeyModifier_KeyModifier_$Impl_$.get_ctrlKey(t)) && lime_system_Clipboard.set_text(this.__text.substring(this.__caretIndex, this.__selectionIndex));
                    break;
                case 120:
                    (lime_ui__$KeyModifier_KeyModifier_$Impl_$.get_metaKey(t) || lime_ui__$KeyModifier_KeyModifier_$Impl_$.get_ctrlKey(t)) && (lime_system_Clipboard.set_text(this.__text.substring(this.__caretIndex, this.__selectionIndex)), this.__caretIndex != this.__selectionIndex && (this.replaceSelectedText(""), this.dispatchEvent(new openfl_events_Event("change", !0))));
                    break;
                case 97:
                    (lime_ui__$KeyModifier_KeyModifier_$Impl_$.get_metaKey(t) || lime_ui__$KeyModifier_KeyModifier_$Impl_$.get_ctrlKey(t)) && (this.__caretIndex = this.__text.length, this.__selectionIndex = 0)
            }
        },
        window_onTextInput: function(e) {
            this.replaceSelectedText(e), this.dispatchEvent(new openfl_events_Event("change", !0))
        },
        __class__: openfl_text_TextField,
        __properties__: $extend(openfl_display_InteractiveObject.prototype.__properties__, {
            set_wordWrap: "set_wordWrap",
            set_type: "set_type",
            get_type: "get_type",
            set_text: "set_text",
            get_text: "get_text",
            set_selectable: "set_selectable",
            get_selectable: "get_selectable",
            get_scrollV: "get_scrollV",
            get_scrollH: "get_scrollH",
            set_multiline: "set_multiline",
            set_htmlText: "set_htmlText",
            set_embedFonts: "set_embedFonts",
            get_embedFonts: "get_embedFonts",
            set_displayAsPassword: "set_displayAsPassword",
            set_defaultTextFormat: "set_defaultTextFormat",
            get_defaultTextFormat: "get_defaultTextFormat",
            set_border: "set_border",
            set_background: "set_background"
        })
    });
    var openfl_display_FrameLabel = function(e, t) {
        openfl_events_EventDispatcher.call(this), this.__name = e, this.__frame = t
    };
    $hxClasses["openfl.display.FrameLabel"] = openfl_display_FrameLabel, openfl_display_FrameLabel.__name__ = ["openfl", "display", "FrameLabel"], openfl_display_FrameLabel.__super__ = openfl_events_EventDispatcher, openfl_display_FrameLabel.prototype = $extend(openfl_events_EventDispatcher.prototype, {
        __frame: null,
        __name: null,
        get_frame: function() {
            return this.__frame
        },
        get_name: function() {
            return this.__name
        },
        __class__: openfl_display_FrameLabel,
        __properties__: {
            get_name: "get_name",
            get_frame: "get_frame"
        }
    });
    var openfl_display_Graphics = function(e) {
        this.__dirty = !0, this.__owner = e, this.__commands = new openfl__$internal_renderer_DrawCommandBuffer, this.__strokePadding = 0, this.__positionX = 0, this.__positionY = 0, this.__renderTransform = new openfl_geom_Matrix, this.__worldTransform = new openfl_geom_Matrix, this.__width = 0, this.__height = 0, this.moveTo(0, 0)
    };
    $hxClasses["openfl.display.Graphics"] = openfl_display_Graphics, openfl_display_Graphics.__name__ = ["openfl", "display", "Graphics"], openfl_display_Graphics.prototype = {
        __bounds: null,
        __commands: null,
        __dirty: null,
        __height: null,
        __positionX: null,
        __positionY: null,
        __renderTransform: null,
        __strokePadding: null,
        __transformDirty: null,
        __visible: null,
        __owner: null,
        __width: null,
        __worldTransform: null,
        __canvas: null,
        __context: null,
        __bitmap: null,
        beginBitmapFill: function(e, t, n, l) {
            null == l && (l = !1), null == n && (n = !0), this.__commands.beginBitmapFill(e, null != t ? t.clone() : null, n, l), this.__visible = !0
        },
        beginFill: function(e, t) {
            null == t && (t = 1), null == e && (e = 0), this.__commands.beginFill(16777215 & e, t), t > 0 && (this.__visible = !0)
        },
        beginGradientFill: function(e, t, n, l, i, s, a, r) {
            null == r && (r = 0), null == a && (a = 1), null == s && (s = 0), this.__commands.beginGradientFill(e, t, n, l, i, s, a, r);
            for (var o = 0; o < n.length;) {
                var d = n[o];
                if (++o, d > 0) {
                    this.__visible = !0;
                    break
                }
            }
        },
        clear: function() {
            this.__commands.clear(), this.__strokePadding = 0, null != this.__bounds && (this.set___dirty(!0), this.__transformDirty = !0, this.__bounds = null), this.__visible = !1, this.moveTo(0, 0)
        },
        copyFrom: function(e) {
            null != e.__bounds ? this.__bounds = e.__bounds.clone() : this.__bounds = null, this.__commands = e.__commands.copy(), this.set___dirty(!0), this.__strokePadding = e.__strokePadding, this.__positionX = e.__positionX, this.__positionY = e.__positionY, this.__transformDirty = !0, this.__visible = e.__visible
        },
        curveTo: function(e, t, n, l) {
            var i, s;
            if (this.__inflateBounds(this.__positionX - this.__strokePadding, this.__positionY - this.__strokePadding), this.__inflateBounds(this.__positionX + this.__strokePadding, this.__positionY + this.__strokePadding), e < n && e > this.__positionX || e > n && e < this.__positionX) i = n;
            else {
                var a = (this.__positionX - e) / (this.__positionX - 2 * e + n);
                i = this.__calculateBezierQuadPoint(a, this.__positionX, e, n)
            }
            if (t < l && t > this.__positionY || t > l && t < this.__positionY) s = l;
            else {
                var r = (this.__positionY - t) / (this.__positionY - 2 * t + l);
                s = this.__calculateBezierQuadPoint(r, this.__positionY, t, l)
            }
            this.__inflateBounds(i - this.__strokePadding, s - this.__strokePadding), this.__inflateBounds(i + this.__strokePadding, s + this.__strokePadding), this.__positionX = n, this.__positionY = l, this.__commands.curveTo(e, t, n, l), this.set___dirty(!0)
        },
        drawRect: function(e, t, n, l) {
            n <= 0 || l <= 0 || (this.__inflateBounds(e - this.__strokePadding, t - this.__strokePadding), this.__inflateBounds(e + n + this.__strokePadding, t + l + this.__strokePadding), this.__commands.drawRect(e, t, n, l), this.set___dirty(!0))
        },
        endFill: function() {
            this.__commands.endFill()
        },
        lineStyle: function(e, t, n, l, i, s, a, r) {
            null == r && (r = 3), null == i && (i = 2), null == l && (l = !1), null == n && (n = 1), null == t && (t = 0), null != e && (1 == a ? e > this.__strokePadding && (this.__strokePadding = e) : e / 2 > this.__strokePadding && (this.__strokePadding = e / 2)), this.__commands.lineStyle(e, t, n, l, i, s, a, r), null != e && (this.__visible = !0)
        },
        lineTo: function(e, t) {
            isFinite(e) && isFinite(t) && (this.__inflateBounds(this.__positionX - this.__strokePadding, this.__positionY - this.__strokePadding), this.__inflateBounds(this.__positionX + this.__strokePadding, this.__positionY + this.__strokePadding), this.__positionX = e, this.__positionY = t, this.__inflateBounds(this.__positionX - this.__strokePadding, this.__positionY - this.__strokePadding), this.__inflateBounds(this.__positionX + 2 * this.__strokePadding, this.__positionY + this.__strokePadding), this.__commands.lineTo(e, t), this.set___dirty(!0))
        },
        moveTo: function(e, t) {
            this.__positionX = e, this.__positionY = t, this.__commands.moveTo(e, t)
        },
        __calculateBezierQuadPoint: function(e, t, n, l) {
            var i = 1 - e;
            return i * i * t + 2 * i * e * n + e * e * l
        },
        __cleanup: function() {
            null != this.__bounds && (this.set___dirty(!0), this.__transformDirty = !0), this.__bitmap = null, this.__canvas = null, this.__context = null
        },
        __getBounds: function(e, t) {
            if (null != this.__bounds) {
                var n = openfl_geom_Rectangle.__temp;
                this.__bounds.__transform(n, t), e.__expand(n.x, n.y, n.width, n.height)
            }
        },
        __hitTest: function(e, t, n, l) {
            if (null == this.__bounds) return !1;
            var i = l.__transformInverseX(e, t),
                s = l.__transformInverseY(e, t);
            return !!(i > this.__bounds.x && s > this.__bounds.y && this.__bounds.contains(i, s)) && (!n || openfl__$internal_renderer_canvas_CanvasGraphics.hitTest(this, i, s))
        },
        __inflateBounds: function(e, t) {
            if (null == this.__bounds) return this.__bounds = new openfl_geom_Rectangle(e, t, 0, 0), void(this.__transformDirty = !0);
            e < this.__bounds.x && (this.__bounds.width += this.__bounds.x - e, this.__bounds.x = e, this.__transformDirty = !0), t < this.__bounds.y && (this.__bounds.height += this.__bounds.y - t, this.__bounds.y = t, this.__transformDirty = !0), e > this.__bounds.x + this.__bounds.width && (this.__bounds.width = e - this.__bounds.x), t > this.__bounds.y + this.__bounds.height && (this.__bounds.height = t - this.__bounds.y)
        },
        __update: function() {
            if (!(null == this.__bounds || this.__bounds.width <= 0 || this.__bounds.height <= 0)) {
                var e = this.__owner.__renderTransform,
                    t = 1,
                    n = 1;
                if (null != e) {
                    t = 0 == e.b ? Math.abs(e.a) : Math.sqrt(e.a * e.a + e.b * e.b), n = 0 == e.c ? Math.abs(e.d) : Math.sqrt(e.c * e.c + e.d * e.d);
                    var l = this.__bounds.width * t,
                        i = this.__bounds.height * n;
                    if (l < 1 || i < 1) return (this.__width >= 1 || this.__height >= 1) && this.set___dirty(!0), this.__width = 0, void(this.__height = 0);
                    this.__renderTransform.a = l / this.__bounds.width, this.__renderTransform.d = i / this.__bounds.height;
                    var s = 1 / this.__renderTransform.a,
                        a = 1 / this.__renderTransform.d;
                    this.__worldTransform.a = s * e.a, this.__worldTransform.b = s * e.b, this.__worldTransform.c = a * e.c, this.__worldTransform.d = a * e.d;
                    var r = this.__bounds.x,
                        o = this.__bounds.y,
                        d = r * e.a + o * e.c + e.tx,
                        _ = r * e.b + o * e.d + e.ty;
                    this.__worldTransform.tx = Math.floor(d), this.__worldTransform.ty = Math.floor(_), this.__renderTransform.tx = this.__worldTransform.__transformInverseX(d, _), this.__renderTransform.ty = this.__worldTransform.__transformInverseY(d, _);
                    var h = Math.ceil(l + this.__renderTransform.tx),
                        p = Math.ceil(i + this.__renderTransform.ty);
                    h == this.__width && p == this.__height || this.set___dirty(!0), this.__width = h, this.__height = p
                }
            }
        },
        set___dirty: function(e) {
            return e && null != this.__owner && this.__owner.__setRenderDirty(), this.__dirty = e
        },
        __class__: openfl_display_Graphics,
        __properties__: {
            set___dirty: "set___dirty"
        }
    };
    var openfl_display__$JointStyle_JointStyle_$Impl_$ = {};
    $hxClasses["openfl.display._JointStyle.JointStyle_Impl_"] = openfl_display__$JointStyle_JointStyle_$Impl_$, openfl_display__$JointStyle_JointStyle_$Impl_$.__name__ = ["openfl", "display", "_JointStyle", "JointStyle_Impl_"], openfl_display__$JointStyle_JointStyle_$Impl_$.toString = function(e) {
        switch (e) {
            case 0:
                return "bevel";
            case 1:
                return "miter";
            case 2:
                return "round";
            default:
                return null
        }
    };
    var openfl_display_Loader = function() {};
    $hxClasses["openfl.display.Loader"] = openfl_display_Loader, openfl_display_Loader.__name__ = ["openfl", "display", "Loader"], openfl_display_Loader.__super__ = openfl_display_DisplayObjectContainer, openfl_display_Loader.prototype = $extend(openfl_display_DisplayObjectContainer.prototype, {
        __class__: openfl_display_Loader
    });
    var openfl_display_LoaderInfo = function() {
        openfl_events_EventDispatcher.call(this), this.applicationDomain = openfl_system_ApplicationDomain.currentDomain, this.bytesLoaded = 0, this.bytesTotal = 0, this.childAllowsParent = !0, this.parameters = {}
    };
    $hxClasses["openfl.display.LoaderInfo"] = openfl_display_LoaderInfo, openfl_display_LoaderInfo.__name__ = ["openfl", "display", "LoaderInfo"], openfl_display_LoaderInfo.create = function(e) {
        var t = new openfl_display_LoaderInfo;
        return t.uncaughtErrorEvents = new openfl_events_UncaughtErrorEvents, null != e ? t.loader = e : t.url = openfl_display_LoaderInfo.__rootURL, t
    }, openfl_display_LoaderInfo.__super__ = openfl_events_EventDispatcher, openfl_display_LoaderInfo.prototype = $extend(openfl_events_EventDispatcher.prototype, {
        applicationDomain: null,
        bytesLoaded: null,
        bytesTotal: null,
        childAllowsParent: null,
        content: null,
        loader: null,
        parameters: null,
        uncaughtErrorEvents: null,
        url: null,
        __completed: null,
        __complete: function() {
            this.__completed || (this.bytesLoaded < this.bytesTotal && (this.bytesLoaded = this.bytesTotal), this.__update(this.bytesLoaded, this.bytesTotal), this.__completed = !0, this.dispatchEvent(new openfl_events_Event("complete")))
        },
        __update: function(e, t) {
            this.bytesLoaded = e, this.bytesTotal = t, this.dispatchEvent(new openfl_events_ProgressEvent("progress", !1, !1, e, t))
        },
        __class__: openfl_display_LoaderInfo
    });
    var openfl_display__$MovieClip_TimelineObject = function(e, t, n) {
        this.id = e, this.depth = t, this.displayObject = n
    };
    $hxClasses["openfl.display._MovieClip.TimelineObject"] = openfl_display__$MovieClip_TimelineObject, openfl_display__$MovieClip_TimelineObject.__name__ = ["openfl", "display", "_MovieClip", "TimelineObject"], openfl_display__$MovieClip_TimelineObject.prototype = {
        depth: null,
        displayObject: null,
        id: null,
        __class__: openfl_display__$MovieClip_TimelineObject
    };
    var openfl_display_Preloader = function(e) {
        lime_app_Preloader.call(this), this.display = e, null != e && (e.addEventListener("unload", $bind(this, this.display_onUnload)), openfl_Lib.current.addChild(e))
    };
    $hxClasses["openfl.display.Preloader"] = openfl_display_Preloader, openfl_display_Preloader.__name__ = ["openfl", "display", "Preloader"], openfl_display_Preloader.__super__ = lime_app_Preloader, openfl_display_Preloader.prototype = $extend(lime_app_Preloader.prototype, {
        display: null,
        ready: null,
        start: function() {
            if (!this.simulateProgress)
                if (this.ready = !0, openfl_Lib.current.get_loaderInfo().__complete(), null != this.display) {
                    var e = new openfl_events_Event("complete", !0, !0);
                    this.display.dispatchEvent(e), e.isDefaultPrevented() || this.display.dispatchEvent(new openfl_events_Event("unload"))
                } else lime_app_Preloader.prototype.start.call(this)
        },
        update: function(e, t) {
            openfl_Lib.current.get_loaderInfo().__update(e, t), null != this.display && this.display.dispatchEvent(new openfl_events_ProgressEvent("progress", !0, !0, e, t))
        },
        display_onUnload: function(e) {
            null != this.display && (this.display.removeEventListener("unload", $bind(this, this.display_onUnload)), this.display.parent == openfl_Lib.current && openfl_Lib.current.removeChild(this.display), openfl_Lib.current.stage.set_focus(null), this.display = null), this.ready && !this.simulateProgress && lime_app_Preloader.prototype.start.call(this)
        },
        __class__: openfl_display_Preloader
    });
    var openfl_display_Shader = function(e) {
        this.__data = new openfl_display_ShaderData(null), null == this.__glFragmentSource && (this.__glFragmentSource = "varying float vAlpha;\n\t\tvarying vec2 vTexCoord;\n\t\tuniform sampler2D uImage0;\n\t\t\n\t\tvoid main(void) {\n\t\t\t\n\t\t\tvec4 color = texture2D (uImage0, vTexCoord);\n\t\t\t\n\t\t\tif (color.a == 0.0) {\n\t\t\t\t\n\t\t\t\tgl_FragColor = vec4 (0.0, 0.0, 0.0, 0.0);\n\t\t\t\t\n\t\t\t} else {\n\t\t\t\t\n\t\t\t\tgl_FragColor = color * vAlpha;\n\t\t\t\t\n\t\t\t}\n\t\t\t\n\t\t}"), null == this.__glVertexSource && (this.__glVertexSource = "attribute float aAlpha;\n\t\tattribute vec4 aPosition;\n\t\tattribute vec2 aTexCoord;\n\t\tvarying float vAlpha;\n\t\tvarying vec2 vTexCoord;\n\t\t\n\t\tuniform mat4 uMatrix;\n\t\t\n\t\tvoid main(void) {\n\t\t\t\n\t\t\tvAlpha = aAlpha;\n\t\t\tvTexCoord = aTexCoord;\n\t\t\tgl_Position = uMatrix * aPosition;\n\t\t\t\n\t\t}"), this.byteCode = e, this.precisionHint = 1, this.__glSourceDirty = !0, this.__numPasses = 1
    };
    $hxClasses["openfl.display.Shader"] = openfl_display_Shader, openfl_display_Shader.__name__ = ["openfl", "display", "Shader"], openfl_display_Shader.prototype = {
        byteCode: null,
        glProgram: null,
        precisionHint: null,
        gl: null,
        __data: null,
        __glFragmentSource: null,
        __glSourceDirty: null,
        __glVertexSource: null,
        __isUniform: null,
        __inputBitmapData: null,
        __numPasses: null,
        __paramBool: null,
        __paramFloat: null,
        __paramInt: null,
        __uniformMatrix2: null,
        __uniformMatrix3: null,
        __uniformMatrix4: null,
        __disable: function() {
            null != this.glProgram && this.__disableGL()
        },
        __disableGL: function() {
            null != this.get_data().uImage0 && (this.get_data().uImage0.input = null);
            for (var e = 0, t = this.__paramBool; e < t.length;) {
                var n = t[e];
                ++e, this.gl.disableVertexAttribArray(n.index)
            }
            for (var l = 0, i = this.__paramFloat; l < i.length;) {
                var s = i[l];
                ++l, this.gl.disableVertexAttribArray(s.index)
            }
            for (var a = 0, r = this.__paramInt; a < r.length;) {
                var o = r[a];
                ++a, this.gl.disableVertexAttribArray(o.index)
            }
            this.gl.bindBuffer(this.gl.ARRAY_BUFFER, null), this.gl.bindTexture(this.gl.TEXTURE_2D, null)
        },
        __enable: function() {
            this.__init(), null != this.glProgram && this.__enableGL()
        },
        __enableGL: function() {
            for (var e = 0, t = 0, n = this.__inputBitmapData; t < n.length;) {
                var l = n[t];
                ++t, this.gl.uniform1i(l.index, e), e++
            }
        },
        __init: function() {
            null == this.__data && (this.__data = new openfl_display_ShaderData(null)), null == this.__glFragmentSource || null == this.__glVertexSource || null != this.glProgram && !this.__glSourceDirty || this.__initGL()
        },
        __initGL: function() {
            var e, t, n, l;
            (this.__glSourceDirty || null == this.__isUniform) && (this.__glSourceDirty = !1, this.glProgram = null, this.__isUniform = new haxe_ds_StringMap, this.__inputBitmapData = [], this.__paramBool = [], this.__paramFloat = [], this.__paramInt = [], e = new Float32Array(4), this.__uniformMatrix2 = e, t = new Float32Array(9), this.__uniformMatrix3 = t, n = new Float32Array(16), this.__uniformMatrix4 = n, this.__processGLData(this.get_glVertexSource(), "attribute"), this.__processGLData(this.get_glVertexSource(), "uniform"), this.__processGLData(this.get_glFragmentSource(), "uniform"));
            if (null != this.gl && null == this.glProgram && (l = "#ifdef GL_ES\n\t\t\t\tprecision " + (1 == this.precisionHint ? "mediump" : "lowp") + " float;\n\t\t\t\t#endif\n\t\t\t\t" + this.get_glFragmentSource(), this.glProgram = lime_utils_GLUtils.createProgram(this.get_glVertexSource(), l), null != this.glProgram)) {
                for (var i = 0, s = this.__inputBitmapData; i < s.length;) {
                    var a = s[i];
                    ++i, this.__isUniform.get(a.name) ? a.index = this.gl.getUniformLocation(this.glProgram, a.name) : a.index = this.gl.getAttribLocation(this.glProgram, a.name)
                }
                for (var r = 0, o = this.__paramBool; r < o.length;) {
                    var d = o[r];
                    ++r, this.__isUniform.get(d.name) ? d.index = this.gl.getUniformLocation(this.glProgram, d.name) : d.index = this.gl.getAttribLocation(this.glProgram, d.name)
                }
                for (var _ = 0, h = this.__paramFloat; _ < h.length;) {
                    var p = h[_];
                    ++_, this.__isUniform.get(p.name) ? p.index = this.gl.getUniformLocation(this.glProgram, p.name) : p.index = this.gl.getAttribLocation(this.glProgram, p.name)
                }
                for (var c = 0, Q = this.__paramInt; c < Q.length;) {
                    var U = Q[c];
                    ++c, this.__isUniform.get(U.name) ? U.index = this.gl.getUniformLocation(this.glProgram, U.name) : U.index = this.gl.getAttribLocation(this.glProgram, U.name)
                }
            }
        },
        __processGLData: function(e, t) {
            var n, l, i, s, a = 0;
            for (l = new EReg("uniform" == t ? "uniform ([A-Za-z0-9]+) ([A-Za-z0-9]+)" : "attribute ([A-Za-z0-9]+) ([A-Za-z0-9]+)", ""); l.matchSub(e, a);) {
                if (s = l.matched(1), i = l.matched(2), StringTools.startsWith(s, "sampler")) {
                    var r = new openfl_display_ShaderInput;
                    r.name = i, this.__inputBitmapData.push(r), Reflect.setField(this.get_data(), i, r)
                } else {
                    var o;
                    switch (s) {
                        case "bool":
                            o = 0;
                            break;
                        case "double":
                        case "float":
                            o = 4;
                            break;
                        case "int":
                        case "uint":
                            o = 8;
                            break;
                        case "bvec2":
                            o = 1;
                            break;
                        case "bvec3":
                            o = 2;
                            break;
                        case "bvec4":
                            o = 3;
                            break;
                        case "ivec2":
                        case "uvec2":
                            o = 9;
                            break;
                        case "ivec3":
                        case "uvec3":
                            o = 10;
                            break;
                        case "ivec4":
                        case "uvec4":
                            o = 11;
                            break;
                        case "vec2":
                        case "dvec2":
                            o = 5;
                            break;
                        case "vec3":
                        case "dvec3":
                            o = 6;
                            break;
                        case "vec4":
                        case "dvec4":
                            o = 7;
                            break;
                        case "mat2":
                        case "mat2x2":
                            o = 12;
                            break;
                        case "mat2x3":
                            o = 13;
                            break;
                        case "mat2x4":
                            o = 14;
                            break;
                        case "mat3x2":
                            o = 15;
                            break;
                        case "mat3":
                        case "mat3x3":
                            o = 16;
                            break;
                        case "mat3x4":
                            o = 17;
                            break;
                        case "mat4x2":
                            o = 18;
                            break;
                        case "mat4x3":
                            o = 19;
                            break;
                        case "mat4":
                        case "mat4x4":
                            o = 20;
                            break;
                        default:
                            o = null
                    }
                    switch (o) {
                        case 0:
                        case 1:
                        case 2:
                        case 3:
                            var d = new openfl_display_ShaderParameter;
                            d.name = i, d.type = o, this.__paramBool.push(d), Reflect.setField(this.get_data(), i, d);
                            break;
                        case 8:
                        case 9:
                        case 10:
                        case 11:
                            var _ = new openfl_display_ShaderParameter;
                            _.name = i, _.type = o, this.__paramInt.push(_), Reflect.setField(this.get_data(), i, _);
                            break;
                        default:
                            var h = new openfl_display_ShaderParameter;
                            h.name = i, h.type = o, this.__paramFloat.push(h), Reflect.setField(this.get_data(), i, h)
                    }
                }
                this.__isUniform.set(i, "uniform" == t), a = (n = l.matchedPos()).pos + n.len
            }
        },
        __update: function() {
            null != this.glProgram && this.__updateGL()
        },
        __updateGL: function() {
            for (var e = 0, t = 0, n = this.__inputBitmapData; t < n.length;) {
                var l = n[t];
                ++t, null != l.input && (this.gl.activeTexture(this.gl.TEXTURE0 + e), this.gl.bindTexture(this.gl.TEXTURE_2D, l.input.getTexture(this.gl)), l.smoothing ? (this.gl.texParameteri(this.gl.TEXTURE_2D, this.gl.TEXTURE_MAG_FILTER, this.gl.LINEAR), this.gl.texParameteri(this.gl.TEXTURE_2D, this.gl.TEXTURE_MIN_FILTER, this.gl.LINEAR)) : (this.gl.texParameteri(this.gl.TEXTURE_2D, this.gl.TEXTURE_MAG_FILTER, this.gl.NEAREST), this.gl.texParameteri(this.gl.TEXTURE_2D, this.gl.TEXTURE_MIN_FILTER, this.gl.NEAREST))), e++
            }
            for (var i = 0, s = 0, a = this.__paramBool; s < a.length;) {
                var r = a[s];
                ++s;
                var o = r.value;
                if (i = r.index, null != o) switch (r.type) {
                    case 0:
                        this.gl.uniform1i(i, o[0] ? 1 : 0);
                        break;
                    case 1:
                        this.gl.uniform2i(i, o[0] ? 1 : 0, o[1] ? 1 : 0);
                        break;
                    case 2:
                        this.gl.uniform3i(i, o[0] ? 1 : 0, o[1] ? 1 : 0, o[2] ? 1 : 0);
                        break;
                    case 3:
                        this.gl.uniform4i(i, o[0] ? 1 : 0, o[1] ? 1 : 0, o[2] ? 1 : 0, o[3] ? 1 : 0)
                } else this.__isUniform.get(r.name) || this.gl.enableVertexAttribArray(r.index)
            }
            for (var d = 0, _ = this.__paramFloat; d < _.length;) {
                var h = _[d];
                ++d;
                var p = h.value;
                if (i = h.index, null != p) switch (h.type) {
                    case 4:
                        this.gl.uniform1f(i, p[0]);
                        break;
                    case 5:
                        this.gl.uniform2f(i, p[0], p[1]);
                        break;
                    case 6:
                        this.gl.uniform3f(i, p[0], p[1], p[2]);
                        break;
                    case 7:
                        this.gl.uniform4f(i, p[0], p[1], p[2], p[3]);
                        break;
                    case 12:
                        for (var c = 0; c < 4;) {
                            var Q = c++;
                            this.__uniformMatrix2[Q] = p[Q]
                        }
                        this.gl.uniformMatrix2fv(i, !1, this.__uniformMatrix2);
                        break;
                    case 16:
                        for (var U = 0; U < 9;) {
                            var m = U++;
                            this.__uniformMatrix3[m] = p[m]
                        }
                        this.gl.uniformMatrix3fv(i, !1, this.__uniformMatrix3);
                        break;
                    case 20:
                        for (var u = 0; u < 16;) {
                            var F = u++;
                            this.__uniformMatrix4[F] = p[F]
                        }
                        this.gl.uniformMatrix4fv(i, !1, this.__uniformMatrix4)
                } else this.__isUniform.get(h.name) || this.gl.enableVertexAttribArray(h.index)
            }
            for (var N = 0, S = this.__paramInt; N < S.length;) {
                var W = S[N];
                ++N;
                var B = W.value;
                if (null != B) switch (W.type) {
                    case 8:
                        this.gl.uniform1i(i, B[0]);
                        break;
                    case 9:
                        this.gl.uniform2i(i, B[0], B[1]);
                        break;
                    case 10:
                        this.gl.uniform3i(i, B[0], B[1], B[2]);
                        break;
                    case 11:
                        this.gl.uniform4i(i, B[0], B[1], B[2], B[3])
                } else this.__isUniform.get(W.name) || this.gl.enableVertexAttribArray(W.index)
            }
        },
        get_data: function() {
            return (this.__glSourceDirty || null == this.__data) && this.__init(), this.__data
        },
        get_glFragmentSource: function() {
            return this.__glFragmentSource
        },
        get_glVertexSource: function() {
            return this.__glVertexSource
        },
        __class__: openfl_display_Shader,
        __properties__: {
            get_glVertexSource: "get_glVertexSource",
            get_glFragmentSource: "get_glFragmentSource",
            get_data: "get_data"
        }
    };
    var openfl_display_ShaderData = function(e) {};
    $hxClasses["openfl.display.ShaderData"] = openfl_display_ShaderData, openfl_display_ShaderData.__name__ = ["openfl", "display", "ShaderData"], openfl_display_ShaderData.prototype = {
        aAlpha: null,
        aPosition: null,
        aTexCoord: null,
        uImage0: null,
        uMatrix: null,
        __class__: openfl_display_ShaderData
    };
    var openfl_display_ShaderInput = function() {
        this.channels = 0, this.height = 0, this.index = 0, this.width = 0
    };
    $hxClasses["openfl.display.ShaderInput"] = openfl_display_ShaderInput, openfl_display_ShaderInput.__name__ = ["openfl", "display", "ShaderInput"], openfl_display_ShaderInput.prototype = {
        channels: null,
        height: null,
        index: null,
        input: null,
        name: null,
        smoothing: null,
        width: null,
        __class__: openfl_display_ShaderInput
    };
    var openfl_display_ShaderParameter = function() {
        this.index = 0
    };
    $hxClasses["openfl.display.ShaderParameter"] = openfl_display_ShaderParameter, openfl_display_ShaderParameter.__name__ = ["openfl", "display", "ShaderParameter"], openfl_display_ShaderParameter.prototype = {
        index: null,
        name: null,
        type: null,
        value: null,
        __class__: openfl_display_ShaderParameter
    };
    var openfl_display_Shape = function() {
        openfl_display_DisplayObject.call(this)
    };
    $hxClasses["openfl.display.Shape"] = openfl_display_Shape, openfl_display_Shape.__name__ = ["openfl", "display", "Shape"], openfl_display_Shape.__super__ = openfl_display_DisplayObject, openfl_display_Shape.prototype = $extend(openfl_display_DisplayObject.prototype, {
        get_graphics: function() {
            return null == this.__graphics && (this.__graphics = new openfl_display_Graphics(this)), this.__graphics
        },
        __class__: openfl_display_Shape,
        __properties__: $extend(openfl_display_DisplayObject.prototype.__properties__, {
            get_graphics: "get_graphics"
        })
    });
    var openfl_display_SimpleButton = function(e, t, n, l) {
        if (openfl_display_InteractiveObject.call(this), this.enabled = !0, this.trackAsMenu = !1, this.useHandCursor = !0, this.set_upState(null != e ? e : new openfl_display_DisplayObject), this.set_overState(t), this.set_downState(n), this.set_hitTestState(null != l ? l : new openfl_display_DisplayObject), this.addEventListener("mouseDown", $bind(this, this.__this_onMouseDown)), this.addEventListener("mouseOut", $bind(this, this.__this_onMouseOut)), this.addEventListener("mouseOver", $bind(this, this.__this_onMouseOver)), this.addEventListener("mouseUp", $bind(this, this.__this_onMouseUp)), this.set___currentState(this.upState), null != openfl_display_SimpleButton.__initSymbol) {
            var i = openfl_display_SimpleButton.__initSWF;
            this.__symbol = openfl_display_SimpleButton.__initSymbol, openfl_display_SimpleButton.__initSWF = null, openfl_display_SimpleButton.__initSymbol = null, this.__fromSymbol(i, this.__symbol)
        }
    };
    $hxClasses["openfl.display.SimpleButton"] = openfl_display_SimpleButton, openfl_display_SimpleButton.__name__ = ["openfl", "display", "SimpleButton"], openfl_display_SimpleButton.__super__ = openfl_display_InteractiveObject, openfl_display_SimpleButton.prototype = $extend(openfl_display_InteractiveObject.prototype, {
        downState: null,
        enabled: null,
        hitTestState: null,
        overState: null,
        trackAsMenu: null,
        upState: null,
        useHandCursor: null,
        __currentState: null,
        __ignoreEvent: null,
        __symbol: null,
        __fromSymbol: function(e, t) {
            this.__symbol = t, null != t.downState && this.set_downState(t.downState.__createObject(e)), null != t.hitState && this.set_hitTestState(t.hitState.__createObject(e)), null != t.overState && this.set_overState(t.overState.__createObject(e)), null != t.upState && this.set_upState(t.upState.__createObject(e))
        },
        __getBounds: function(e, t) {
            openfl_display_InteractiveObject.prototype.__getBounds.call(this, e, t), null != t && (this.__updateTransforms(t), this.__updateChildren(!0)), this.__currentState.__getBounds(e, this.__currentState.__worldTransform), null != t && (this.__updateTransforms(), this.__updateChildren(!0))
        },
        __getCursor: function() {
            return this.useHandCursor && !this.__ignoreEvent ? lime_ui_MouseCursor.POINTER : null
        },
        __hitTest: function(e, t, n, l, i, s) {
            var a = !1;
            if (null != this.hitTestState) {
                var r = this.__updateTransform(this.hitTestState);
                this.hitTestState.__hitTest(e, t, n, l, i, s) && (null != l && (l[l.length - 1] = s), a = !0), this.__resetTransform(this.hitTestState, r)
            } else if (null != this.__currentState) {
                if (!s.get_visible() || this.__isMask || i && !this.mouseEnabled) return !1;
                if (null != this.get_mask() && !this.get_mask().__hitTestMask(e, t)) return !1;
                var o = this.__updateTransform(this.__currentState);
                this.__currentState.__hitTest(e, t, n, l, i, s) && (a = i), this.__resetTransform(this.__currentState, o)
            }
            if (null != l)
                for (; l.length > 1 && l[l.length - 1] == l[l.length - 2];) l.pop();
            return a
        },
        __hitTestMask: function(e, t) {
            var n = !1,
                l = this.__updateTransform(this.__currentState);
            return this.__currentState.__hitTestMask(e, t) && (n = !0), this.__resetTransform(this.__currentState, l), n
        },
        __renderCanvas: function(e) {
            !this.__renderable || this.__worldAlpha <= 0 || (e.maskManager.pushObject(this), this.__currentState.__renderCanvas(e), e.maskManager.popObject(this))
        },
        __renderCanvasMask: function(e) {
            var t = new openfl_geom_Rectangle;
            this.__getBounds(t, this.__transform), e.context.rect(0, 0, t.width, t.height), this.__currentState.__renderCanvasMask(e)
        },
        __renderGL: function(e) {
            !this.__renderable || this.__worldAlpha <= 0 || (e.maskManager.pushObject(this), this.__currentState.__renderGL(e), e.maskManager.popObject(this))
        },
        __resetTransform: function(e, t) {
            e.__updateTransforms(t), e.__updateChildren(!1)
        },
        __setStageReference: function(e) {
            openfl_display_InteractiveObject.prototype.__setStageReference.call(this, e), null != this.__currentState && this.__currentState.__setStageReference(e)
        },
        __updateTransform: function(e) {
            e.__worldTransform;
            var t = e.__transform,
                n = this.__worldTransform,
                l = openfl_geom_Matrix.__temp;
            l.a = t.a * n.a + t.b * n.c, l.b = t.a * n.b + t.b * n.d, l.c = t.c * n.a + t.d * n.c, l.d = t.c * n.b + t.d * n.d, l.tx = t.tx * n.a + t.ty * n.c + n.tx, l.ty = t.tx * n.b + t.ty * n.d + n.ty;
            var i = e.__transform;
            return e.__transform = l, e.__update(!1, !0), e.__transform = i, i
        },
        __updateTransforms: function(e) {
            openfl_display_InteractiveObject.prototype.__updateTransforms.call(this, e), this.__updateTransform(this.__currentState)
        },
        set_downState: function(e) {
            return null != this.downState && this.__currentState == this.downState && this.set___currentState(e), this.downState = e
        },
        set_hitTestState: function(e) {
            return this.hitTestState = e
        },
        set_overState: function(e) {
            return null != this.overState && this.__currentState == this.overState && this.set___currentState(e), this.overState = e
        },
        set_upState: function(e) {
            return null != this.upState && this.__currentState == this.upState && this.set___currentState(e), this.upState = e
        },
        set___currentState: function(e) {
            return null != this.__currentState && (this.__currentState.__renderParent = null), null != e.parent && e.parent.removeChild(e), e.__renderParent = this, this.__currentState = e
        },
        __this_onMouseDown: function(e) {
            null != this.downState && this.set___currentState(this.downState)
        },
        __this_onMouseOut: function(e) {
            this.__ignoreEvent = !1, this.upState != this.__currentState && this.set___currentState(this.upState)
        },
        __this_onMouseOver: function(e) {
            e.buttonDown && (this.__ignoreEvent = !0), this.overState == this.__currentState || null == this.overState || this.__ignoreEvent || this.set___currentState(this.overState)
        },
        __this_onMouseUp: function(e) {
            this.__ignoreEvent = !1, null != this.overState ? this.set___currentState(this.overState) : this.set___currentState(this.upState)
        },
        __class__: openfl_display_SimpleButton,
        __properties__: $extend(openfl_display_InteractiveObject.prototype.__properties__, {
            set___currentState: "set___currentState",
            set_upState: "set_upState",
            set_overState: "set_overState",
            set_hitTestState: "set_hitTestState",
            set_downState: "set_downState"
        })
    });
    var openfl_display_Stage = function(e, t) {
        openfl_display_DisplayObjectContainer.call(this), this.application = e.application, this.window = e, null == t ? (this.__transparent = !0, this.set_color(0)) : this.set_color(t), this.set_name(null), this.__deltaTime = 0, this.__displayState = 2, this.__mouseX = 0, this.__mouseY = 0, this.__lastClickTime = 0, this.__logicalWidth = 0, this.__logicalHeight = 0, this.__displayMatrix = new openfl_geom_Matrix, this.stage3Ds = openfl__$Vector_Vector_$Impl_$.toObjectVector(null);
        var n = new openfl_display_Stage3D;
        this.stage3Ds.push(n), this.__resize(), this.stage = this, this.align = 6, this.allowsFullScreen = !1, this.allowsFullScreenInteractive = !1, this.quality = 1, this.scaleMode = 2, this.showDefaultContextMenu = !0, this.softKeyboardRect = new openfl_geom_Rectangle, this.stageFocusRect = !0, this.__macKeyboard = /AppleWebKit/.test(navigator.userAgent) && /Mobile\/\w+/.test(navigator.userAgent) || /Mac/.test(navigator.platform), this.__clearBeforeRender = !0, this.__stack = [], this.__rollOutStack = [], null == openfl_Lib.current.stage && this.stage.addChild(openfl_Lib.current)
    };
    $hxClasses["openfl.display.Stage"] = openfl_display_Stage, openfl_display_Stage.__name__ = ["openfl", "display", "Stage"], openfl_display_Stage.__interfaces__ = [lime_app_IModule], openfl_display_Stage.__super__ = openfl_display_DisplayObjectContainer, openfl_display_Stage.prototype = $extend(openfl_display_DisplayObjectContainer.prototype, {
        align: null,
        allowsFullScreen: null,
        allowsFullScreenInteractive: null,
        application: null,
        quality: null,
        scaleMode: null,
        showDefaultContextMenu: null,
        softKeyboardRect: null,
        stage3Ds: null,
        stageFocusRect: null,
        stageHeight: null,
        stageWidth: null,
        window: null,
        __cacheFocus: null,
        __clearBeforeRender: null,
        __color: null,
        __colorSplit: null,
        __colorString: null,
        __deltaTime: null,
        __dirty: null,
        __displayMatrix: null,
        __displayState: null,
        __dragBounds: null,
        __dragObject: null,
        __dragOffsetX: null,
        __dragOffsetY: null,
        __focus: null,
        __invalidated: null,
        __lastClickTime: null,
        __logicalWidth: null,
        __logicalHeight: null,
        __macKeyboard: null,
        __mouseDownLeft: null,
        __mouseDownMiddle: null,
        __mouseDownRight: null,
        __mouseOverTarget: null,
        __mouseX: null,
        __mouseY: null,
        __primaryTouch: null,
        __renderer: null,
        __rendering: null,
        __rollOutStack: null,
        __stack: null,
        __transparent: null,
        addRenderer: function(e) {
            var t, n, l, i, s, a;
            e.onRender.add((t = $bind(this, this.render), n = e, function() {
                t(n)
            })), e.onContextLost.add((l = $bind(this, this.onRenderContextLost), i = e, function() {
                l(i)
            })), e.onContextRestored.add((s = $bind(this, this.onRenderContextRestored), a = e, function(e) {
                s(a, e)
            }))
        },
        addWindow: function(e) {
            var t, n, l, i, s, a, r, o, d, _, h, p, c, Q, U, m, u, F, N, S, W, B, Z, D, V, f, R, T, J, g, b, E, v, k, M, y, x, w, G, H, C, Y, O, X, z, I;
            this.window == e && (e.onActivate.add((t = $bind(this, this.onWindowActivate), n = e, function() {
                t(n)
            })), e.onClose.add((l = $bind(this, this.onWindowClose), i = e, function() {
                l(i)
            }), !1, -9e3), e.onCreate.add((s = $bind(this, this.onWindowCreate), a = e, function() {
                s(a)
            })), e.onDeactivate.add((r = $bind(this, this.onWindowDeactivate), o = e, function() {
                r(o)
            })), e.onDropFile.add((d = $bind(this, this.onWindowDropFile), _ = e, function(e) {
                d(_, e)
            })), e.onEnter.add((h = $bind(this, this.onWindowEnter), p = e, function() {
                h(p)
            })), e.onFocusIn.add((c = $bind(this, this.onWindowFocusIn), Q = e, function() {
                c(Q)
            })), e.onFocusOut.add((U = $bind(this, this.onWindowFocusOut), m = e, function() {
                U(m)
            })), e.onFullscreen.add((u = $bind(this, this.onWindowFullscreen), F = e, function() {
                u(F)
            })), e.onKeyDown.add((N = $bind(this, this.onKeyDown), S = e, function(e, t) {
                N(S, e, t)
            })), e.onKeyUp.add((W = $bind(this, this.onKeyUp), B = e, function(e, t) {
                W(B, e, t)
            })), e.onLeave.add((Z = $bind(this, this.onWindowLeave), D = e, function() {
                Z(D)
            })), e.onMinimize.add((V = $bind(this, this.onWindowMinimize), f = e, function() {
                V(f)
            })), e.onMouseDown.add((R = $bind(this, this.onMouseDown), T = e, function(e, t, n) {
                R(T, e, t, n)
            })), e.onMouseMove.add((J = $bind(this, this.onMouseMove), g = e, function(e, t) {
                J(g, e, t)
            })), e.onMouseMoveRelative.add((b = $bind(this, this.onMouseMoveRelative), E = e, function(e, t) {
                b(E, e, t)
            })), e.onMouseUp.add((v = $bind(this, this.onMouseUp), k = e, function(e, t, n) {
                v(k, e, t, n)
            })), e.onMouseWheel.add((M = $bind(this, this.onMouseWheel), y = e, function(e, t) {
                M(y, e, t)
            })), e.onMove.add((x = $bind(this, this.onWindowMove), w = e, function(e, t) {
                x(w, e, t)
            })), e.onResize.add((G = $bind(this, this.onWindowResize), H = e, function(e, t) {
                G(H, e, t)
            })), e.onRestore.add((C = $bind(this, this.onWindowRestore), Y = e, function() {
                C(Y)
            })), e.onTextEdit.add((O = $bind(this, this.onTextEdit), X = e, function(e, t, n) {
                O(X, e, t, n)
            })), e.onTextInput.add((z = $bind(this, this.onTextInput), I = e, function(e) {
                z(I, e)
            })), e.id > -1 && this.onWindowCreate(e))
        },
        registerModule: function(e) {
            e.onExit.add($bind(this, this.onModuleExit), !1, 0), e.onUpdate.add($bind(this, this.update));
            for (var t = lime_ui_Gamepad.devices.iterator(); t.hasNext();) {
                var n = t.next();
                this.__onGamepadConnect(n)
            }
            lime_ui_Gamepad.onConnect.add($bind(this, this.__onGamepadConnect)), lime_ui_Touch.onStart.add($bind(this, this.onTouchStart)), lime_ui_Touch.onMove.add($bind(this, this.onTouchMove)), lime_ui_Touch.onEnd.add($bind(this, this.onTouchEnd))
        },
        setPreloader: function(e) {},
        globalToLocal: function(e) {
            return e.clone()
        },
        onGamepadAxisMove: function(e, t, n) {
            try {
                openfl_ui_GameInput.__onGamepadAxisMove(e, t, n)
            } catch (e) {
                e instanceof js__$Boot_HaxeError && (e = e.val), this.__handleError(e)
            }
        },
        onGamepadButtonDown: function(e, t) {
            try {
                openfl_ui_GameInput.__onGamepadButtonDown(e, t)
            } catch (e) {
                e instanceof js__$Boot_HaxeError && (e = e.val), this.__handleError(e)
            }
        },
        onGamepadButtonUp: function(e, t) {
            try {
                openfl_ui_GameInput.__onGamepadButtonUp(e, t)
            } catch (e) {
                e instanceof js__$Boot_HaxeError && (e = e.val), this.__handleError(e)
            }
        },
        onGamepadConnect: function(e) {
            try {
                openfl_ui_GameInput.__onGamepadConnect(e)
            } catch (e) {
                e instanceof js__$Boot_HaxeError && (e = e.val), this.__handleError(e)
            }
        },
        onGamepadDisconnect: function(e) {
            try {
                openfl_ui_GameInput.__onGamepadDisconnect(e)
            } catch (e) {
                e instanceof js__$Boot_HaxeError && (e = e.val), this.__handleError(e)
            }
        },
        onKeyDown: function(e, t, n) {
            if (null != this.window && this.window == e) try {
                this.__onKey("keyDown", t, n)
            } catch (e) {
                e instanceof js__$Boot_HaxeError && (e = e.val), this.__handleError(e)
            }
        },
        onKeyUp: function(e, t, n) {
            if (null != this.window && this.window == e) try {
                this.__onKey("keyUp", t, n)
            } catch (e) {
                e instanceof js__$Boot_HaxeError && (e = e.val), this.__handleError(e)
            }
        },
        onModuleExit: function(e) {
            if (null != this.window) try {
                this.__broadcastEvent(new openfl_events_Event("deactivate"))
            } catch (e) {
                e instanceof js__$Boot_HaxeError && (e = e.val), this.__handleError(e)
            }
        },
        onMouseDown: function(e, t, n, l) {
            if (null != this.window && this.window == e) try {
                var i;
                switch (l) {
                    case 1:
                        i = "middleMouseDown";
                        break;
                    case 2:
                        i = "rightMouseDown";
                        break;
                    default:
                        i = "mouseDown"
                }
                this.__onMouse(i, t * e.__scale | 0, n * e.__scale | 0, l)
            } catch (e) {
                e instanceof js__$Boot_HaxeError && (e = e.val), this.__handleError(e)
            }
        },
        onMouseMove: function(e, t, n) {
            if (null != this.window && this.window == e) try {
                this.__onMouse("mouseMove", t * e.__scale | 0, n * e.__scale | 0, 0)
            } catch (e) {
                e instanceof js__$Boot_HaxeError && (e = e.val), this.__handleError(e)
            }
        },
        onMouseMoveRelative: function(e, t, n) {},
        onMouseUp: function(e, t, n, l) {
            if (null != this.window && this.window == e) try {
                var i;
                switch (l) {
                    case 1:
                        i = "middleMouseUp";
                        break;
                    case 2:
                        i = "rightMouseUp";
                        break;
                    default:
                        i = "mouseUp"
                }
                this.__onMouse(i, t * e.__scale | 0, n * e.__scale | 0, l), this.showDefaultContextMenu || 2 != l || e.onMouseUp.cancel()
            } catch (e) {
                e instanceof js__$Boot_HaxeError && (e = e.val), this.__handleError(e)
            }
        },
        onMouseWheel: function(e, t, n) {
            if (null != this.window && this.window == e) try {
                this.__onMouseWheel(t * e.__scale | 0, n * e.__scale | 0)
            } catch (e) {
                e instanceof js__$Boot_HaxeError && (e = e.val), this.__handleError(e)
            }
        },
        onRenderContextLost: function(e) {},
        onRenderContextRestored: function(e, t) {},
        onTextEdit: function(e, t, n, l) {},
        onTextInput: function(e, t) {
            if (null != this.window && this.window == e) try {
                var n = [];
                null == this.__focus ? this.__getInteractive(n) : this.__focus.__getInteractive(n);
                var l = new openfl_events_TextEvent("textInput", !0, !1, t);
                n.length > 0 ? (n.reverse(), this.__fireEvent(l, n)) : this.__dispatchEvent(l)
            } catch (e) {
                e instanceof js__$Boot_HaxeError && (e = e.val), this.__handleError(e)
            }
        },
        onTouchMove: function(e) {
            try {
                this.__onTouch("touchMove", e)
            } catch (e) {
                e instanceof js__$Boot_HaxeError && (e = e.val), this.__handleError(e)
            }
        },
        onTouchEnd: function(e) {
            try {
                this.__primaryTouch == e && (this.__primaryTouch = null), this.__onTouch("touchEnd", e)
            } catch (e) {
                e instanceof js__$Boot_HaxeError && (e = e.val), this.__handleError(e)
            }
        },
        onTouchStart: function(e) {
            try {
                null == this.__primaryTouch && (this.__primaryTouch = e), this.__onTouch("touchBegin", e)
            } catch (e) {
                e instanceof js__$Boot_HaxeError && (e = e.val), this.__handleError(e)
            }
        },
        onWindowActivate: function(e) {
            null != this.window && this.window
        },
        onWindowClose: function(e) {
            this.window == e && (this.window = null);
            try {
                this.__primaryTouch = null, this.__broadcastEvent(new openfl_events_Event("deactivate"))
            } catch (e) {
                e instanceof js__$Boot_HaxeError && (e = e.val), this.__handleError(e)
            }
        },
        onWindowCreate: function(e) {
            if (null != this.window && this.window == e) try {
                if (null != e.renderer) {
                    var t = e.renderer.context;
                    switch (t[1]) {
                        case 0:
                            t[2];
                            break;
                        case 1:
                            var n = t[2];
                            this.__renderer = new openfl__$internal_renderer_canvas_CanvasRenderer(this, n);
                            break;
                        case 2:
                            t[2];
                            break;
                        case 4:
                            t[2];
                            break;
                        case 5:
                            t[2]
                    }
                }
            } catch (e) {
                e instanceof js__$Boot_HaxeError && (e = e.val), this.__handleError(e)
            }
        },
        onWindowDeactivate: function(e) {
            null != this.window && this.window
        },
        onWindowDropFile: function(e, t) {},
        onWindowEnter: function(e) {},
        onWindowFocusIn: function(e) {
            if (null != this.window && this.window == e) try {
                this.__broadcastEvent(new openfl_events_Event("activate")), this.set_focus(this.__cacheFocus)
            } catch (e) {
                e instanceof js__$Boot_HaxeError && (e = e.val), this.__handleError(e)
            }
        },
        onWindowFocusOut: function(e) {
            if (null != this.window && this.window == e) try {
                this.__primaryTouch = null, this.__broadcastEvent(new openfl_events_Event("deactivate"));
                var t = this.get_focus();
                this.set_focus(null), this.__cacheFocus = t
            } catch (e) {
                e instanceof js__$Boot_HaxeError && (e = e.val), this.__handleError(e)
            }
        },
        onWindowFullscreen: function(e) {
            if (null != this.window && this.window == e) try {
                this.__resize(), 2 == this.__displayState && (this.__displayState = 1, this.__dispatchEvent(new openfl_events_FullScreenEvent("fullScreen", !1, !1, !1, !0)))
            } catch (e) {
                e instanceof js__$Boot_HaxeError && (e = e.val), this.__handleError(e)
            }
        },
        onWindowLeave: function(e) {
            if (null != this.window && this.window == e) try {
                this.__dispatchEvent(new openfl_events_Event("mouseLeave"))
            } catch (e) {
                e instanceof js__$Boot_HaxeError && (e = e.val), this.__handleError(e)
            }
        },
        onWindowMinimize: function(e) {
            null != this.window && this.window
        },
        onWindowMove: function(e, t, n) {},
        onWindowResize: function(e, t, n) {
            if (null != this.window && this.window == e) try {
                this.__resize(), 2 == this.__displayState || e.__fullscreen || (this.__displayState = 2, this.__dispatchEvent(new openfl_events_FullScreenEvent("fullScreen", !1, !1, !0, !0)))
            } catch (e) {
                e instanceof js__$Boot_HaxeError && (e = e.val), this.__handleError(e)
            }
        },
        onWindowRestore: function(e) {
            null != this.window && this.window
        },
        render: function(e) {
            if (null != e.window && e.window == this.window) {
                try {
                    if (null != this.application && this.application.__windows.length > 0 && (this.__transformDirty || (this.__transformDirty = !0, openfl_display_DisplayObject.__worldTransformDirty++), this.__renderDirty || (this.__renderDirty = !0, openfl_display_DisplayObject.__worldRenderDirty++)), this.__rendering) return void BitmapBatch.renderGLStack();
                    if (this.__rendering = !0, null != this.__renderer && this.__renderer.clear(), this.__broadcastEvent(new openfl_events_Event("enterFrame")), this.__broadcastEvent(new openfl_events_Event("frameConstructed")), this.__broadcastEvent(new openfl_events_Event("exitFrame")), this.__invalidated && (this.__invalidated = !1, this.__broadcastEvent(new openfl_events_Event("render"))), this.__renderable = !0, this.__enterFrame(this.__deltaTime), this.__deltaTime = 0, this.__update(!1, !0), null != this.__renderer) {
                        if (e.type == lime_graphics_RendererType.CAIRO) {
                            var t = e.context;
                            switch (t[1]) {
                                case 4:
                                    t[2]
                            }
                        }
                        this.__renderer.render()
                    }
                    this.__rendering = !1
                } catch (e) {
                    e instanceof js__$Boot_HaxeError && (e = e.val), this.__handleError(e)
                }
                BitmapBatch.renderGLStack()
            } else BitmapBatch.renderGLStack()
        },
        update: function(e) {
            this.__deltaTime = e
        },
        __broadcastEvent: function(e) {
            if (openfl_display_DisplayObject.__broadcastEvents.exists(e.type))
                for (var t = openfl_display_DisplayObject.__broadcastEvents.get(e.type), n = 0; n < t.length;) {
                    var l = t[n];
                    ++n, l.__dispatch(e)
                }
        },
        __drag: function(e) {
            var t = this.__dragObject.parent;
            null != t && t.__getWorldTransform().__transformInversePoint(e);
            var n = e.x + this.__dragOffsetX,
                l = e.y + this.__dragOffsetY;
            null != this.__dragBounds && (n < this.__dragBounds.x ? n = this.__dragBounds.x : n > this.__dragBounds.get_right() && (n = this.__dragBounds.get_right()), l < this.__dragBounds.y ? l = this.__dragBounds.y : l > this.__dragBounds.get_bottom() && (l = this.__dragBounds.get_bottom())), this.__dragObject.set_x(n), this.__dragObject.set_y(l)
        },
        __fireEvent: function(e, t) {
            var n = t.length;
            if (0 == n) e.eventPhase = 2, e.target.__dispatch(e);
            else {
                e.eventPhase = 1, e.target = t[t.length - 1];
                for (var l = 0, i = n - 1; l < i;) {
                    if (t[l++].__dispatch(e), e.__isCanceled) return
                }
                if (e.eventPhase = 2, e.target.__dispatch(e), e.__isCanceled) return;
                if (e.bubbles) {
                    e.eventPhase = 3;
                    for (var s = n - 2; s >= 0;) {
                        if (t[s].__dispatch(e), e.__isCanceled) return;
                        s--
                    }
                }
            }
        },
        __getInteractive: function(e) {
            return null != e && e.push(this), !0
        },
        __handleError: function(e) {
            var t = new openfl_events_UncaughtErrorEvent("uncaughtError", !0, !0, e);
            if (openfl_Lib.current.__loaderInfo.uncaughtErrorEvents.dispatchEvent(t), !t.__preventDefault) throw e
        },
        __onKey: function(e, t, n) {
            openfl_events_MouseEvent.__altKey = lime_ui__$KeyModifier_KeyModifier_$Impl_$.get_altKey(n), openfl_events_MouseEvent.__commandKey = lime_ui__$KeyModifier_KeyModifier_$Impl_$.get_metaKey(n), openfl_events_MouseEvent.__ctrlKey = lime_ui__$KeyModifier_KeyModifier_$Impl_$.get_ctrlKey(n), openfl_events_MouseEvent.__shiftKey = lime_ui__$KeyModifier_KeyModifier_$Impl_$.get_shiftKey(n);
            var l = [];
            if (null == this.__focus ? this.__getInteractive(l) : this.__focus.__getInteractive(l), l.length > 0) {
                var i, s;
                switch (t) {
                    case 1073742048:
                    case 1073742049:
                    case 1073742050:
                    case 1073742051:
                        i = 1;
                        break;
                    case 1073742052:
                    case 1073742053:
                    case 1073742054:
                    case 1073742055:
                        i = 2;
                        break;
                    case 1073741908:
                    case 1073741909:
                    case 1073741910:
                    case 1073741911:
                    case 1073741912:
                    case 1073741913:
                    case 1073741914:
                    case 1073741915:
                    case 1073741916:
                    case 1073741917:
                    case 1073741918:
                    case 1073741919:
                    case 1073741920:
                    case 1073741921:
                    case 1073741922:
                    case 1073741923:
                    case 1073742044:
                        i = 3;
                        break;
                    default:
                        i = 0
                }
                switch (t) {
                    case 8:
                        s = 8;
                        break;
                    case 9:
                        s = 9;
                        break;
                    case 13:
                        s = 13;
                        break;
                    case 27:
                        s = 27;
                        break;
                    case 32:
                        s = 32;
                        break;
                    case 33:
                        s = 49;
                        break;
                    case 34:
                        s = 222;
                        break;
                    case 35:
                        s = 51;
                        break;
                    case 36:
                        s = 52;
                        break;
                    case 37:
                        s = 53;
                        break;
                    case 38:
                        s = 55;
                        break;
                    case 39:
                        s = 222;
                        break;
                    case 40:
                        s = 57;
                        break;
                    case 41:
                        s = 48;
                        break;
                    case 42:
                        s = 56;
                        break;
                    case 44:
                        s = 188;
                        break;
                    case 45:
                        s = 189;
                        break;
                    case 46:
                        s = 190;
                        break;
                    case 47:
                        s = 191;
                        break;
                    case 48:
                        s = 48;
                        break;
                    case 49:
                        s = 49;
                        break;
                    case 50:
                        s = 50;
                        break;
                    case 51:
                        s = 51;
                        break;
                    case 52:
                        s = 52;
                        break;
                    case 53:
                        s = 53;
                        break;
                    case 54:
                        s = 54;
                        break;
                    case 55:
                        s = 55;
                        break;
                    case 56:
                        s = 56;
                        break;
                    case 57:
                        s = 57;
                        break;
                    case 58:
                    case 59:
                        s = 186;
                        break;
                    case 60:
                        s = 60;
                        break;
                    case 61:
                        s = 187;
                        break;
                    case 62:
                        s = 190;
                        break;
                    case 63:
                        s = 191;
                        break;
                    case 64:
                        s = 50;
                        break;
                    case 91:
                        s = 219;
                        break;
                    case 92:
                        s = 220;
                        break;
                    case 93:
                        s = 221;
                        break;
                    case 94:
                        s = 54;
                        break;
                    case 95:
                        s = 189;
                        break;
                    case 96:
                        s = 192;
                        break;
                    case 97:
                        s = 65;
                        break;
                    case 98:
                        s = 66;
                        break;
                    case 99:
                        s = 67;
                        break;
                    case 100:
                        s = 68;
                        break;
                    case 101:
                        s = 69;
                        break;
                    case 102:
                        s = 70;
                        break;
                    case 103:
                        s = 71;
                        break;
                    case 104:
                        s = 72;
                        break;
                    case 105:
                        s = 73;
                        break;
                    case 106:
                        s = 74;
                        break;
                    case 107:
                        s = 75;
                        break;
                    case 108:
                        s = 76;
                        break;
                    case 109:
                        s = 77;
                        break;
                    case 110:
                        s = 78;
                        break;
                    case 111:
                        s = 79;
                        break;
                    case 112:
                        s = 80;
                        break;
                    case 113:
                        s = 81;
                        break;
                    case 114:
                        s = 82;
                        break;
                    case 115:
                        s = 83;
                        break;
                    case 116:
                        s = 84;
                        break;
                    case 117:
                        s = 85;
                        break;
                    case 118:
                        s = 86;
                        break;
                    case 119:
                        s = 87;
                        break;
                    case 120:
                        s = 88;
                        break;
                    case 121:
                        s = 89;
                        break;
                    case 122:
                        s = 90;
                        break;
                    case 127:
                        s = 46;
                        break;
                    case 1073741881:
                        s = 20;
                        break;
                    case 1073741882:
                        s = 112;
                        break;
                    case 1073741883:
                        s = 113;
                        break;
                    case 1073741884:
                        s = 114;
                        break;
                    case 1073741885:
                        s = 115;
                        break;
                    case 1073741886:
                        s = 116;
                        break;
                    case 1073741887:
                        s = 117;
                        break;
                    case 1073741888:
                        s = 118;
                        break;
                    case 1073741889:
                        s = 119;
                        break;
                    case 1073741890:
                        s = 120;
                        break;
                    case 1073741891:
                        s = 121;
                        break;
                    case 1073741892:
                        s = 122;
                        break;
                    case 1073741893:
                        s = 123;
                        break;
                    case 1073741894:
                        s = 301;
                        break;
                    case 1073741895:
                        s = 145;
                        break;
                    case 1073741896:
                        s = 19;
                        break;
                    case 1073741897:
                        s = 45;
                        break;
                    case 1073741898:
                        s = 36;
                        break;
                    case 1073741899:
                        s = 33;
                        break;
                    case 1073741901:
                        s = 35;
                        break;
                    case 1073741902:
                        s = 34;
                        break;
                    case 1073741903:
                        s = 39;
                        break;
                    case 1073741904:
                        s = 37;
                        break;
                    case 1073741905:
                        s = 40;
                        break;
                    case 1073741906:
                        s = 38;
                        break;
                    case 1073741907:
                        s = 144;
                        break;
                    case 1073741908:
                        s = 111;
                        break;
                    case 1073741909:
                        s = 106;
                        break;
                    case 1073741910:
                        s = 109;
                        break;
                    case 1073741911:
                        s = 107;
                        break;
                    case 1073741912:
                        s = 108;
                        break;
                    case 1073741913:
                        s = 97;
                        break;
                    case 1073741914:
                        s = 98;
                        break;
                    case 1073741915:
                        s = 99;
                        break;
                    case 1073741916:
                        s = 100;
                        break;
                    case 1073741917:
                        s = 101;
                        break;
                    case 1073741918:
                        s = 102;
                        break;
                    case 1073741919:
                        s = 103;
                        break;
                    case 1073741920:
                        s = 104;
                        break;
                    case 1073741921:
                        s = 105;
                        break;
                    case 1073741922:
                        s = 96;
                        break;
                    case 1073741923:
                        s = 110;
                        break;
                    case 1073741925:
                        s = 302;
                        break;
                    case 1073741928:
                        s = 124;
                        break;
                    case 1073741929:
                        s = 125;
                        break;
                    case 1073741930:
                        s = 126;
                        break;
                    case 1073741982:
                        s = 13;
                        break;
                    case 1073742044:
                        s = 110;
                        break;
                    case 1073742048:
                        s = 17;
                        break;
                    case 1073742049:
                        s = 16;
                        break;
                    case 1073742050:
                        s = 18;
                        break;
                    case 1073742051:
                        s = 15;
                        break;
                    case 1073742052:
                        s = 17;
                        break;
                    case 1073742053:
                        s = 16;
                        break;
                    case 1073742054:
                        s = 18;
                        break;
                    case 1073742055:
                        s = 15;
                        break;
                    default:
                        s = t
                }
                var a = openfl_ui_Keyboard.__getCharCode(s, lime_ui__$KeyModifier_KeyModifier_$Impl_$.get_shiftKey(n)),
                    r = new openfl_events_KeyboardEvent(e, !0, !0, a, s, i, this.__macKeyboard ? lime_ui__$KeyModifier_KeyModifier_$Impl_$.get_ctrlKey(n) || lime_ui__$KeyModifier_KeyModifier_$Impl_$.get_metaKey(n) : lime_ui__$KeyModifier_KeyModifier_$Impl_$.get_ctrlKey(n), lime_ui__$KeyModifier_KeyModifier_$Impl_$.get_altKey(n), lime_ui__$KeyModifier_KeyModifier_$Impl_$.get_shiftKey(n), lime_ui__$KeyModifier_KeyModifier_$Impl_$.get_ctrlKey(n), lime_ui__$KeyModifier_KeyModifier_$Impl_$.get_metaKey(n));
                l.reverse(), this.__fireEvent(r, l), r.__preventDefault && ("keyDown" == e ? this.window.onKeyDown.cancel() : this.window.onKeyUp.cancel())
            }
        },
        __onGamepadConnect: function(e) {
            var t, n, l, i, s, a, r, o;
            this.onGamepadConnect(e), e.onAxisMove.add((t = $bind(this, this.onGamepadAxisMove), n = e, function(e, l) {
                t(n, e, l)
            })), e.onButtonDown.add((l = $bind(this, this.onGamepadButtonDown), i = e, function(e) {
                l(i, e)
            })), e.onButtonUp.add((s = $bind(this, this.onGamepadButtonUp), a = e, function(e) {
                s(a, e)
            })), e.onDisconnect.add((r = $bind(this, this.onGamepadDisconnect), o = e, function() {
                r(o)
            }))
        },
        __onMouse: function(e, t, n, l) {
            if (!(l > 2)) {
                var i = new openfl_geom_Point(t, n);
                this.__displayMatrix.__transformInversePoint(i), this.__mouseX = i.x, this.__mouseY = i.y;
                var s = [],
                    a = null;
                this.__hitTest(this.__mouseX, this.__mouseY, !0, s, !0, this) ? a = s[s.length - 1] : (a = this, s = [this]), null == a && (a = this);
                var r, o, d = null;
                switch (e) {
                    case "mouseDown":
                        a.get_tabEnabled() ? this.set_focus(a) : this.set_focus(null), this.__mouseDownLeft = a;
                        break;
                    case "middleMouseDown":
                        this.__mouseDownMiddle = a;
                        break;
                    case "rightMouseDown":
                        this.__mouseDownRight = a;
                        break;
                    case "mouseUp":
                        this.__mouseDownLeft == a && (d = "click"), this.__mouseDownLeft = null;
                        break;
                    case "middleMouseUp":
                        this.__mouseDownMiddle == a && (d = "middleClick"), this.__mouseDownMiddle = null;
                        break;
                    case "rightMouseUp":
                        this.__mouseDownRight == a && (d = "rightClick"), this.__mouseDownRight = null
                }
                if (this.__fireEvent(openfl_events_MouseEvent.__create(e, l, this.__mouseX, this.__mouseY, a == this ? i : a.globalToLocal(i), a), s), null != d && (this.__fireEvent(openfl_events_MouseEvent.__create(d, l, this.__mouseX, this.__mouseY, a == this ? i : a.globalToLocal(i), a), s), "mouseUp" == e && js_Boot.__cast(a, openfl_display_InteractiveObject).doubleClickEnabled)) {
                    var _ = openfl_Lib.getTimer();
                    _ - this.__lastClickTime < 500 ? (this.__fireEvent(openfl_events_MouseEvent.__create("doubleClick", l, this.__mouseX, this.__mouseY, a == this ? i : a.globalToLocal(i), a), s), this.__lastClickTime = 0) : this.__lastClickTime = _
                }
                if ("auto" == openfl_ui_Mouse.__cursor) {
                    var h = null;
                    if (null != this.__mouseDownLeft) h = this.__mouseDownLeft.__getCursor();
                    else
                        for (var p = 0; p < s.length;) {
                            var c = s[p];
                            if (++p, null != (h = c.__getCursor())) {
                                lime_ui_Mouse.set_cursor(h);
                                break
                            }
                        }
                    null == h && lime_ui_Mouse.set_cursor(lime_ui_MouseCursor.ARROW)
                }
                a != this.__mouseOverTarget && null != this.__mouseOverTarget && (o = this.__mouseOverTarget == this ? i : this.__mouseOverTarget.globalToLocal(i), r = openfl_events_MouseEvent.__create("mouseOut", l, this.__mouseX, this.__mouseY, o, this.__mouseOverTarget), this.__mouseOverTarget.__dispatchEvent(r));
                for (var Q = 0, U = this.__rollOutStack; Q < U.length;) {
                    var m = U[Q];
                    ++Q, -1 == HxOverrides.indexOf(s, m, 0) && (HxOverrides.remove(this.__rollOutStack, m), o = this.__mouseOverTarget.globalToLocal(i), (r = openfl_events_MouseEvent.__create("rollOut", l, this.__mouseX, this.__mouseY, o, this.__mouseOverTarget)).bubbles = !1, m.__dispatchEvent(r))
                }
                for (var u = 0; u < s.length;) {
                    var F = s[u];
                    ++u, -1 == HxOverrides.indexOf(this.__rollOutStack, F, 0) && (F.hasEventListener("rollOver") && (o = F.globalToLocal(i), (r = openfl_events_MouseEvent.__create("rollOver", l, this.__mouseX, this.__mouseY, o, F)).bubbles = !1, F.__dispatchEvent(r)), F.hasEventListener("rollOut") && this.__rollOutStack.push(F))
                }
                if (a != this.__mouseOverTarget && (null != a && (o = a == this ? i : a.globalToLocal(i), (r = openfl_events_MouseEvent.__create("mouseOver", l, this.__mouseX, this.__mouseY, o, a)).bubbles = !0, a.__dispatchEvent(r)), this.__mouseOverTarget = a), null != this.__dragObject) {
                    this.__drag(i);
                    var N = null;
                    if (this.__mouseOverTarget == this.__dragObject) {
                        var S = this.__dragObject.mouseEnabled,
                            W = this.__dragObject.mouseChildren;
                        this.__dragObject.mouseEnabled = !1, this.__dragObject.mouseChildren = !1;
                        var B = [];
                        this.__hitTest(this.__mouseX, this.__mouseY, !0, B, !0, this) && (N = B[B.length - 1]), this.__dragObject.mouseEnabled = S, this.__dragObject.mouseChildren = W
                    } else this.__mouseOverTarget != this && (N = this.__mouseOverTarget);
                    this.__dragObject.dropTarget = N
                }
            }
        },
        __onMouseWheel: function(e, t) {
            var n = this.__mouseX,
                l = this.__mouseY,
                i = [],
                s = null;
            this.__hitTest(this.__mouseX, this.__mouseY, !0, i, !0, this) ? s = i[i.length - 1] : (s = this, i = [this]), null == s && (s = this);
            var a = new openfl_geom_Point(n, l);
            this.__displayMatrix.__transformInversePoint(a);
            var r = 0 | t;
            this.__fireEvent(openfl_events_MouseEvent.__create("mouseWheel", 0, this.__mouseX, this.__mouseY, s == this ? a : s.globalToLocal(a), s, r), i)
        },
        __onTouch: function(e, t) {
            var n = new openfl_geom_Point(Math.round(t.x * this.window.__width * this.window.__scale), Math.round(t.y * this.window.__height * this.window.__scale));
            this.__displayMatrix.__transformInversePoint(n);
            var l = n.x,
                i = n.y,
                s = [];
            if (this.__hitTest(l, i, !1, s, !0, this)) {
                var a = s[s.length - 1];
                null == a && (a = this);
                var r = a.globalToLocal(n),
                    o = openfl_events_TouchEvent.__create(e, null, l, i, r, a);
                o.touchPointID = t.id, o.isPrimaryTouchPoint = this.__primaryTouch == t, this.__fireEvent(o, s)
            } else {
                var d = openfl_events_TouchEvent.__create(e, null, l, i, n, this);
                d.touchPointID = t.id, d.isPrimaryTouchPoint = this.__primaryTouch == t, this.__fireEvent(d, [this.stage])
            }
        },
        __resize: function() {
            var e = this.stageWidth,
                t = this.stageHeight,
                n = this.window.__width * this.window.__scale | 0,
                l = this.window.__height * this.window.__scale | 0;
            if (this.__logicalWidth = n, this.__logicalHeight = l, this.__displayMatrix.identity(), 0 == this.__logicalWidth && 0 == this.__logicalHeight) this.stageWidth = n, this.stageHeight = l;
            else {
                this.stageWidth = this.__logicalWidth, this.stageHeight = this.__logicalHeight;
                var i = n / this.stageWidth,
                    s = l / this.stageHeight,
                    a = Math.min(i, s),
                    r = Math.round((n - this.stageWidth * a) / 2),
                    o = Math.round((l - this.stageHeight * a) / 2);
                this.__displayMatrix.scale(a, a), this.__displayMatrix.translate(r, o)
            }
            for (var d = 0, _ = this.stage3Ds; d < _.get_length();) {
                var h = _.get(d);
                ++d, h.__resize(this.stageWidth, this.stageHeight)
            }
            null != this.__renderer && this.__renderer.resize(n, l), this.stageWidth == e && this.stageHeight == t || this.__dispatchEvent(new openfl_events_Event("resize"))
        },
        __setLogicalSize: function(e, t) {
            this.__logicalWidth = e, this.__logicalHeight = t, this.__resize()
        },
        __update: function(e, t, n) {
            e ? openfl_display_DisplayObject.__worldTransformDirty > 0 && (openfl_display_DisplayObjectContainer.prototype.__update.call(this, !0, t, n), t && (openfl_display_DisplayObject.__worldTransformDirty = 0, this.__dirty = !0)) : (openfl_display_DisplayObject.__worldTransformDirty > 0 || this.__dirty || openfl_display_DisplayObject.__worldRenderDirty > 0) && (openfl_display_DisplayObjectContainer.prototype.__update.call(this, !1, t, n), t && (openfl_display_DisplayObject.__worldTransformDirty = 0, openfl_display_DisplayObject.__worldRenderDirty = 0, this.__dirty = !1))
        },
        set_color: function(e) {
            var t = (16711680 & e) >>> 16,
                n = (65280 & e) >>> 8,
                l = 255 & e;
            return this.__colorSplit = [t / 255, n / 255, l / 255], this.__colorString = "#" + StringTools.hex(16777215 & e, 6), this.__color = e
        },
        get_focus: function() {
            return this.__focus
        },
        set_focus: function(e) {
            if (e != this.__focus) {
                var t = this.__focus;
                if (this.__focus = e, this.__cacheFocus = e, null != t) {
                    var n = new openfl_events_FocusEvent("focusOut", !0, !1, this.__focus, !1, 0),
                        l = [];
                    t.__getInteractive(l), l.reverse(), this.__fireEvent(n, l)
                }
                if (null != this.__focus) {
                    var i = new openfl_events_FocusEvent("focusIn", !0, !1, t, !1, 0),
                        s = [];
                    e.__getInteractive(s), s.reverse(), this.__fireEvent(i, s)
                }
            }
            return this.__focus
        },
        get_frameRate: function() {
            return null != this.application ? this.application.backend.getFrameRate() : 0
        },
        set_height: function(e) {
            return this.get_height()
        },
        get_mouseX: function() {
            return this.__mouseX
        },
        get_mouseY: function() {
            return this.__mouseY
        },
        set_rotation: function(e) {
            return 0
        },
        set_scaleX: function(e) {
            return 0
        },
        set_scaleY: function(e) {
            return 0
        },
        set_width: function(e) {
            return this.get_width()
        },
        set_x: function(e) {
            return 0
        },
        set_y: function(e) {
            return 0
        },
        __class__: openfl_display_Stage,
        __properties__: $extend(openfl_display_DisplayObjectContainer.prototype.__properties__, {
            get_frameRate: "get_frameRate",
            set_focus: "set_focus",
            get_focus: "get_focus",
            set_color: "set_color"
        })
    });
    var openfl_display_Stage3D = function() {
        openfl_events_EventDispatcher.call(this), this.set_x(0), this.set_y(0), this.visible = !0
    };
    $hxClasses["openfl.display.Stage3D"] = openfl_display_Stage3D, openfl_display_Stage3D.__name__ = ["openfl", "display", "Stage3D"], openfl_display_Stage3D.__super__ = openfl_events_EventDispatcher, openfl_display_Stage3D.prototype = $extend(openfl_events_EventDispatcher.prototype, {
        context3D: null,
        visible: null,
        x: null,
        y: null,
        __contextRequested: null,
        __canvas: null,
        __style: null,
        __webgl: null,
        __createContext: function(e, t) {
            if (null != t.gl) this.context3D = new openfl_display3D_Context3D(this, t), this.__dispatchCreate();
            else {
                this.__canvas = window.document.createElement("canvas"), this.__canvas.width = e.stageWidth, this.__canvas.height = e.stageHeight;
                var n = e.window,
                    l = {
                        alpha: !(!Object.prototype.hasOwnProperty.call(n.config, "background") || null != n.config.background),
                        antialias: !!Object.prototype.hasOwnProperty.call(n.config, "antialiasing") && n.config.antialiasing > 0,
                        depth: !Object.prototype.hasOwnProperty.call(n.config, "depthBuffer") || n.config.depthBuffer,
                        premultipliedAlpha: !0,
                        stencil: !!Object.prototype.hasOwnProperty.call(n.config, "stencilBuffer") && n.config.stencilBuffer,
                        preserveDrawingBuffer: !1
                    };
                this.__webgl = js_html__$CanvasElement_CanvasUtil.getContextWebGL(this.__canvas, l), null != this.__webgl ? (lime_graphics_opengl_GL.context = this.__webgl, this.context3D = new openfl_display3D_Context3D(this, t), t.element.appendChild(this.__canvas), this.__style = this.__canvas.style, this.__style.setProperty("position", "absolute", null), this.__style.setProperty("top", "0", null), this.__style.setProperty("left", "0", null), this.__style.setProperty(t.transformOriginProperty, "0 0 0", null), this.__style.setProperty("z-index", "-1", null), this.__dispatchCreate()) : this.__dispatchError()
            }
        },
        __dispatchError: function() {
            this.__contextRequested = !1, this.dispatchEvent(new openfl_events_ErrorEvent("error", !1, !1, "Context3D not available"))
        },
        __dispatchCreate: function() {
            this.__contextRequested && (this.__contextRequested = !1, this.dispatchEvent(new openfl_events_Event("context3DCreate")))
        },
        __renderCanvas: function(e, t) {
            this.visible && this.__contextRequested && (this.__dispatchError(), this.__contextRequested = !1)
        },
        __renderGL: function(e, t) {
            this.visible && (this.__contextRequested && null == this.context3D && this.__createContext(e, t), null != this.context3D && (this.__resetContext3DStates(), BitmapBatch.renderGLStack(), null != this.context3D && (t.blendModeManager.setBlendMode(null), null != t.shaderManager.currentShader && (t.shaderManager.setShader(null), null != this.context3D.__program && this.context3D.__program.__use()))))
        },
        __resize: function(e, t) {
            null != this.__canvas && (this.__canvas.width = e, this.__canvas.height = t)
        },
        __resetContext3DStates: function() {
            this.context3D.__updateBlendFactors(), this.context3D.__updateBackbufferViewport()
        },
        set_x: function(e) {
            return this.x = e, null != this.context3D && this.context3D.__updateBackbufferViewport(), e
        },
        set_y: function(e) {
            return this.y = e, null != this.context3D && this.context3D.__updateBackbufferViewport(), e
        },
        __class__: openfl_display_Stage3D,
        __properties__: {
            set_y: "set_y",
            set_x: "set_x"
        }
    });
    var openfl_display_Tile = function(e, t, n, l, i, s, a, r) {
        null == r && (r = 0), null == a && (a = 0), null == s && (s = 0), null == i && (i = 1), null == l && (l = 1), null == n && (n = 0), null == t && (t = 0), null == e && (e = 0), this.set_id(e), this.set_matrix(new openfl_geom_Matrix), 0 != t && this.set_x(t), 0 != n && this.set_y(n), 1 != l && this.set_scaleX(l), 1 != i && this.set_scaleY(i), 0 != s && this.set_rotation(s), this.set_originX(a), this.set_originY(r), this.set_alpha(1), this.visible = !0, this.__alphaDirty = !0, this.__sourceDirty = !0, this.__transformDirty = !0, this.__transform = []
    };
    $hxClasses["openfl.display.Tile"] = openfl_display_Tile, openfl_display_Tile.__name__ = ["openfl", "display", "Tile"], openfl_display_Tile.prototype = {
        alpha: null,
        id: null,
        matrix: null,
        originX: null,
        originY: null,
        tileset: null,
        visible: null,
        __alphaDirty: null,
        __rotation: null,
        __rotationCosine: null,
        __rotationSine: null,
        __scaleX: null,
        __scaleY: null,
        __sourceDirty: null,
        __transform: null,
        __transformDirty: null,
        set_alpha: function(e) {
            return this.__alphaDirty = !0, this.alpha = e
        },
        set_id: function(e) {
            return this.__sourceDirty = !0, this.id = e
        },
        set_matrix: function(e) {
            return this.__rotation = null, this.__scaleX = null, this.__scaleY = null, this.__transformDirty = !0, this.matrix = e
        },
        set_originX: function(e) {
            return this.__transformDirty = !0, this.originX = e
        },
        set_originY: function(e) {
            return this.__transformDirty = !0, this.originY = e
        },
        get_rotation: function() {
            if (null == this.__rotation)
                if (0 == this.matrix.b && 0 == this.matrix.c) this.__rotation = 0, this.__rotationSine = 0, this.__rotationCosine = 1;
                else {
                    var e = Math.atan2(this.matrix.d, this.matrix.c) - Math.PI / 2;
                    this.__rotation = e * (180 / Math.PI), this.__rotationSine = Math.sin(e), this.__rotationCosine = Math.cos(e)
                }
            return this.__rotation
        },
        set_rotation: function(e) {
            if (e != this.__rotation) {
                this.__rotation = e;
                var t = e * (Math.PI / 180);
                this.__rotationSine = Math.sin(t), this.__rotationCosine = Math.cos(t);
                var n = this.get_scaleX(),
                    l = this.get_scaleY();
                this.matrix.a = this.__rotationCosine * n, this.matrix.b = this.__rotationSine * n, this.matrix.c = -this.__rotationSine * l, this.matrix.d = this.__rotationCosine * l, this.__transformDirty = !0
            }
            return e
        },
        get_scaleX: function() {
            return null == this.__scaleX && (0 == this.matrix.b ? this.__scaleX = this.matrix.a : this.__scaleX = Math.sqrt(this.matrix.a * this.matrix.a + this.matrix.b * this.matrix.b)), this.__scaleX
        },
        set_scaleX: function(e) {
            if (this.__scaleX != e) {
                if (this.__scaleX = e, 0 == this.matrix.b) this.matrix.a = e;
                else {
                    this.get_rotation();
                    var t = this.__rotationCosine * e,
                        n = this.__rotationSine * e;
                    this.matrix.a = t, this.matrix.b = n
                }
                this.__transformDirty = !0
            }
            return e
        },
        get_scaleY: function() {
            return null == this.__scaleY && (0 == this.matrix.c ? this.__scaleY = this.matrix.d : this.__scaleY = Math.sqrt(this.matrix.c * this.matrix.c + this.matrix.d * this.matrix.d)), this.__scaleY
        },
        set_scaleY: function(e) {
            if (this.__scaleY != e) {
                if (this.__scaleY = e, 0 == this.matrix.c) this.matrix.d = e;
                else {
                    this.get_rotation();
                    var t = -this.__rotationSine * e,
                        n = this.__rotationCosine * e;
                    this.matrix.c = t, this.matrix.d = n
                }
                this.__transformDirty = !0
            }
            return e
        },
        set_x: function(e) {
            return this.__transformDirty = !0, this.matrix.tx = e
        },
        set_y: function(e) {
            return this.__transformDirty = !0, this.matrix.ty = e
        },
        __class__: openfl_display_Tile,
        __properties__: {
            set_y: "set_y",
            set_x: "set_x",
            set_scaleY: "set_scaleY",
            get_scaleY: "get_scaleY",
            set_scaleX: "set_scaleX",
            get_scaleX: "get_scaleX",
            set_rotation: "set_rotation",
            get_rotation: "get_rotation",
            set_originY: "set_originY",
            set_originX: "set_originX",
            set_matrix: "set_matrix",
            set_id: "set_id",
            set_alpha: "set_alpha"
        }
    };
    var openfl_display_Tilemap = function(e, t, n, l) {
        null == l && (l = !0), openfl_display_DisplayObject.call(this), this.set_tileset(n), this.smoothing = l, this.__tiles = [], this.numTiles = 0, this.__width = e, this.__height = t
    };
    $hxClasses["openfl.display.Tilemap"] = openfl_display_Tilemap, openfl_display_Tilemap.__name__ = ["openfl", "display", "Tilemap"], openfl_display_Tilemap.__super__ = openfl_display_DisplayObject, openfl_display_Tilemap.prototype = $extend(openfl_display_DisplayObject.prototype, {
        numTiles: null,
        tileset: null,
        smoothing: null,
        __buffer: null,
        __bufferData: null,
        __cacheAlpha: null,
        __dirty: null,
        __tiles: null,
        __height: null,
        __width: null,
        addTile: function(e) {
            return this.__tiles.push(e), this.__dirty = !0, this.numTiles++, e
        },
        getTileAt: function(e) {
            return e >= 0 && e < this.numTiles ? this.__tiles[e] : null
        },
        __getBounds: function(e, t) {
            var n = openfl_geom_Rectangle.__temp;
            n.setTo(0, 0, this.__width, this.__height), n.__transform(n, t), e.__expand(n.x, n.y, n.width, n.height)
        },
        __hitTest: function(e, t, n, l, i, s) {
            if (!s.get_visible() || this.__isMask) return !1;
            if (null != this.get_mask() && !this.get_mask().__hitTestMask(e, t)) return !1;
            this.__getRenderTransform();
            var a = this.__renderTransform.__transformInverseX(e, t),
                r = this.__renderTransform.__transformInverseY(e, t);
            return a > 0 && r > 0 && a <= this.__width && r <= this.__height && (null == l || i || l.push(s), !0)
        },
        __renderCanvas: function(e) {
            openfl__$internal_renderer_canvas_CanvasTilemap.render(this, e)
        },
        __renderGL: function(e) {
            openfl__$internal_renderer_opengl_GLTilemap.render(this, e)
        },
        get_height: function() {
            return this.__height * Math.abs(this.get_scaleY())
        },
        set_height: function(e) {
            return this.__height = 0 | e, this.__height * Math.abs(this.get_scaleY())
        },
        set_tileset: function(e) {
            return this.__dirty = !0, this.tileset = e
        },
        get_width: function() {
            return this.__width * Math.abs(this.__scaleX)
        },
        set_width: function(e) {
            return this.__width = 0 | e, this.__width * Math.abs(this.__scaleX)
        },
        __class__: openfl_display_Tilemap,
        __properties__: $extend(openfl_display_DisplayObject.prototype.__properties__, {
            set_tileset: "set_tileset"
        })
    });
    var openfl_display_Tileset = function(e, t) {
        if (this.__data = [], this.set_bitmapData(e), null != t)
            for (var n = 0; n < t.length;) {
                var l = t[n];
                ++n, this.addRect(l)
            }
    };
    $hxClasses["openfl.display.Tileset"] = openfl_display_Tileset, openfl_display_Tileset.__name__ = ["openfl", "display", "Tileset"], openfl_display_Tileset.prototype = {
        bitmapData: null,
        __data: null,
        addRect: function(e) {
            if (null == e) return -1;
            var t = new openfl_display__$Tileset_TileData(e);
            return t.__update(this.bitmapData), this.__data.push(t), this.__data.length - 1
        },
        getRect: function(e) {
            return e < this.__data.length && e >= 0 ? new openfl_geom_Rectangle(this.__data[e].x, this.__data[e].y, this.__data[e].width, this.__data[e].height) : null
        },
        set_bitmapData: function(e) {
            this.bitmapData = e;
            for (var t = 0, n = this.__data; t < n.length;) {
                var l = n[t];
                ++t, l.__update(this.bitmapData)
            }
            return e
        },
        __class__: openfl_display_Tileset,
        __properties__: {
            set_bitmapData: "set_bitmapData"
        }
    };
    var openfl_display__$Tileset_TileData = function(e) {
        null != e && (this.x = 0 | e.x, this.y = 0 | e.y, this.width = 0 | e.width, this.height = 0 | e.height)
    };
    $hxClasses["openfl.display._Tileset.TileData"] = openfl_display__$Tileset_TileData, openfl_display__$Tileset_TileData.__name__ = ["openfl", "display", "_Tileset", "TileData"], openfl_display__$Tileset_TileData.prototype = {
        height: null,
        width: null,
        x: null,
        y: null,
        __uvHeight: null,
        __uvWidth: null,
        __uvX: null,
        __uvY: null,
        __update: function(e) {
            null != e && (this.__uvX = this.x / e.width, this.__uvY = this.y / e.height, this.__uvWidth = (this.x + this.width) / e.width, this.__uvHeight = (this.y + this.height) / e.height)
        },
        __class__: openfl_display__$Tileset_TileData
    };
    var openfl_display_Window = function(e) {
        lime_ui_Window.call(this, e)
    };
    $hxClasses["openfl.display.Window"] = openfl_display_Window, openfl_display_Window.__name__ = ["openfl", "display", "Window"], openfl_display_Window.__super__ = lime_ui_Window, openfl_display_Window.prototype = $extend(lime_ui_Window.prototype, {
        create: function(e) {
            lime_ui_Window.prototype.create.call(this, e), this.stage = new openfl_display_Stage(this, Object.prototype.hasOwnProperty.call(this.config, "background") ? this.config.background : 16777215), Object.prototype.hasOwnProperty.call(this.config, "resizable") && !this.config.resizable && this.stage.__setLogicalSize(this.config.width, this.config.height), e.addModule(this.stage)
        },
        __class__: openfl_display_Window
    });
    var openfl_display3D_Context3D = function(e, t) {
        var n, l;
        this.driverInfo = "OpenGL (Direct blitting)", this.backBufferWidth = 0, this.backBufferHeight = 0, openfl_events_EventDispatcher.call(this), this.__stage3D = e, this.__renderSession = t, n = new Float32Array(512), this.__vertexConstants = n, l = new Float32Array(512), this.__fragmentConstants = l;
        var i, s = [1, 1, 1, 1];
        i = null != s ? new Float32Array(s) : null, this.__positionScale = i, this.__samplerDirty = 0, this.__samplerTextures = openfl__$Vector_Vector_$Impl_$.toObjectVector(null, 8), this.__samplerStates = [];
        for (var a = 0; a < 8;) {
            var r = a++;
            this.__samplerStates[r] = new openfl__$internal_stage3D_SamplerState(9729, 9729, 33071, 33071)
        }
        this.maxBackBufferHeight = this.maxBackBufferWidth = lime_graphics_opengl_GL.context.getParameter(3386), this.__backBufferAntiAlias = 0, this.__backBufferEnableDepthAndStencil = !0, this.__backBufferWantsBestResolution = !1, this.__frameCount = 0, this.__rttDepthAndStencil = !1, this.__samplerDirty = 0, this.__stencilCompareMode = 0, this.__stencilRef = 0, this.__stencilReadMask = 255, this.__supportsPackedDepthStencil = !0;
        var o = lime_graphics_opengl_GL.context.getExtension("EXT_texture_filter_anisotropic");
        null != o && null != Reflect.field(o, "MAX_TEXTURE_MAX_ANISOTROPY_EXT") || (o = lime_graphics_opengl_GL.context.getExtension("MOZ_EXT_texture_filter_anisotropic")), null != o && null != Reflect.field(o, "MAX_TEXTURE_MAX_ANISOTROPY_EXT") || (o = lime_graphics_opengl_GL.context.getExtension("WEBKIT_EXT_texture_filter_anisotropic")), this.__supportsAnisotropicFiltering = null != o, this.__supportsAnisotropicFiltering && (this.__maxAnisotropyTexture2D = this.__maxAnisotropyCubeTexture = lime_graphics_opengl_GL.context.getParameter(lime_graphics_opengl_ExtensionAnisotropicFiltering.MAX_TEXTURE_MAX_ANISOTROPY_EXT)), this.__stats = openfl__$Vector_Vector_$Impl_$.toIntVector(null, 11), this.__statsCache = openfl__$Vector_Vector_$Impl_$.toIntVector(null, 11), openfl__$internal_stage3D_GLUtils.CheckGLError();
        var d = lime_graphics_opengl_GL.context.getParameter(7936);
        openfl__$internal_stage3D_GLUtils.CheckGLError();
        var _ = lime_graphics_opengl_GL.context.getParameter(7938);
        openfl__$internal_stage3D_GLUtils.CheckGLError();
        var h = lime_graphics_opengl_GL.context.getParameter(7937);
        openfl__$internal_stage3D_GLUtils.CheckGLError();
        var p = lime_graphics_opengl_GL.context.getParameter(35724);
        openfl__$internal_stage3D_GLUtils.CheckGLError(), this.driverInfo = "OpenGL Vendor=" + d + " Version=" + _ + " Renderer=" + h + " GLSL=" + p;
        for (var c = 0, Q = this.__stats.get_length(); c < Q;) {
            var U = c++;
            this.__stats.set(U, 0)
        }
        openfl_display3D_Context3D.__stateCache.clearSettings()
    };
    $hxClasses["openfl.display3D.Context3D"] = openfl_display3D_Context3D, openfl_display3D_Context3D.__name__ = ["openfl", "display3D", "Context3D"], openfl_display3D_Context3D.__super__ = openfl_events_EventDispatcher, openfl_display3D_Context3D.prototype = $extend(openfl_events_EventDispatcher.prototype, {
        backBufferHeight: null,
        backBufferWidth: null,
        driverInfo: null,
        maxBackBufferHeight: null,
        maxBackBufferWidth: null,
        __backBufferAntiAlias: null,
        __backBufferEnableDepthAndStencil: null,
        __backBufferWantsBestResolution: null,
        __fragmentConstants: null,
        __frameCount: null,
        __maxAnisotropyCubeTexture: null,
        __maxAnisotropyTexture2D: null,
        __positionScale: null,
        __program: null,
        __renderSession: null,
        __renderToTexture: null,
        __rttDepthAndStencil: null,
        __samplerDirty: null,
        __samplerTextures: null,
        __samplerStates: null,
        __stage3D: null,
        __stats: null,
        __statsCache: null,
        __stencilCompareMode: null,
        __stencilRef: null,
        __stencilReadMask: null,
        __supportsAnisotropicFiltering: null,
        __supportsPackedDepthStencil: null,
        __vertexConstants: null,
        createRectangleTexture: function(e, t, n, l) {
            return new openfl_display3D_textures_RectangleTexture(this, e, t, openfl_display3D__$Context3DTextureFormat_Context3DTextureFormat_$Impl_$.toString(n), l)
        },
        __setViewport: function(e, t, n, l) {
            null != this.__renderToTexture && (t *= -1), openfl_display3D_Context3D.__stateCache.updateViewport(e, t, n, l) && (lime_graphics_opengl_GL.context.viewport(e, t, n, l), openfl__$internal_stage3D_GLUtils.CheckGLError())
        },
        __statsAdd: function(e, t) {
            var n = e,
                l = this.__stats.get(n) + t;
            return this.__stats.set(n, l), this.__stats.get(e)
        },
        __statsIncrement: function(e) {
            var t = e,
                n = this.__stats.get(t) + 1;
            this.__stats.set(t, n)
        },
        __updateBlendFactors: function() {
            if (null != openfl_display3D_Context3D.__stateCache._srcBlendFactor && null != openfl_display3D_Context3D.__stateCache._destBlendFactor) {
                var e = 1,
                    t = 0;
                switch (openfl_display3D_Context3D.__stateCache._srcBlendFactor) {
                    case 2:
                        e = 1;
                        break;
                    case 9:
                        e = 0;
                        break;
                    case 7:
                        e = 770;
                        break;
                    case 0:
                        e = 772;
                        break;
                    case 1:
                        e = 774;
                        break;
                    case 5:
                        e = 771;
                        break;
                    case 3:
                        e = 773;
                        break;
                    case 4:
                        e = 775;
                        break;
                    default:
                        throw new js__$Boot_HaxeError(new openfl_errors_IllegalOperationError)
                }
                switch (openfl_display3D_Context3D.__stateCache._destBlendFactor) {
                    case 2:
                        t = 1;
                        break;
                    case 9:
                        t = 0;
                        break;
                    case 7:
                        t = 770;
                        break;
                    case 8:
                        t = 768;
                        break;
                    case 0:
                        t = 772;
                        break;
                    case 5:
                        t = 771;
                        break;
                    case 6:
                        t = 769;
                        break;
                    case 3:
                        t = 773;
                        break;
                    default:
                        throw new js__$Boot_HaxeError(new openfl_errors_IllegalOperationError)
                }
                lime_graphics_opengl_GL.context.enable(3042), openfl__$internal_stage3D_GLUtils.CheckGLError(), lime_graphics_opengl_GL.context.blendFunc(e, t), openfl__$internal_stage3D_GLUtils.CheckGLError()
            }
        },
        __updateBackbufferViewport: function() {
            null == this.__renderToTexture && this.__setViewport(0 | this.__stage3D.x, 0 | this.__stage3D.y, this.backBufferWidth, this.backBufferHeight)
        },
        __class__: openfl_display3D_Context3D
    });
    var openfl_display3D__$Context3DTextureFormat_Context3DTextureFormat_$Impl_$ = {};
    $hxClasses["openfl.display3D._Context3DTextureFormat.Context3DTextureFormat_Impl_"] = openfl_display3D__$Context3DTextureFormat_Context3DTextureFormat_$Impl_$, openfl_display3D__$Context3DTextureFormat_Context3DTextureFormat_$Impl_$.__name__ = ["openfl", "display3D", "_Context3DTextureFormat", "Context3DTextureFormat_Impl_"], openfl_display3D__$Context3DTextureFormat_Context3DTextureFormat_$Impl_$.toString = function(e) {
        switch (e) {
            case 0:
                return "bgrPacked565";
            case 1:
                return "bgra";
            case 2:
                return "bgraPacked4444";
            case 3:
                return "compressed";
            case 4:
                return "compressedAlpha";
            case 5:
                return "rgbaHalfFloat";
            default:
                return null
        }
    };
    var openfl_display3D_Program3D = function() {};
    $hxClasses["openfl.display3D.Program3D"] = openfl_display3D_Program3D, openfl_display3D_Program3D.__name__ = ["openfl", "display3D", "Program3D"], openfl_display3D_Program3D.prototype = {
        __alphaSamplerUniforms: null,
        __fragmentUniformMap: null,
        __programID: null,
        __samplerUniforms: null,
        __vertexUniformMap: null,
        __use: function() {
            lime_graphics_opengl_GL.useProgram(this.__programID), openfl__$internal_stage3D_GLUtils.CheckGLError(), this.__vertexUniformMap.markAllDirty(), this.__fragmentUniformMap.markAllDirty();
            for (var e = this.__samplerUniforms.h, t = null; null != e;) {
                var n;
                if (t = e[0], e = e[1], 1 != (n = t).regCount) throw new js__$Boot_HaxeError(new openfl_errors_IllegalOperationError("!!! TODO: uniform location on webgl"));
                lime_graphics_opengl_GL.context.uniform1i(n.location, n.regIndex), openfl__$internal_stage3D_GLUtils.CheckGLError()
            }
            for (var l = this.__alphaSamplerUniforms.h, i = null; null != l;) {
                var s;
                if (i = l[0], l = l[1], 1 != (s = i).regCount) throw new js__$Boot_HaxeError(new openfl_errors_IllegalOperationError("!!! TODO: uniform location on webgl"));
                lime_graphics_opengl_GL.context.uniform1i(s.location, s.regIndex), openfl__$internal_stage3D_GLUtils.CheckGLError()
            }
        },
        __class__: openfl_display3D_Program3D
    };
    var openfl_display3D__$Program3D_Uniform = function() {};
    $hxClasses["openfl.display3D._Program3D.Uniform"] = openfl_display3D__$Program3D_Uniform, openfl_display3D__$Program3D_Uniform.__name__ = ["openfl", "display3D", "_Program3D", "Uniform"], openfl_display3D__$Program3D_Uniform.prototype = {
        location: null,
        regIndex: null,
        regCount: null,
        __class__: openfl_display3D__$Program3D_Uniform
    };
    var openfl_display3D__$Program3D_UniformMap = function() {};
    $hxClasses["openfl.display3D._Program3D.UniformMap"] = openfl_display3D__$Program3D_UniformMap, openfl_display3D__$Program3D_UniformMap.__name__ = ["openfl", "display3D", "_Program3D", "UniformMap"], openfl_display3D__$Program3D_UniformMap.prototype = {
        __allDirty: null,
        __anyDirty: null,
        markAllDirty: function() {
            this.__allDirty = !0, this.__anyDirty = !0
        },
        __class__: openfl_display3D__$Program3D_UniformMap
    };
    var openfl_display3D_textures_TextureBase = function(e, t) {
        openfl_events_EventDispatcher.call(this), this.__context = e, this.__textureTarget = t, this.__textureID = lime_graphics_opengl_GL.context.createTexture(), this.__internalFormat = 6408, this.__format = 6408, this.__memoryUsage = 0, this.__compressedMemoryUsage = 0
    };
    $hxClasses["openfl.display3D.textures.TextureBase"] = openfl_display3D_textures_TextureBase, openfl_display3D_textures_TextureBase.__name__ = ["openfl", "display3D", "textures", "TextureBase"], openfl_display3D_textures_TextureBase.__super__ = openfl_events_EventDispatcher, openfl_display3D_textures_TextureBase.prototype = $extend(openfl_events_EventDispatcher.prototype, {
        __compressedMemoryUsage: null,
        __context: null,
        __format: null,
        __height: null,
        __internalFormat: null,
        __memoryUsage: null,
        __optimizeForRenderToTexture: null,
        __textureID: null,
        __textureTarget: null,
        __width: null,
        __trackMemoryUsage: function(e) {
            0 == this.__memoryUsage && this.__context.__statsIncrement(3), this.__memoryUsage += e;
            this.__context.__statsAdd(8, e)
        },
        __class__: openfl_display3D_textures_TextureBase
    });
    var openfl_display3D_textures_RectangleTexture = function(e, t, n, l, i) {
        openfl_display3D_textures_TextureBase.call(this, e, 3553), this.__width = t, this.__height = n, this.__optimizeForRenderToTexture = i, this.uploadFromTypedArray(null)
    };
    $hxClasses["openfl.display3D.textures.RectangleTexture"] = openfl_display3D_textures_RectangleTexture, openfl_display3D_textures_RectangleTexture.__name__ = ["openfl", "display3D", "textures", "RectangleTexture"], openfl_display3D_textures_RectangleTexture.__super__ = openfl_display3D_textures_TextureBase, openfl_display3D_textures_RectangleTexture.prototype = $extend(openfl_display3D_textures_TextureBase.prototype, {
        uploadFromTypedArray: function(e) {
            lime_graphics_opengl_GL.context.bindTexture(this.__textureTarget, this.__textureID), openfl__$internal_stage3D_GLUtils.CheckGLError(), lime_graphics_opengl_GL.context.texImage2D(this.__textureTarget, 0, this.__internalFormat, this.__width, this.__height, 0, this.__format, 5121, e), openfl__$internal_stage3D_GLUtils.CheckGLError(), lime_graphics_opengl_GL.context.bindTexture(this.__textureTarget, null), openfl__$internal_stage3D_GLUtils.CheckGLError();
            var t = this.__width * this.__height * 4;
            this.__trackMemoryUsage(t)
        },
        __class__: openfl_display3D_textures_RectangleTexture
    });
    var openfl_errors_Error = function(e, t) {
        null == t && (t = 0), null == e && (e = ""), this.message = e, this.errorID = t, this.name = "Error"
    };
    $hxClasses["openfl.errors.Error"] = openfl_errors_Error, openfl_errors_Error.__name__ = ["openfl", "errors", "Error"], openfl_errors_Error.prototype = {
        errorID: null,
        message: null,
        name: null,
        toString: function() {
            return null != this.message ? this.message : "Error"
        },
        __class__: openfl_errors_Error
    };
    var openfl_errors_IllegalOperationError = function(e) {
        null == e && (e = ""), openfl_errors_Error.call(this, e, 0), this.name = "IllegalOperationError"
    };
    $hxClasses["openfl.errors.IllegalOperationError"] = openfl_errors_IllegalOperationError, openfl_errors_IllegalOperationError.__name__ = ["openfl", "errors", "IllegalOperationError"], openfl_errors_IllegalOperationError.__super__ = openfl_errors_Error, openfl_errors_IllegalOperationError.prototype = $extend(openfl_errors_Error.prototype, {
        __class__: openfl_errors_IllegalOperationError
    });
    var openfl_events_Event = function(e, t, n) {
        null == n && (n = !1), null == t && (t = !1), this.type = e, this.bubbles = t, this.cancelable = n, this.eventPhase = 2
    };
    $hxClasses["openfl.events.Event"] = openfl_events_Event, openfl_events_Event.__name__ = ["openfl", "events", "Event"], openfl_events_Event.prototype = {
        bubbles: null,
        cancelable: null,
        currentTarget: null,
        eventPhase: null,
        target: null,
        type: null,
        __isCanceled: null,
        __isCanceledNow: null,
        __preventDefault: null,
        isDefaultPrevented: function() {
            return this.__preventDefault
        },
        preventDefault: function() {
            this.cancelable && (this.__preventDefault = !0)
        },
        __class__: openfl_events_Event
    };
    var openfl_events_ActivityEvent = function(e, t, n, l) {
        null == l && (l = !1), null == n && (n = !1), null == t && (t = !1), openfl_events_Event.call(this, e, t, n), this.activating = l
    };
    $hxClasses["openfl.events.ActivityEvent"] = openfl_events_ActivityEvent, openfl_events_ActivityEvent.__name__ = ["openfl", "events", "ActivityEvent"], openfl_events_ActivityEvent.__super__ = openfl_events_Event, openfl_events_ActivityEvent.prototype = $extend(openfl_events_Event.prototype, {
        activating: null,
        __class__: openfl_events_ActivityEvent
    });
    var openfl_events_TextEvent = function(e, t, n, l) {
        null == l && (l = ""), null == n && (n = !1), null == t && (t = !1), openfl_events_Event.call(this, e, t, n), this.text = l
    };
    $hxClasses["openfl.events.TextEvent"] = openfl_events_TextEvent, openfl_events_TextEvent.__name__ = ["openfl", "events", "TextEvent"], openfl_events_TextEvent.__super__ = openfl_events_Event, openfl_events_TextEvent.prototype = $extend(openfl_events_Event.prototype, {
        text: null,
        __class__: openfl_events_TextEvent
    });
    var openfl_events_ErrorEvent = function(e, t, n, l, i) {
        null == i && (i = 0), null == l && (l = ""), null == n && (n = !1), null == t && (t = !1), openfl_events_TextEvent.call(this, e, t, n, l), this.errorID = i
    };
    $hxClasses["openfl.events.ErrorEvent"] = openfl_events_ErrorEvent, openfl_events_ErrorEvent.__name__ = ["openfl", "events", "ErrorEvent"], openfl_events_ErrorEvent.__super__ = openfl_events_TextEvent, openfl_events_ErrorEvent.prototype = $extend(openfl_events_TextEvent.prototype, {
        errorID: null,
        __class__: openfl_events_ErrorEvent
    });
    var openfl_events__$EventDispatcher_DispatchIterator = function(e) {
        this.list = e, this.index = e.length
    };
    $hxClasses["openfl.events._EventDispatcher.DispatchIterator"] = openfl_events__$EventDispatcher_DispatchIterator, openfl_events__$EventDispatcher_DispatchIterator.__name__ = ["openfl", "events", "_EventDispatcher", "DispatchIterator"], openfl_events__$EventDispatcher_DispatchIterator.prototype = {
        active: null,
        index: null,
        isCopy: null,
        list: null,
        copy: function() {
            this.index < this.list.length && !this.isCopy && (this.list = this.list.slice(), this.isCopy = !0)
        },
        hasNext: function() {
            return this.index < this.list.length || (this.active = !1, !1)
        },
        next: function() {
            return this.list[this.index++]
        },
        remove: function(e, t) {
            if (this.active)
                if (this.isCopy)
                    for (var n = this.index, l = this.list.length; n < l;) {
                        var i = n++;
                        if (this.list[i] == e) {
                            this.list.splice(i, 1);
                            break
                        }
                    } else t < this.index && this.index--
        },
        reset: function(e) {
            this.list = e, this.active = !0, this.index = 0
        },
        __class__: openfl_events__$EventDispatcher_DispatchIterator
    };
    var openfl_events__$EventDispatcher_Listener = function(e, t, n) {
        this.callback = e, this.useCapture = t, this.priority = n
    };
    $hxClasses["openfl.events._EventDispatcher.Listener"] = openfl_events__$EventDispatcher_Listener, openfl_events__$EventDispatcher_Listener.__name__ = ["openfl", "events", "_EventDispatcher", "Listener"], openfl_events__$EventDispatcher_Listener.prototype = {
        callback: null,
        priority: null,
        useCapture: null,
        match: function(e, t) {
            return Reflect.compareMethods(this.callback, e) && this.useCapture == t
        },
        __class__: openfl_events__$EventDispatcher_Listener
    };
    var openfl_events_FocusEvent = function(e, t, n, l, i, s) {
        null == s && (s = 0), null == i && (i = !1), null == n && (n = !1), null == t && (t = !1), openfl_events_Event.call(this, e, t, n), this.keyCode = s, this.shiftKey = i, this.relatedObject = l
    };
    $hxClasses["openfl.events.FocusEvent"] = openfl_events_FocusEvent, openfl_events_FocusEvent.__name__ = ["openfl", "events", "FocusEvent"], openfl_events_FocusEvent.__super__ = openfl_events_Event, openfl_events_FocusEvent.prototype = $extend(openfl_events_Event.prototype, {
        keyCode: null,
        relatedObject: null,
        shiftKey: null,
        __class__: openfl_events_FocusEvent
    });
    var openfl_events_FullScreenEvent = function(e, t, n, l, i) {
        null == i && (i = !1), null == l && (l = !1), null == n && (n = !1), null == t && (t = !1), openfl_events_ActivityEvent.call(this, e, t, n), this.fullScreen = l, this.interactive = i
    };
    $hxClasses["openfl.events.FullScreenEvent"] = openfl_events_FullScreenEvent, openfl_events_FullScreenEvent.__name__ = ["openfl", "events", "FullScreenEvent"], openfl_events_FullScreenEvent.__super__ = openfl_events_ActivityEvent, openfl_events_FullScreenEvent.prototype = $extend(openfl_events_ActivityEvent.prototype, {
        fullScreen: null,
        interactive: null,
        __class__: openfl_events_FullScreenEvent
    });
    var openfl_events_GameInputEvent = function(e, t, n, l) {
        null == n && (n = !1), null == t && (t = !0), openfl_events_Event.call(this, e, t, n), this.device = l
    };
    $hxClasses["openfl.events.GameInputEvent"] = openfl_events_GameInputEvent, openfl_events_GameInputEvent.__name__ = ["openfl", "events", "GameInputEvent"], openfl_events_GameInputEvent.__super__ = openfl_events_Event, openfl_events_GameInputEvent.prototype = $extend(openfl_events_Event.prototype, {
        device: null,
        __class__: openfl_events_GameInputEvent
    });
    var openfl_events_KeyboardEvent = function(e, t, n, l, i, s, a, r, o, d, _) {
        null == _ && (_ = !1), null == d && (d = !1), null == o && (o = !1), null == r && (r = !1), null == a && (a = !1), null == i && (i = 0), null == l && (l = 0), null == n && (n = !1), null == t && (t = !1), openfl_events_Event.call(this, e, t, n), this.charCode = l, this.keyCode = i, this.keyLocation = null != s ? s : 0, this.ctrlKey = a, this.altKey = r, this.shiftKey = o, this.controlKey = d, this.commandKey = _
    };
    $hxClasses["openfl.events.KeyboardEvent"] = openfl_events_KeyboardEvent, openfl_events_KeyboardEvent.__name__ = ["openfl", "events", "KeyboardEvent"], openfl_events_KeyboardEvent.__super__ = openfl_events_Event, openfl_events_KeyboardEvent.prototype = $extend(openfl_events_Event.prototype, {
        altKey: null,
        charCode: null,
        ctrlKey: null,
        commandKey: null,
        controlKey: null,
        keyCode: null,
        keyLocation: null,
        shiftKey: null,
        __class__: openfl_events_KeyboardEvent
    });
    var openfl_events_MouseEvent = function(e, t, n, l, i, s, a, r, o, d, _, h, p) {
        null == p && (p = 0), null == h && (h = !1), null == _ && (_ = 0), null == d && (d = !1), null == o && (o = !1), null == r && (r = !1), null == a && (a = !1), null == i && (i = 0), null == l && (l = 0), null == n && (n = !1), null == t && (t = !0), openfl_events_Event.call(this, e, t, n), this.shiftKey = o, this.altKey = r, this.ctrlKey = a, this.bubbles = t, this.relatedObject = s, this.delta = _, this.localX = l, this.localY = i, this.buttonDown = d, this.commandKey = h, this.clickCount = p, this.stageX = NaN, this.stageY = NaN
    };
    $hxClasses["openfl.events.MouseEvent"] = openfl_events_MouseEvent, openfl_events_MouseEvent.__name__ = ["openfl", "events", "MouseEvent"], openfl_events_MouseEvent.__create = function(e, t, n, l, i, s, a) {
        switch (null == a && (a = 0), e) {
            case "mouseDown":
                openfl_events_MouseEvent.__buttonDown = !0;
                break;
            case "mouseUp":
                openfl_events_MouseEvent.__buttonDown = !1
        }
        var r = new openfl_events_MouseEvent(e, !0, !1, i.x, i.y, null, openfl_events_MouseEvent.__ctrlKey, openfl_events_MouseEvent.__altKey, openfl_events_MouseEvent.__shiftKey, openfl_events_MouseEvent.__buttonDown, a, openfl_events_MouseEvent.__commandKey);
        return r.stageX = n, r.stageY = l, r.target = s, r
    }, openfl_events_MouseEvent.__super__ = openfl_events_Event, openfl_events_MouseEvent.prototype = $extend(openfl_events_Event.prototype, {
        altKey: null,
        buttonDown: null,
        commandKey: null,
        clickCount: null,
        ctrlKey: null,
        delta: null,
        localX: null,
        localY: null,
        relatedObject: null,
        shiftKey: null,
        stageX: null,
        stageY: null,
        __class__: openfl_events_MouseEvent
    });
    var openfl_events_ProgressEvent = function(e, t, n, l, i) {
        null == i && (i = 0), null == l && (l = 0), null == n && (n = !1), null == t && (t = !1), openfl_events_Event.call(this, e, t, n), this.bytesLoaded = l, this.bytesTotal = i
    };
    $hxClasses["openfl.events.ProgressEvent"] = openfl_events_ProgressEvent, openfl_events_ProgressEvent.__name__ = ["openfl", "events", "ProgressEvent"], openfl_events_ProgressEvent.__super__ = openfl_events_Event, openfl_events_ProgressEvent.prototype = $extend(openfl_events_Event.prototype, {
        bytesLoaded: null,
        bytesTotal: null,
        __class__: openfl_events_ProgressEvent
    });
    var openfl_events_TouchEvent = function(e, t, n, l, i, s, a, r, o, d, _, h, p, c, Q, U, m, u, F, N) {
        null == N && (N = !1), null == m && (m = 0), null == U && (U = !1), null == Q && (Q = !1), null == c && (c = !1), null == p && (p = !1), null == h && (h = !1), null == d && (d = 0), null == o && (o = 0), null == r && (r = 0), null == a && (a = 0), null == s && (s = 0), null == i && (i = !1), null == l && (l = 0), null == n && (n = !1), null == t && (t = !0), openfl_events_Event.call(this, e, t, n), this.touchPointID = l, this.isPrimaryTouchPoint = i, this.localX = s, this.localY = a, this.sizeX = r, this.sizeY = o, this.pressure = d, this.relatedObject = _, this.ctrlKey = h, this.altKey = p, this.shiftKey = c, this.commandKey = Q, this.controlKey = U, this.stageX = NaN, this.stageY = NaN
    };
    $hxClasses["openfl.events.TouchEvent"] = openfl_events_TouchEvent, openfl_events_TouchEvent.__name__ = ["openfl", "events", "TouchEvent"], openfl_events_TouchEvent.__create = function(e, t, n, l, i, s) {
        var a = new openfl_events_TouchEvent(e, !0, !1, 0, !0, i.x, i.y, 1, 1, 1);
        return a.stageX = n, a.stageY = l, a.target = s, a
    }, openfl_events_TouchEvent.__super__ = openfl_events_Event, openfl_events_TouchEvent.prototype = $extend(openfl_events_Event.prototype, {
        altKey: null,
        commandKey: null,
        controlKey: null,
        ctrlKey: null,
        isPrimaryTouchPoint: null,
        localX: null,
        localY: null,
        pressure: null,
        relatedObject: null,
        shiftKey: null,
        sizeX: null,
        sizeY: null,
        stageX: null,
        stageY: null,
        touchPointID: null,
        __class__: openfl_events_TouchEvent
    });
    var openfl_events_UncaughtErrorEvent = function(e, t, n, l) {
        null == n && (n = !0), null == t && (t = !0), openfl_events_ErrorEvent.call(this, e, t, n), this.error = l
    };
    $hxClasses["openfl.events.UncaughtErrorEvent"] = openfl_events_UncaughtErrorEvent, openfl_events_UncaughtErrorEvent.__name__ = ["openfl", "events", "UncaughtErrorEvent"], openfl_events_UncaughtErrorEvent.__super__ = openfl_events_ErrorEvent, openfl_events_UncaughtErrorEvent.prototype = $extend(openfl_events_ErrorEvent.prototype, {
        error: null,
        __class__: openfl_events_UncaughtErrorEvent
    });
    var openfl_events_UncaughtErrorEvents = function() {
        openfl_events_EventDispatcher.call(this)
    };
    $hxClasses["openfl.events.UncaughtErrorEvents"] = openfl_events_UncaughtErrorEvents, openfl_events_UncaughtErrorEvents.__name__ = ["openfl", "events", "UncaughtErrorEvents"], openfl_events_UncaughtErrorEvents.__super__ = openfl_events_EventDispatcher, openfl_events_UncaughtErrorEvents.prototype = $extend(openfl_events_EventDispatcher.prototype, {
        __class__: openfl_events_UncaughtErrorEvents
    });
    var openfl_filters_BitmapFilter = function() {
        this.__numPasses = 0
    };
    $hxClasses["openfl.filters.BitmapFilter"] = openfl_filters_BitmapFilter, openfl_filters_BitmapFilter.__name__ = ["openfl", "filters", "BitmapFilter"], openfl_filters_BitmapFilter.prototype = {
        __cacheObject: null,
        __numPasses: null,
        __initShader: function(e, t) {
            return e.shaderManager.defaultShader
        },
        __class__: openfl_filters_BitmapFilter
    };
    var openfl_filters__$BlurFilter_BlurShader = function() {
        null == this.__glFragmentSource && (this.__glFragmentSource = "varying float vAlpha;\n\t\tvarying vec2 vTexCoord;\n\t\tuniform sampler2D uImage0;\n\t\t\n\t\tvarying vec2 vBlurCoords[7];\n\t\t\n\t\tvoid main(void) {\n\t\t\t\n\t\t\tvec4 sum = vec4(0.0);\n\t\t\tsum += texture2D(uImage0, vBlurCoords[0]) * 0.00443;\n\t\t\tsum += texture2D(uImage0, vBlurCoords[1]) * 0.05399;\n\t\t\tsum += texture2D(uImage0, vBlurCoords[2]) * 0.24197;\n\t\t\tsum += texture2D(uImage0, vBlurCoords[3]) * 0.39894;\n\t\t\tsum += texture2D(uImage0, vBlurCoords[4]) * 0.24197;\n\t\t\tsum += texture2D(uImage0, vBlurCoords[5]) * 0.05399;\n\t\t\tsum += texture2D(uImage0, vBlurCoords[6]) * 0.00443;\n\t\t\t\n\t\t\tgl_FragColor = sum;\n\t\t\t\n\t\t}"), null == this.__glVertexSource && (this.__glVertexSource = "attribute float aAlpha;\n\t\tattribute vec4 aPosition;\n\t\tattribute vec2 aTexCoord;\n\t\tvarying float vAlpha;\n\t\tvarying vec2 vTexCoord;\n\t\t\n\t\tuniform mat4 uMatrix;\n\t\t\n\t\tuniform vec2 uRadius;\n\t\tvarying vec2 vBlurCoords[7];\n\t\tuniform vec2 uTextureSize;\n\t\t\n\t\tvoid main(void) {\n\t\t\t\n\t\t\tvAlpha = aAlpha;\n\t\t\tvTexCoord = aTexCoord;\n\t\t\tgl_Position = uMatrix * aPosition;\n\t\t\t\n\t\t\tvec2 r = uRadius / uTextureSize;\n\t\t\tvBlurCoords[0] = aTexCoord - r * 1.0;\n\t\t\tvBlurCoords[1] = aTexCoord - r * 0.75;\n\t\t\tvBlurCoords[2] = aTexCoord - r * 0.5;\n\t\t\tvBlurCoords[3] = aTexCoord;\n\t\t\tvBlurCoords[4] = aTexCoord + r * 0.5;\n\t\t\tvBlurCoords[5] = aTexCoord + r * 0.75;\n\t\t\tvBlurCoords[6] = aTexCoord + r * 1.0;\n\t\t\t\n\t\t}"), openfl_display_Shader.call(this), this.get_data().uRadius.value = [0, 0]
    };
    $hxClasses["openfl.filters._BlurFilter.BlurShader"] = openfl_filters__$BlurFilter_BlurShader, openfl_filters__$BlurFilter_BlurShader.__name__ = ["openfl", "filters", "_BlurFilter", "BlurShader"], openfl_filters__$BlurFilter_BlurShader.__super__ = openfl_display_Shader, openfl_filters__$BlurFilter_BlurShader.prototype = $extend(openfl_display_Shader.prototype, {
        __update: function() {
            this.get_data().uTextureSize.value = [this.get_data().uImage0.input.width, this.get_data().uImage0.input.height], openfl_display_Shader.prototype.__update.call(this)
        },
        __class__: openfl_filters__$BlurFilter_BlurShader
    });
    var openfl_filters_BlurFilter = function(e, t, n) {
        null == n && (n = 1), null == t && (t = 4), null == e && (e = 4), openfl_filters_BitmapFilter.call(this), this.blurX = e, this.blurY = t, this.set_quality(n)
    };
    $hxClasses["openfl.filters.BlurFilter"] = openfl_filters_BlurFilter, openfl_filters_BlurFilter.__name__ = ["openfl", "filters", "BlurFilter"], openfl_filters_BlurFilter.__super__ = openfl_filters_BitmapFilter, openfl_filters_BlurFilter.prototype = $extend(openfl_filters_BitmapFilter.prototype, {
        blurX: null,
        blurY: null,
        quality: null,
        horizontalPasses: null,
        verticalPasses: null,
        __initShader: function(e, t) {
            var n = openfl_filters_BlurFilter.__blurShader.get_data();
            if (t <= this.horizontalPasses) {
                var l = Math.pow(.5, t >> 1);
                n.uRadius.value[0] = this.blurX * l, n.uRadius.value[1] = 0
            } else {
                var i = Math.pow(.5, t - this.horizontalPasses >> 1);
                n.uRadius.value[0] = 0, n.uRadius.value[1] = this.blurY * i
            }
            return openfl_filters_BlurFilter.__blurShader
        },
        set_quality: function(e) {
            return this.blurX <= 0 ? this.horizontalPasses = 0 : this.horizontalPasses = Math.round(this.blurX * (e / 4)) + 1, this.blurY <= 0 ? this.verticalPasses = 0 : this.verticalPasses = Math.round(this.blurY * (e / 4)) + 1, this.__numPasses = this.horizontalPasses + this.verticalPasses, this.quality = e
        },
        __class__: openfl_filters_BlurFilter,
        __properties__: {
            set_quality: "set_quality"
        }
    });
    var openfl_filters__$ColorMatrixFilter_ColorMatrixShader = function() {
        null == this.__glFragmentSource && (this.__glFragmentSource = "varying float vAlpha;\n\t\tvarying vec2 vTexCoord;\n\t\tuniform sampler2D uImage0;\n\t\t\n\t\tuniform mat4 uMultipliers;\n\t\tuniform vec4 uOffsets;\n\t\t\n\t\tvoid main(void) {\n\t\t\t\n\t\t\tvec4 color = texture2D (uImage0, vTexCoord);\n\t\t\t\n\t\t\tif (color.a == 0.0) {\n\t\t\t\t\n\t\t\t\tgl_FragColor = vec4 (0.0, 0.0, 0.0, 0.0);\n\t\t\t\t\n\t\t\t} else {\n\t\t\t\t\n\t\t\t\tcolor = vec4 (color.rgb / color.a, color.a);\n\t\t\t\tcolor = uOffsets + color * uMultipliers;\n\t\t\t\t\n\t\t\t\tgl_FragColor = vec4 (color.rgb * color.a * vAlpha, color.a * vAlpha);\n\t\t\t\t\n\t\t\t}\n\t\t\t\n\t\t}"), openfl_display_Shader.call(this), this.get_data().uMultipliers.value = [1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1], this.get_data().uOffsets.value = [0, 0, 0, 0]
    };
    $hxClasses["openfl.filters._ColorMatrixFilter.ColorMatrixShader"] = openfl_filters__$ColorMatrixFilter_ColorMatrixShader, openfl_filters__$ColorMatrixFilter_ColorMatrixShader.__name__ = ["openfl", "filters", "_ColorMatrixFilter", "ColorMatrixShader"], openfl_filters__$ColorMatrixFilter_ColorMatrixShader.__super__ = openfl_display_Shader, openfl_filters__$ColorMatrixFilter_ColorMatrixShader.prototype = $extend(openfl_display_Shader.prototype, {
        init: function(e) {
            var t = this.get_data().uMultipliers.value,
                n = this.get_data().uOffsets.value;
            t[0] = e[0], t[1] = e[1], t[2] = e[2], t[3] = e[3], t[4] = e[5], t[5] = e[6], t[6] = e[7], t[7] = e[8], t[8] = e[10], t[9] = e[11], t[10] = e[12], t[11] = e[13], t[12] = e[15], t[13] = e[16], t[14] = e[17], t[15] = e[18], n[0] = e[4] / 255, n[1] = e[9] / 255, n[2] = e[14] / 255, n[3] = e[19] / 255
        },
        __class__: openfl_filters__$ColorMatrixFilter_ColorMatrixShader
    });
    var openfl_filters_ColorMatrixFilter = function(e) {
        openfl_filters_BitmapFilter.call(this), this.set_matrix(e), this.__numPasses = 0
    };
    $hxClasses["openfl.filters.ColorMatrixFilter"] = openfl_filters_ColorMatrixFilter, openfl_filters_ColorMatrixFilter.__name__ = ["openfl", "filters", "ColorMatrixFilter"], openfl_filters_ColorMatrixFilter.__super__ = openfl_filters_BitmapFilter, openfl_filters_ColorMatrixFilter.prototype = $extend(openfl_filters_BitmapFilter.prototype, {
        matrix: null,
        __initShader: function(e, t) {
            return openfl_filters_ColorMatrixFilter.__colorMatrixShader.init(this.matrix), openfl_filters_ColorMatrixFilter.__colorMatrixShader
        },
        set_matrix: function(e) {
            return null == e && (e = [1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0]), this.matrix = e
        },
        __class__: openfl_filters_ColorMatrixFilter,
        __properties__: {
            set_matrix: "set_matrix"
        }
    });
    var openfl_filters_DropShadowFilter = function(e, t, n, l, i, s, a, r, o, d, _) {
        null == _ && (_ = !1), null == d && (d = !1), null == o && (o = !1), null == r && (r = 1), null == a && (a = 1), null == s && (s = 4), null == i && (i = 4), null == l && (l = 1), null == n && (n = 0), null == t && (t = 45), null == e && (e = 4), openfl_filters_BitmapFilter.call(this), this.distance = e, this.angle = t, this.color = n, this.alpha = l, this.blurX = i, this.blurY = s, this.strength = a, this.set_quality(r), this.inner = o, this.set_knockout(d), this.set_hideObject(_)
    };
    $hxClasses["openfl.filters.DropShadowFilter"] = openfl_filters_DropShadowFilter, openfl_filters_DropShadowFilter.__name__ = ["openfl", "filters", "DropShadowFilter"], openfl_filters_DropShadowFilter.__super__ = openfl_filters_BitmapFilter, openfl_filters_DropShadowFilter.prototype = $extend(openfl_filters_BitmapFilter.prototype, {
        alpha: null,
        angle: null,
        blurX: null,
        blurY: null,
        color: null,
        distance: null,
        hideObject: null,
        inner: null,
        knockout: null,
        quality: null,
        strength: null,
        set_knockout: function(e) {
            return this.knockout = e
        },
        set_hideObject: function(e) {
            return this.hideObject = e
        },
        set_quality: function(e) {
            return this.quality = e
        },
        __class__: openfl_filters_DropShadowFilter,
        __properties__: {
            set_quality: "set_quality",
            set_knockout: "set_knockout",
            set_hideObject: "set_hideObject"
        }
    });
    var openfl_filters__$GlowFilter_GlowShader = function() {
        null == this.__glFragmentSource && (this.__glFragmentSource = "varying float vAlpha;\n\t\tvarying vec2 vTexCoord;\n\t\tuniform sampler2D uImage0;\n\t\t\n\t\tuniform vec4 uColor;\n\t\t\n\t\tvarying vec2 vBlurCoords[7];\n\t\t\n\t\tvoid main(void) {\n\t\t\t\n\t\t\tfloat a = 0.0;\n\t\t\ta += texture2D(uImage0, vBlurCoords[0]).a * 0.00443;\n\t\t\ta += texture2D(uImage0, vBlurCoords[1]).a * 0.05399;\n\t\t\ta += texture2D(uImage0, vBlurCoords[2]).a * 0.24197;\n\t\t\ta += texture2D(uImage0, vBlurCoords[3]).a * 0.39894;\n\t\t\ta += texture2D(uImage0, vBlurCoords[4]).a * 0.24197;\n\t\t\ta += texture2D(uImage0, vBlurCoords[5]).a * 0.05399;\n\t\t\ta += texture2D(uImage0, vBlurCoords[6]).a * 0.00443;\n\t\t\ta *= uColor.a;\n\t\t\t\n\t\t\tgl_FragColor = vec4(uColor.rgb * a, a);\n\t\t\t\n\t\t}"), null == this.__glVertexSource && (this.__glVertexSource = "attribute float aAlpha;\n\t\tattribute vec4 aPosition;\n\t\tattribute vec2 aTexCoord;\n\t\tvarying float vAlpha;\n\t\tvarying vec2 vTexCoord;\n\t\t\n\t\tuniform mat4 uMatrix;\n\t\t\n\t\tuniform vec2 uRadius;\n\t\tvarying vec2 vBlurCoords[7];\n\t\tuniform vec2 uTextureSize;\n\t\t\n\t\tvoid main(void) {\n\t\t\t\n\t\t\tvAlpha = aAlpha;\n\t\t\tvTexCoord = aTexCoord;\n\t\t\tgl_Position = uMatrix * aPosition;\n\t\t\t\n\t\t\tvec2 r = uRadius / uTextureSize;\n\t\t\tvBlurCoords[0] = aTexCoord - r * 1.0;\n\t\t\tvBlurCoords[1] = aTexCoord - r * 0.75;\n\t\t\tvBlurCoords[2] = aTexCoord - r * 0.5;\n\t\t\tvBlurCoords[3] = aTexCoord;\n\t\t\tvBlurCoords[4] = aTexCoord + r * 0.5;\n\t\t\tvBlurCoords[5] = aTexCoord + r * 0.75;\n\t\t\tvBlurCoords[6] = aTexCoord + r * 1.0;\n\t\t\t\n\t\t}"), openfl_display_Shader.call(this), this.get_data().uRadius.value = [0, 0], this.get_data().uColor.value = [0, 0, 0, 0]
    };
    $hxClasses["openfl.filters._GlowFilter.GlowShader"] = openfl_filters__$GlowFilter_GlowShader, openfl_filters__$GlowFilter_GlowShader.__name__ = ["openfl", "filters", "_GlowFilter", "GlowShader"], openfl_filters__$GlowFilter_GlowShader.__super__ = openfl_display_Shader, openfl_filters__$GlowFilter_GlowShader.prototype = $extend(openfl_display_Shader.prototype, {
        __update: function() {
            this.get_data().uTextureSize.value = [this.get_data().uImage0.input.width, this.get_data().uImage0.input.height], openfl_display_Shader.prototype.__update.call(this)
        },
        __class__: openfl_filters__$GlowFilter_GlowShader
    });
    var openfl_filters_GlowFilter = function(e, t, n, l, i, s, a, r) {
        null == r && (r = !1), null == a && (a = !1), null == s && (s = 1), null == i && (i = 2), null == l && (l = 6), null == n && (n = 6), null == t && (t = 1), null == e && (e = 16711680), openfl_filters_BitmapFilter.call(this), this.color = e, this.alpha = t, this.blurX = n, this.blurY = l, this.strength = i, this.set_quality(s), this.inner = a, this.set_knockout(r), this.__cacheObject = !0
    };
    $hxClasses["openfl.filters.GlowFilter"] = openfl_filters_GlowFilter, openfl_filters_GlowFilter.__name__ = ["openfl", "filters", "GlowFilter"], openfl_filters_GlowFilter.__super__ = openfl_filters_BitmapFilter, openfl_filters_GlowFilter.prototype = $extend(openfl_filters_BitmapFilter.prototype, {
        alpha: null,
        blurX: null,
        blurY: null,
        color: null,
        inner: null,
        knockout: null,
        quality: null,
        strength: null,
        horizontalPasses: null,
        verticalPasses: null,
        __initShader: function(e, t) {
            var n = openfl_filters_GlowFilter.__glowShader.get_data();
            if (t <= this.horizontalPasses) {
                var l = Math.pow(.5, t >> 1);
                n.uRadius.value[0] = this.blurX * l, n.uRadius.value[1] = 0
            } else {
                var i = Math.pow(.5, t - this.horizontalPasses >> 1);
                n.uRadius.value[0] = 0, n.uRadius.value[1] = this.blurY * i
            }
            return n.uColor.value[0] = (this.color >> 16 & 255) / 255, n.uColor.value[1] = (this.color >> 8 & 255) / 255, n.uColor.value[2] = (255 & this.color) / 255, n.uColor.value[3] = this.alpha, openfl_filters_GlowFilter.__glowShader
        },
        set_knockout: function(e) {
            return this.knockout = e
        },
        set_quality: function(e) {
            return this.blurX <= 0 ? this.horizontalPasses = 0 : this.horizontalPasses = Math.round(this.blurX * (e / 4)) + 1, this.blurY <= 0 ? this.verticalPasses = 0 : this.verticalPasses = Math.round(this.blurY * (e / 4)) + 1, this.__numPasses = this.horizontalPasses + this.verticalPasses, this.quality = e
        },
        __class__: openfl_filters_GlowFilter,
        __properties__: {
            set_quality: "set_quality",
            set_knockout: "set_knockout"
        }
    });
    var openfl_geom_Matrix3D = function() {};
    $hxClasses["openfl.geom.Matrix3D"] = openfl_geom_Matrix3D, openfl_geom_Matrix3D.__name__ = ["openfl", "geom", "Matrix3D"], openfl_geom_Matrix3D.prototype = {
        __class__: openfl_geom_Matrix3D
    };
    var openfl_geom_Vector3D = function() {};
    $hxClasses["openfl.geom.Vector3D"] = openfl_geom_Vector3D, openfl_geom_Vector3D.__name__ = ["openfl", "geom", "Vector3D"], openfl_geom_Vector3D.prototype = {
        __class__: openfl_geom_Vector3D
    };
    var openfl_media_ID3Info = function() {};
    $hxClasses["openfl.media.ID3Info"] = openfl_media_ID3Info, openfl_media_ID3Info.__name__ = ["openfl", "media", "ID3Info"];
    var openfl_media_Sound = function() {};
    $hxClasses["openfl.media.Sound"] = openfl_media_Sound, openfl_media_Sound.__name__ = ["openfl", "media", "Sound"], openfl_media_Sound.__super__ = openfl_events_EventDispatcher, openfl_media_Sound.prototype = $extend(openfl_events_EventDispatcher.prototype, {
        __class__: openfl_media_Sound
    });
    var openfl_media_SoundChannel = function(e, t) {
        openfl_events_EventDispatcher.call(this, this), this.leftPeak = 1, this.rightPeak = 1, this.__soundTransform = null != t ? t : new openfl_media_SoundTransform, null != e && (this.__source = e, this.__source.onComplete.add($bind(this, this.source_onComplete)), this.__isValid = !0, this.__source.play()), openfl_media_SoundMixer.__registerSoundChannel(this)
    };
    $hxClasses["openfl.media.SoundChannel"] = openfl_media_SoundChannel, openfl_media_SoundChannel.__name__ = ["openfl", "media", "SoundChannel"], openfl_media_SoundChannel.__super__ = openfl_events_EventDispatcher, openfl_media_SoundChannel.prototype = $extend(openfl_events_EventDispatcher.prototype, {
        leftPeak: null,
        rightPeak: null,
        __isValid: null,
        __soundTransform: null,
        __source: null,
        stop: function() {
            openfl_media_SoundMixer.__unregisterSoundChannel(this), this.__isValid && (this.__source.stop(), this.__dispose())
        },
        __dispose: function() {
            this.__isValid && (this.__source.onComplete.remove($bind(this, this.source_onComplete)), this.__source.dispose(), this.__isValid = !1)
        },
        __updateTransform: function() {
            this.set_soundTransform(this.get_soundTransform())
        },
        get_position: function() {
            return this.__isValid ? this.__source.get_currentTime() + this.__source.offset : 0
        },
        set_position: function(e) {
            return this.__isValid ? (this.__source.set_currentTime((0 | e) - this.__source.offset), e) : 0
        },
        get_soundTransform: function() {
            return this.__soundTransform.clone()
        },
        set_soundTransform: function(e) {
            if (null != e) {
                this.__soundTransform.pan = e.pan, this.__soundTransform.volume = e.volume;
                var t = openfl_media_SoundMixer.__soundTransform.pan + this.__soundTransform.pan;
                t < -1 && (t = -1), t > 1 && (t = 1);
                var n = openfl_media_SoundMixer.__soundTransform.volume * this.__soundTransform.volume;
                if (this.__isValid) {
                    this.__source.set_gain(n);
                    var l = this.__source.get_position();
                    return l.x = t, l.z = -1 * Math.sqrt(1 - Math.pow(t, 2)), this.__source.set_position(l), e
                }
            }
            return e
        },
        source_onComplete: function() {
            openfl_media_SoundMixer.__unregisterSoundChannel(this), this.__dispose(), this.dispatchEvent(new openfl_events_Event("soundComplete"))
        },
        __class__: openfl_media_SoundChannel,
        __properties__: {
            set_soundTransform: "set_soundTransform",
            get_soundTransform: "get_soundTransform",
            set_position: "set_position",
            get_position: "get_position"
        }
    });
    var openfl_media_SoundTransform = function(e, t) {
        null == t && (t = 0), null == e && (e = 1), this.volume = e, this.pan = t, this.leftToLeft = 0, this.leftToRight = 0, this.rightToLeft = 0, this.rightToRight = 0
    };
    $hxClasses["openfl.media.SoundTransform"] = openfl_media_SoundTransform, openfl_media_SoundTransform.__name__ = ["openfl", "media", "SoundTransform"], openfl_media_SoundTransform.prototype = {
        leftToLeft: null,
        leftToRight: null,
        pan: null,
        rightToLeft: null,
        rightToRight: null,
        volume: null,
        clone: function() {
            return new openfl_media_SoundTransform(this.volume, this.pan)
        },
        __class__: openfl_media_SoundTransform
    };
    var openfl_media_SoundMixer = function() {};
    $hxClasses["openfl.media.SoundMixer"] = openfl_media_SoundMixer, openfl_media_SoundMixer.__name__ = ["openfl", "media", "SoundMixer"], openfl_media_SoundMixer.__registerSoundChannel = function(e) {
        openfl_media_SoundMixer.__soundChannels.push(e)
    }, openfl_media_SoundMixer.__unregisterSoundChannel = function(e) {
        HxOverrides.remove(openfl_media_SoundMixer.__soundChannels, e)
    };
    var openfl_net_SharedObject = function() {
        openfl_events_EventDispatcher.call(this), this.client = this, this.objectEncoding = 3
    };
    $hxClasses["openfl.net.SharedObject"] = openfl_net_SharedObject, openfl_net_SharedObject.__name__ = ["openfl", "net", "SharedObject"], openfl_net_SharedObject.getLocal = function(e, t, n) {
        null == n && (n = !1);
        var l = [" ", "~", "%", "&", "\\", ";", ":", '"', "'", ",", "<", ">", "?", "#"],
            i = !0;
        if (null == e || "" == e) i = !1;
        else
            for (var s = 0; s < l.length;) {
                var a = l[s];
                if (++s, e.indexOf(a) > -1) {
                    i = !1;
                    break
                }
            }
        if (!i) throw new js__$Boot_HaxeError(new openfl_errors_Error("Error #2134: Cannot create SharedObject."));
        null == t && (t = window.location.href), null == openfl_net_SharedObject.__sharedObjects && (openfl_net_SharedObject.__sharedObjects = new haxe_ds_StringMap, openfl_Lib.application.onExit.add(openfl_net_SharedObject.application_onExit));
        var r = t + "/" + e;
        if (!openfl_net_SharedObject.__sharedObjects.exists(r)) {
            var o = new openfl_net_SharedObject;
            o.data = {}, o.__localPath = t, o.__name = e;
            var d = null;
            try {
                var _ = js_Browser.getLocalStorage();
                null != _ && (d = _.getItem(t + ":" + e))
            } catch (e) {
                e instanceof js__$Boot_HaxeError && (e = e.val)
            }
            if (null != d && "" != d) try {
                var h = new haxe_Unserializer(d);
                h.setResolver({
                    resolveEnum: Type.resolveEnum,
                    resolveClass: openfl_net_SharedObject.__resolveClass
                }), o.data = h.unserialize()
            } catch (e) {
                e instanceof js__$Boot_HaxeError && (e = e.val)
            }
            openfl_net_SharedObject.__sharedObjects.set(r, o)
        }
        return openfl_net_SharedObject.__sharedObjects.get(r)
    }, openfl_net_SharedObject.__resolveClass = function(e) {
        return null != e ? (StringTools.startsWith(e, "neash.") && (e = StringTools.replace(e, "neash.", "openfl.")), StringTools.startsWith(e, "native.") && (e = StringTools.replace(e, "native.", "openfl.")), StringTools.startsWith(e, "flash.") && (e = StringTools.replace(e, "flash.", "openfl.")), StringTools.startsWith(e, "openfl._v2.") && (e = StringTools.replace(e, "openfl._v2.", "openfl.")), StringTools.startsWith(e, "openfl._legacy.") && (e = StringTools.replace(e, "openfl._legacy.", "openfl.")), Type.resolveClass(e)) : null
    }, openfl_net_SharedObject.application_onExit = function(e) {
        for (var t = openfl_net_SharedObject.__sharedObjects.iterator(); t.hasNext();) {
            t.next().flush()
        }
    }, openfl_net_SharedObject.__super__ = openfl_events_EventDispatcher, openfl_net_SharedObject.prototype = $extend(openfl_events_EventDispatcher.prototype, {
        client: null,
        data: null,
        objectEncoding: null,
        __localPath: null,
        __name: null,
        flush: function(e) {
            if (null == e && (e = 0), 0 == Reflect.fields(this.data).length) return 0;
            var t = haxe_Serializer.run(this.data);
            try {
                var n = js_Browser.getLocalStorage();
                null != n && (n.removeItem(this.__localPath + ":" + this.__name), n.setItem(this.__localPath + ":" + this.__name, t))
            } catch (e) {
                return e instanceof js__$Boot_HaxeError && (e = e.val), 1
            }
            return 0
        },
        __class__: openfl_net_SharedObject
    });
    var openfl_net_URLRequest = function(e) {
        null != e && (this.url = e), this.requestHeaders = [], this.method = "GET", this.contentType = null
    };
    $hxClasses["openfl.net.URLRequest"] = openfl_net_URLRequest, openfl_net_URLRequest.__name__ = ["openfl", "net", "URLRequest"], openfl_net_URLRequest.prototype = {
        contentType: null,
        method: null,
        requestHeaders: null,
        url: null,
        __class__: openfl_net_URLRequest
    };
    var openfl_net_URLRequestHeader = function() {};
    $hxClasses["openfl.net.URLRequestHeader"] = openfl_net_URLRequestHeader, openfl_net_URLRequestHeader.__name__ = ["openfl", "net", "URLRequestHeader"];
    var openfl_system_ApplicationDomain = function(e) {
        this.parentDomain = null != e ? e : openfl_system_ApplicationDomain.currentDomain
    };
    $hxClasses["openfl.system.ApplicationDomain"] = openfl_system_ApplicationDomain, openfl_system_ApplicationDomain.__name__ = ["openfl", "system", "ApplicationDomain"], openfl_system_ApplicationDomain.prototype = {
        parentDomain: null,
        __class__: openfl_system_ApplicationDomain
    };
    var openfl_text_Font = function(e) {
        lime_text_Font.call(this, e)
    };
    $hxClasses["openfl.text.Font"] = openfl_text_Font, openfl_text_Font.__name__ = ["openfl", "text", "Font"], openfl_text_Font.enumerateFonts = function(e) {
        return null == e && (e = !1), openfl_text_Font.__registeredFonts
    }, openfl_text_Font.fromFile = function(e) {
        var t = new openfl_text_Font;
        return t.__fromFile(e), t
    }, openfl_text_Font.__super__ = lime_text_Font, openfl_text_Font.prototype = $extend(lime_text_Font.prototype, {
        __class__: openfl_text_Font
    });
    var openfl_text_TextFormat = function(e, t, n, l, i, s, a, r, o, d, _, h, p) {
        this.font = e, this.size = t, this.color = n, this.bold = l, this.italic = i, this.underline = s, this.url = a, this.target = r, this.align = o, this.leftMargin = d, this.rightMargin = _, this.indent = h, this.leading = p
    };
    $hxClasses["openfl.text.TextFormat"] = openfl_text_TextFormat, openfl_text_TextFormat.__name__ = ["openfl", "text", "TextFormat"], openfl_text_TextFormat.prototype = {
        align: null,
        blockIndent: null,
        bold: null,
        bullet: null,
        color: null,
        font: null,
        indent: null,
        italic: null,
        kerning: null,
        leading: null,
        leftMargin: null,
        letterSpacing: null,
        rightMargin: null,
        size: null,
        tabStops: null,
        target: null,
        underline: null,
        url: null,
        clone: function() {
            var e = new openfl_text_TextFormat(this.font, this.size, this.color, this.bold, this.italic, this.underline, this.url, this.target);
            return e.align = this.align, e.leftMargin = this.leftMargin, e.rightMargin = this.rightMargin, e.indent = this.indent, e.leading = this.leading, e.blockIndent = this.blockIndent, e.bullet = this.bullet, e.kerning = this.kerning, e.letterSpacing = this.letterSpacing, e.tabStops = this.tabStops, e
        },
        __merge: function(e) {
            null != e.font && (this.font = e.font), null != e.size && (this.size = e.size), null != e.color && (this.color = e.color), null != e.bold && (this.bold = e.bold), null != e.italic && (this.italic = e.italic), null != e.underline && (this.underline = e.underline), null != e.url && (this.url = e.url), null != e.target && (this.target = e.target), null != e.align && (this.align = e.align), null != e.leftMargin && (this.leftMargin = e.leftMargin), null != e.rightMargin && (this.rightMargin = e.rightMargin), null != e.indent && (this.indent = e.indent), null != e.leading && (this.leading = e.leading), null != e.blockIndent && (this.blockIndent = e.blockIndent), null != e.bullet && (this.bullet = e.bullet), null != e.kerning && (this.kerning = e.kerning), null != e.letterSpacing && (this.letterSpacing = e.letterSpacing), null != e.tabStops && (this.tabStops = e.tabStops)
        },
        __class__: openfl_text_TextFormat
    };
    var openfl_text__$TextFormatAlign_TextFormatAlign_$Impl_$ = {};
    $hxClasses["openfl.text._TextFormatAlign.TextFormatAlign_Impl_"] = openfl_text__$TextFormatAlign_TextFormatAlign_$Impl_$, openfl_text__$TextFormatAlign_TextFormatAlign_$Impl_$.__name__ = ["openfl", "text", "_TextFormatAlign", "TextFormatAlign_Impl_"], openfl_text__$TextFormatAlign_TextFormatAlign_$Impl_$.fromString = function(e) {
        switch (e) {
            case "center":
                return 0;
            case "end":
                return 1;
            case "justify":
                return 2;
            case "left":
                return 3;
            case "right":
                return 4;
            case "start":
                return 5;
            default:
                return null
        }
    };
    var openfl_ui_GameInput = function() {};
    $hxClasses["openfl.ui.GameInput"] = openfl_ui_GameInput, openfl_ui_GameInput.__name__ = ["openfl", "ui", "GameInput"], openfl_ui_GameInput.__getDevice = function(e) {
        if (null == e) return null;
        if (null == openfl_ui_GameInput.__devices.h.__keys__[e.__id__]) {
            var t = new openfl_ui_GameInputDevice(e.get_guid(), e.get_name());
            openfl_ui_GameInput.__deviceList.push(t), openfl_ui_GameInput.__devices.set(e, t), openfl_ui_GameInput.numDevices = openfl_ui_GameInput.__deviceList.length
        }
        return openfl_ui_GameInput.__devices.h[e.__id__]
    }, openfl_ui_GameInput.__onGamepadAxisMove = function(e, t, n) {
        var l = openfl_ui_GameInput.__getDevice(e);
        if (null != l && l.enabled) {
            if (!l.__axis.h.hasOwnProperty(t)) {
                var i = new openfl_ui_GameInputControl(l, "AXIS_" + function(e) {
                    var n;
                    switch (t) {
                        case 0:
                            n = "LEFT_X";
                            break;
                        case 1:
                            n = "LEFT_Y";
                            break;
                        case 2:
                            n = "RIGHT_X";
                            break;
                        case 3:
                            n = "RIGHT_Y";
                            break;
                        case 4:
                            n = "TRIGGER_LEFT";
                            break;
                        case 5:
                            n = "TRIGGER_RIGHT";
                            break;
                        default:
                            n = "UNKNOWN (" + t + ")"
                    }
                    return n
                }(), -1, 1);
                l.__axis.h[t] = i, l.__controls.push(i)
            }
            var s = l.__axis.h[t];
            s.value = n, s.dispatchEvent(new openfl_events_Event("change"))
        }
    }, openfl_ui_GameInput.__onGamepadButtonDown = function(e, t) {
        var n = openfl_ui_GameInput.__getDevice(e);
        if (null != n && n.enabled) {
            if (!n.__button.h.hasOwnProperty(t)) {
                var l = new openfl_ui_GameInputControl(n, "BUTTON_" + function(e) {
                    var n;
                    switch (t) {
                        case 0:
                            n = "A";
                            break;
                        case 1:
                            n = "B";
                            break;
                        case 2:
                            n = "X";
                            break;
                        case 3:
                            n = "Y";
                            break;
                        case 4:
                            n = "BACK";
                            break;
                        case 5:
                            n = "GUIDE";
                            break;
                        case 6:
                            n = "START";
                            break;
                        case 7:
                            n = "LEFT_STICK";
                            break;
                        case 8:
                            n = "RIGHT_STICK";
                            break;
                        case 9:
                            n = "LEFT_SHOULDER";
                            break;
                        case 10:
                            n = "RIGHT_SHOULDER";
                            break;
                        case 11:
                            n = "DPAD_UP";
                            break;
                        case 12:
                            n = "DPAD_DOWN";
                            break;
                        case 13:
                            n = "DPAD_LEFT";
                            break;
                        case 14:
                            n = "DPAD_RIGHT";
                            break;
                        default:
                            n = "UNKNOWN (" + t + ")"
                    }
                    return n
                }(), 0, 1);
                n.__button.h[t] = l, n.__controls.push(l)
            }
            var i = n.__button.h[t];
            i.value = 1, i.dispatchEvent(new openfl_events_Event("change"))
        }
    }, openfl_ui_GameInput.__onGamepadButtonUp = function(e, t) {
        var n = openfl_ui_GameInput.__getDevice(e);
        if (null != n && n.enabled) {
            if (!n.__button.h.hasOwnProperty(t)) {
                var l = new openfl_ui_GameInputControl(n, "BUTTON_" + function(e) {
                    var n;
                    switch (t) {
                        case 0:
                            n = "A";
                            break;
                        case 1:
                            n = "B";
                            break;
                        case 2:
                            n = "X";
                            break;
                        case 3:
                            n = "Y";
                            break;
                        case 4:
                            n = "BACK";
                            break;
                        case 5:
                            n = "GUIDE";
                            break;
                        case 6:
                            n = "START";
                            break;
                        case 7:
                            n = "LEFT_STICK";
                            break;
                        case 8:
                            n = "RIGHT_STICK";
                            break;
                        case 9:
                            n = "LEFT_SHOULDER";
                            break;
                        case 10:
                            n = "RIGHT_SHOULDER";
                            break;
                        case 11:
                            n = "DPAD_UP";
                            break;
                        case 12:
                            n = "DPAD_DOWN";
                            break;
                        case 13:
                            n = "DPAD_LEFT";
                            break;
                        case 14:
                            n = "DPAD_RIGHT";
                            break;
                        default:
                            n = "UNKNOWN (" + t + ")"
                    }
                    return n
                }(), 0, 1);
                n.__button.h[t] = l, n.__controls.push(l)
            }
            var i = n.__button.h[t];
            i.value = 0, i.dispatchEvent(new openfl_events_Event("change"))
        }
    }, openfl_ui_GameInput.__onGamepadConnect = function(e) {
        var t = openfl_ui_GameInput.__getDevice(e);
        if (null != t)
            for (var n = 0, l = openfl_ui_GameInput.__instances; n < l.length;) {
                var i = l[n];
                ++n, i.dispatchEvent(new openfl_events_GameInputEvent("deviceAdded", null, null, t))
            }
    }, openfl_ui_GameInput.__onGamepadDisconnect = function(e) {
        var t = openfl_ui_GameInput.__devices.h[e.__id__];
        if (null != t) {
            if (null != openfl_ui_GameInput.__devices.h.__keys__[e.__id__]) {
                var n = openfl_ui_GameInput.__devices.h[e.__id__];
                HxOverrides.remove(openfl_ui_GameInput.__deviceList, n), openfl_ui_GameInput.__devices.remove(e)
            }
            openfl_ui_GameInput.numDevices = openfl_ui_GameInput.__deviceList.length;
            for (var l = 0, i = openfl_ui_GameInput.__instances; l < i.length;) {
                var s = i[l];
                ++l, s.dispatchEvent(new openfl_events_GameInputEvent("deviceRemoved", null, null, t))
            }
        }
    }, openfl_ui_GameInput.__super__ = openfl_events_EventDispatcher, openfl_ui_GameInput.prototype = $extend(openfl_events_EventDispatcher.prototype, {
        __class__: openfl_ui_GameInput
    });
    var openfl_ui_GameInputControl = function(e, t, n, l, i) {
        null == i && (i = 0), openfl_events_EventDispatcher.call(this), this.device = e, this.id = t, this.minValue = n, this.maxValue = l, this.value = i
    };
    $hxClasses["openfl.ui.GameInputControl"] = openfl_ui_GameInputControl, openfl_ui_GameInputControl.__name__ = ["openfl", "ui", "GameInputControl"], openfl_ui_GameInputControl.__super__ = openfl_events_EventDispatcher, openfl_ui_GameInputControl.prototype = $extend(openfl_events_EventDispatcher.prototype, {
        device: null,
        id: null,
        maxValue: null,
        minValue: null,
        value: null,
        __class__: openfl_ui_GameInputControl
    });
    var openfl_ui_GameInputDevice = function(e, t) {
        var n;
        this.__controls = [], this.__button = new haxe_ds_IntMap, this.__axis = new haxe_ds_IntMap, this.id = e, this.name = t;
        for (var l = 0; l < 6;) {
            var i = l++;
            n = new openfl_ui_GameInputControl(this, "AXIS_" + i, -1, 1), this.__axis.h[i] = n, this.__controls.push(n)
        }
        for (var s = 0; s < 15;) {
            var a = s++;
            n = new openfl_ui_GameInputControl(this, "BUTTON_" + a, 0, 1), this.__button.h[a] = n, this.__controls.push(n)
        }
    };
    $hxClasses["openfl.ui.GameInputDevice"] = openfl_ui_GameInputDevice, openfl_ui_GameInputDevice.__name__ = ["openfl", "ui", "GameInputDevice"], openfl_ui_GameInputDevice.prototype = {
        enabled: null,
        id: null,
        name: null,
        __axis: null,
        __button: null,
        __controls: null,
        __class__: openfl_ui_GameInputDevice
    };
    var openfl_ui_Keyboard = function() {};
    $hxClasses["openfl.ui.Keyboard"] = openfl_ui_Keyboard, openfl_ui_Keyboard.__name__ = ["openfl", "ui", "Keyboard"], openfl_ui_Keyboard.__getCharCode = function(e, t) {
        if (null == t && (t = !1), t) {
            switch (e) {
                case 48:
                    return 41;
                case 49:
                    return 33;
                case 50:
                    return 64;
                case 51:
                    return 35;
                case 52:
                    return 36;
                case 53:
                    return 37;
                case 54:
                    return 94;
                case 55:
                    return 38;
                case 56:
                    return 42;
                case 57:
                    return 40;
                case 186:
                    return 58;
                case 187:
                    return 43;
                case 188:
                    return 60;
                case 189:
                    return 95;
                case 190:
                    return 62;
                case 191:
                    return 63;
                case 192:
                    return 126;
                case 219:
                    return 123;
                case 220:
                    return 124;
                case 221:
                    return 125;
                case 222:
                    return 34
            }
            if (e >= 65 && e <= 90) return e - 65 + 65
        } else {
            switch (e) {
                case 8:
                    return 8;
                case 9:
                    return 9;
                case 13:
                    return 13;
                case 27:
                    return 27;
                case 32:
                    return 32;
                case 186:
                    return 59;
                case 187:
                    return 61;
                case 188:
                    return 44;
                case 189:
                    return 45;
                case 190:
                    return 46;
                case 191:
                    return 47;
                case 192:
                    return 96;
                case 219:
                    return 91;
                case 220:
                    return 92;
                case 221:
                    return 93;
                case 222:
                    return 39
            }
            if (e >= 48 && e <= 57) return e - 48 + 48;
            if (e >= 65 && e <= 90) return e - 65 + 97
        }
        if (e >= 96 && e <= 105) return e - 96 + 48;
        switch (e) {
            case 106:
                return 42;
            case 107:
                return 43;
            case 108:
                return 44;
            case 110:
                return 45;
            case 111:
                return 46;
            case 46:
                return 127;
            case 13:
                return 13;
            case 8:
                return 8
        }
        return 0
    };
    var openfl_ui_Mouse = function() {};
    $hxClasses["openfl.ui.Mouse"] = openfl_ui_Mouse, openfl_ui_Mouse.__name__ = ["openfl", "ui", "Mouse"];
    var haxe_lang_Iterator = function() {};
    $hxClasses["haxe.lang.Iterator"] = haxe_lang_Iterator, haxe_lang_Iterator.__name__ = ["haxe", "lang", "Iterator"], haxe_lang_Iterator.prototype = {
        hasNext: null,
        next: null,
        __class__: haxe_lang_Iterator
    };
    var haxe_lang_Iterable = function() {};
    $hxClasses["haxe.lang.Iterable"] = haxe_lang_Iterable, haxe_lang_Iterable.__name__ = ["haxe", "lang", "Iterable"], haxe_lang_Iterable.prototype = {
        iterator: null,
        __class__: haxe_lang_Iterable
    };
    var tools_Tool = function(e) {
        this.toolCompleted = !1, this.dragSound = null, this.draggingObject = null, this.toolData = e, this.desk = Desk.current, this.main = Main.current, this.draggingObject = this.desk.getElementByName(e.dragingObject), null != this.draggingObject && this.draggingObject.totalFrames > 1 && this.draggingObject.play(), Object.prototype.hasOwnProperty.call(e, "dragSound") ? this.dragSound = e.dragSound : this.dragSound = null
    };
    $hxClasses["tools.Tool"] = tools_Tool, tools_Tool.__name__ = ["tools", "Tool"], tools_Tool.prototype = {
        toolData: null,
        desk: null,
        main: null,
        draggingObject: null,
        dragSound: null,
        onMDown: function() {},
        onMUp: function() {},
        playDragSound: function() {
            null != this.dragSound && null != this.desk && this.desk.playSoundData(this.dragSound, !0)
        },
        stopDragSound: function() {
            null != this.dragSound && null != this.desk && this.desk.stopSoundData(this.dragSound)
        },
        update: function(e) {
            if (null != this.draggingObject) {
                var t = this.draggingObject.get_visible();
                if (this.draggingObject.set_visible(this.main.isMouseDown), !t && this.draggingObject.get_visible() && this.playDragSound(), t && !this.draggingObject.get_visible() && this.stopDragSound(), this.draggingObject.get_visible()) {
                    var n = this.desk.getMouseCoordsInLevels();
                    this.draggingObject.set_x(n.x), this.draggingObject.set_y(n.y)
                }
            }
        },
        toolCompleted: null,
        destroy: function() {
            null != this.dragSound && this.stopDragSound(), this.dragSound = null, this.toolData = null, this.desk = null, this.main = null, null != this.draggingObject && this.draggingObject.set_visible(!1), this.draggingObject = null
        },
        getTargets: function(e) {
            var t = e.split(":");
            return t.length > 1 && ("folder" == t[0] || "layer" == t[0]) ? "layer" == t[0] ? this.desk.getElementsByLayerName(t[1]) : "folder" == t[0] ? this.desk.getElementsByFolderName(t[1]) : null : [this.desk.getElementByName(e)]
        },
        __class__: tools_Tool
    };
    var tools_HitHitzoneAnimation = function(e) {
        this.wasMDown = !1, this.hr = null, this.hitZoneRect = null, this.curNumActiveAnims = 0, this.endToolWhenAnimsEnds = !1, this.isByHover = !1, this.isByClick = !1, this.showTutorIddleTime = 1e3, this.iddleTime = 0, this.frameRemoveTragets = [], this.targets = [], tools_Tool.call(this, e), this.isByClick = null != e.isByClick && e.isByClick, this.isByHover = null != e.isByHover && e.isByHover, null != e.waitAnimForToolComplete && e.waitAnimForToolComplete && (this.endToolWhenAnimsEnds = !0), this.targets = this.getTargets(e.target[HxOverrides.indexOf(e.sequenceIndex, this.desk.currentSequent, 0)]);
        var t = e.label[HxOverrides.indexOf(e.sequenceIndex, this.desk.currentSequent, 0)];
        null != e.tutorName && (this.tutorMC = this.desk.getElementByName(e.tutorName));
        for (var n = 0; n < this.targets.length;) this.targets[n].hasLabel(t) ? n++ : HxOverrides.remove(this.targets, this.targets[n]);
        if (!this.isByClick && !this.isByHover)
            for (var l = 0, i = this.targets; l < i.length;) {
                var s = i[l];
                ++l, s.playLabel(t, $bind(this, this.onMCPlayEnd)), s.isPlaying = !1
            }
        if (null != e.hitZone) {
            var a = this.desk.getElementByName(e.hitZone);
            if (null == a) throw new js__$Boot_HaxeError(new openfl_errors_Error("flaJSON(HIT_HITZONE_ANIMATION tool) error: Can't find element defined hitZone:" + e.hitZone));
            var r = a.getBounds(a.parent),
                o = a.getBounds(a);
            this.hitZoneRect = new openfl_geom_Rectangle(0, 0, r.width, r.height), this.hitZoneRect.x = o.x * (r.width / o.width), this.hitZoneRect.y = o.y * (r.height / o.height), this.hr = new openfl_geom_Rectangle
        }
    };
    $hxClasses["tools.HitHitzoneAnimation"] = tools_HitHitzoneAnimation, tools_HitHitzoneAnimation.__name__ = ["tools", "HitHitzoneAnimation"], tools_HitHitzoneAnimation.__super__ = tools_Tool, tools_HitHitzoneAnimation.prototype = $extend(tools_Tool.prototype, {
        targets: null,
        frameRemoveTragets: null,
        iddleTime: null,
        showTutorIddleTime: null,
        tutorMC: null,
        isByClick: null,
        isByHover: null,
        endToolWhenAnimsEnds: null,
        curNumActiveAnims: null,
        hitZoneRect: null,
        hr: null,
        onMCPlayEnd: function(e) {
            null != this.frameRemoveTragets && this.frameRemoveTragets.push(e)
        },
        showTutor: function() {
            if (null != this.tutorMC && 0 != this.targets.length) {
                var e = this.targets[Std.random(this.targets.length)].getBounds(this.desk.levels);
                this.tutorMC.play(), this.tutorMC.set_visible(!0), this.tutorMC.set_x(e.x + e.width / 2), this.tutorMC.set_y(e.y + e.height / 2)
            }
        },
        hideTutor: function() {
            null != this.tutorMC && this.tutorMC.set_visible(!1)
        },
        onAnimEnd: function(e) {
            this.curNumActiveAnims--
        },
        checkTargetHit: function(e) {
            return null == this.hitZoneRect ? this.desk.hitsMouse(e) : (this.hr.copyFrom(this.hitZoneRect), this.hr.x += this.desk.levels.get_mouseX(), this.hr.y += this.desk.levels.get_mouseY(), e.getBounds(this.desk.levels).intersects(this.hr))
        },
        wasMDown: null,
        update: function(e) {
            for (tools_Tool.prototype.update.call(this, e); this.frameRemoveTragets.length > 0;) {
                var t = this.frameRemoveTragets.pop();
                HxOverrides.remove(this.targets, t)
            }
            var n = !1;
            if (this.isByClick || this.isByHover) {
                if (!this.wasMDown && this.main.isMouseDown || this.isByHover && this.main.isMouseDown)
                    for (var l = this.toolData.label[HxOverrides.indexOf(this.toolData.sequenceIndex, this.desk.currentSequent, 0)], i = 0, s = this.targets; i < s.length;) {
                        var a = s[i];
                        ++i, this.checkTargetHit(a) && (this.curNumActiveAnims++, a.curLabel = "", a.playLabel(l, $bind(this, this.onAnimEnd)), n = !0, this.frameRemoveTragets.push(a), this.isByClick && new ToolActions(this.toolData.clickAction).start())
                    }
            } else
                for (var r = 0, o = this.targets; r < o.length;) {
                    var d = o[r];
                    ++r, d.isPlaying = this.main.isMouseDown && this.checkTargetHit(d), d.isPlaying && (n = !0)
                }
            null != this.tutorMC && (n ? (this.iddleTime = 0, this.hideTutor()) : this.tutorMC.get_visible() || (this.iddleTime += e, this.iddleTime > this.showTutorIddleTime && (this.iddleTime = 0, this.showTutor()))), 0 == this.targets.length && (!this.endToolWhenAnimsEnds || this.curNumActiveAnims <= 0) && (this.toolCompleted = !0), this.wasMDown = this.main.isMouseDown
        },
        destroy: function() {
            tools_Tool.prototype.destroy.call(this), this.targets = null, this.frameRemoveTragets = null, null != this.tutorMC && this.tutorMC.set_visible(!1), this.tutorMC = null
        },
        __class__: tools_HitHitzoneAnimation
    });
    var $_, $fid = 0;

    function $bind(e, t) {
        return null == t ? null : (null == t.__id__ && (t.__id__ = $fid++), null == e.hx__closures__ ? e.hx__closures__ = {} : n = e.hx__closures__[t.__id__], null == n && ((n = function() {
            return n.method.apply(n.scope, arguments)
        }).scope = e, n.method = t, e.hx__closures__[t.__id__] = n), n);
        var n
    }
    var iOSjs = new function() {
        this.init = function() {
            this.enableBinding(), this.addEventListener(window, "load", this.handleWindowLoad.bind(this)), this.addEventListener(window, "orientationchange", this.handleOrientationChange.bind(this)), this.addEventListener(window, "resize", this.handleReize.bind(this))
        };
        var e = null;
        this.setResFunction = function(t) {
            e = t
        };
        this.isiOSDevice = function() {
            var e = navigator.userAgent;
            return e.indexOf("iPhone") > -1 || e.indexOf("iPod") > -1 || e.indexOf("iPad") > -1
        }, this.isiPhone = function() {
            return navigator.userAgent.indexOf("iPhone") > -1
        }, this.isiPod = function() {
            return navigator.userAgent.indexOf("iPod") > -1
        }, this.isiPad = function() {
            return navigator.userAgent.indexOf("iPad") > -1
        }, this.hasRetinaDisplay = function() {
            return !!window.devicePixelRatio && window.devicePixelRatio > 1
        }, this.isFullscreen = function() {
            return navigator.standalone
        }, this.getViewportSize = function() {
            var e = this.getWindowSize(),
                t = this.getElementSize(document.body).width / e.width;
            return {
                width: e.width * t,
                height: e.height * t
            }
        }, this.getNormalWindowSize = function() {
            var e = 0,
                t = 0;
            return "number" == typeof window.innerWidth ? (e = window.innerWidth, t = window.innerHeight) : document.documentElement && (document.documentElement.clientWidth || document.documentElement.clientHeight) ? (e = document.documentElement.clientWidth, t = document.documentElement.clientHeight) : document.body && (document.body.clientWidth || document.body.clientHeight) && (e = document.body.clientWidth, t = document.body.clientHeight), {
                width: e,
                height: t
            }
        }, this.getWindowSize = function() {
            var e = 0,
                t = 0;
            if (this.isiOSDevice()) {
                if (e = screen.width, t = screen.height, 0 != window.orientation) {
                    var n = e;
                    e = t, t = n
                }
                var l = navigator.userAgent;
                this.isFullscreen() && "black-translucent" == iOS_getMetaContent("apple-mobile-web-app-status-bar-style").toLowerCase() || (t -= 20), (l.indexOf("iPhone") > -1 || l.indexOf("iPod") > -1) && (this.isFullscreen() || (0 == window.orientation ? t -= 44 : t -= 32)), l.indexOf("iPad") > -1 && (this.isFullscreen() || (t -= 58))
            } else {
                var i = this.getNormalWindowSize();
                e = i.width, t = i.height
            }
            return {
                width: e,
                height: t
            }
        }, this.getCurSize = function() {
            return this.getNormalWindowSize()
        }, this.getSizeWithoutPanels = function() {
            var e = 0,
                t = 0;
            e = screen.width, t = screen.height;
            var n = this.getNormalWindowSize();
            if (0 != (n.width > n.height ? 1 : 0)) {
                var l = e;
                e = t, t = l
            }
            return {
                width: e,
                height: t
            }
        }, this.getMaxSize = function() {
            var e = 0,
                t = 0,
                n = this.getNormalWindowSize(),
                l = n.width > n.height ? 1 : 0;
            if (this.isiOSDevice()) {
                if (e = screen.width, t = screen.height, 0 != l) {
                    var i = e;
                    e = t, t = i
                }
                var s = navigator.userAgent;
                (s.indexOf("iPhone") > -1 || s.indexOf("iPod") > -1) && 0 == l && (t = this.getNormalWindowSize().height), s.indexOf("iPad") > -1 && (e = window.innerWidth || document.documentElement.clientWidth || document.body.clientWidth, t = window.innerHeight || document.documentElement.clientHeight || document.body.clientHeight)
            } else e = window.innerWidth || document.documentElement.clientWidth || document.body.clientWidth, t = window.innerHeight || document.documentElement.clientHeight || document.body.clientHeight;
            return {
                width: e,
                height: t
            }
        }, this.getPageSize = function() {
            return this.getElementSize(document.body)
        }, this.getElementSize = function(e) {
            return e ? document.all ? {
                width: e.style.pixelWidth,
                height: e.style.pixelHeight
            } : {
                width: e.offsetWidth,
                height: e.offsetHeight
            } : {
                width: 0,
                height: 0
            }
        }, this.getElementOffset = function(e) {
            for (var t = 0, n = 0; e && !isNaN(e.offsetLeft) && !isNaN(e.offsetTop);) t += e.offsetLeft - e.scrollLeft, n += e.offsetTop - e.scrollTop, e = e.offsetParent;
            return {
                x: t,
                y: n
            }
        }, this.getElementPadding = function(e) {
            var t = e.currentStyle || window.getComputedStyle(e);
            return {
                top: parseFloat(t.paddingTop),
                right: parseFloat(t.paddingRight),
                bottom: parseFloat(t.paddingBottom),
                left: parseFloat(t.paddingLeft)
            }
        }, this.getElementMargin = function(e) {
            var t = e.currentStyle || window.getComputedStyle(e);
            return {
                top: parseFloat(t.marginTop),
                right: parseFloat(t.marginRight),
                bottom: parseFloat(t.marginBottom),
                left: parseFloat(t.marginLeft)
            }
        }, this.getMetaContent = function(e) {
            e = e.toLowerCase();
            for (var t = document.getElementsByTagName("meta"), n = 0; n < t.length; n++) {
                var l = t[n];
                if (l.name.toLowerCase() == e) return l.content
            }
            return null
        }, this.enableBinding = function() {
            Function.prototype.bind || (Function.prototype.bind = function(e) {
                var t = this;
                return function() {
                    return t.apply(e, arguments)
                }
            })
        }, this.addEventListener = function(e, t, n) {
            return e.addEventListener ? (e.addEventListener(t, n, !1), !0) : !!e.attachEvent && e.attachEvent("on" + t, n)
        }, this.removeEventListener = function(e, t, n) {
            return e.removeEventListener ? (e.removeEventListener(t, n, !1), !0) : !!e.detachEvent && e.detachEvent("on" + t, n)
        }, this.handleWindowLoad = function(e) {
            this.initPage(), this.updateOrientation(), this.updateHeight()
        }, this.handleOrientationChange = function(e) {
            this.updateOrientation(), this.resize()
        }, this.handleReize = function(e) {
            this.resize();
            var t = this;
            setTimeout(function() {
                t.resize()
            }, 500)
        }, this.initPage = function() {
            this.isFullscreen() && this.createWebappLinks();
            var e = document.documentElement,
                t = e.className.split(" ");
            if (this.hasRetinaDisplay() && -1 == t.indexOf("retina") && t.push("retina"), this.isiOSDevice()) {
                -1 == t.indexOf("iOS") && t.push("iOS"), this.isFullscreen() && -1 == t.indexOf("fullscreen") && t.push("fullscreen");
                var n = navigator.userAgent;
                n.indexOf("iPhone") > -1 ? e.setAttribute("device", "iPhone") : n.indexOf("iPod") > -1 ? e.setAttribute("device", "iPod") : n.indexOf("iPad") > -1 && e.setAttribute("device", "iPad"), n.indexOf("iPhone") > -1 || n.indexOf("iPod") > -1 ? e.setAttribute("deviceFamily", "iPhone_iPod") : n.indexOf("iPad") > -1 && e.setAttribute("deviceFamily", "iPad")
            }
            e.className = t.join(" ")
        }, this.updateOrientation = function() {
            var e = "portrait";
            90 == window.orientation || -90 == window.orientation ? (e = "landscape", 1) : 0, document.documentElement.setAttribute("orientation", e)
        }, this.resize = function() {
            this.updateHeight()
        }, this.hideAddressBar = function() {}, this.updateHeight = function() {
            var t = document.body;
            if (t) {
                var n = this.getViewportSize(),
                    l = this.getElementPadding(t),
                    i = this.getElementMargin(t);
                n.height;
                if (l.top + l.bottom + (i.top + i.bottom), t.children.length > 0) {
                    for (var s = t.children.length, a = t.children[0], r = this.getElementPadding(a), o = this.getElementMargin(a), d = s - 1; d >= 0; d--) {
                        var _ = t.children[d];
                        if ("absolute" != _.style.position && "fixed" != _.style.position && "SCRIPT" != _.tagName) break
                    }
                    var h = this.getElementPadding(_),
                        p = this.getElementMargin(_);
                    r.top + h.bottom + (o.top + p.bottom) + 1
                }
                null != e && e()
            }
        }, this.disableScrolling = function() {
            this.addEventListener(document.body, "touchmove", this.preventScrolling)
        }, this.enableScrolling = function() {
            this.removeEventListener(document.body, "touchmove", this.preventScrolling)
        }, this.preventScrolling = function(e) {
            e.preventDefault()
        }, this.disableZooming = function() {
            this.addEventListener(document.body, "touchmove", this.preventZooming)
        }, this.enableZooming = function() {
            this.removeEventListener(document.body, "touchmove", this.preventZooming)
        }, this.preventZooming = function(e) {
            2 == e.touches.length && e.preventDefault()
        }, this.createWebappLinks = function() {
            for (var e = document.getElementsByTagName("a"), t = 0; t < e.length; t++) {
                var n = e[t];
                "" != n.href && "" == n.target && (n.onclick = this.handleWebAppLink)
            }
        }, this.handleWebAppLink = function() {
            return window.location = this.getAttribute("href"), !1
        }, this.autoWebapp = function() {
            this.addEventListener(window, "load", this.setupAutoWebapp)
        }, this.setupAutoWebapp = function() {
            this.disableScrolling(), this.disableZooming()
        }, this.init()
    };
    Array.prototype.indexOf && (HxOverrides.indexOf = function(e, t, n) {
        return Array.prototype.indexOf.call(e, t, n)
    }), $hxClasses.Math = Math, String.prototype.__class__ = $hxClasses.String = String, String.__name__ = ["String"], $hxClasses.Array = Array, Array.__name__ = ["Array"], Date.prototype.__class__ = $hxClasses.Date = Date, Date.__name__ = ["Date"];
    var Int = $hxClasses.Int = {
            __name__: ["Int"]
        },
        Dynamic = $hxClasses.Dynamic = {
            __name__: ["Dynamic"]
        },
        Float = $hxClasses.Float = Number;
    Float.__name__ = ["Float"];
    var Bool = $hxClasses.Bool = Boolean;
    Bool.__ename__ = ["Bool"];
    var Class = $hxClasses.Class = {
            __name__: ["Class"]
        },
        Enum = {};
    haxe_Resource.content = [{
        name: "__ASSET__:file_SpriteJson",
        data: "eyAic3RyZWFtIjoic25kL3Nwcml0ZSIsICJzcHJpdGUiOiB7ICJzaWxlbmNlIjogWyAwLCAxMDAsIHRydWUgXSwgIkJ0blNvdW5kIjogWyAyMDAsIDgwLjMxNzQ2MDMxNzQ2MDI5IF0sICJQdXRfMSI6IFsgMTMwMCwgMzE2LjUwNzkzNjUwNzkzNjQgXSwgIlB1dF8yIjogWyAyNDAwLCAzNjguODQzNTM3NDE0OTY1OSBdLCAiUHV0XzMiOiBbIDM1MDAsIDM3My42MDU0NDIxNzY4NzA2IF0sICJQdXRfNCI6IFsgNDYwMCwgMzQ2LjkzODc3NTUxMDIwNDI3IF0sICJQdXRfNSI6IFsgNTcwMCwgMTg3LjIxMDg4NDM1Mzc0MTY4IF0sICJUYWtlXzEiOiBbIDY4MDAuMDAwMDAwMDAwMDAxLCAzNjYuMDMxNzQ2MDMxNzQ2MTQgXSwgIlRha2VfMiI6IFsgNzkwMCwgMTExLjQyODU3MTQyODU3MjEgXSwgIldpbiI6IFsgOTAwMC4wMDAwMDAwMDAwMDIsIDM0MzkuOTk5OTk5OTk5OTk5NSBdLCAiZm9uIjogWyAxMzEwMC4wMDAwMDAwMDAwMDIsIDYwMDE1LjYyMzU4Mjc2NjQzIF0gfSB9Cg"
    }, {
        name: "__ASSET_MANIFEST__",
        data: "eyJuYW1lIjpudWxsLCJhc3NldHMiOiJhb3k0OnBhdGh5MTE6ZmFtb2JpLmpzb255NDpzaXplaTEyMzF5NDp0eXBleTQ6VEVYVHkyOmlkUjFnb1IweTI3OmltZyUyRmJhY2tncm91bmRzJTJGQkcxLmpwZ1IyaTk3NTE1UjN5NTpJTUFHRVI1UjZnb1IweTI3OmltZyUyRmJhY2tncm91bmRzJTJGQkcyLmpwZ1IyaTUzOTQyUjNSN1I1Ujhnb1IweTI3OmltZyUyRmJhY2tncm91bmRzJTJGQkczLmpwZ1IyaTg0ODIzUjNSN1I1Ujlnb1IweTI3OmltZyUyRmJhY2tncm91bmRzJTJGQkc0LmpwZ1IyaTgyNDYxUjNSN1I1UjEwZ29SMHkyNzppbWclMkZiYWNrZ3JvdW5kcyUyRkJHNS5qcGdSMmk5NzE4OVIzUjdSNVIxMWdvUjB5MTk6aW1nJTJGTWFpbkF0bGFzLnBuZ1IyaTEwMDk1NzhSM1I3UjVSMTJnb1IweTE5OmltZyUyRk1haW5BdGxhcy54bWxSMmkxMjM5M1IzUjRSNVIxM2dvUjB5MTQ6aW1nJTJGTnVtcy5wbmdSMmkxNjgxNlIzUjdSNVIxNGdvUjB5MjA6aW1nJTJGV29yZHNEYXRhLmpzb25SMmkxMjk0NFIzUjRSNVIxNWdvUjB5MTY6c25kJTJGc3ByaXRlLmFjM1IyaTI5Njg5MFIzeTY6QklOQVJZUjVSMTZnb1IweTE3OnNuZCUyRnNwcml0ZS5qc29uUjJpNDkzUjNSNFI1UjE4Z29SMHkxNjpzbmQlMkZzcHJpdGUubTRhUjJpMzA3NjUwUjN5NTpTT1VORFI1UjE5Z29SMHkxNjpzbmQlMkZzcHJpdGUubXAzUjJpMjk3MTg3UjN5NTpNVVNJQ1I1UjIxZ29SMHkxNjpzbmQlMkZzcHJpdGUub2dnUjJpMzExNjg3UjNSMjBSNVIyM2dvUjBSMThSMmk0OTNSM1I0UjVSMThnaCIsInZlcnNpb24iOjIsImxpYnJhcnlBcmdzIjpbXSwibGlicmFyeVR5cGUiOm51bGx9"
    }];
    var __map_reserved = {},
        ArrayBuffer = $global.ArrayBuffer || js_html_compat_ArrayBuffer;
    null == ArrayBuffer.prototype.slice && (ArrayBuffer.prototype.slice = js_html_compat_ArrayBuffer.sliceImpl);
    var DataView = $global.DataView || js_html_compat_DataView,
        Uint8Array = $global.Uint8Array || js_html_compat_Uint8Array._new,
        this1;
    this1 = new Uint32Array(256), lime_math_color__$RGBA_RGBA_$Impl_$.__alpha16 = this1;
    for (var _g = 0, this2; _g < 256;) {
        var i = _g++,
            val = Math.ceil(257.00392156862745 * i);
        lime_math_color__$RGBA_RGBA_$Impl_$.__alpha16[i] = val
    }
    this2 = new Uint8Array(510), lime_math_color__$RGBA_RGBA_$Impl_$.__clamp = this2;
    for (var _g1 = 0; _g1 < 255;) {
        var i1 = _g1++;
        lime_math_color__$RGBA_RGBA_$Impl_$.__clamp[i1] = i1
    }
    for (var _g11 = 255, _g2 = 511, h; _g11 < _g2;) {
        var i2 = _g11++;
        lime_math_color__$RGBA_RGBA_$Impl_$.__clamp[i2] = 255
    }
    lime_utils_Log.level = 3, void 0 === console && (console = {}), null == console.log && (console.log = function() {}), AIHelper.scoreFor1DomSumVals = .1, AIHelper.scoreForDouble = .25, AIHelper.scoreForWillHaveMove = 1.3, AIHelper.scoreForWillHaveOpponentMove = [18, 13, 8, 5, 1, .3, 0], AIHelper.blockScore = 15, AIHelper.curValuesLeft = [], AIHelper.opponentHandLength = 0, AIHelper.curPlayersScore = [], Actuate.instances = new haxe_ds_StringMap, DominoModeBase.playersTypes = ["human", "computer"], DominoModeBase.playToScore = 100, DominoModeBase.curRound = 0, DominoModeBase.lastWinner = -1, openfl_display_DisplayObject.__broadcastEvents = new haxe_ds_StringMap, openfl_display_DisplayObject.__instanceCount = 0, openfl_display_DisplayObject.__worldRenderDirty = 0, openfl_display_DisplayObject.__worldTransformDirty = 0, Main.created = !1, Assembler.lastAssemblerSeqIndex = -1, Assembler.lastAssemblerLevel = -1, Assembler.isTwoPlayersFightMode = !1, Assembler._bestTime = -1, Assembler.curTime = 0, Batching.instances = new haxe_ds_IntMap, Batching.count = 0, openfl_geom_Matrix.__identity = new openfl_geom_Matrix, openfl_geom_Matrix.__temp = new openfl_geom_Matrix, BitmapBatch.renderStack = [], BitmapBatch.__hm = new openfl_geom_Matrix, Config.baseSWidth = 1200, Config.baseSHeight = 600, Config.scale = 1, Desk.customBackEaseIn = new motion_easing_BackEaseIn(1.2), Domino.dominoSizeX = -1, Domino.dominoSizeY = -1, FightTable.curFight = 0, FightingMode._numWins = -1, FinalProgressBar.progressesResults = new haxe_ds_StringMap, FinalProgressBar.curLevelProgresses = [], FinalProgressBar.curLevel = -10008, FunctionsForLevels.curMode = 0, Game.gameMode = 0, Game.fromSave = !1, GameConfig.actuateNoCompID = "GAME_NC", GameConfig.actuateWithCompID = "GAME", GameConfig.speedsCoefs = [1.3, .8], GameConfig.gameSpeedCoef = 1, GameConfig.handDominoesGap = 3, GameConfig.afterPlayDelay = .5, GameConfig.afterDrawDelay = .5, GameConfig.boneyardAnimTime = .3, GameConfig.boneyardShowTime = .3, GameConfig.dominoOpenTime = .5, GameConfig.passMCAnimTime = .3, GameConfig.passMCWaitTime = .5, GameConfig.fsShowDelay = 2, GameConfig.dominoMoveEase = motion_easing_Sine.get_easeOut(), openfl_geom_Point.__temp = new openfl_geom_Point, LocalSaves.storeName = "pir2", Menu.wasRemake = !1, SpriteJson.resourceName = "__ASSET__:file_SpriteJson", TJSON.OBJECT_REFERENCE_PREFIX = "@~obRef#", ToolActions.objectsScale = new haxe_ds_ObjectMap, ToolActions.playingSounds = [], UIManager._gameSpeed = -1, UIManager.needShowTutor = !0, Xml.Element = 0, Xml.PCData = 1, Xml.CData = 2, Xml.Comment = 3, Xml.DocType = 4, Xml.ProcessingInstruction = 5, Xml.Document = 6, firework_Firework.X_VELOCITY = 20, firework_Firework.Y_VELOCITY = 20, haxe_Serializer.USE_CACHE = !1, haxe_Serializer.USE_ENUM_INDEX = !1, haxe_Serializer.BASE64 = "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789%:", haxe_Unserializer.DEFAULT_RESOLVER = Type, haxe_Unserializer.BASE64 = "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789%:", haxe_crypto_Base64.CHARS = "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/", haxe_crypto_Base64.BYTES = haxe_io_Bytes.ofString(haxe_crypto_Base64.CHARS), haxe_ds_ObjectMap.count = 0, haxe_io_FPHelper.i64tmp = new haxe__$Int64__$_$_$Int64(0, 0), haxe_xml_Parser.escapes = (h = new haxe_ds_StringMap, null != __map_reserved.lt ? h.setReserved("lt", "<") : h.h.lt = "<", null != __map_reserved.gt ? h.setReserved("gt", ">") : h.h.gt = ">", null != __map_reserved.amp ? h.setReserved("amp", "&") : h.h.amp = "&", null != __map_reserved.quot ? h.setReserved("quot", '"') : h.h.quot = '"', null != __map_reserved.apos ? h.setReserved("apos", "'") : h.h.apos = "'", h), haxe_zip_InflateImpl.LEN_EXTRA_BITS_TBL = [0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 2, 2, 2, 2, 3, 3, 3, 3, 4, 4, 4, 4, 5, 5, 5, 5, 0, -1, -1], haxe_zip_InflateImpl.LEN_BASE_VAL_TBL = [3, 4, 5, 6, 7, 8, 9, 10, 11, 13, 15, 17, 19, 23, 27, 31, 35, 43, 51, 59, 67, 83, 99, 115, 131, 163, 195, 227, 258], haxe_zip_InflateImpl.DIST_EXTRA_BITS_TBL = [0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 4, 4, 5, 5, 6, 6, 7, 7, 8, 8, 9, 9, 10, 10, 11, 11, 12, 12, 13, 13, -1, -1], haxe_zip_InflateImpl.DIST_BASE_VAL_TBL = [1, 2, 3, 4, 5, 7, 9, 13, 17, 25, 33, 49, 65, 97, 129, 193, 257, 385, 513, 769, 1025, 1537, 2049, 3073, 4097, 6145, 8193, 12289, 16385, 24577], haxe_zip_InflateImpl.CODE_LENGTHS_POS = [16, 17, 18, 0, 8, 7, 9, 6, 10, 5, 11, 4, 12, 3, 13, 2, 14, 1, 15], js_Boot.__toStr = {}.toString, js_html_compat_Uint8Array.BYTES_PER_ELEMENT = 1, lime__$backend_html5_HTML5Window.dummyCharacter = "", lime__$backend_html5_HTML5Window.windowID = 0, lime_graphics_opengl_ExtensionAnisotropicFiltering.MAX_TEXTURE_MAX_ANISOTROPY_EXT = 34047, lime_math__$Matrix4_Matrix4_$Impl_$.__identity = [1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1], lime_ui_Gamepad.devices = new haxe_ds_IntMap, lime_ui_Gamepad.onConnect = new lime_app__$Event_$lime_$ui_$Gamepad_$Void, lime_ui_Joystick.devices = new haxe_ds_IntMap, lime_ui_Joystick.onConnect = new lime_app__$Event_$lime_$ui_$Joystick_$Void, lime_ui_Touch.onEnd = new lime_app__$Event_$lime_$ui_$Touch_$Void, lime_ui_Touch.onMove = new lime_app__$Event_$lime_$ui_$Touch_$Void, lime_ui_Touch.onStart = new lime_app__$Event_$lime_$ui_$Touch_$Void, lime_utils_Assets.cache = new lime_utils_AssetCache, lime_utils_Assets.libraries = new haxe_ds_StringMap, lime_utils_Assets.onChange = new lime_app__$Event_$Void_$Void, motion_actuators_SimpleActuator.actuators = [], motion_actuators_SimpleActuator.actuatorsLength = 0, motion_actuators_SimpleActuator.addedEvent = !1, motion_Actuate.defaultActuator = motion_actuators_SimpleActuator, motion_Actuate.defaultEase = motion_easing_Expo.get_easeOut(), motion_Actuate.targetLibraries = new haxe_ds_ObjectMap, openfl_Assets.cache = new openfl_AssetCache, openfl_Lib.current = new openfl_display_MovieClip, openfl__$internal_renderer_DrawCommandBuffer.empty = new openfl__$internal_renderer_DrawCommandBuffer, openfl__$internal_renderer_canvas_CanvasGraphics.SIN45 = .7071067811865476, openfl__$internal_renderer_canvas_CanvasGraphics.TAN22 = .41421356237309503, openfl__$internal_renderer_canvas_CanvasGraphics.fillCommands = new openfl__$internal_renderer_DrawCommandBuffer, openfl__$internal_renderer_canvas_CanvasGraphics.strokeCommands = new openfl__$internal_renderer_DrawCommandBuffer, openfl__$internal_renderer_canvas_CanvasGraphics.hitTestCanvas = window.document.createElement("canvas"), openfl__$internal_renderer_canvas_CanvasGraphics.hitTestContext = openfl__$internal_renderer_canvas_CanvasGraphics.hitTestCanvas.getContext("2d"), openfl_geom_Rectangle.__temp = new openfl_geom_Rectangle, openfl__$internal_renderer_opengl_GLTilemap.__skippedTiles = new haxe_ds_IntMap, openfl__$internal_stage3D_GLUtils.debug = !1, openfl__$internal_swf_SWFLite.instances = new haxe_ds_StringMap, openfl_text_TextField.__regexAlign = new EReg("align=(\"([^\"]+)\"|'([^']+)')", "i"), openfl_text_TextField.__regexColor = new EReg("color=(\"#([^\"]+)\"|'#([^']+)')", "i"), openfl_text_TextField.__regexBlockIndent = new EReg("blockindent=(\"([^\"]+)\"|'([^']+)')", "i"), openfl_text_TextField.__regexBreakTag = new EReg("<br\\s*/?>", "gi"), openfl_text_TextField.__regexEntities = [new EReg("&quot;", "g"), new EReg("&apos;", "g"), new EReg("&amp;", "g"), new EReg("&lt;", "g"), new EReg("&gt;", "g")], openfl_text_TextField.__regexFace = new EReg("face=(\"([^\"]+)\"|'([^']+)')", "i"), openfl_text_TextField.__regexHref = new EReg("href=(\"([^\"]+)\"|'([^']+)')", "i"), openfl_text_TextField.__regexHTMLTag = new EReg("<.*?>", "g"), openfl_text_TextField.__regexIndent = new EReg(" indent=(\"([^\"]+)\"|'([^']+)')", "i"), openfl_text_TextField.__regexLeading = new EReg("leading=(\"([^\"]+)\"|'([^']+)')", "i"), openfl_text_TextField.__regexLeftMargin = new EReg("leftmargin=(\"([^\"]+)\"|'([^']+)')", "i"), openfl_text_TextField.__regexRightMargin = new EReg("rightmargin=(\"([^\"]+)\"|'([^']+)')", "i"), openfl_text_TextField.__regexTabStops = new EReg("tabstops=(\"([^\"]+)\"|'([^']+)')", "i"), openfl_text_TextField.__regexSize = new EReg("size=(\"([^\"]+)\"|'([^']+)')", "i"), openfl_display_LoaderInfo.__rootURL = window.document.URL, openfl_display3D_Context3D.__stateCache = new openfl__$internal_stage3D_Context3DStateCache, openfl_filters_BlurFilter.__blurShader = new openfl_filters__$BlurFilter_BlurShader, openfl_filters_ColorMatrixFilter.__colorMatrixShader = new openfl_filters__$ColorMatrixFilter_ColorMatrixShader, openfl_filters_GlowFilter.__glowShader = new openfl_filters__$GlowFilter_GlowShader, openfl_media_SoundMixer.__soundChannels = [], openfl_media_SoundMixer.__soundTransform = new openfl_media_SoundTransform, openfl_system_ApplicationDomain.currentDomain = new openfl_system_ApplicationDomain(null), openfl_text_Font.__registeredFonts = [], openfl_ui_GameInput.numDevices = 0, openfl_ui_GameInput.__deviceList = [], openfl_ui_GameInput.__devices = new haxe_ds_ObjectMap, openfl_ui_GameInput.__instances = [], openfl_ui_Mouse.__cursor = "auto", ApplicationMain.main()
}("undefined" != typeof console ? console : {
    log: function() {}
}, "undefined" != typeof window ? window : exports, "undefined" != typeof window ? window : "undefined" != typeof global ? global : "undefined" != typeof self ? self : this);